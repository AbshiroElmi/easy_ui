(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
  var __spreadValues = (a, b) => {
    for (var prop in b || (b = {}))
      if (__hasOwnProp.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    if (__getOwnPropSymbols)
      for (var prop of __getOwnPropSymbols(b)) {
        if (__propIsEnum.call(b, prop))
          __defNormalProp(a, prop, b[prop]);
      }
    return a;
  };
  var __commonJS = (cb, mod) => function __require() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // node_modules/@editorjs/editorjs/dist/editor.js
  var require_editor = __commonJS({
    "node_modules/@editorjs/editorjs/dist/editor.js"(exports, module) {
      !function(e, t) {
        "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.EditorJS = t() : e.EditorJS = t();
      }(window, function() {
        return function(e) {
          var t = {};
          function n(o) {
            if (t[o])
              return t[o].exports;
            var r = t[o] = { i: o, l: false, exports: {} };
            return e[o].call(r.exports, r, r.exports, n), r.l = true, r.exports;
          }
          return n.m = e, n.c = t, n.d = function(e2, t2, o) {
            n.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: o });
          }, n.r = function(e2) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
          }, n.t = function(e2, t2) {
            if (1 & t2 && (e2 = n(e2)), 8 & t2)
              return e2;
            if (4 & t2 && "object" == typeof e2 && e2 && e2.__esModule)
              return e2;
            var o = /* @__PURE__ */ Object.create(null);
            if (n.r(o), Object.defineProperty(o, "default", { enumerable: true, value: e2 }), 2 & t2 && "string" != typeof e2)
              for (var r in e2)
                n.d(o, r, function(t3) {
                  return e2[t3];
                }.bind(null, r));
            return o;
          }, n.n = function(e2) {
            var t2 = e2 && e2.__esModule ? function() {
              return e2.default;
            } : function() {
              return e2;
            };
            return n.d(t2, "a", t2), t2;
          }, n.o = function(e2, t2) {
            return Object.prototype.hasOwnProperty.call(e2, t2);
          }, n.p = "", n(n.s = 187);
        }([function(e, t, n) {
          var o = n(10), r = n(16), i = n(27), a = n(23), s = n(31), l = function(e2, t2, n2) {
            var c, u, f, d, p = e2 & l.F, h = e2 & l.G, v = e2 & l.S, g = e2 & l.P, y = e2 & l.B, k = h ? o : v ? o[t2] || (o[t2] = {}) : (o[t2] || {}).prototype, b = h ? r : r[t2] || (r[t2] = {}), m = b.prototype || (b.prototype = {});
            for (c in h && (n2 = t2), n2)
              f = ((u = !p && k && void 0 !== k[c]) ? k : n2)[c], d = y && u ? s(f, o) : g && "function" == typeof f ? s(Function.call, f) : f, k && a(k, c, f, e2 & l.U), b[c] != f && i(b, c, d), g && m[c] != f && (m[c] = f);
          };
          o.core = r, l.F = 1, l.G = 2, l.S = 4, l.P = 8, l.B = 16, l.W = 32, l.U = 64, l.R = 128, e.exports = l;
        }, function(e, t) {
          e.exports = function(e2) {
            return e2 && e2.__esModule ? e2 : { default: e2 };
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function(e2, t2) {
            if (!(e2 instanceof t2))
              throw new TypeError("Cannot call a class as a function");
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          function n(e2, t2) {
            for (var n2 = 0; n2 < t2.length; n2++) {
              var o = t2[n2];
              o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e2, o.key, o);
            }
          }
          e.exports = function(e2, t2, o) {
            return t2 && n(e2.prototype, t2), o && n(e2, o), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          function n(t2) {
            return e.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e2) {
              return e2.__proto__ || Object.getPrototypeOf(e2);
            }, e.exports.__esModule = true, e.exports.default = e.exports, n(t2);
          }
          e.exports = n, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(111);
          e.exports = function(e2, t2) {
            if ("function" != typeof t2 && null !== t2)
              throw new TypeError("Super expression must either be null or a function");
            e2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e2, writable: true, configurable: true } }), Object.defineProperty(e2, "prototype", { writable: false }), t2 && o(e2, t2);
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(7).default, r = n(152);
          e.exports = function(e2, t2) {
            if (t2 && ("object" === o(t2) || "function" == typeof t2))
              return t2;
            if (void 0 !== t2)
              throw new TypeError("Derived constructors may only return object or undefined");
            return r(e2);
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          function n(t2) {
            return e.exports = n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
              return typeof e2;
            } : function(e2) {
              return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
            }, e.exports.__esModule = true, e.exports.default = e.exports, n(t2);
          }
          e.exports = n, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(372), n(21), n(403), n(19)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2, r2, i2, a) {
            "use strict";
            var s, l = n(1);
            function c(e3, t3) {
              var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "log", o3 = arguments.length > 3 ? arguments[3] : void 0, r3 = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "color: inherit";
              if ("console" in window && window.console[n2]) {
                var i3 = ["info", "log", "warn", "error"].includes(n2), a2 = [];
                switch (c.logLevel) {
                  case s.ERROR:
                    if ("error" !== n2)
                      return;
                    break;
                  case s.WARN:
                    if (!["error", "warn"].includes(n2))
                      return;
                    break;
                  case s.INFO:
                    if (!i3 || e3)
                      return;
                }
                o3 && a2.push(o3);
                var l2 = "Editor.js ".concat("2.26.5"), u2 = "line-height: 1em;\n            color: #006FEA;\n            display: inline-block;\n            font-size: 11px;\n            line-height: 1em;\n            background-color: #fff;\n            padding: 4px 9px;\n            border-radius: 30px;\n            border: 1px solid rgba(56, 138, 229, 0.16);\n            margin: 4px 5px 4px 0;";
                e3 && (i3 ? (a2.unshift(u2, r3), t3 = "%c".concat(l2, "%c ").concat(t3)) : t3 = "( ".concat(l2, " )").concat(t3));
                try {
                  if (i3)
                    if (o3) {
                      var f2;
                      (f2 = console)[n2].apply(f2, ["".concat(t3, " %o")].concat(a2));
                    } else {
                      var d2;
                      (d2 = console)[n2].apply(d2, [t3].concat(a2));
                    }
                  else
                    console[n2](t3);
                } catch (e4) {
                }
              }
            }
            Object.defineProperty(e2, "__esModule", { value: true }), e2.LogLevels = void 0, e2.array = function(e3) {
              return Array.prototype.slice.call(e3);
            }, e2.beautifyShortcut = function(e3) {
              var t3 = y();
              return e3 = e3.replace(/shift/gi, "\u21E7").replace(/backspace/gi, "\u232B").replace(/enter/gi, "\u23CE").replace(/up/gi, "\u2191").replace(/left/gi, "\u2192").replace(/down/gi, "\u2193").replace(/right/gi, "\u2190").replace(/escape/gi, "\u238B").replace(/insert/gi, "Ins").replace(/delete/gi, "\u2421").replace(/\+/gi, " + "), e3 = t3.mac ? e3.replace(/ctrl|cmd/gi, "\u2318").replace(/alt/gi, "\u2325") : e3.replace(/cmd/gi, "Ctrl").replace(/windows/gi, "WIN");
            }, e2.cacheable = function(e3, t3, n2) {
              var o3 = n2.value ? "value" : "get", r3 = n2[o3], i3 = "#".concat(t3, "Cache");
              if (n2[o3] = function() {
                if (void 0 === this[i3]) {
                  for (var e4 = arguments.length, t4 = new Array(e4), n3 = 0; n3 < e4; n3++)
                    t4[n3] = arguments[n3];
                  this[i3] = r3.apply.apply(r3, [this].concat(t4));
                }
                return this[i3];
              }, "get" === o3 && n2.set) {
                var a2 = n2.set;
                n2.set = function(t4) {
                  delete e3[i3], a2.apply(this, t4);
                };
              }
              return n2;
            }, e2.capitalize = function(e3) {
              return e3[0].toUpperCase() + e3.slice(1);
            }, e2.copyTextToClipboard = function(e3) {
              var t3 = a.default.make("div", "codex-editor-clipboard", { innerHTML: e3 });
              document.body.appendChild(t3);
              var n2 = window.getSelection(), o3 = document.createRange();
              o3.selectNode(t3), window.getSelection().removeAllRanges(), n2.addRange(o3), document.execCommand("copy"), document.body.removeChild(t3);
            }, e2.debounce = function(e3, t3, n2) {
              var o3, r3 = this;
              return function() {
                for (var i3 = arguments.length, a2 = new Array(i3), s2 = 0; s2 < i3; s2++)
                  a2[s2] = arguments[s2];
                var l2 = r3, c2 = function() {
                  o3 = null, n2 || e3.apply(l2, a2);
                }, u2 = n2 && !o3;
                window.clearTimeout(o3), o3 = window.setTimeout(c2, t3), u2 && e3.apply(l2, a2);
              };
            }, e2.deepMerge = function e3(t3) {
              for (var n2 = arguments.length, r3 = new Array(n2 > 1 ? n2 - 1 : 0), i3 = 1; i3 < n2; i3++)
                r3[i3 - 1] = arguments[i3];
              if (!r3.length)
                return t3;
              var a2 = r3.shift();
              if (h(t3) && h(a2))
                for (var s2 in a2)
                  h(a2[s2]) ? (t3[s2] || Object.assign(t3, (0, o2.default)({}, s2, {})), e3(t3[s2], a2[s2])) : Object.assign(t3, (0, o2.default)({}, s2, a2[s2]));
              return e3.apply(void 0, [t3].concat(r3));
            }, e2.delay = function(e3, t3) {
              return function() {
                var n2 = this, o3 = arguments;
                window.setTimeout(function() {
                  return e3.apply(n2, o3);
                }, t3);
              };
            }, e2.deprecationAssert = function(e3, t3, n2) {
              var o3 = "\xAB".concat(t3, "\xBB is deprecated and will be removed in the next major release. Please use the \xAB").concat(n2, "\xBB instead.");
              e3 && f(o3, "warn");
            }, e2.equals = function(e3, t3) {
              var n2 = Array.isArray(e3) || h(e3), o3 = Array.isArray(t3) || h(t3);
              return n2 || o3 ? JSON.stringify(e3) === JSON.stringify(t3) : e3 === t3;
            }, e2.generateBlockId = function() {
              return (0, i2.nanoid)(10);
            }, e2.generateId = function() {
              var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
              return "".concat(e3).concat(Math.floor(1e8 * Math.random()).toString(16));
            }, e2.getFileExtension = function(e3) {
              return e3.name.split(".").pop();
            }, e2.getUserOS = y, e2.getValidUrl = function(e3) {
              try {
                return new URL(e3).href;
              } catch (e4) {
              }
              return "//" === e3.substring(0, 2) ? window.location.protocol + e3 : window.location.origin + e3;
            }, e2.isBoolean = function(e3) {
              return "boolean" === d(e3);
            }, e2.isClass = function(e3) {
              return p(e3) && /^\s*class\s+/.test(e3.toString());
            }, e2.isEmpty = function(e3) {
              return !e3 || 0 === Object.keys(e3).length && e3.constructor === Object;
            }, e2.isFunction = p, e2.isIosDevice = void 0, e2.isMobileScreen = function() {
              return window.matchMedia("(max-width: ".concat(650, "px)")).matches;
            }, e2.isNumber = function(e3) {
              return "number" === d(e3);
            }, e2.isObject = h, e2.isPrintableKey = function(e3) {
              return e3 > 47 && e3 < 58 || 32 === e3 || 13 === e3 || 229 === e3 || e3 > 64 && e3 < 91 || e3 > 95 && e3 < 112 || e3 > 185 && e3 < 193 || e3 > 218 && e3 < 223;
            }, e2.isPromise = function(e3) {
              return Promise.resolve(e3) === e3;
            }, e2.isString = function(e3) {
              return "string" === d(e3);
            }, e2.isTouchSupported = void 0, e2.isUndefined = v, e2.isValidMimeType = function(e3) {
              return /^[-\w]+\/([-+\w]+|\*)$/.test(e3);
            }, e2.mouseButtons = e2.mobileScreenBreakpoint = e2.logLabeled = e2.log = e2.keyCodes = void 0, e2.openTab = function(e3) {
              window.open(e3, "_blank");
            }, e2.sequence = function(e3) {
              return g.apply(this, arguments);
            }, e2.setLogLevel = function(e3) {
              c.logLevel = e3;
            }, e2.throttle = function(e3, t3) {
              var n2, o3, r3, i3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0, a2 = null, s2 = 0;
              i3 || (i3 = {});
              var l2 = function() {
                s2 = false === i3.leading ? 0 : Date.now(), a2 = null, r3 = e3.apply(n2, o3), a2 || (n2 = o3 = null);
              };
              return function() {
                var c2 = Date.now();
                s2 || false !== i3.leading || (s2 = c2);
                var u2 = t3 - (c2 - s2);
                return n2 = this, o3 = arguments, u2 <= 0 || u2 > t3 ? (a2 && (clearTimeout(a2), a2 = null), s2 = c2, r3 = e3.apply(n2, o3), a2 || (n2 = o3 = null)) : a2 || false === i3.trailing || (a2 = setTimeout(l2, u2)), r3;
              };
            }, e2.typeOf = d, t2 = l(t2), o2 = l(o2), r2 = l(r2), a = l(a), e2.LogLevels = s, function(e3) {
              e3.VERBOSE = "VERBOSE", e3.INFO = "INFO", e3.WARN = "WARN", e3.ERROR = "ERROR";
            }(s || (e2.LogLevels = s = {})), e2.keyCodes = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 }, e2.mouseButtons = { LEFT: 0, WHEEL: 1, RIGHT: 2, BACKWARD: 3, FORWARD: 4 }, c.logLevel = s.VERBOSE;
            var u = c.bind(window, false);
            e2.log = u;
            var f = c.bind(window, true);
            function d(e3) {
              return Object.prototype.toString.call(e3).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
            }
            function p(e3) {
              return "function" === d(e3) || "asyncfunction" === d(e3);
            }
            function h(e3) {
              return "object" === d(e3);
            }
            function v(e3) {
              return "undefined" === d(e3);
            }
            function g() {
              return (g = (0, r2.default)(t2.default.mark(function e3(n2) {
                var o3, i3, a2, s2, l2 = arguments;
                return t2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return s2 = function() {
                          return (s2 = (0, r2.default)(t2.default.mark(function e5(n3, o4, r3) {
                            return t2.default.wrap(function(e6) {
                              for (; ; )
                                switch (e6.prev = e6.next) {
                                  case 0:
                                    return e6.prev = 0, e6.next = 3, n3.function(n3.data);
                                  case 3:
                                    return e6.next = 5, o4(v(n3.data) ? {} : n3.data);
                                  case 5:
                                    e6.next = 10;
                                    break;
                                  case 7:
                                    e6.prev = 7, e6.t0 = e6.catch(0), r3(v(n3.data) ? {} : n3.data);
                                  case 10:
                                  case "end":
                                    return e6.stop();
                                }
                            }, e5, null, [[0, 7]]);
                          }))).apply(this, arguments);
                        }, a2 = function(e5, t3, n3) {
                          return s2.apply(this, arguments);
                        }, o3 = l2.length > 1 && void 0 !== l2[1] ? l2[1] : function() {
                        }, i3 = l2.length > 2 && void 0 !== l2[2] ? l2[2] : function() {
                        }, e4.abrupt("return", n2.reduce(function() {
                          var e5 = (0, r2.default)(t2.default.mark(function e6(n3, r3) {
                            return t2.default.wrap(function(e7) {
                              for (; ; )
                                switch (e7.prev = e7.next) {
                                  case 0:
                                    return e7.next = 2, n3;
                                  case 2:
                                    return e7.abrupt("return", a2(r3, o3, i3));
                                  case 3:
                                  case "end":
                                    return e7.stop();
                                }
                            }, e6);
                          }));
                          return function(t3, n3) {
                            return e5.apply(this, arguments);
                          };
                        }(), Promise.resolve()));
                      case 5:
                      case "end":
                        return e4.stop();
                    }
                }, e3);
              }))).apply(this, arguments);
            }
            function y() {
              var e3 = { win: false, mac: false, x11: false, linux: false }, t3 = Object.keys(e3).find(function(e4) {
                return -1 !== window.navigator.appVersion.toLowerCase().indexOf(e4);
              });
              return t3 ? (e3[t3] = true, e3) : e3;
            }
            e2.logLabeled = f;
            var k = "ontouchstart" in document.documentElement;
            e2.isTouchSupported = k, e2.mobileScreenBreakpoint = 650;
            var b = "undefined" != typeof window && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || "MacIntel" === window.navigator.platform && window.navigator.maxTouchPoints > 1);
            e2.isIosDevice = b;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(112)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            function l(e2, t2) {
              var n2 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
              if (!n2) {
                if (Array.isArray(e2) || (n2 = function(e3, t3) {
                  if (e3) {
                    if ("string" == typeof e3)
                      return c(e3, t3);
                    var n3 = Object.prototype.toString.call(e3).slice(8, -1);
                    return "Object" === n3 && e3.constructor && (n3 = e3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? c(e3, t3) : void 0;
                  }
                }(e2)) || t2 && e2 && "number" == typeof e2.length) {
                  n2 && (e2 = n2);
                  var o3 = 0, r3 = function() {
                  };
                  return { s: r3, n: function() {
                    return o3 >= e2.length ? { done: true } : { done: false, value: e2[o3++] };
                  }, e: function(e3) {
                    throw e3;
                  }, f: r3 };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var i3, a2 = true, s2 = false;
              return { s: function() {
                n2 = n2.call(e2);
              }, n: function() {
                var e3 = n2.next();
                return a2 = e3.done, e3;
              }, e: function(e3) {
                s2 = true, i3 = e3;
              }, f: function() {
                try {
                  a2 || null == n2.return || n2.return();
                } finally {
                  if (s2)
                    throw i3;
                }
              } };
            }
            function c(e2, t2) {
              (null == t2 || t2 > e2.length) && (t2 = e2.length);
              for (var n2 = 0, o3 = new Array(t2); n2 < t2; n2++)
                o3[n2] = e2[n2];
              return o3;
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2), a = s(a);
            var u = function() {
              function e2(t2) {
                var n2 = this, o3 = t2.config, i3 = t2.eventsDispatcher;
                if ((0, r2.default)(this, e2), this.nodes = {}, this.listeners = new a.default(), this.readOnlyMutableListeners = { on: function(e3, t3, o4) {
                  var r3 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                  n2.mutableListenerIds.push(n2.listeners.on(e3, t3, o4, r3));
                }, clearAll: function() {
                  var e3, t3 = l(n2.mutableListenerIds);
                  try {
                    for (t3.s(); !(e3 = t3.n()).done; ) {
                      var o4 = e3.value;
                      n2.listeners.offById(o4);
                    }
                  } catch (e4) {
                    t3.e(e4);
                  } finally {
                    t3.f();
                  }
                  n2.mutableListenerIds = [];
                } }, this.mutableListenerIds = [], (this instanceof e2 ? this.constructor : void 0) === e2)
                  throw new TypeError("Constructors for abstract class Module are not allowed.");
                this.config = o3, this.eventsDispatcher = i3;
              }
              return (0, i2.default)(e2, [{ key: "state", set: function(e3) {
                this.Editor = e3;
              } }, { key: "removeAllNodes", value: function() {
                for (var e3 in this.nodes) {
                  var t2 = this.nodes[e3];
                  t2 instanceof HTMLElement && t2.remove();
                }
              } }, { key: "isRtl", get: function() {
                return "rtl" === this.config.i18n.direction;
              } }]), e2;
            }();
            o2.default = u, u.displayName = "Module", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t) {
          var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
          "number" == typeof __g && (__g = n);
        }, function(e, t) {
          e.exports = function(e2) {
            try {
              return !!e2();
            } catch (e3) {
              return true;
            }
          };
        }, function(e, t, n) {
          var o = n(13);
          e.exports = function(e2) {
            if (!o(e2))
              throw TypeError(e2 + " is not an object!");
            return e2;
          };
        }, function(e, t) {
          e.exports = function(e2) {
            return "object" == typeof e2 ? null !== e2 : "function" == typeof e2;
          };
        }, function(e, t, n) {
          var o = n(70)("wks"), r = n(45), i = n(10).Symbol, a = "function" == typeof i;
          (e.exports = function(e2) {
            return o[e2] || (o[e2] = a && i[e2] || (a ? i : r)("Symbol." + e2));
          }).store = o;
        }, function(e, t, n) {
          var o = n(33), r = Math.min;
          e.exports = function(e2) {
            return e2 > 0 ? r(o(e2), 9007199254740991) : 0;
          };
        }, function(e, t) {
          var n = e.exports = { version: "2.6.12" };
          "number" == typeof __e && (__e = n);
        }, function(e, t, n) {
          e.exports = !n(11)(function() {
            return 7 != Object.defineProperty({}, "a", { get: function() {
              return 7;
            } }).a;
          });
        }, function(e, t, n) {
          var o = n(12), r = n(117), i = n(42), a = Object.defineProperty;
          t.f = n(17) ? Object.defineProperty : function(e2, t2, n2) {
            if (o(e2), t2 = i(t2, true), o(n2), r)
              try {
                return a(e2, t2, n2);
              } catch (e3) {
              }
            if ("get" in n2 || "set" in n2)
              throw TypeError("Accessors not supported!");
            return "value" in n2 && (e2[t2] = n2.value), e2;
          };
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(41), n(2), n(3), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l) {
            "use strict";
            var c = n(1);
            function u(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (u = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = c(r2), i2 = c(i2), s = c(s), l = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = u(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(l);
            var f = function() {
              function e2() {
                (0, i2.default)(this, e2);
              }
              return (0, s.default)(e2, null, [{ key: "isSingleTag", value: function(e3) {
                return e3.tagName && ["AREA", "BASE", "BR", "COL", "COMMAND", "EMBED", "HR", "IMG", "INPUT", "KEYGEN", "LINK", "META", "PARAM", "SOURCE", "TRACK", "WBR"].includes(e3.tagName);
              } }, { key: "isLineBreakTag", value: function(e3) {
                return e3 && e3.tagName && ["BR", "WBR"].includes(e3.tagName);
              } }, { key: "make", value: function(e3) {
                var t2, n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, o3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, i3 = document.createElement(e3);
                for (var a2 in Array.isArray(n2) ? (t2 = i3.classList).add.apply(t2, (0, r2.default)(n2)) : n2 && i3.classList.add(n2), o3)
                  Object.prototype.hasOwnProperty.call(o3, a2) && (i3[a2] = o3[a2]);
                return i3;
              } }, { key: "text", value: function(e3) {
                return document.createTextNode(e3);
              } }, { key: "append", value: function(e3, t2) {
                Array.isArray(t2) ? t2.forEach(function(t3) {
                  return e3.appendChild(t3);
                }) : e3.appendChild(t2);
              } }, { key: "prepend", value: function(e3, t2) {
                Array.isArray(t2) ? (t2 = t2.reverse()).forEach(function(t3) {
                  return e3.prepend(t3);
                }) : e3.prepend(t2);
              } }, { key: "swap", value: function(e3, t2) {
                var n2 = document.createElement("div"), o3 = e3.parentNode;
                o3.insertBefore(n2, e3), o3.insertBefore(e3, t2), o3.insertBefore(t2, n2), o3.removeChild(n2);
              } }, { key: "find", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document, t2 = arguments.length > 1 ? arguments[1] : void 0;
                return e3.querySelector(t2);
              } }, { key: "get", value: function(e3) {
                return document.getElementById(e3);
              } }, { key: "findAll", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document, t2 = arguments.length > 1 ? arguments[1] : void 0;
                return e3.querySelectorAll(t2);
              } }, { key: "allInputsSelector", get: function() {
                return "[contenteditable=true], textarea, input:not([type]), " + ["text", "password", "email", "number", "search", "tel", "url"].map(function(e3) {
                  return 'input[type="'.concat(e3, '"]');
                }).join(", ");
              } }, { key: "findAllInputs", value: function(t2) {
                return l.array(t2.querySelectorAll(e2.allInputsSelector)).reduce(function(t3, n2) {
                  return e2.isNativeInput(n2) || e2.containsOnlyInlineElements(n2) ? [].concat((0, r2.default)(t3), [n2]) : [].concat((0, r2.default)(t3), (0, r2.default)(e2.getDeepestBlockElements(n2)));
                }, []);
              } }, { key: "getDeepestNode", value: function(t2) {
                var n2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o3 = n2 ? "lastChild" : "firstChild", r3 = n2 ? "previousSibling" : "nextSibling";
                if (t2 && t2.nodeType === Node.ELEMENT_NODE && t2[o3]) {
                  var i3 = t2[o3];
                  if (e2.isSingleTag(i3) && !e2.isNativeInput(i3) && !e2.isLineBreakTag(i3))
                    if (i3[r3])
                      i3 = i3[r3];
                    else {
                      if (!i3.parentNode[r3])
                        return i3.parentNode;
                      i3 = i3.parentNode[r3];
                    }
                  return this.getDeepestNode(i3, n2);
                }
                return t2;
              } }, { key: "isElement", value: function(e3) {
                return !l.isNumber(e3) && e3 && e3.nodeType && e3.nodeType === Node.ELEMENT_NODE;
              } }, { key: "isFragment", value: function(e3) {
                return !l.isNumber(e3) && e3 && e3.nodeType && e3.nodeType === Node.DOCUMENT_FRAGMENT_NODE;
              } }, { key: "isContentEditable", value: function(e3) {
                return "true" === e3.contentEditable;
              } }, { key: "isNativeInput", value: function(e3) {
                return !(!e3 || !e3.tagName) && ["INPUT", "TEXTAREA"].includes(e3.tagName);
              } }, { key: "canSetCaret", value: function(t2) {
                var n2 = true;
                if (e2.isNativeInput(t2))
                  switch (t2.type) {
                    case "file":
                    case "checkbox":
                    case "radio":
                    case "hidden":
                    case "submit":
                    case "button":
                    case "image":
                    case "reset":
                      n2 = false;
                  }
                else
                  n2 = e2.isContentEditable(t2);
                return n2;
              } }, { key: "isNodeEmpty", value: function(e3) {
                return !(this.isSingleTag(e3) && !this.isLineBreakTag(e3)) && 0 === (this.isElement(e3) && this.isNativeInput(e3) ? e3.value : e3.textContent.replace("\u200B", "")).trim().length;
              } }, { key: "isLeaf", value: function(e3) {
                return !!e3 && 0 === e3.childNodes.length;
              } }, { key: "isEmpty", value: function(e3) {
                e3.normalize();
                for (var t2 = [e3]; t2.length > 0; )
                  if (e3 = t2.shift()) {
                    if (this.isLeaf(e3) && !this.isNodeEmpty(e3))
                      return false;
                    e3.childNodes && t2.push.apply(t2, (0, r2.default)(Array.from(e3.childNodes)));
                  }
                return true;
              } }, { key: "isHTMLString", value: function(t2) {
                var n2 = e2.make("div");
                return n2.innerHTML = t2, n2.childElementCount > 0;
              } }, { key: "getContentLength", value: function(t2) {
                return e2.isNativeInput(t2) ? t2.value.length : t2.nodeType === Node.TEXT_NODE ? t2.length : t2.textContent.length;
              } }, { key: "blockElements", get: function() {
                return ["address", "article", "aside", "blockquote", "canvas", "div", "dl", "dt", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "li", "main", "nav", "noscript", "ol", "output", "p", "pre", "ruby", "section", "table", "tbody", "thead", "tr", "tfoot", "ul", "video"];
              } }, { key: "containsOnlyInlineElements", value: function(t2) {
                var n2;
                return l.isString(t2) ? (n2 = document.createElement("div")).innerHTML = t2 : n2 = t2, Array.from(n2.children).every(function t3(n3) {
                  return !e2.blockElements.includes(n3.tagName.toLowerCase()) && Array.from(n3.children).every(t3);
                });
              } }, { key: "getDeepestBlockElements", value: function(t2) {
                return e2.containsOnlyInlineElements(t2) ? [t2] : Array.from(t2.children).reduce(function(t3, n2) {
                  return [].concat((0, r2.default)(t3), (0, r2.default)(e2.getDeepestBlockElements(n2)));
                }, []);
              } }, { key: "getHolder", value: function(e3) {
                return l.isString(e3) ? document.getElementById(e3) : e3;
              } }, { key: "isExtensionNode", value: function(e3) {
                return e3 && ["GRAMMARLY-EXTENSION"].includes(e3.nodeName);
              } }, { key: "isAnchor", value: function(e3) {
                return "a" === e3.tagName.toLowerCase();
              } }, { key: "offset", value: function(e3) {
                var t2 = e3.getBoundingClientRect(), n2 = window.pageXOffset || document.documentElement.scrollLeft, o3 = window.pageYOffset || document.documentElement.scrollTop, r3 = t2.top + o3, i3 = t2.left + n2;
                return { top: r3, left: i3, bottom: r3 + t2.height, right: i3 + t2.width };
              } }]), e2;
            }();
            o2.default = f, f.displayName = "Dom", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o = n(368)();
          e.exports = o;
          try {
            regeneratorRuntime = o;
          } catch (e2) {
            "object" == typeof globalThis ? globalThis.regeneratorRuntime = o : Function("r", "regeneratorRuntime = r")(o);
          }
        }, function(e, t) {
          function n(e2, t2, n2, o, r, i, a) {
            try {
              var s = e2[i](a), l = s.value;
            } catch (e3) {
              return void n2(e3);
            }
            s.done ? t2(l) : Promise.resolve(l).then(o, r);
          }
          e.exports = function(e2) {
            return function() {
              var t2 = this, o = arguments;
              return new Promise(function(r, i) {
                var a = e2.apply(t2, o);
                function s(e3) {
                  n(a, r, i, s, l, "next", e3);
                }
                function l(e3) {
                  n(a, r, i, s, l, "throw", e3);
                }
                s(void 0);
              });
            };
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(39);
          e.exports = function(e2) {
            return Object(o(e2));
          };
        }, function(e, t, n) {
          var o = n(10), r = n(27), i = n(26), a = n(45)("src"), s = n(192), l = ("" + s).split("toString");
          n(16).inspectSource = function(e2) {
            return s.call(e2);
          }, (e.exports = function(e2, t2, n2, s2) {
            var c = "function" == typeof n2;
            c && (i(n2, "name") || r(n2, "name", t2)), e2[t2] !== n2 && (c && (i(n2, a) || r(n2, a, e2[t2] ? "" + e2[t2] : l.join(String(t2)))), e2 === o ? e2[t2] = n2 : s2 ? e2[t2] ? e2[t2] = n2 : r(e2, t2, n2) : (delete e2[t2], r(e2, t2, n2)));
          })(Function.prototype, "toString", function() {
            return "function" == typeof this && this[a] || s.call(this);
          });
        }, function(e, t, n) {
          var o = n(0), r = n(11), i = n(39), a = /"/g, s = function(e2, t2, n2, o2) {
            var r2 = String(i(e2)), s2 = "<" + t2;
            return "" !== n2 && (s2 += " " + n2 + '="' + String(o2).replace(a, "&quot;") + '"'), s2 + ">" + r2 + "</" + t2 + ">";
          };
          e.exports = function(e2, t2) {
            var n2 = {};
            n2[e2] = t2(s), o(o.P + o.F * r(function() {
              var t3 = ""[e2]('"');
              return t3 !== t3.toLowerCase() || t3.split('"').length > 3;
            }), "String", n2);
          };
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(8), n(19)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l) {
            "use strict";
            var c = n(1);
            function u(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (u = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = c(r2), i2 = c(i2), s = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = u(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(s), l = c(l);
            var f = function() {
              function e2() {
                (0, r2.default)(this, e2), this.instance = null, this.selection = null, this.savedSelectionRange = null, this.isFakeBackgroundEnabled = false, this.commandBackground = "backColor", this.commandRemoveFormat = "removeFormat";
              }
              return (0, i2.default)(e2, [{ key: "removeFakeBackground", value: function() {
                this.isFakeBackgroundEnabled && (this.isFakeBackgroundEnabled = false, document.execCommand(this.commandRemoveFormat));
              } }, { key: "setFakeBackground", value: function() {
                document.execCommand(this.commandBackground, false, "#a8d6ff"), this.isFakeBackgroundEnabled = true;
              } }, { key: "save", value: function() {
                this.savedSelectionRange = e2.range;
              } }, { key: "restore", value: function() {
                if (this.savedSelectionRange) {
                  var e3 = window.getSelection();
                  e3.removeAllRanges(), e3.addRange(this.savedSelectionRange);
                }
              } }, { key: "clearSaved", value: function() {
                this.savedSelectionRange = null;
              } }, { key: "collapseToEnd", value: function() {
                var e3 = window.getSelection(), t2 = document.createRange();
                t2.selectNodeContents(e3.focusNode), t2.collapse(false), e3.removeAllRanges(), e3.addRange(t2);
              } }, { key: "findParentTag", value: function(e3, t2) {
                var n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10, o3 = window.getSelection(), r3 = null;
                if (!o3 || !o3.anchorNode || !o3.focusNode)
                  return null;
                var i3 = [o3.anchorNode, o3.focusNode];
                return i3.forEach(function(o4) {
                  for (var i4 = n2; i4 > 0 && o4.parentNode && (o4.tagName !== e3 || (r3 = o4, t2 && o4.classList && !o4.classList.contains(t2) && (r3 = null), !r3)); )
                    o4 = o4.parentNode, i4--;
                }), r3;
              } }, { key: "expandToTag", value: function(e3) {
                var t2 = window.getSelection();
                t2.removeAllRanges();
                var n2 = document.createRange();
                n2.selectNodeContents(e3), t2.addRange(n2);
              } }], [{ key: "CSS", get: function() {
                return { editorWrapper: "codex-editor", editorZone: "codex-editor__redactor" };
              } }, { key: "anchorNode", get: function() {
                var e3 = window.getSelection();
                return e3 ? e3.anchorNode : null;
              } }, { key: "anchorElement", get: function() {
                var e3 = window.getSelection();
                if (!e3)
                  return null;
                var t2 = e3.anchorNode;
                return t2 ? l.default.isElement(t2) ? t2 : t2.parentElement : null;
              } }, { key: "anchorOffset", get: function() {
                var e3 = window.getSelection();
                return e3 ? e3.anchorOffset : null;
              } }, { key: "isCollapsed", get: function() {
                var e3 = window.getSelection();
                return e3 ? e3.isCollapsed : null;
              } }, { key: "isAtEditor", get: function() {
                return this.isSelectionAtEditor(e2.get());
              } }, { key: "isSelectionAtEditor", value: function(t2) {
                if (!t2)
                  return false;
                var n2 = t2.anchorNode || t2.focusNode;
                n2 && n2.nodeType === Node.TEXT_NODE && (n2 = n2.parentNode);
                var o3 = null;
                return n2 && n2 instanceof Element && (o3 = n2.closest(".".concat(e2.CSS.editorZone))), !!o3 && o3.nodeType === Node.ELEMENT_NODE;
              } }, { key: "isRangeAtEditor", value: function(t2) {
                if (t2) {
                  var n2 = t2.startContainer;
                  n2 && n2.nodeType === Node.TEXT_NODE && (n2 = n2.parentNode);
                  var o3 = null;
                  return n2 && n2 instanceof Element && (o3 = n2.closest(".".concat(e2.CSS.editorZone))), !!o3 && o3.nodeType === Node.ELEMENT_NODE;
                }
              } }, { key: "isSelectionExists", get: function() {
                return !!e2.get().anchorNode;
              } }, { key: "range", get: function() {
                return this.getRangeFromSelection(this.get());
              } }, { key: "getRangeFromSelection", value: function(e3) {
                return e3 && e3.rangeCount ? e3.getRangeAt(0) : null;
              } }, { key: "rect", get: function() {
                var e3, t2 = document.selection, n2 = { x: 0, y: 0, width: 0, height: 0 };
                if (t2 && "Control" !== t2.type)
                  return e3 = (t2 = t2).createRange(), n2.x = e3.boundingLeft, n2.y = e3.boundingTop, n2.width = e3.boundingWidth, n2.height = e3.boundingHeight, n2;
                if (!window.getSelection)
                  return s.log("Method window.getSelection is not supported", "warn"), n2;
                if (null === (t2 = window.getSelection()).rangeCount || isNaN(t2.rangeCount))
                  return s.log("Method SelectionUtils.rangeCount is not supported", "warn"), n2;
                if (0 === t2.rangeCount)
                  return n2;
                if ((e3 = t2.getRangeAt(0).cloneRange()).getBoundingClientRect && (n2 = e3.getBoundingClientRect()), 0 === n2.x && 0 === n2.y) {
                  var o3 = document.createElement("span");
                  if (o3.getBoundingClientRect) {
                    o3.appendChild(document.createTextNode("\u200B")), e3.insertNode(o3), n2 = o3.getBoundingClientRect();
                    var r3 = o3.parentNode;
                    r3.removeChild(o3), r3.normalize();
                  }
                }
                return n2;
              } }, { key: "text", get: function() {
                return window.getSelection ? window.getSelection().toString() : "";
              } }, { key: "get", value: function() {
                return window.getSelection();
              } }, { key: "setCursor", value: function(e3) {
                var t2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n2 = document.createRange(), o3 = window.getSelection();
                if (l.default.isNativeInput(e3)) {
                  if (!l.default.canSetCaret(e3))
                    return;
                  return e3.focus(), e3.selectionStart = e3.selectionEnd = t2, e3.getBoundingClientRect();
                }
                return n2.setStart(e3, t2), n2.setEnd(e3, t2), o3.removeAllRanges(), o3.addRange(n2), n2.getBoundingClientRect();
              } }, { key: "addFakeCursor", value: function(t2) {
                var n2 = e2.range, o3 = l.default.make("span", "codex-editor__fake-cursor");
                o3.dataset.mutationFree = "true", !n2 || t2 && !t2.contains(n2.startContainer) || (n2.collapse(), n2.insertNode(o3));
              } }, { key: "removeFakeCursor", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document.body, t2 = l.default.find(e3, ".codex-editor__fake-cursor");
                t2 && t2.remove();
              } }]), e2;
            }();
            o2.default = f, f.displayName = "SelectionUtils", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t) {
          var n = {}.hasOwnProperty;
          e.exports = function(e2, t2) {
            return n.call(e2, t2);
          };
        }, function(e, t, n) {
          var o = n(18), r = n(44);
          e.exports = n(17) ? function(e2, t2, n2) {
            return o.f(e2, t2, r(1, n2));
          } : function(e2, t2, n2) {
            return e2[t2] = n2, e2;
          };
        }, function(e, t, n) {
          var o = n(62), r = n(39);
          e.exports = function(e2) {
            return o(r(e2));
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(11);
          e.exports = function(e2, t2) {
            return !!e2 && o(function() {
              t2 ? e2.call(null, function() {
              }, 1) : e2.call(null);
            });
          };
        }, function(e, t, n) {
          var o = n(362), r = n(363), i = n(148), a = n(364);
          e.exports = function(e2, t2) {
            return o(e2) || r(e2, t2) || i(e2, t2) || a();
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(32);
          e.exports = function(e2, t2, n2) {
            if (o(e2), void 0 === t2)
              return e2;
            switch (n2) {
              case 1:
                return function(n3) {
                  return e2.call(t2, n3);
                };
              case 2:
                return function(n3, o2) {
                  return e2.call(t2, n3, o2);
                };
              case 3:
                return function(n3, o2, r) {
                  return e2.call(t2, n3, o2, r);
                };
            }
            return function() {
              return e2.apply(t2, arguments);
            };
          };
        }, function(e, t) {
          e.exports = function(e2) {
            if ("function" != typeof e2)
              throw TypeError(e2 + " is not a function!");
            return e2;
          };
        }, function(e, t) {
          var n = Math.ceil, o = Math.floor;
          e.exports = function(e2) {
            return isNaN(e2 = +e2) ? 0 : (e2 > 0 ? o : n)(e2);
          };
        }, function(e, t, n) {
          var o = n(63), r = n(44), i = n(28), a = n(42), s = n(26), l = n(117), c = Object.getOwnPropertyDescriptor;
          t.f = n(17) ? c : function(e2, t2) {
            if (e2 = i(e2), t2 = a(t2, true), l)
              try {
                return c(e2, t2);
              } catch (e3) {
              }
            if (s(e2, t2))
              return r(!o.f.call(e2, t2), e2[t2]);
          };
        }, function(e, t, n) {
          var o = n(0), r = n(16), i = n(11);
          e.exports = function(e2, t2) {
            var n2 = (r.Object || {})[e2] || Object[e2], a = {};
            a[e2] = t2(n2), o(o.S + o.F * i(function() {
              n2(1);
            }), "Object", a);
          };
        }, function(e, t, n) {
          var o = n(31), r = n(62), i = n(22), a = n(15), s = n(133);
          e.exports = function(e2, t2) {
            var n2 = 1 == e2, l = 2 == e2, c = 3 == e2, u = 4 == e2, f = 6 == e2, d = 5 == e2 || f, p = t2 || s;
            return function(t3, s2, h) {
              for (var v, g, y = i(t3), k = r(y), b = o(s2, h, 3), m = a(k.length), w = 0, x = n2 ? p(t3, m) : l ? p(t3, 0) : void 0; m > w; w++)
                if ((d || w in k) && (g = b(v = k[w], w, y), e2)) {
                  if (n2)
                    x[w] = g;
                  else if (g)
                    switch (e2) {
                      case 3:
                        return true;
                      case 5:
                        return v;
                      case 6:
                        return w;
                      case 2:
                        x.push(v);
                    }
                  else if (u)
                    return false;
                }
              return f ? -1 : c || u ? u : x;
            };
          };
        }, function(e, t, n) {
          "use strict";
          n.r(t), n.d(t, "IconAddBackground", function() {
            return c;
          }), n.d(t, "IconAddBorder", function() {
            return u;
          }), n.d(t, "IconAlignCenter", function() {
            return f;
          }), n.d(t, "IconAlignJustify", function() {
            return d;
          }), n.d(t, "IconAlignLeft", function() {
            return p;
          }), n.d(t, "IconAlignRight", function() {
            return h;
          }), n.d(t, "IconBold", function() {
            return v;
          }), n.d(t, "IconBrackets", function() {
            return g;
          }), n.d(t, "IconChecklist", function() {
            return y;
          }), n.d(t, "IconChevronDown", function() {
            return k;
          }), n.d(t, "IconChevronLeft", function() {
            return b;
          }), n.d(t, "IconChevronRight", function() {
            return m;
          }), n.d(t, "IconChevronUp", function() {
            return w;
          }), n.d(t, "IconClipboard", function() {
            return x;
          }), n.d(t, "IconCollapse", function() {
            return C;
          }), n.d(t, "IconColor", function() {
            return S;
          }), n.d(t, "IconCopy", function() {
            return T;
          }), n.d(t, "IconCross", function() {
            return E;
          }), n.d(t, "IconCurlyBrackets", function() {
            return B;
          }), n.d(t, "IconDelimiter", function() {
            return M;
          }), n.d(t, "IconDirectionDownRight", function() {
            return _;
          }), n.d(t, "IconDirectionLeftDown", function() {
            return O;
          }), n.d(t, "IconDirectionRightDown", function() {
            return I;
          }), n.d(t, "IconDirectionUpRight", function() {
            return L2;
          }), n.d(t, "IconDotCircle", function() {
            return P;
          }), n.d(t, "IconEtcHorisontal", function() {
            return j;
          }), n.d(t, "IconEtcVertical", function() {
            return R;
          }), n.d(t, "IconFile", function() {
            return A;
          }), n.d(t, "IconGift", function() {
            return N;
          }), n.d(t, "IconGlobe", function() {
            return D;
          }), n.d(t, "IconH1", function() {
            return o;
          }), n.d(t, "IconH2", function() {
            return r;
          }), n.d(t, "IconH3", function() {
            return i;
          }), n.d(t, "IconH4", function() {
            return a;
          }), n.d(t, "IconH5", function() {
            return s;
          }), n.d(t, "IconH6", function() {
            return l;
          }), n.d(t, "IconHeading", function() {
            return F;
          }), n.d(t, "IconHeart", function() {
            return H;
          }), n.d(t, "IconHidden", function() {
            return W;
          }), n.d(t, "IconHtml", function() {
            return U;
          }), n.d(t, "IconInstagram", function() {
            return z;
          }), n.d(t, "IconItalic", function() {
            return V;
          }), n.d(t, "IconLink", function() {
            return Y;
          }), n.d(t, "IconLinkedin", function() {
            return X;
          }), n.d(t, "IconListBulleted", function() {
            return G;
          }), n.d(t, "IconListNumbered", function() {
            return K;
          }), n.d(t, "IconMarker", function() {
            return Z;
          }), n.d(t, "IconMenu", function() {
            return J;
          }), n.d(t, "IconMenuSmall", function() {
            return q;
          }), n.d(t, "IconPicture", function() {
            return $2;
          }), n.d(t, "IconPlay", function() {
            return Q;
          }), n.d(t, "IconPlus", function() {
            return ee;
          }), n.d(t, "IconQuestion", function() {
            return te;
          }), n.d(t, "IconQuote", function() {
            return ne;
          }), n.d(t, "IconRedo", function() {
            return oe;
          }), n.d(t, "IconRemoveBackground", function() {
            return re;
          }), n.d(t, "IconReplace", function() {
            return ie;
          }), n.d(t, "IconSave", function() {
            return ae;
          }), n.d(t, "IconSearch", function() {
            return se;
          }), n.d(t, "IconStar", function() {
            return le;
          }), n.d(t, "IconStretch", function() {
            return ce;
          }), n.d(t, "IconStrikethrough", function() {
            return ue;
          }), n.d(t, "IconTable", function() {
            return pe;
          }), n.d(t, "IconTableWithHeadings", function() {
            return fe;
          }), n.d(t, "IconTableWithoutHeadings", function() {
            return de;
          }), n.d(t, "IconText", function() {
            return he;
          }), n.d(t, "IconTranslate", function() {
            return ve;
          }), n.d(t, "IconTrash", function() {
            return ge;
          }), n.d(t, "IconTwitter", function() {
            return ye;
          }), n.d(t, "IconUnderline", function() {
            return ke;
          }), n.d(t, "IconUndo", function() {
            return be;
          }), n.d(t, "IconUnlink", function() {
            return me;
          }), n.d(t, "IconUser", function() {
            return we;
          }), n.d(t, "IconUsersGroup", function() {
            return xe;
          }), n.d(t, "IconWarning", function() {
            return Ce;
          });
          const o = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 17V10.2135C19 10.1287 18.9011 10.0824 18.836 10.1367L16 12.5"/></svg>', r = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10 19 9.5 19 12C19 13.9771 16.0684 13.9997 16.0012 16.8981C15.9999 16.9533 16.0448 17 16.1 17L19.3 17"/></svg>', i = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10.5 16.8323 10 17.6 10C18.3677 10 19.5 10.311 19.5 11.5C19.5 12.5315 18.7474 12.9022 18.548 12.9823C18.5378 12.9864 18.5395 13.0047 18.5503 13.0063C18.8115 13.0456 20 13.3065 20 14.8C20 16 19.5 17 17.8 17C17.8 17 16 17 16 16.3"/></svg>', a = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 10L15.2834 14.8511C15.246 14.9178 15.294 15 15.3704 15C16.8489 15 18.7561 15 20.2 15M19 17C19 15.7187 19 14.8813 19 13.6"/></svg>', s = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 15.9C16 15.9 16.3768 17 17.8 17C19.5 17 20 15.6199 20 14.7C20 12.7323 17.6745 12.0486 16.1635 12.9894C16.094 13.0327 16 12.9846 16 12.9027V10.1C16 10.0448 16.0448 10 16.1 10H19.8"/></svg>', l = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19.5 10C16.5 10.5 16 13.3285 16 15M16 15V15C16 16.1046 16.8954 17 18 17H18.3246C19.3251 17 20.3191 16.3492 20.2522 15.3509C20.0612 12.4958 16 12.6611 16 15Z"/></svg>', c = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19V19C9.13623 19 8.20435 19 7.46927 18.6955C6.48915 18.2895 5.71046 17.5108 5.30448 16.5307C5 15.7956 5 14.8638 5 13V12C5 9.19108 5 7.78661 5.67412 6.77772C5.96596 6.34096 6.34096 5.96596 6.77772 5.67412C7.78661 5 9.19108 5 12 5H13.5C14.8956 5 15.5933 5 16.1611 5.17224C17.4395 5.56004 18.44 6.56046 18.8278 7.83886C19 8.40666 19 9.10444 19 10.5V10.5"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 13V16M16 19V16M19 16H16M16 16H13"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6.5 17.5L17.5 6.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.9919 10.5H19.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.9919 19H11.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13L13 5"/></svg>', u = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.9919 9.5H19.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.5 5H14.5096"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.625 5H15C17.2091 5 19 6.79086 19 9V9.375"/><path stroke="currentColor" stroke-width="2" d="M9.375 5L9 5C6.79086 5 5 6.79086 5 9V9.375"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.3725 5H9.38207"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 9.5H5.00957"/><path stroke="currentColor" stroke-width="2" d="M9.375 19H9C6.79086 19 5 17.2091 5 15V14.625"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.3725 19H9.38207"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 14.55H5.00957"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 13V16M16 19V16M19 16H16M16 16H13"/></svg>', f = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 7L6 7"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 17H6"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 12L8 12"/></svg>', d = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 7L6 7"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 17H6"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 12L6 12"/></svg>', p = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17 7L5 7"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17 17H5"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M13 12L5 12"/></svg>', h = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 7L7 7"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 17H7"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 12L11 12"/></svg>', v = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 12L9 7.1C9 7.04477 9.04477 7 9.1 7H10.4C11.5 7 14 7.1 14 9.5C14 9.5 14 12 11 12M9 12V16.8C9 16.9105 9.08954 17 9.2 17H12.5C14 17 15 16 15 14.5C15 11.7046 11 12 11 12M9 12H11"/></svg>', g = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 8L5 12L9 16"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 8L19 12L15 16"/></svg>', y = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9.2 12L11.0586 13.8586C11.1367 13.9367 11.2633 13.9367 11.3414 13.8586L14.7 10.5"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', k = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 10L11.8586 14.8586C11.9367 14.9367 12.0633 14.9367 12.1414 14.8586L17 10"/></svg>', b = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.5 17.5L9.64142 12.6414C9.56331 12.5633 9.56331 12.4367 9.64142 12.3586L14.5 7.5"/></svg>', m = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9.58284 17.5L14.4414 12.6414C14.5195 12.5633 14.5195 12.4367 14.4414 12.3586L9.58284 7.5"/></svg>', w = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 15L11.8586 10.1414C11.9367 10.0633 12.0633 10.0633 12.1414 10.1414L17 15"/></svg>', x = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.42857 7H7.71429C7.25963 7 6.82359 7.15804 6.5021 7.43934C6.18061 7.72064 6 8.10218 6 8.5V17.5C6 17.8978 6.18061 18.2794 6.5021 18.5607C6.82359 18.842 7.25963 19 7.71429 19H16.2857C16.7404 19 17.1764 18.842 17.4979 18.5607C17.8194 18.2794 18 17.8978 18 17.5V8.5C18 8.10218 17.8194 7.72064 17.4979 7.43934C17.1764 7.15804 16.7404 7 16.2857 7H14.5714"/><rect width="5.15789" height="3.36842" x="9.42105" y="5" stroke="currentColor" stroke-width="2" rx="1.5"/></svg>', C = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9L10 12M10 12L7 15M10 12H4"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9L14 12M14 12L17 15M14 12H20"/></svg>', S = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5.24296 11.4075C5.23167 10.6253 5.52446 9.8395 6.12132 9.24264L9.65686 5.70711C10.0474 5.31658 10.6809 5.31693 11.0714 5.70745L16.0205 10.6565C16.2268 10.8629 16.3243 11.1371 16.3126 11.4075M5.24296 11.4075C5.25382 12.1607 5.54661 12.9106 6.12132 13.4853L8 15.364M5.24296 11.4075H11.9565M16.3126 11.4075C16.3022 11.6487 16.205 11.8869 16.0208 12.0711L12.4853 15.6066C11.3137 16.7782 9.41421 16.7782 8.24264 15.6066L8 15.364M16.3126 11.4075H11.9565M8 15.364L11.9565 11.4075"/><path stroke="currentColor" stroke-width="2" d="M20 17.4615C20 18.3112 19.3284 19 18.5 19C17.6716 19 17 18.3112 17 17.4615C17 16.6119 17.9 15.6154 18.5 15C19.1 15.6154 20 16.6119 20 17.4615Z"/></svg>', T = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.25 8.5H10.25C9.2835 8.5 8.5 9.2835 8.5 10.25V17.25C8.5 18.2165 9.2835 19 10.25 19H17.25C18.2165 19 19 18.2165 19 17.25V10.25C19 9.2835 18.2165 8.5 17.25 8.5Z"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.5 8.5V6.75C15.5 6.28587 15.3156 5.84075 14.9874 5.51256C14.6592 5.18437 14.2141 5 13.75 5H6.75C6.28587 5 5.84075 5.18437 5.51256 5.51256C5.18437 5.84075 5 6.28587 5 6.75V13.75C5 14.2141 5.18437 14.6592 5.51256 14.9874C5.84075 15.3156 6.28587 15.5 6.75 15.5H8.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 12L15.5 12"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15.5L15.5 15.5"/></svg>', E = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>', B = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17C7 17 7 15.2536 7 13.5L5.5 12L7 10.5C7 8.74644 7 7 9 7"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17C17 17 17 15.2536 17 13.5L18.5 12L17 10.5C17 8.74644 17 7 15 7"/></svg>', M = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="6" x2="10" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="14" x2="18" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>', _ = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>', O = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>', I = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>', L2 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>', P = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="12" cy="12" r="4" stroke="currentColor" stroke-width="2"/></svg>', j = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M7.30499 11.995L7.30499 12.005M12.005 11.995V12.005M16.705 11.995L16.705 12.005"/></svg>', R = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M12.01 7.29999H12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M12.01 12H12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M12.01 16.7H12"/></svg>', A = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.3236 8.43554L9.49533 12.1908C9.13119 12.5505 8.93118 13.043 8.9393 13.5598C8.94741 14.0767 9.163 14.5757 9.53862 14.947C9.91424 15.3182 10.4191 15.5314 10.9422 15.5397C11.4653 15.5479 11.9637 15.3504 12.3279 14.9908L16.1562 11.2355C16.8845 10.5161 17.2845 9.53123 17.2682 8.4975C17.252 7.46376 16.8208 6.46583 16.0696 5.72324C15.3184 4.98066 14.3086 4.55425 13.2624 4.53782C12.2162 4.52138 11.2193 4.91627 10.4911 5.63562L6.66277 9.39093C5.57035 10.4699 4.97032 11.9473 4.99467 13.4979C5.01903 15.0485 5.66578 16.5454 6.79264 17.6592C7.9195 18.7731 9.43417 19.4127 11.0034 19.4374C12.5727 19.462 14.068 18.8697 15.1604 17.7907L18.9887 14.0354"/></svg>', N = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="12" height="6" x="6" y="13" stroke="currentColor" stroke-width="2" rx="2"/><line x1="12" x2="12" y1="9" y2="19" stroke="currentColor" stroke-width="2"/><path stroke="currentColor" stroke-width="2" d="M5 11C5 9.89543 5.89543 9 7 9H17C18.1046 9 19 9.89543 19 11V11C19 12.1046 18.1046 13 17 13H7C5.89543 13 5 12.1046 5 11V11Z"/><path stroke="currentColor" stroke-width="2" d="M16 9C16 7.89543 16 6 14 6C12 6 12 7.89543 12 9C12 7.89543 12 6 10 6C8 6 8 7.89543 8 9"/></svg>', D = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M18 12C18 15.3137 15.3137 18 12 18C8.68629 18 6 15.3137 6 12M18 12C18 8.68629 15.3137 6 12 6C8.68629 6 6 8.68629 6 12M18 12H6M11.7 6C11.7 6 9.7 7.63811 9.7 12C9.7 16.9 11.7 18 11.7 18M12.3 6C12.3 6 14.3 7.63811 14.3 12C14.3 16.9 12.3 18 12.3 18"/></svg>', F = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 7L9 12M9 17V12M9 12L15 12M15 7V12M15 17L15 12"/></svg>', H = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M6.6 7.50001C5.27451 8.82549 5.19999 10.6 6.59999 12.3C8 14 12.2 17.9 12.2 17.9C12.2 17.9 16.5 14 17.8 12.3C19.1 10.6 19.1255 8.82549 17.8 7.5C16.4745 6.17452 14.3255 6.17452 13 7.5L12.2 8.30001L11.4 7.50001C10.0745 6.17453 7.92548 6.17453 6.6 7.50001Z"/></svg>', W = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6.77778 6L18.5 17.7222"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.687 10C10.2473 10.4392 10.0002 11.035 10 11.6564C9.99978 12.2777 10.2465 12.8737 10.6858 13.3132C11.1251 13.7527 11.7211 13.9998 12.3427 14C12.9642 14.0002 13.5604 13.7536 14 13.3144"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7C17 11.1666 20 11.17 20 11.67C20 12.17 19 13.17 19 13.17M8.2424 8.80936C7.59317 9.22876 6.97961 9.76732 6.4017 10.4251C5.70398 11.2193 5.35512 11.6164 5.35513 12.3702C5.35514 13.124 5.70406 13.5211 6.40191 14.3154C7.99587 16.1297 9.8618 17.0367 12 17.0367C13.1102 17.0367 14.1466 16.7917 15.1111 16.3024"/></svg>', U = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16.6954 5C17.912 5 18.8468 6.07716 18.6755 7.28165L17.426 16.0659C17.3183 16.8229 16.7885 17.4522 16.061 17.6873L12.6151 18.8012C12.2152 18.9304 11.7848 18.9304 11.3849 18.8012L7.93898 17.6873C7.21148 17.4522 6.6817 16.8229 6.57403 16.0659L5.32454 7.28165C5.15322 6.07716 6.088 5 7.30461 5H16.6954Z"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 8.4H9L9.42857 11.7939H14.5714L14.3571 13.2788L14.1429 14.7636L12 15.4L9.85714 14.7636L9.77143 14.3394"/></svg>', z = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M15.9 8.1V8.11"/><circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="2"/></svg>', V = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M13.34 10C12.4223 12.7337 11 17 11 17"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.21 7H14.2"/></svg>', Y = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.69998 12.6L7.67896 12.62C6.53993 13.7048 6.52012 15.5155 7.63516 16.625V16.625C8.72293 17.7073 10.4799 17.7102 11.5712 16.6314L13.0263 15.193C14.0703 14.1609 14.2141 12.525 13.3662 11.3266L13.22 11.12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16.22 11.12L16.3564 10.9805C17.2895 10.0265 17.3478 8.5207 16.4914 7.49733V7.49733C15.5691 6.39509 13.9269 6.25143 12.8271 7.17675L11.3901 8.38588C10.0935 9.47674 9.95706 11.4241 11.0888 12.6852L11.12 12.72"/></svg>', X = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><line x1="9" x2="9" y1="11.4" y2="15.4" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 8.7V8.71"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 11.4V12M12 15.4V12M12 12C14 11.5 15 11.3611 15 12.5C15 13.5 15 15.4 15 15.4"/></svg>', G = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="9" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 17H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 12H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 7H4.99002"/></svg>', K = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="12" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.79999 14L7.79999 7.2135C7.79999 7.12872 7.7011 7.0824 7.63597 7.13668L4.79999 9.5"/></svg>', Z = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M11.3535 9.31802L12.7678 7.90381C13.5488 7.12276 14.8151 7.12276 15.5962 7.90381C16.3772 8.68486 16.3772 9.95119 15.5962 10.7322L14.182 12.1464M11.3535 9.31802L7.96729 12.7043C7.40889 13.2627 7.02826 13.9739 6.87339 14.7482L6.69798 15.6253C6.55803 16.325 7.17495 16.942 7.87467 16.802L8.75175 16.6266C9.52612 16.4717 10.2373 16.0911 10.7957 15.5327L14.182 12.1464M11.3535 9.31802L14.182 12.1464"/><line x1="15" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>', q = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>', J = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 7.29999H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 7.29999H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.30999 12H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 12H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 16.7H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 16.7H14.59"/></svg>', $2 = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.13968 15.32L8.69058 11.5661C9.02934 11.2036 9.48873 11 9.96774 11C10.4467 11 10.9061 11.2036 11.2449 11.5661L15.3871 16M13.5806 14.0664L15.0132 12.533C15.3519 12.1705 15.8113 11.9668 16.2903 11.9668C16.7693 11.9668 17.2287 12.1705 17.5675 12.533L18.841 13.9634"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.7778 9.33331H13.7867"/></svg>', Q = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 10.5606V13.4394C10 14.4777 11.1572 15.0971 12.0211 14.5211L14.1803 13.0817C14.9536 12.5661 14.9503 11.4317 14.18 10.9181L12.0214 9.47907C11.1591 8.9042 10 9.5203 10 10.5606Z"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', ee = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>', te = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 15.52V15.51"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M10.0024 9.97655C10.1567 9.01858 11 8.5 12 8.5C13 8.5 13.6857 9.17188 13.8693 9.70703C14.0529 10.2422 14.0135 11.0514 13.5067 11.5159C13 11.9805 12.7344 11.832 12.2784 12.3168C12.1134 12.4923 12 12.7476 12 12.7476"/></svg>', ne = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 10.8182L9 10.8182C8.80222 10.8182 8.60888 10.7649 8.44443 10.665C8.27998 10.5651 8.15181 10.4231 8.07612 10.257C8.00043 10.0909 7.98063 9.90808 8.01922 9.73174C8.0578 9.55539 8.15304 9.39341 8.29289 9.26627C8.43275 9.13913 8.61093 9.05255 8.80491 9.01747C8.99889 8.98239 9.19996 9.00039 9.38268 9.0692C9.56541 9.13801 9.72159 9.25453 9.83147 9.40403C9.94135 9.55353 10 9.72929 10 9.90909L10 12.1818C10 12.664 9.78929 13.1265 9.41421 13.4675C9.03914 13.8084 8.53043 14 8 14"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 10.8182L15 10.8182C14.8022 10.8182 14.6089 10.7649 14.4444 10.665C14.28 10.5651 14.1518 10.4231 14.0761 10.257C14.0004 10.0909 13.9806 9.90808 14.0192 9.73174C14.0578 9.55539 14.153 9.39341 14.2929 9.26627C14.4327 9.13913 14.6109 9.05255 14.8049 9.01747C14.9989 8.98239 15.2 9.00039 15.3827 9.0692C15.5654 9.13801 15.7216 9.25453 15.8315 9.40403C15.9414 9.55353 16 9.72929 16 9.90909L16 12.1818C16 12.664 15.7893 13.1265 15.4142 13.4675C15.0391 13.8084 14.5304 14 14 14"/></svg>', oe = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.6667 13.6667L18 10.3333L14.6667 7M18 10.3333H8.83333C7.94928 10.3333 7.10143 10.6845 6.47631 11.3096C5.85119 11.9348 5.5 12.7826 5.5 13.6667C5.5 14.5507 5.85119 15.3986 6.47631 16.0237C7.10143 16.6488 7.94928 17 8.83333 17H9.66667"/></svg>', re = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19V19C9.13623 19 8.20435 19 7.46927 18.6955C6.48915 18.2895 5.71046 17.5108 5.30448 16.5307C5 15.7956 5 14.8638 5 13V12C5 9.19108 5 7.78661 5.67412 6.77772C5.96596 6.34096 6.34096 5.96596 6.77772 5.67412C7.78661 5 9.19108 5 12 5H13.5C14.8956 5 15.5933 5 16.1611 5.17224C17.4395 5.56004 18.44 6.56046 18.8278 7.83886C19 8.40666 19 9.10444 19 10.5V10.5"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19.1187 14.8787L16.9974 17M14.876 19.1213L16.9974 17M19.1187 19.1213L16.9974 17M16.9974 17L14.876 14.8787"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6.5 17.5L17.5 6.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.9919 10.5H19.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.9919 19H11.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13L13 5"/></svg>', ie = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M11.5 17.5L5 11M5 11V15.5M5 11H9.5"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12.5 6.5L19 13M19 13V8.5M19 13H14.5"/></svg>', ae = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M15.078 5.62637L15.6153 4.78296L15.078 5.62637C15.4261 5.84808 15.7393 6.15354 16.5711 6.98528L17.2782 6.27817L16.5711 6.98528L17.5251 7.93934C17.8347 8.2489 17.9496 8.36494 18.0489 8.48177C18.5907 9.11982 18.9188 9.91178 18.9868 10.7461C18.9992 10.8989 19 11.0622 19 11.5V12C19 13.4166 18.9992 14.419 18.9352 15.2026C18.8721 15.9745 18.7527 16.4457 18.564 16.816C18.1805 17.5686 17.5686 18.1805 16.816 18.564C16.4457 18.7527 15.9745 18.8721 15.2026 18.9352C14.419 18.9992 13.4166 19 12 19C10.5834 19 9.58104 18.9992 8.79744 18.9352C8.02552 18.8721 7.55435 18.7527 7.18404 18.564C6.43139 18.1805 5.81947 17.5686 5.43597 16.816C5.24729 16.4457 5.12787 15.9745 5.0648 15.2026C5.00078 14.419 5 13.4166 5 12V11.7782C5 10.4673 5.00067 9.53987 5.05572 8.81299C5.10998 8.09655 5.21284 7.65673 5.37487 7.3093C5.77229 6.45718 6.45718 5.77229 7.3093 5.37487C7.65673 5.21284 8.09655 5.10998 8.81299 5.05572C9.53986 5.00067 10.4673 5 11.7782 5C12.9544 5 13.3919 5.00552 13.7948 5.09484C14.2503 5.19583 14.6846 5.37572 15.078 5.62637Z"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15C13.1046 15 14 14.1046 14 13C14 11.8954 13.1046 11 12 11C10.8954 11 10 11.8954 10 13C10 14.1046 10.8954 15 12 15Z"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5.5V7C14 7.55228 13.5523 8 13 8H11C10.4477 8 10 7.55228 10 7V5.2"/></svg>', se = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="10.5" cy="10.5" r="5.5" stroke="currentColor" stroke-width="2"/><line x1="15.4142" x2="19" y1="15" y2="18.5858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>', le = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M11.8197 6.04369C11.8924 5.8925 12.1076 5.8925 12.1803 6.04369L13.9776 9.78496C14.0068 9.84564 14.0645 9.88759 14.1312 9.89657L18.2448 10.4498C18.411 10.4722 18.4776 10.6769 18.3562 10.7927L15.3535 13.6582C15.3048 13.7047 15.2827 13.7726 15.2948 13.8388L16.0398 17.922C16.0699 18.087 15.8957 18.2136 15.7481 18.1339L12 16.1124L8.25192 18.1339C8.10429 18.2136 7.93012 18.087 7.96022 17.922L8.7052 13.8388C8.71728 13.7726 8.69523 13.7047 8.64652 13.6582L5.64378 10.7927C5.52244 10.6769 5.58896 10.4722 5.7552 10.4498L9.86876 9.89657C9.93549 9.88759 9.99322 9.84564 10.0224 9.78496L11.8197 6.04369Z"/></svg>', ce = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9L20 12L17 15"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 12H20"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9L4 12L7 15"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 12H10"/></svg>', ue = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.5 8.50001C13.5 7 10.935 6.66476 9.75315 7.79706C9.27092 8.25909 9 8.88574 9 9.53915C9 10.1926 9.27092 10.8192 9.75315 11.2812C10.9835 12.46 13.0165 11.5457 14.2468 12.7244C14.7291 13.1865 15 13.8131 15 14.4665C15 15.1199 14.7291 15.7466 14.2468 16.2086C12.8659 17.5317 10 17.5 9 16"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 12H18"/></svg>', fe = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', de = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M14 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><path stroke="currentColor" stroke-width="2" d="M5 14H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', pe = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>', he = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>', ve = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 17C8 14.5 12 12 13 9"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8.5 11C8.5 11 10 14 12.5 15"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7.7H16M11 7.7V5.7"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.5 18L15.2143 16M15.2143 16L16.9159 11.2354C16.9663 11.0942 17.1001 11 17.25 11C17.3999 11 17.5337 11.0942 17.5841 11.2354L19.2857 16M15.2143 16H19.2857M20 18L19.2857 16"/></svg>', ge = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.1328 7.7234C18.423 7.7634 18.7115 7.80571 19 7.85109M18.1328 7.7234L17.2267 17.4023C17.1897 17.8371 16.973 18.2432 16.62 18.5394C16.267 18.8356 15.8037 19.0001 15.3227 19H8.67733C8.19632 19.0001 7.73299 18.8356 7.37998 18.5394C7.02698 18.2432 6.81032 17.8371 6.77333 17.4023L5.86715 7.7234M18.1328 7.7234C17.1536 7.58919 16.1693 7.48733 15.1818 7.41803M5.86715 7.7234C5.57697 7.76263 5.28848 7.80494 5 7.85032M5.86715 7.7234C6.84642 7.58919 7.83074 7.48733 8.81818 7.41803M15.1818 7.41803C13.0638 7.26963 10.9362 7.26963 8.81818 7.41803M15.1818 7.41803C15.1818 5.30368 13.7266 4.34834 12 4.34834C10.2734 4.34834 8.81818 5.43945 8.81818 7.41803"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.5 15.5L10 11"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 11L13.5 15.5"/></svg>', ye = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linejoin="round" stroke-width="2" d="M16.7893 7.87697C17.5 8 18.5 8 18.5 8C18.5 8 17.5 9.5 17.5 10C18.5 18.5 11.5 20.5 5.5 16.5C6.99996 16.6712 8.04617 16.5163 9.25234 15.6024C7.99546 15.58 5.36548 13.6033 5 12.5C6.5 13 8 12 8 12C6.52134 11.0446 4.93005 9.24114 5.97461 7.50832C7.39125 9.18838 9.50766 10.2939 11.8948 10.4097C11.2198 7.60755 14.9218 5.95341 16.7893 7.87697Z"/></svg>', ke = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7.5V11.5C9 12.2956 9.31607 13.0587 9.87868 13.6213C10.4413 14.1839 11.2044 14.5 12 14.5C12.7956 14.5 13.5587 14.1839 14.1213 13.6213C14.6839 13.0587 15 12.2956 15 11.5V7.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7.71429 18H16.2857"/></svg>', be = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.33333 13.6667L6 10.3333L9.33333 7M6 10.3333H15.1667C16.0507 10.3333 16.8986 10.6845 17.5237 11.3096C18.1488 11.9348 18.5 12.7826 18.5 13.6667C18.5 14.5507 18.1488 15.3986 17.5237 16.0237C16.8986 16.6488 16.0507 17 15.1667 17H14.3333"/></svg>', me = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M15.7795 11.5C15.7795 11.5 16.053 11.1962 16.5497 10.6722C17.4442 9.72856 17.4701 8.2475 16.5781 7.30145V7.30145C15.6482 6.31522 14.0873 6.29227 13.1288 7.25073L11.8796 8.49999"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8.24517 12.3883C8.24517 12.3883 7.97171 12.6922 7.47504 13.2161C6.58051 14.1598 6.55467 15.6408 7.44666 16.5869V16.5869C8.37653 17.5731 9.93744 17.5961 10.8959 16.6376L12.1452 15.3883"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17.7802 15.1032L16.597 14.9422C16.0109 14.8624 15.4841 15.3059 15.4627 15.8969L15.4199 17.0818"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6.39064 9.03238L7.58432 9.06668C8.17551 9.08366 8.6522 8.58665 8.61056 7.99669L8.5271 6.81397"/><line x1="12.1142" x2="11.7" y1="12.2" y2="11.7858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>', we = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M12 10C12.7145 10 13.239 9.56559 13.5392 9.11536C13.844 8.65814 14 8.0841 14 7.5C14 6.9159 13.844 6.34186 13.5392 5.88464C13.239 5.43441 12.7145 5 12 5C11.2855 5 10.761 5.43441 10.4608 5.88464C10.156 6.34186 10 6.9159 10 7.5C10 8.0841 10.156 8.65814 10.4608 9.11536C10.761 9.56559 11.2855 10 12 10Z"/><ellipse cx="12" cy="16" stroke="currentColor" stroke-width="2" rx="3" ry="5" transform="rotate(-90 12 16)"/></svg>', xe = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 10C10.7145 10 11.239 9.56559 11.5392 9.11536C11.844 8.65814 12 8.0841 12 7.5C12 6.9159 11.844 6.34186 11.5392 5.88464C11.239 5.43441 10.7145 5 10 5C9.28547 5 8.761 5.43441 8.46084 5.88464C8.15603 6.34186 8 6.9159 8 7.5C8 8.0841 8.15603 8.65814 8.46084 9.11536C8.761 9.56559 9.28547 10 10 10Z"/><ellipse cx="10" cy="16" stroke="currentColor" stroke-width="2" rx="3" ry="5" transform="rotate(-90 10 16)"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M15.5555 10.2222C16.5374 10.2222 17.3333 9.42629 17.3333 8.44445C17.3333 7.46261 16.5374 6.66667 15.5555 6.66667"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17.5 13C21 14.5 20.5 18 18 18.5"/></svg>', Ce = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><line x1="12" x2="12" y1="9" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 15.02V15.01"/></svg>';
        }, function(e, t) {
          var n = {}.toString;
          e.exports = function(e2) {
            return n.call(e2).slice(8, -1);
          };
        }, function(e, t) {
          e.exports = function(e2) {
            if (null == e2)
              throw TypeError("Can't call method on  " + e2);
            return e2;
          };
        }, function(e, t, n) {
          "use strict";
          if (n(17)) {
            var o = n(46), r = n(10), i = n(11), a = n(0), s = n(81), l = n(110), c = n(31), u = n(59), f = n(44), d = n(27), p = n(60), h = n(33), v = n(15), g = n(144), y = n(48), k = n(42), b = n(26), m = n(64), w = n(13), x = n(22), C = n(102), S = n(49), T = n(51), E = n(50).f, B = n(104), M = n(45), _ = n(14), O = n(36), I = n(71), L2 = n(65), P = n(106), j = n(57), R = n(74), A = n(58), N = n(105), D = n(135), F = n(18), H = n(34), W = F.f, U = H.f, z = r.RangeError, V = r.TypeError, Y = r.Uint8Array, X = Array.prototype, G = l.ArrayBuffer, K = l.DataView, Z = O(0), q = O(2), J = O(3), $2 = O(4), Q = O(5), ee = O(6), te = I(true), ne = I(false), oe = P.values, re = P.keys, ie = P.entries, ae = X.lastIndexOf, se = X.reduce, le = X.reduceRight, ce = X.join, ue = X.sort, fe = X.slice, de = X.toString, pe = X.toLocaleString, he = _("iterator"), ve = _("toStringTag"), ge = M("typed_constructor"), ye = M("def_constructor"), ke = s.CONSTR, be = s.TYPED, me = s.VIEW, we = O(1, function(e2, t2) {
              return Ee(L2(e2, e2[ye]), t2);
            }), xe = i(function() {
              return 1 === new Y(new Uint16Array([1]).buffer)[0];
            }), Ce = !!Y && !!Y.prototype.set && i(function() {
              new Y(1).set({});
            }), Se = function(e2, t2) {
              var n2 = h(e2);
              if (n2 < 0 || n2 % t2)
                throw z("Wrong offset!");
              return n2;
            }, Te = function(e2) {
              if (w(e2) && be in e2)
                return e2;
              throw V(e2 + " is not a typed array!");
            }, Ee = function(e2, t2) {
              if (!w(e2) || !(ge in e2))
                throw V("It is not a typed array constructor!");
              return new e2(t2);
            }, Be = function(e2, t2) {
              return Me(L2(e2, e2[ye]), t2);
            }, Me = function(e2, t2) {
              for (var n2 = 0, o2 = t2.length, r2 = Ee(e2, o2); o2 > n2; )
                r2[n2] = t2[n2++];
              return r2;
            }, _e = function(e2, t2, n2) {
              W(e2, t2, { get: function() {
                return this._d[n2];
              } });
            }, Oe = function(e2) {
              var t2, n2, o2, r2, i2, a2, s2 = x(e2), l2 = arguments.length, u2 = l2 > 1 ? arguments[1] : void 0, f2 = void 0 !== u2, d2 = B(s2);
              if (null != d2 && !C(d2)) {
                for (a2 = d2.call(s2), o2 = [], t2 = 0; !(i2 = a2.next()).done; t2++)
                  o2.push(i2.value);
                s2 = o2;
              }
              for (f2 && l2 > 2 && (u2 = c(u2, arguments[2], 2)), t2 = 0, n2 = v(s2.length), r2 = Ee(this, n2); n2 > t2; t2++)
                r2[t2] = f2 ? u2(s2[t2], t2) : s2[t2];
              return r2;
            }, Ie = function() {
              for (var e2 = 0, t2 = arguments.length, n2 = Ee(this, t2); t2 > e2; )
                n2[e2] = arguments[e2++];
              return n2;
            }, Le = !!Y && i(function() {
              pe.call(new Y(1));
            }), Pe = function() {
              return pe.apply(Le ? fe.call(Te(this)) : Te(this), arguments);
            }, je = { copyWithin: function(e2, t2) {
              return D.call(Te(this), e2, t2, arguments.length > 2 ? arguments[2] : void 0);
            }, every: function(e2) {
              return $2(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, fill: function(e2) {
              return N.apply(Te(this), arguments);
            }, filter: function(e2) {
              return Be(this, q(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0));
            }, find: function(e2) {
              return Q(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, findIndex: function(e2) {
              return ee(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, forEach: function(e2) {
              Z(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, indexOf: function(e2) {
              return ne(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, includes: function(e2) {
              return te(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, join: function(e2) {
              return ce.apply(Te(this), arguments);
            }, lastIndexOf: function(e2) {
              return ae.apply(Te(this), arguments);
            }, map: function(e2) {
              return we(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, reduce: function(e2) {
              return se.apply(Te(this), arguments);
            }, reduceRight: function(e2) {
              return le.apply(Te(this), arguments);
            }, reverse: function() {
              for (var e2, t2 = Te(this).length, n2 = Math.floor(t2 / 2), o2 = 0; o2 < n2; )
                e2 = this[o2], this[o2++] = this[--t2], this[t2] = e2;
              return this;
            }, some: function(e2) {
              return J(Te(this), e2, arguments.length > 1 ? arguments[1] : void 0);
            }, sort: function(e2) {
              return ue.call(Te(this), e2);
            }, subarray: function(e2, t2) {
              var n2 = Te(this), o2 = n2.length, r2 = y(e2, o2);
              return new (L2(n2, n2[ye]))(n2.buffer, n2.byteOffset + r2 * n2.BYTES_PER_ELEMENT, v((void 0 === t2 ? o2 : y(t2, o2)) - r2));
            } }, Re = function(e2, t2) {
              return Be(this, fe.call(Te(this), e2, t2));
            }, Ae = function(e2) {
              Te(this);
              var t2 = Se(arguments[1], 1), n2 = this.length, o2 = x(e2), r2 = v(o2.length), i2 = 0;
              if (r2 + t2 > n2)
                throw z("Wrong length!");
              for (; i2 < r2; )
                this[t2 + i2] = o2[i2++];
            }, Ne = { entries: function() {
              return ie.call(Te(this));
            }, keys: function() {
              return re.call(Te(this));
            }, values: function() {
              return oe.call(Te(this));
            } }, De = function(e2, t2) {
              return w(e2) && e2[be] && "symbol" != typeof t2 && t2 in e2 && String(+t2) == String(t2);
            }, Fe = function(e2, t2) {
              return De(e2, t2 = k(t2, true)) ? f(2, e2[t2]) : U(e2, t2);
            }, He = function(e2, t2, n2) {
              return !(De(e2, t2 = k(t2, true)) && w(n2) && b(n2, "value")) || b(n2, "get") || b(n2, "set") || n2.configurable || b(n2, "writable") && !n2.writable || b(n2, "enumerable") && !n2.enumerable ? W(e2, t2, n2) : (e2[t2] = n2.value, e2);
            };
            ke || (H.f = Fe, F.f = He), a(a.S + a.F * !ke, "Object", { getOwnPropertyDescriptor: Fe, defineProperty: He }), i(function() {
              de.call({});
            }) && (de = pe = function() {
              return ce.call(this);
            });
            var We = p({}, je);
            p(We, Ne), d(We, he, Ne.values), p(We, { slice: Re, set: Ae, constructor: function() {
            }, toString: de, toLocaleString: Pe }), _e(We, "buffer", "b"), _e(We, "byteOffset", "o"), _e(We, "byteLength", "l"), _e(We, "length", "e"), W(We, ve, { get: function() {
              return this[be];
            } }), e.exports = function(e2, t2, n2, l2) {
              var c2 = e2 + ((l2 = !!l2) ? "Clamped" : "") + "Array", f2 = "get" + e2, p2 = "set" + e2, h2 = r[c2], y2 = h2 || {}, k2 = h2 && T(h2), b2 = !h2 || !s.ABV, x2 = {}, C2 = h2 && h2.prototype, B2 = function(e3, n3) {
                W(e3, n3, { get: function() {
                  return function(e4, n4) {
                    var o2 = e4._d;
                    return o2.v[f2](n4 * t2 + o2.o, xe);
                  }(this, n3);
                }, set: function(e4) {
                  return function(e5, n4, o2) {
                    var r2 = e5._d;
                    l2 && (o2 = (o2 = Math.round(o2)) < 0 ? 0 : o2 > 255 ? 255 : 255 & o2), r2.v[p2](n4 * t2 + r2.o, o2, xe);
                  }(this, n3, e4);
                }, enumerable: true });
              };
              b2 ? (h2 = n2(function(e3, n3, o2, r2) {
                u(e3, h2, c2, "_d");
                var i2, a2, s2, l3, f3 = 0, p3 = 0;
                if (w(n3)) {
                  if (!(n3 instanceof G || "ArrayBuffer" == (l3 = m(n3)) || "SharedArrayBuffer" == l3))
                    return be in n3 ? Me(h2, n3) : Oe.call(h2, n3);
                  i2 = n3, p3 = Se(o2, t2);
                  var y3 = n3.byteLength;
                  if (void 0 === r2) {
                    if (y3 % t2)
                      throw z("Wrong length!");
                    if ((a2 = y3 - p3) < 0)
                      throw z("Wrong length!");
                  } else if ((a2 = v(r2) * t2) + p3 > y3)
                    throw z("Wrong length!");
                  s2 = a2 / t2;
                } else
                  s2 = g(n3), i2 = new G(a2 = s2 * t2);
                for (d(e3, "_d", { b: i2, o: p3, l: a2, e: s2, v: new K(i2) }); f3 < s2; )
                  B2(e3, f3++);
              }), C2 = h2.prototype = S(We), d(C2, "constructor", h2)) : i(function() {
                h2(1);
              }) && i(function() {
                new h2(-1);
              }) && R(function(e3) {
                new h2(), new h2(null), new h2(1.5), new h2(e3);
              }, true) || (h2 = n2(function(e3, n3, o2, r2) {
                var i2;
                return u(e3, h2, c2), w(n3) ? n3 instanceof G || "ArrayBuffer" == (i2 = m(n3)) || "SharedArrayBuffer" == i2 ? void 0 !== r2 ? new y2(n3, Se(o2, t2), r2) : void 0 !== o2 ? new y2(n3, Se(o2, t2)) : new y2(n3) : be in n3 ? Me(h2, n3) : Oe.call(h2, n3) : new y2(g(n3));
              }), Z(k2 !== Function.prototype ? E(y2).concat(E(k2)) : E(y2), function(e3) {
                e3 in h2 || d(h2, e3, y2[e3]);
              }), h2.prototype = C2, o || (C2.constructor = h2));
              var M2 = C2[he], _2 = !!M2 && ("values" == M2.name || null == M2.name), O2 = Ne.values;
              d(h2, ge, true), d(C2, be, c2), d(C2, me, true), d(C2, ye, h2), (l2 ? new h2(1)[ve] == c2 : ve in C2) || W(C2, ve, { get: function() {
                return c2;
              } }), x2[c2] = h2, a(a.G + a.W + a.F * (h2 != y2), x2), a(a.S, c2, { BYTES_PER_ELEMENT: t2 }), a(a.S + a.F * i(function() {
                y2.of.call(h2, 1);
              }), c2, { from: Oe, of: Ie }), "BYTES_PER_ELEMENT" in C2 || d(C2, "BYTES_PER_ELEMENT", t2), a(a.P, c2, je), A(c2), a(a.P + a.F * Ce, c2, { set: Ae }), a(a.P + a.F * !_2, c2, Ne), o || C2.toString == de || (C2.toString = de), a(a.P + a.F * i(function() {
                new h2(1).slice();
              }), c2, { slice: Re }), a(a.P + a.F * (i(function() {
                return [1, 2].toLocaleString() != new h2([1, 2]).toLocaleString();
              }) || !i(function() {
                C2.toLocaleString.call([1, 2]);
              })), c2, { toLocaleString: Pe }), j[c2] = _2 ? M2 : O2, o || _2 || d(C2, he, O2);
            };
          } else
            e.exports = function() {
            };
        }, function(e, t, n) {
          var o = n(369), r = n(370), i = n(148), a = n(371);
          e.exports = function(e2) {
            return o(e2) || r(e2) || i(e2) || a();
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(13);
          e.exports = function(e2, t2) {
            if (!o(e2))
              return e2;
            var n2, r;
            if (t2 && "function" == typeof (n2 = e2.toString) && !o(r = n2.call(e2)))
              return r;
            if ("function" == typeof (n2 = e2.valueOf) && !o(r = n2.call(e2)))
              return r;
            if (!t2 && "function" == typeof (n2 = e2.toString) && !o(r = n2.call(e2)))
              return r;
            throw TypeError("Can't convert object to primitive value");
          };
        }, function(e, t, n) {
          var o = n(45)("meta"), r = n(13), i = n(26), a = n(18).f, s = 0, l = Object.isExtensible || function() {
            return true;
          }, c = !n(11)(function() {
            return l(Object.preventExtensions({}));
          }), u = function(e2) {
            a(e2, o, { value: { i: "O" + ++s, w: {} } });
          }, f = e.exports = { KEY: o, NEED: false, fastKey: function(e2, t2) {
            if (!r(e2))
              return "symbol" == typeof e2 ? e2 : ("string" == typeof e2 ? "S" : "P") + e2;
            if (!i(e2, o)) {
              if (!l(e2))
                return "F";
              if (!t2)
                return "E";
              u(e2);
            }
            return e2[o].i;
          }, getWeak: function(e2, t2) {
            if (!i(e2, o)) {
              if (!l(e2))
                return true;
              if (!t2)
                return false;
              u(e2);
            }
            return e2[o].w;
          }, onFreeze: function(e2) {
            return c && f.NEED && l(e2) && !i(e2, o) && u(e2), e2;
          } };
        }, function(e, t) {
          e.exports = function(e2, t2) {
            return { enumerable: !(1 & e2), configurable: !(2 & e2), writable: !(4 & e2), value: t2 };
          };
        }, function(e, t) {
          var n = 0, o = Math.random();
          e.exports = function(e2) {
            return "Symbol(".concat(void 0 === e2 ? "" : e2, ")_", (++n + o).toString(36));
          };
        }, function(e, t) {
          e.exports = false;
        }, function(e, t, n) {
          var o = n(119), r = n(89);
          e.exports = Object.keys || function(e2) {
            return o(e2, r);
          };
        }, function(e, t, n) {
          var o = n(33), r = Math.max, i = Math.min;
          e.exports = function(e2, t2) {
            return (e2 = o(e2)) < 0 ? r(e2 + t2, 0) : i(e2, t2);
          };
        }, function(e, t, n) {
          var o = n(12), r = n(120), i = n(89), a = n(88)("IE_PROTO"), s = function() {
          }, l = function() {
            var e2, t2 = n(86)("iframe"), o2 = i.length;
            for (t2.style.display = "none", n(90).appendChild(t2), t2.src = "javascript:", (e2 = t2.contentWindow.document).open(), e2.write("<script>document.F=Object<\/script>"), e2.close(), l = e2.F; o2--; )
              delete l.prototype[i[o2]];
            return l();
          };
          e.exports = Object.create || function(e2, t2) {
            var n2;
            return null !== e2 ? (s.prototype = o(e2), n2 = new s(), s.prototype = null, n2[a] = e2) : n2 = l(), void 0 === t2 ? n2 : r(n2, t2);
          };
        }, function(e, t, n) {
          var o = n(119), r = n(89).concat("length", "prototype");
          t.f = Object.getOwnPropertyNames || function(e2) {
            return o(e2, r);
          };
        }, function(e, t, n) {
          var o = n(26), r = n(22), i = n(88)("IE_PROTO"), a = Object.prototype;
          e.exports = Object.getPrototypeOf || function(e2) {
            return e2 = r(e2), o(e2, i) ? e2[i] : "function" == typeof e2.constructor && e2 instanceof e2.constructor ? e2.constructor.prototype : e2 instanceof Object ? a : null;
          };
        }, function(e, t, n) {
          var o = n(14)("unscopables"), r = Array.prototype;
          null == r[o] && n(27)(r, o, {}), e.exports = function(e2) {
            r[o][e2] = true;
          };
        }, function(e, t, n) {
          var o = n(13);
          e.exports = function(e2, t2) {
            if (!o(e2) || e2._t !== t2)
              throw TypeError("Incompatible receiver, " + t2 + " required!");
            return e2;
          };
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(150)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2), a = s(a);
            var l = function() {
              function e2() {
                (0, r2.default)(this, e2);
              }
              return (0, i2.default)(e2, null, [{ key: "ui", value: function(t2, n2) {
                return e2._t(t2, n2);
              } }, { key: "t", value: function(t2, n2) {
                return e2._t(t2, n2);
              } }, { key: "setDictionary", value: function(t2) {
                e2.currentDictionary = t2;
              } }, { key: "_t", value: function(t2, n2) {
                var o3 = e2.getNamespace(t2);
                return o3 && o3[n2] ? o3[n2] : n2;
              } }, { key: "getNamespace", value: function(t2) {
                return t2.split(".").reduce(function(e3, t3) {
                  return e3 && Object.keys(e3).length ? e3[t3] : {};
                }, e2.currentDictionary);
              } }]), e2;
            }();
            o2.default = l, l.displayName = "I18n", l.currentDictionary = a.default, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o = n(18).f, r = n(26), i = n(14)("toStringTag");
          e.exports = function(e2, t2, n2) {
            e2 && !r(e2 = n2 ? e2 : e2.prototype, i) && o(e2, i, { configurable: true, value: t2 });
          };
        }, function(e, t, n) {
          var o = n(0), r = n(39), i = n(11), a = n(92), s = "[" + a + "]", l = RegExp("^" + s + s + "*"), c = RegExp(s + s + "*$"), u = function(e2, t2, n2) {
            var r2 = {}, s2 = i(function() {
              return !!a[e2]() || "\u200B\x85" != "\u200B\x85"[e2]();
            }), l2 = r2[e2] = s2 ? t2(f) : a[e2];
            n2 && (r2[n2] = l2), o(o.P + o.F * s2, "String", r2);
          }, f = u.trim = function(e2, t2) {
            return e2 = String(r(e2)), 1 & t2 && (e2 = e2.replace(l, "")), 2 & t2 && (e2 = e2.replace(c, "")), e2;
          };
          e.exports = u;
        }, function(e, t) {
          e.exports = {};
        }, function(e, t, n) {
          "use strict";
          var o = n(10), r = n(18), i = n(17), a = n(14)("species");
          e.exports = function(e2) {
            var t2 = o[e2];
            i && t2 && !t2[a] && r.f(t2, a, { configurable: true, get: function() {
              return this;
            } });
          };
        }, function(e, t) {
          e.exports = function(e2, t2, n, o) {
            if (!(e2 instanceof t2) || void 0 !== o && o in e2)
              throw TypeError(n + ": incorrect invocation!");
            return e2;
          };
        }, function(e, t, n) {
          var o = n(23);
          e.exports = function(e2, t2, n2) {
            for (var r in t2)
              o(e2, r, t2[r], n2);
            return e2;
          };
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(30), n(21), n(41), n(2), n(3), n(152), n(114), n(5), n(6), n(4), n(19), n(8), n(113), n(25), n(82)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y, k) {
            "use strict";
            var b, m = n(1);
            function w(e3) {
              if ("function" != typeof WeakMap)
                return null;
              var t3 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (w = function(e4) {
                return e4 ? n2 : t3;
              })(e3);
            }
            function x(e3) {
              var t3 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e4) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, p.default)(e3);
                if (t3) {
                  var r3 = (0, p.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, d.default)(this, n2);
              };
            }
            Object.defineProperty(e2, "__esModule", { value: true }), e2.default = e2.BlockToolAPI = void 0, t2 = m(t2), o2 = m(o2), r2 = m(r2), i2 = m(i2), s = m(s), l = m(l), c = m(c), u = m(u), f = m(f), d = m(d), p = m(p), h = m(h), v = function(e3, t3) {
              if (!t3 && e3 && e3.__esModule)
                return e3;
              if (null === e3 || "object" !== a(e3) && "function" != typeof e3)
                return { default: e3 };
              var n2 = w(t3);
              if (n2 && n2.has(e3))
                return n2.get(e3);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e3)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e3, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e3, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e3[i3];
                }
              return o3.default = e3, n2 && n2.set(e3, o3), o3;
            }(v), g = m(g), y = m(y), k = m(k), e2.BlockToolAPI = b, function(e3) {
              e3.APPEND_CALLBACK = "appendCallback", e3.RENDERED = "rendered", e3.MOVED = "moved", e3.UPDATED = "updated", e3.REMOVED = "removed", e3.ON_PASTE = "onPaste";
            }(b || (e2.BlockToolAPI = b = {}));
            var C = function(e3) {
              (0, f.default)(w2, e3);
              var n2, a2, d2, k2, m2 = x(w2);
              function w2(e4) {
                var t3, n3 = e4.id, o3 = void 0 === n3 ? v.generateBlockId() : n3, r3 = e4.data, a3 = e4.tool, l2 = e4.api, u2 = e4.readOnly, f2 = e4.tunesData;
                return (0, s.default)(this, w2), (t3 = m2.call(this)).cachedInputs = [], t3.tunesInstances = /* @__PURE__ */ new Map(), t3.defaultTunesInstances = /* @__PURE__ */ new Map(), t3.unavailableTunesData = {}, t3.inputIndex = 0, t3.modificationDebounceTimer = 450, t3.didMutated = v.debounce(function() {
                  var e5 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], n4 = e5 instanceof InputEvent || !e5.some(function(e6) {
                    var t4 = e6.addedNodes, n5 = void 0 === t4 ? [] : t4, o4 = e6.removedNodes;
                    return [].concat((0, i2.default)(Array.from(n5)), (0, i2.default)(Array.from(o4))).some(function(e7) {
                      return h.default.isElement(e7) && "true" === e7.dataset.mutationFree;
                    });
                  });
                  n4 && (t3.cachedInputs = [], t3.updateCurrentInput(), t3.call(b.UPDATED), t3.emit("didMutated", (0, c.default)(t3)));
                }, t3.modificationDebounceTimer), t3.handleFocus = function() {
                  t3.cachedInputs = [], t3.updateCurrentInput();
                }, t3.name = a3.name, t3.id = o3, t3.settings = a3.settings, t3.config = a3.settings.config || {}, t3.api = l2, t3.blockAPI = new g.default((0, c.default)(t3)), t3.mutationObserver = new MutationObserver(t3.didMutated), t3.tool = a3, t3.toolInstance = a3.create(r3, t3.blockAPI, u2), t3.tunes = a3.tunes, t3.composeTunes(f2), t3.holder = t3.compose(), t3;
              }
              return (0, l.default)(w2, [{ key: "inputs", get: function() {
                if (0 !== this.cachedInputs.length)
                  return this.cachedInputs;
                var e4 = h.default.findAllInputs(this.holder);
                return this.inputIndex > e4.length - 1 && (this.inputIndex = e4.length - 1), this.cachedInputs = e4, e4;
              } }, { key: "currentInput", get: function() {
                return this.inputs[this.inputIndex];
              }, set: function(e4) {
                var t3 = this.inputs.findIndex(function(t4) {
                  return t4 === e4 || t4.contains(e4);
                });
                -1 !== t3 && (this.inputIndex = t3);
              } }, { key: "firstInput", get: function() {
                return this.inputs[0];
              } }, { key: "lastInput", get: function() {
                var e4 = this.inputs;
                return e4[e4.length - 1];
              } }, { key: "nextInput", get: function() {
                return this.inputs[this.inputIndex + 1];
              } }, { key: "previousInput", get: function() {
                return this.inputs[this.inputIndex - 1];
              } }, { key: "data", get: function() {
                return this.save().then(function(e4) {
                  return e4 && !v.isEmpty(e4.data) ? e4.data : {};
                });
              } }, { key: "sanitize", get: function() {
                return this.tool.sanitizeConfig;
              } }, { key: "mergeable", get: function() {
                return v.isFunction(this.toolInstance.merge);
              } }, { key: "isEmpty", get: function() {
                var e4 = h.default.isEmpty(this.pluginsContent), t3 = !this.hasMedia;
                return e4 && t3;
              } }, { key: "hasMedia", get: function() {
                return !!this.holder.querySelector(["img", "iframe", "video", "audio", "source", "input", "textarea", "twitterwidget"].join(","));
              } }, { key: "focused", get: function() {
                return this.holder.classList.contains(w2.CSS.focused);
              }, set: function(e4) {
                this.holder.classList.toggle(w2.CSS.focused, e4);
              } }, { key: "selected", get: function() {
                return this.holder.classList.contains(w2.CSS.selected);
              }, set: function(e4) {
                e4 ? (this.holder.classList.add(w2.CSS.selected), y.default.addFakeCursor(this.holder)) : (this.holder.classList.remove(w2.CSS.selected), y.default.removeFakeCursor(this.holder));
              } }, { key: "stretched", get: function() {
                return this.holder.classList.contains(w2.CSS.wrapperStretched);
              }, set: function(e4) {
                this.holder.classList.toggle(w2.CSS.wrapperStretched, e4);
              } }, { key: "dropTarget", set: function(e4) {
                this.holder.classList.toggle(w2.CSS.dropTarget, e4);
              } }, { key: "pluginsContent", get: function() {
                var e4 = this.holder.querySelector(".".concat(w2.CSS.content));
                if (e4 && e4.childNodes.length)
                  for (var t3 = e4.childNodes.length - 1; t3 >= 0; t3--) {
                    var n3 = e4.childNodes[t3];
                    if (!h.default.isExtensionNode(n3))
                      return n3;
                  }
                return null;
              } }, { key: "call", value: function(e4, t3) {
                if (v.isFunction(this.toolInstance[e4])) {
                  e4 === b.APPEND_CALLBACK && v.log("`appendCallback` hook is deprecated and will be removed in the next major release. Use `rendered` hook instead", "warn");
                  try {
                    this.toolInstance[e4].call(this.toolInstance, t3);
                  } catch (t4) {
                    v.log("Error during '".concat(e4, "' call: ").concat(t4.message), "error");
                  }
                }
              } }, { key: "mergeWith", value: (k2 = (0, r2.default)(t2.default.mark(function e4(n3) {
                return t2.default.wrap(function(e5) {
                  for (; ; )
                    switch (e5.prev = e5.next) {
                      case 0:
                        return e5.next = 2, this.toolInstance.merge(n3);
                      case 2:
                      case "end":
                        return e5.stop();
                    }
                }, e4, this);
              })), function(e4) {
                return k2.apply(this, arguments);
              }) }, { key: "save", value: (d2 = (0, r2.default)(t2.default.mark(function e4() {
                var n3, r3, a3, s2, l2 = this;
                return t2.default.wrap(function(e5) {
                  for (; ; )
                    switch (e5.prev = e5.next) {
                      case 0:
                        return e5.next = 2, this.toolInstance.save(this.pluginsContent);
                      case 2:
                        return n3 = e5.sent, r3 = this.unavailableTunesData, [].concat((0, i2.default)(this.tunesInstances.entries()), (0, i2.default)(this.defaultTunesInstances.entries())).forEach(function(e6) {
                          var t3 = (0, o2.default)(e6, 2), n4 = t3[0], i3 = t3[1];
                          if (v.isFunction(i3.save))
                            try {
                              r3[n4] = i3.save();
                            } catch (e7) {
                              v.log("Tune ".concat(i3.constructor.name, " save method throws an Error %o"), "warn", e7);
                            }
                        }), a3 = window.performance.now(), e5.abrupt("return", Promise.resolve(n3).then(function(e6) {
                          return s2 = window.performance.now(), { id: l2.id, tool: l2.name, data: e6, tunes: r3, time: s2 - a3 };
                        }).catch(function(e6) {
                          v.log("Saving process for ".concat(l2.name, " tool failed due to the ").concat(e6), "log", "red");
                        }));
                      case 7:
                      case "end":
                        return e5.stop();
                    }
                }, e4, this);
              })), function() {
                return d2.apply(this, arguments);
              }) }, { key: "validate", value: (a2 = (0, r2.default)(t2.default.mark(function e4(n3) {
                var o3;
                return t2.default.wrap(function(e5) {
                  for (; ; )
                    switch (e5.prev = e5.next) {
                      case 0:
                        if (o3 = true, !(this.toolInstance.validate instanceof Function)) {
                          e5.next = 5;
                          break;
                        }
                        return e5.next = 4, this.toolInstance.validate(n3);
                      case 4:
                        o3 = e5.sent;
                      case 5:
                        return e5.abrupt("return", o3);
                      case 6:
                      case "end":
                        return e5.stop();
                    }
                }, e4, this);
              })), function(e4) {
                return a2.apply(this, arguments);
              }) }, { key: "getTunes", value: function() {
                var e4 = document.createElement("div"), t3 = [];
                return ["function" == typeof this.toolInstance.renderSettings ? this.toolInstance.renderSettings() : [], [].concat((0, i2.default)(this.tunesInstances.values()), (0, i2.default)(this.defaultTunesInstances.values())).map(function(e5) {
                  return e5.render();
                })].flat().forEach(function(n3) {
                  h.default.isElement(n3) ? e4.appendChild(n3) : Array.isArray(n3) ? t3.push.apply(t3, (0, i2.default)(n3)) : t3.push(n3);
                }), [t3, e4];
              } }, { key: "updateCurrentInput", value: function() {
                this.currentInput = h.default.isNativeInput(document.activeElement) || !y.default.anchorNode ? document.activeElement : y.default.anchorNode;
              } }, { key: "willSelect", value: function() {
                this.mutationObserver.observe(this.holder.firstElementChild, { childList: true, subtree: true, characterData: true, attributes: true }), this.addInputEvents();
              } }, { key: "willUnselect", value: function() {
                this.mutationObserver.disconnect(), this.removeInputEvents();
              } }, { key: "dispatchChange", value: function() {
                this.didMutated();
              } }, { key: "destroy", value: function() {
                (0, u.default)((0, p.default)(w2.prototype), "destroy", this).call(this), v.isFunction(this.toolInstance.destroy) && this.toolInstance.destroy();
              } }, { key: "getActiveToolboxEntry", value: (n2 = (0, r2.default)(t2.default.mark(function e4() {
                var n3, r3, i3;
                return t2.default.wrap(function(e5) {
                  for (; ; )
                    switch (e5.prev = e5.next) {
                      case 0:
                        if (1 !== (n3 = this.tool.toolbox).length) {
                          e5.next = 3;
                          break;
                        }
                        return e5.abrupt("return", Promise.resolve(this.tool.toolbox[0]));
                      case 3:
                        return e5.next = 5, this.data;
                      case 5:
                        return r3 = e5.sent, i3 = n3, e5.abrupt("return", i3.find(function(e6) {
                          return Object.entries(e6.data).some(function(e7) {
                            var t3 = (0, o2.default)(e7, 2), n4 = t3[0], i4 = t3[1];
                            return r3[n4] && v.equals(r3[n4], i4);
                          });
                        }));
                      case 8:
                      case "end":
                        return e5.stop();
                    }
                }, e4, this);
              })), function() {
                return n2.apply(this, arguments);
              }) }, { key: "compose", value: function() {
                var e4 = h.default.make("div", w2.CSS.wrapper), t3 = h.default.make("div", w2.CSS.content), n3 = this.toolInstance.render();
                t3.appendChild(n3);
                var o3 = t3;
                return [].concat((0, i2.default)(this.tunesInstances.values()), (0, i2.default)(this.defaultTunesInstances.values())).forEach(function(e5) {
                  if (v.isFunction(e5.wrap))
                    try {
                      o3 = e5.wrap(o3);
                    } catch (t4) {
                      v.log("Tune ".concat(e5.constructor.name, " wrap method throws an Error %o"), "warn", t4);
                    }
                }), e4.appendChild(o3), e4;
              } }, { key: "composeTunes", value: function(e4) {
                var t3 = this;
                Array.from(this.tunes.values()).forEach(function(n3) {
                  (n3.isInternal ? t3.defaultTunesInstances : t3.tunesInstances).set(n3.name, n3.create(e4[n3.name], t3.blockAPI));
                }), Object.entries(e4).forEach(function(e5) {
                  var n3 = (0, o2.default)(e5, 2), r3 = n3[0], i3 = n3[1];
                  t3.tunesInstances.has(r3) || (t3.unavailableTunesData[r3] = i3);
                });
              } }, { key: "addInputEvents", value: function() {
                var e4 = this;
                this.inputs.forEach(function(t3) {
                  t3.addEventListener("focus", e4.handleFocus), h.default.isNativeInput(t3) && t3.addEventListener("input", e4.didMutated);
                });
              } }, { key: "removeInputEvents", value: function() {
                var e4 = this;
                this.inputs.forEach(function(t3) {
                  t3.removeEventListener("focus", e4.handleFocus), h.default.isNativeInput(t3) && t3.removeEventListener("input", e4.didMutated);
                });
              } }], [{ key: "CSS", get: function() {
                return { wrapper: "ce-block", wrapperStretched: "ce-block--stretched", content: "ce-block__content", focused: "ce-block--focused", selected: "ce-block--selected", dropTarget: "ce-block--drop-target" };
              } }]), w2;
            }(k.default);
            e2.default = C, C.displayName = "Block";
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o = n(38);
          e.exports = Object("z").propertyIsEnumerable(0) ? Object : function(e2) {
            return "String" == o(e2) ? e2.split("") : Object(e2);
          };
        }, function(e, t) {
          t.f = {}.propertyIsEnumerable;
        }, function(e, t, n) {
          var o = n(38), r = n(14)("toStringTag"), i = "Arguments" == o(function() {
            return arguments;
          }());
          e.exports = function(e2) {
            var t2, n2, a;
            return void 0 === e2 ? "Undefined" : null === e2 ? "Null" : "string" == typeof (n2 = function(e3, t3) {
              try {
                return e3[t3];
              } catch (e4) {
              }
            }(t2 = Object(e2), r)) ? n2 : i ? o(t2) : "Object" == (a = o(t2)) && "function" == typeof t2.callee ? "Arguments" : a;
          };
        }, function(e, t, n) {
          var o = n(12), r = n(32), i = n(14)("species");
          e.exports = function(e2, t2) {
            var n2, a = o(e2).constructor;
            return void 0 === a || null == (n2 = o(a)[i]) ? t2 : r(n2);
          };
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(8), n(380)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2) {
            "use strict";
            var r2 = n(1);
            function i2(e3) {
              if ("function" != typeof WeakMap)
                return null;
              var t3 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (i2 = function(e4) {
                return e4 ? n2 : t3;
              })(e3);
            }
            function s(e3) {
              var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n2 = { tags: t3 }, r3 = new o2.default(n2);
              return r3.clean(e3);
            }
            function l(e3, n2) {
              return Array.isArray(e3) ? (i3 = n2, e3.map(function(e4) {
                return l(e4, i3);
              })) : t2.isObject(e3) ? function(e4, n3) {
                var o4, r4 = {};
                for (var i4 in e4)
                  if (Object.prototype.hasOwnProperty.call(e4, i4)) {
                    var a2 = e4[i4], s2 = (o4 = n3[i4], t2.isObject(o4) || t2.isBoolean(o4) || t2.isFunction(o4) ? n3[i4] : n3);
                    r4[i4] = l(a2, s2);
                  }
                return r4;
              }(e3, n2) : t2.isString(e3) ? (o3 = e3, r3 = n2, t2.isObject(r3) ? s(o3, r3) : false === r3 ? s(o3, {}) : o3) : e3;
              var o3, r3, i3;
            }
            Object.defineProperty(e2, "__esModule", { value: true }), e2.clean = s, e2.sanitizeBlocks = function(e3, n2) {
              return e3.map(function(e4) {
                var o3 = t2.isFunction(n2) ? n2(e4.tool) : n2;
                return t2.isEmpty(o3) || (e4.data = l(e4.data, o3)), e4;
              });
            }, t2 = function(e3, t3) {
              if (!t3 && e3 && e3.__esModule)
                return e3;
              if (null === e3 || "object" !== a(e3) && "function" != typeof e3)
                return { default: e3 };
              var n2 = i2(t3);
              if (n2 && n2.has(e3))
                return n2.get(e3);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var s2 in e3)
                if ("default" !== s2 && Object.prototype.hasOwnProperty.call(e3, s2)) {
                  var l2 = r3 ? Object.getOwnPropertyDescriptor(e3, s2) : null;
                  l2 && (l2.get || l2.set) ? Object.defineProperty(o3, s2, l2) : o3[s2] = e3[s2];
                }
              return o3.default = e3, n2 && n2.set(e3, o3), o3;
            }(t2), o2 = r2(o2);
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(382), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l) {
            "use strict";
            var c = n(1);
            function u(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (u = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = c(r2), i2 = c(i2), s = c(s), l = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = u(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(l);
            var f = function() {
              function e2(t2) {
                var n2 = this;
                (0, r2.default)(this, e2), this.iterator = null, this.activated = false, this.flipCallbacks = [], this.onKeyDown = function(t3) {
                  if (n2.isEventReadyForHandling(t3))
                    switch (e2.usedKeys.includes(t3.keyCode) && t3.preventDefault(), t3.keyCode) {
                      case l.keyCodes.TAB:
                        n2.handleTabPress(t3);
                        break;
                      case l.keyCodes.LEFT:
                      case l.keyCodes.UP:
                        n2.flipLeft();
                        break;
                      case l.keyCodes.RIGHT:
                      case l.keyCodes.DOWN:
                        n2.flipRight();
                        break;
                      case l.keyCodes.ENTER:
                        n2.handleEnterPress(t3);
                    }
                }, this.iterator = new s.default(t2.items, t2.focusedItemClass), this.activateCallback = t2.activateCallback, this.allowedKeys = t2.allowedKeys || e2.usedKeys;
              }
              return (0, i2.default)(e2, [{ key: "isActivated", get: function() {
                return this.activated;
              } }, { key: "activate", value: function(e3, t2) {
                this.activated = true, e3 && this.iterator.setItems(e3), void 0 !== t2 && this.iterator.setCursor(t2), document.addEventListener("keydown", this.onKeyDown, true);
              } }, { key: "deactivate", value: function() {
                this.activated = false, this.dropCursor(), document.removeEventListener("keydown", this.onKeyDown);
              } }, { key: "focusFirst", value: function() {
                this.dropCursor(), this.flipRight();
              } }, { key: "flipLeft", value: function() {
                this.iterator.previous(), this.flipCallback();
              } }, { key: "flipRight", value: function() {
                this.iterator.next(), this.flipCallback();
              } }, { key: "hasFocus", value: function() {
                return !!this.iterator.currentItem;
              } }, { key: "onFlip", value: function(e3) {
                this.flipCallbacks.push(e3);
              } }, { key: "removeOnFlip", value: function(e3) {
                this.flipCallbacks = this.flipCallbacks.filter(function(t2) {
                  return t2 !== e3;
                });
              } }, { key: "dropCursor", value: function() {
                this.iterator.dropCursor();
              } }, { key: "isEventReadyForHandling", value: function(e3) {
                return this.activated && this.allowedKeys.includes(e3.keyCode);
              } }, { key: "handleTabPress", value: function(e3) {
                switch (e3.shiftKey ? s.default.directions.LEFT : s.default.directions.RIGHT) {
                  case s.default.directions.RIGHT:
                    this.flipRight();
                    break;
                  case s.default.directions.LEFT:
                    this.flipLeft();
                }
              } }, { key: "handleEnterPress", value: function(e3) {
                this.activated && (this.iterator.currentItem && (e3.stopPropagation(), e3.preventDefault(), this.iterator.currentItem.click()), l.isFunction(this.activateCallback) && this.activateCallback(this.iterator.currentItem));
              } }, { key: "flipCallback", value: function() {
                this.iterator.currentItem && this.iterator.currentItem.scrollIntoViewIfNeeded(), this.flipCallbacks.forEach(function(e3) {
                  return e3();
                });
              } }], [{ key: "usedKeys", get: function() {
                return [l.keyCodes.TAB, l.keyCodes.LEFT, l.keyCodes.RIGHT, l.keyCodes.ENTER, l.keyCodes.UP, l.keyCodes.DOWN];
              } }]), e2;
            }();
            o2.default = f, f.displayName = "Flipper", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(30), n(150), n(8)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2, r2) {
            "use strict";
            var i2 = n(1);
            Object.defineProperty(e2, "__esModule", { value: true }), e2.I18nInternalNS = void 0, t2 = i2(t2);
            var a = function e3(n2, o3) {
              var i3 = {};
              return Object.entries(n2).forEach(function(n3) {
                var a2 = (0, t2.default)(n3, 2), s = a2[0], l = a2[1];
                if ((0, r2.isObject)(l)) {
                  var c = o3 ? "".concat(o3, ".").concat(s) : s, u = Object.values(l).every(function(e4) {
                    return (0, r2.isString)(e4);
                  });
                  i3[s] = u ? c : e3(l, c);
                } else
                  i3[s] = l;
              }), i3;
            }((o2 = i2(o2)).default);
            e2.I18nInternalNS = a;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(8)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2, r2) {
            "use strict";
            var i2, s, l, c, u, f, d = n(1);
            function p(e3) {
              if ("function" != typeof WeakMap)
                return null;
              var t3 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (p = function(e4) {
                return e4 ? n2 : t3;
              })(e3);
            }
            Object.defineProperty(e2, "__esModule", { value: true }), e2.default = e2.UserSettings = e2.ToolType = e2.InternalTuneSettings = e2.InternalInlineToolSettings = e2.InternalBlockToolSettings = e2.CommonInternalSettings = void 0, t2 = d(t2), o2 = d(o2), r2 = function(e3, t3) {
              if (!t3 && e3 && e3.__esModule)
                return e3;
              if (null === e3 || "object" !== a(e3) && "function" != typeof e3)
                return { default: e3 };
              var n2 = p(t3);
              if (n2 && n2.has(e3))
                return n2.get(e3);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e3)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e3, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e3, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e3[i3];
                }
              return o3.default = e3, n2 && n2.set(e3, o3), o3;
            }(r2), e2.ToolType = i2, function(e3) {
              e3[e3.Block = 0] = "Block", e3[e3.Inline = 1] = "Inline", e3[e3.Tune = 2] = "Tune";
            }(i2 || (e2.ToolType = i2 = {})), e2.UserSettings = s, function(e3) {
              e3.Shortcut = "shortcut", e3.Toolbox = "toolbox", e3.EnabledInlineTools = "inlineToolbar", e3.EnabledBlockTunes = "tunes", e3.Config = "config";
            }(s || (e2.UserSettings = s = {})), e2.CommonInternalSettings = l, function(e3) {
              e3.Shortcut = "shortcut", e3.SanitizeConfig = "sanitize";
            }(l || (e2.CommonInternalSettings = l = {})), e2.InternalBlockToolSettings = c, function(e3) {
              e3.IsEnabledLineBreaks = "enableLineBreaks", e3.Toolbox = "toolbox", e3.ConversionConfig = "conversionConfig", e3.IsReadOnlySupported = "isReadOnlySupported", e3.PasteConfig = "pasteConfig";
            }(c || (e2.InternalBlockToolSettings = c = {})), e2.InternalInlineToolSettings = u, function(e3) {
              e3.IsInline = "isInline", e3.Title = "title";
            }(u || (e2.InternalInlineToolSettings = u = {})), e2.InternalTuneSettings = f, function(e3) {
              e3.IsTune = "isTune";
            }(f || (e2.InternalTuneSettings = f = {}));
            var h = function() {
              function e3(n2) {
                var o3 = n2.name, r3 = n2.constructable, i3 = n2.config, a2 = n2.api, s2 = n2.isDefault, l2 = n2.isInternal, c2 = void 0 !== l2 && l2, u2 = n2.defaultPlaceholder;
                (0, t2.default)(this, e3), this.api = a2, this.name = o3, this.constructable = r3, this.config = i3, this.isDefault = s2, this.isInternal = c2, this.defaultPlaceholder = u2;
              }
              return (0, o2.default)(e3, [{ key: "settings", get: function() {
                var e4 = this.config[s.Config] || {};
                return this.isDefault && !("placeholder" in e4) && this.defaultPlaceholder && (e4.placeholder = this.defaultPlaceholder), e4;
              } }, { key: "reset", value: function() {
                if (r2.isFunction(this.constructable.reset))
                  return this.constructable.reset();
              } }, { key: "prepare", value: function() {
                if (r2.isFunction(this.constructable.prepare))
                  return this.constructable.prepare({ toolName: this.name, config: this.settings });
              } }, { key: "shortcut", get: function() {
                var e4 = this.constructable[l.Shortcut];
                return this.config[s.Shortcut] || e4;
              } }, { key: "sanitizeConfig", get: function() {
                return this.constructable[l.SanitizeConfig] || {};
              } }, { key: "isInline", value: function() {
                return this.type === i2.Inline;
              } }, { key: "isBlock", value: function() {
                return this.type === i2.Block;
              } }, { key: "isTune", value: function() {
                return this.type === i2.Tune;
              } }]), e3;
            }();
            e2.default = h, h.displayName = "BaseTool";
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o = n(16), r = n(10), i = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
          (e.exports = function(e2, t2) {
            return i[e2] || (i[e2] = void 0 !== t2 ? t2 : {});
          })("versions", []).push({ version: o.version, mode: n(46) ? "pure" : "global", copyright: "\xA9 2020 Denis Pushkarev (zloirock.ru)" });
        }, function(e, t, n) {
          var o = n(28), r = n(15), i = n(48);
          e.exports = function(e2) {
            return function(t2, n2, a) {
              var s, l = o(t2), c = r(l.length), u = i(a, c);
              if (e2 && n2 != n2) {
                for (; c > u; )
                  if ((s = l[u++]) != s)
                    return true;
              } else
                for (; c > u; u++)
                  if ((e2 || u in l) && l[u] === n2)
                    return e2 || u || 0;
              return !e2 && -1;
            };
          };
        }, function(e, t) {
          t.f = Object.getOwnPropertySymbols;
        }, function(e, t, n) {
          var o = n(38);
          e.exports = Array.isArray || function(e2) {
            return "Array" == o(e2);
          };
        }, function(e, t, n) {
          var o = n(14)("iterator"), r = false;
          try {
            var i = [7][o]();
            i.return = function() {
              r = true;
            }, Array.from(i, function() {
              throw 2;
            });
          } catch (e2) {
          }
          e.exports = function(e2, t2) {
            if (!t2 && !r)
              return false;
            var n2 = false;
            try {
              var i2 = [7], a = i2[o]();
              a.next = function() {
                return { done: n2 = true };
              }, i2[o] = function() {
                return a;
              }, e2(i2);
            } catch (e3) {
            }
            return n2;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(12);
          e.exports = function() {
            var e2 = o(this), t2 = "";
            return e2.global && (t2 += "g"), e2.ignoreCase && (t2 += "i"), e2.multiline && (t2 += "m"), e2.unicode && (t2 += "u"), e2.sticky && (t2 += "y"), t2;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(64), r = RegExp.prototype.exec;
          e.exports = function(e2, t2) {
            var n2 = e2.exec;
            if ("function" == typeof n2) {
              var i = n2.call(e2, t2);
              if ("object" != typeof i)
                throw new TypeError("RegExp exec method returned something other than an Object or null");
              return i;
            }
            if ("RegExp" !== o(e2))
              throw new TypeError("RegExp#exec called on incompatible receiver");
            return r.call(e2, t2);
          };
        }, function(e, t, n) {
          "use strict";
          n(137);
          var o = n(23), r = n(27), i = n(11), a = n(39), s = n(14), l = n(107), c = s("species"), u = !i(function() {
            var e2 = /./;
            return e2.exec = function() {
              var e3 = [];
              return e3.groups = { a: "7" }, e3;
            }, "7" !== "".replace(e2, "$<a>");
          }), f = function() {
            var e2 = /(?:)/, t2 = e2.exec;
            e2.exec = function() {
              return t2.apply(this, arguments);
            };
            var n2 = "ab".split(e2);
            return 2 === n2.length && "a" === n2[0] && "b" === n2[1];
          }();
          e.exports = function(e2, t2, n2) {
            var d = s(e2), p = !i(function() {
              var t3 = {};
              return t3[d] = function() {
                return 7;
              }, 7 != ""[e2](t3);
            }), h = p ? !i(function() {
              var t3 = false, n3 = /a/;
              return n3.exec = function() {
                return t3 = true, null;
              }, "split" === e2 && (n3.constructor = {}, n3.constructor[c] = function() {
                return n3;
              }), n3[d](""), !t3;
            }) : void 0;
            if (!p || !h || "replace" === e2 && !u || "split" === e2 && !f) {
              var v = /./[d], g = n2(a, d, ""[e2], function(e3, t3, n3, o2, r2) {
                return t3.exec === l ? p && !r2 ? { done: true, value: v.call(t3, n3, o2) } : { done: true, value: e3.call(n3, t3, o2) } : { done: false };
              }), y = g[0], k = g[1];
              o(String.prototype, e2, y), r(RegExp.prototype, d, 2 == t2 ? function(e3, t3) {
                return k.call(e3, this, t3);
              } : function(e3) {
                return k.call(e3, this);
              });
            }
          };
        }, function(e, t, n) {
          var o = n(31), r = n(132), i = n(102), a = n(12), s = n(15), l = n(104), c = {}, u = {};
          (t = e.exports = function(e2, t2, n2, f, d) {
            var p, h, v, g, y = d ? function() {
              return e2;
            } : l(e2), k = o(n2, f, t2 ? 2 : 1), b = 0;
            if ("function" != typeof y)
              throw TypeError(e2 + " is not iterable!");
            if (i(y)) {
              for (p = s(e2.length); p > b; b++)
                if ((g = t2 ? k(a(h = e2[b])[0], h[1]) : k(e2[b])) === c || g === u)
                  return g;
            } else
              for (v = y.call(e2); !(h = v.next()).done; )
                if ((g = r(v, k, h.value, t2)) === c || g === u)
                  return g;
          }).BREAK = c, t.RETURN = u;
        }, function(e, t, n) {
          var o = n(10).navigator;
          e.exports = o && o.userAgent || "";
        }, function(e, t, n) {
          "use strict";
          var o = n(10), r = n(0), i = n(23), a = n(60), s = n(43), l = n(78), c = n(59), u = n(13), f = n(11), d = n(74), p = n(55), h = n(93);
          e.exports = function(e2, t2, n2, v, g, y) {
            var k = o[e2], b = k, m = g ? "set" : "add", w = b && b.prototype, x = {}, C = function(e3) {
              var t3 = w[e3];
              i(w, e3, "delete" == e3 || "has" == e3 ? function(e4) {
                return !(y && !u(e4)) && t3.call(this, 0 === e4 ? 0 : e4);
              } : "get" == e3 ? function(e4) {
                return y && !u(e4) ? void 0 : t3.call(this, 0 === e4 ? 0 : e4);
              } : "add" == e3 ? function(e4) {
                return t3.call(this, 0 === e4 ? 0 : e4), this;
              } : function(e4, n3) {
                return t3.call(this, 0 === e4 ? 0 : e4, n3), this;
              });
            };
            if ("function" == typeof b && (y || w.forEach && !f(function() {
              new b().entries().next();
            }))) {
              var S = new b(), T = S[m](y ? {} : -0, 1) != S, E = f(function() {
                S.has(1);
              }), B = d(function(e3) {
                new b(e3);
              }), M = !y && f(function() {
                for (var e3 = new b(), t3 = 5; t3--; )
                  e3[m](t3, t3);
                return !e3.has(-0);
              });
              B || ((b = t2(function(t3, n3) {
                c(t3, b, e2);
                var o2 = h(new k(), t3, b);
                return null != n3 && l(n3, g, o2[m], o2), o2;
              })).prototype = w, w.constructor = b), (E || M) && (C("delete"), C("has"), g && C("get")), (M || T) && C(m), y && w.clear && delete w.clear;
            } else
              b = v.getConstructor(t2, e2, g, m), a(b.prototype, n2), s.NEED = true;
            return p(b, e2), x[e2] = b, r(r.G + r.W + r.F * (b != k), x), y || v.setStrong(b, e2, g), b;
          };
        }, function(e, t, n) {
          for (var o, r = n(10), i = n(27), a = n(45), s = a("typed_array"), l = a("view"), c = !(!r.ArrayBuffer || !r.DataView), u = c, f = 0, d = "Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(","); f < 9; )
            (o = r[d[f++]]) ? (i(o.prototype, s, true), i(o.prototype, l, true)) : u = false;
          e.exports = { ABV: c, CONSTR: u, TYPED: s, VIEW: l };
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2);
            var l = function() {
              function e2() {
                (0, r2.default)(this, e2), this.subscribers = {};
              }
              return (0, i2.default)(e2, [{ key: "on", value: function(e3, t2) {
                e3 in this.subscribers || (this.subscribers[e3] = []), this.subscribers[e3].push(t2);
              } }, { key: "once", value: function(e3, t2) {
                var n2 = this;
                e3 in this.subscribers || (this.subscribers[e3] = []), this.subscribers[e3].push(function o3(r3) {
                  var i3 = t2(r3), a2 = n2.subscribers[e3].indexOf(o3);
                  return -1 !== a2 && n2.subscribers[e3].splice(a2, 1), i3;
                });
              } }, { key: "emit", value: function(e3, t2) {
                !(0, a.isEmpty)(this.subscribers) && this.subscribers[e3] && this.subscribers[e3].reduce(function(e4, t3) {
                  return t3(e4) || e4;
                }, t2);
              } }, { key: "off", value: function(e3, t2) {
                for (var n2 = 0; n2 < this.subscribers[e3].length; n2++)
                  if (this.subscribers[e3][n2] === t2) {
                    delete this.subscribers[e3][n2];
                    break;
                  }
              } }, { key: "destroy", value: function() {
                this.subscribers = null;
              } }]), e2;
            }();
            o2.default = l, l.displayName = "EventsDispatcher", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                return { blocks: this.Editor.BlocksAPI.methods, caret: this.Editor.CaretAPI.methods, events: this.Editor.EventsAPI.methods, listeners: this.Editor.ListenersAPI.methods, notifier: this.Editor.NotifierAPI.methods, sanitizer: this.Editor.SanitizerAPI.methods, saver: this.Editor.SaverAPI.methods, selection: this.Editor.SelectionAPI.methods, styles: this.Editor.StylesAPI.classes, toolbar: this.Editor.ToolbarAPI.methods, inlineToolbar: this.Editor.InlineToolbarAPI.methods, tooltip: this.Editor.TooltipAPI.methods, i18n: this.Editor.I18nAPI.methods, readOnly: this.Editor.ReadOnlyAPI.methods, ui: this.Editor.UiAPI.methods };
              } }, { key: "getMethodsForTool", value: function(e3) {
                return Object.assign(this.methods, { i18n: this.Editor.I18nAPI.getMethodsForTool(e3) });
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "API", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(19), n(8), n(54), n(68), n(115), n(386), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y) {
            "use strict";
            var k = n(1);
            function b(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (b = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function m(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = b(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }
            function w(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = k(r2), i2 = k(i2), s = k(s), l = k(l), c = k(c), u = k(u), f = k(f), d = m(d), p = k(p), v = k(v), g = m(g);
            var x = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = w(n2);
              function n2(e3) {
                var o3, i3 = e3.config, a2 = e3.eventsDispatcher;
                return (0, r2.default)(this, n2), (o3 = t2.call(this, { config: i3, eventsDispatcher: a2 })).tooltip = new v.default(), o3;
              }
              return (0, i2.default)(n2, [{ key: "CSS", get: function() {
                return { toolbar: "ce-toolbar", content: "ce-toolbar__content", actions: "ce-toolbar__actions", actionsOpened: "ce-toolbar__actions--opened", toolbarOpened: "ce-toolbar--opened", openedToolboxHolderModifier: "codex-editor--toolbox-opened", plusButton: "ce-toolbar__plus", plusButtonShortcut: "ce-toolbar__plus-shortcut", settingsToggler: "ce-toolbar__settings-btn", settingsTogglerHidden: "ce-toolbar__settings-btn--hidden" };
              } }, { key: "opened", get: function() {
                return this.nodes.wrapper.classList.contains(this.CSS.toolbarOpened);
              } }, { key: "toolbox", get: function() {
                var e3 = this;
                return { opened: this.toolboxInstance.opened, close: function() {
                  e3.toolboxInstance.close();
                }, open: function() {
                  e3.Editor.BlockManager.currentBlock = e3.hoveredBlock, e3.toolboxInstance.open();
                }, toggle: function() {
                  return e3.toolboxInstance.toggle();
                }, hasFocus: function() {
                  return e3.toolboxInstance.hasFocus();
                } };
              } }, { key: "blockActions", get: function() {
                var e3 = this;
                return { hide: function() {
                  e3.nodes.actions.classList.remove(e3.CSS.actionsOpened);
                }, show: function() {
                  e3.nodes.actions.classList.add(e3.CSS.actionsOpened);
                } };
              } }, { key: "blockTunesToggler", get: function() {
                var e3 = this;
                return { hide: function() {
                  return e3.nodes.settingsToggler.classList.add(e3.CSS.settingsTogglerHidden);
                }, show: function() {
                  return e3.nodes.settingsToggler.classList.remove(e3.CSS.settingsTogglerHidden);
                } };
              } }, { key: "toggleReadOnly", value: function(e3) {
                e3 ? (this.destroy(), this.Editor.BlockSettings.destroy(), this.disableModuleBindings()) : (this.drawUI(), this.enableModuleBindings());
              } }, { key: "moveAndOpen", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.Editor.BlockManager.currentBlock;
                if (this.toolboxInstance.close(), this.Editor.BlockSettings.close(), e3) {
                  this.hoveredBlock = e3;
                  var t3, n3 = e3.holder, o3 = this.Editor.UI.isMobile, r3 = e3.pluginsContent, i3 = window.getComputedStyle(r3), a2 = parseInt(i3.paddingTop, 10), s2 = n3.offsetHeight;
                  t3 = o3 ? n3.offsetTop + s2 : n3.offsetTop + a2, this.nodes.wrapper.style.top = "".concat(Math.floor(t3), "px"), 1 === this.Editor.BlockManager.blocks.length && e3.isEmpty ? this.blockTunesToggler.hide() : this.blockTunesToggler.show(), this.open();
                }
              } }, { key: "close", value: function() {
                this.Editor.ReadOnly.isEnabled || (this.nodes.wrapper.classList.remove(this.CSS.toolbarOpened), this.blockActions.hide(), this.toolboxInstance.close(), this.Editor.BlockSettings.close());
              } }, { key: "open", value: function() {
                var e3 = this, t3 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                d.delay(function() {
                  e3.nodes.wrapper.classList.add(e3.CSS.toolbarOpened), t3 ? e3.blockActions.show() : e3.blockActions.hide();
                }, 50)();
              } }, { key: "make", value: function() {
                var e3 = this;
                this.nodes.wrapper = f.default.make("div", this.CSS.toolbar), ["content", "actions"].forEach(function(t4) {
                  e3.nodes[t4] = f.default.make("div", e3.CSS[t4]);
                }), f.default.append(this.nodes.wrapper, this.nodes.content), f.default.append(this.nodes.content, this.nodes.actions), this.nodes.plusButton = f.default.make("div", this.CSS.plusButton, { innerHTML: y.IconPlus }), f.default.append(this.nodes.actions, this.nodes.plusButton), this.readOnlyMutableListeners.on(this.nodes.plusButton, "click", function() {
                  e3.tooltip.hide(true), e3.plusButtonClicked();
                }, false);
                var t3 = f.default.make("div");
                t3.appendChild(document.createTextNode(p.default.ui(h.I18nInternalNS.ui.toolbar.toolbox, "Add"))), t3.appendChild(f.default.make("div", this.CSS.plusButtonShortcut, { textContent: "\u21E5 Tab" })), this.tooltip.onHover(this.nodes.plusButton, t3, { hidingDelay: 400 }), this.nodes.settingsToggler = f.default.make("span", this.CSS.settingsToggler, { innerHTML: y.IconMenu }), f.default.append(this.nodes.actions, this.nodes.settingsToggler), this.tooltip.onHover(this.nodes.settingsToggler, p.default.ui(h.I18nInternalNS.ui.blockTunes.toggler, "Click to tune"), { hidingDelay: 400 }), f.default.append(this.nodes.actions, this.makeToolbox()), f.default.append(this.nodes.actions, this.Editor.BlockSettings.getElement()), f.default.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);
              } }, { key: "makeToolbox", value: function() {
                var e3 = this;
                return this.toolboxInstance = new g.default({ api: this.Editor.API.methods, tools: this.Editor.Tools.blockTools, i18nLabels: { filter: p.default.ui(h.I18nInternalNS.ui.popover, "Filter"), nothingFound: p.default.ui(h.I18nInternalNS.ui.popover, "Nothing found") } }), this.toolboxInstance.on(g.ToolboxEvent.Opened, function() {
                  e3.Editor.UI.nodes.wrapper.classList.add(e3.CSS.openedToolboxHolderModifier);
                }), this.toolboxInstance.on(g.ToolboxEvent.Closed, function() {
                  e3.Editor.UI.nodes.wrapper.classList.remove(e3.CSS.openedToolboxHolderModifier);
                }), this.toolboxInstance.on(g.ToolboxEvent.BlockAdded, function(t3) {
                  var n3 = t3.block, o3 = e3.Editor, r3 = o3.BlockManager, i3 = o3.Caret, a2 = r3.getBlockById(n3.id);
                  0 === a2.inputs.length && (a2 === r3.lastBlock ? (r3.insertAtEnd(), i3.setToBlock(r3.lastBlock)) : i3.setToBlock(r3.nextBlock));
                }), this.toolboxInstance.make();
              } }, { key: "plusButtonClicked", value: function() {
                this.Editor.BlockManager.currentBlock = this.hoveredBlock, this.toolboxInstance.toggle();
              } }, { key: "enableModuleBindings", value: function() {
                var e3 = this;
                this.readOnlyMutableListeners.on(this.nodes.settingsToggler, "mousedown", function(t3) {
                  t3.stopPropagation(), e3.settingsTogglerClicked(), e3.toolboxInstance.close(), e3.tooltip.hide(true);
                }, true), d.isMobileScreen() || this.eventsDispatcher.on(this.Editor.UI.events.blockHovered, function(t3) {
                  e3.Editor.BlockSettings.opened || e3.toolboxInstance.opened || e3.moveAndOpen(t3.block);
                });
              } }, { key: "disableModuleBindings", value: function() {
                this.readOnlyMutableListeners.clearAll();
              } }, { key: "settingsTogglerClicked", value: function() {
                this.Editor.BlockManager.currentBlock = this.hoveredBlock, this.Editor.BlockSettings.opened ? this.Editor.BlockSettings.close() : this.Editor.BlockSettings.open(this.hoveredBlock);
              } }, { key: "drawUI", value: function() {
                this.Editor.BlockSettings.make(), this.make();
              } }, { key: "destroy", value: function() {
                this.removeAllNodes(), this.toolboxInstance && this.toolboxInstance.destroy(), this.tooltip.destroy();
              } }]), n2;
            }(u.default);
            o2.default = x, x.displayName = "Toolbar", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(41), n(2), n(3), n(5), n(6), n(4), n(7), n(19), n(112), n(67), n(387), n(82), n(8), n(388), n(37)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2, r2, i2, a, s, l, c, u, f, d, p, h, v, g) {
            "use strict";
            var y = n(1);
            function k(e3) {
              var t3 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e4) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, s.default)(e3);
                if (t3) {
                  var r3 = (0, s.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, a.default)(this, n2);
              };
            }
            Object.defineProperty(e2, "__esModule", { value: true }), e2.default = e2.PopoverEvent = void 0, t2 = y(t2), o2 = y(o2), r2 = y(r2), i2 = y(i2), a = y(a), s = y(s), l = y(l), c = y(c), u = y(u), f = y(f), d = y(d), p = y(p), v = y(v);
            var b, m = function(e3, t3, n2, o3) {
              var r3, i3 = arguments.length, a2 = i3 < 3 ? t3 : null === o3 ? o3 = Object.getOwnPropertyDescriptor(t3, n2) : o3;
              if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, l.default)(Reflect)) && "function" == typeof Reflect.decorate)
                a2 = Reflect.decorate(e3, t3, n2, o3);
              else
                for (var s2 = e3.length - 1; s2 >= 0; s2--)
                  (r3 = e3[s2]) && (a2 = (i3 < 3 ? r3(a2) : i3 > 3 ? r3(t3, n2, a2) : r3(t3, n2)) || a2);
              return i3 > 3 && a2 && Object.defineProperty(t3, n2, a2), a2;
            };
            e2.PopoverEvent = b, function(e3) {
              e3.OverlayClicked = "overlay-clicked", e3.Close = "close";
            }(b || (e2.PopoverEvent = b = {}));
            var w = function(e3) {
              (0, i2.default)(a2, e3);
              var n2 = k(a2);
              function a2(e4) {
                var t3, r3 = e4.items, i3 = e4.className, s2 = e4.searchable, l2 = e4.filterLabel, c2 = e4.nothingFoundLabel, f2 = e4.customContent, d2 = e4.customContentFlippableItems, p2 = e4.scopeElement;
                return (0, o2.default)(this, a2), (t3 = n2.call(this)).customContentFlippableItems = [], t3.isShown = false, t3.nodes = { wrapper: null, popover: null, items: null, nothingFound: null, overlay: null }, t3.scrollLocker = new v.default(), t3.itemsRequiringConfirmation = {}, t3.removeSpecialHoverBehavior = function() {
                  var e5 = t3.nodes.items.querySelector(".".concat(a2.CSS.itemNoHover));
                  e5 && e5.classList.remove(a2.CSS.itemNoHover);
                }, t3.onFlip = function() {
                  t3.disableSpecialHoverAndFocusBehavior();
                }, t3.items = r3, t3.customContent = f2, t3.customContentFlippableItems = d2, t3.className = i3 || "", t3.searchable = s2, t3.listeners = new u.default(), t3.scopeElement = p2, t3.filterLabel = l2, t3.nothingFoundLabel = c2, t3.render(), t3.enableFlipper(), t3;
              }
              return (0, r2.default)(a2, [{ key: "getElement", value: function() {
                return this.nodes.wrapper;
              } }, { key: "show", value: function() {
                var e4 = this;
                this.shouldOpenPopoverBottom || (this.nodes.wrapper.style.setProperty("--popover-height", this.calculateHeight() + "px"), this.nodes.wrapper.classList.add(this.className + "--opened-top")), this.search && this.search.clear(), this.nodes.items.scrollTop = 0, this.nodes.popover.classList.add(a2.CSS.popoverOpened), this.nodes.overlay.classList.remove(a2.CSS.popoverOverlayHidden), this.flipper.activate(this.flippableElements), this.searchable && setTimeout(function() {
                  e4.search.focus();
                }, 100), (0, h.isMobileScreen)() && this.scrollLocker.lock(), this.isShown = true;
              } }, { key: "hide", value: function() {
                var e4 = this;
                this.isShown && (this.nodes.popover.classList.remove(a2.CSS.popoverOpened), this.nodes.overlay.classList.add(a2.CSS.popoverOverlayHidden), this.flipper.deactivate(), (0, h.isMobileScreen)() && this.scrollLocker.unlock(), this.isShown = false, this.nodes.wrapper.classList.remove(this.className + "--opened-top"), Array.from(this.nodes.items.querySelectorAll(".".concat(a2.CSS.itemConfirmation))).forEach(function(t3) {
                  return e4.cleanUpConfirmationStateForItem(t3);
                }), this.disableSpecialHoverAndFocusBehavior(), this.emit(b.Close));
              } }, { key: "destroy", value: function() {
                this.flipper.deactivate(), this.listeners.removeAll(), this.disableSpecialHoverAndFocusBehavior(), (0, h.isMobileScreen)() && this.scrollLocker.unlock();
              } }, { key: "hasFocus", value: function() {
                return this.flipper.hasFocus();
              } }, { key: "calculateHeight", value: function() {
                var e4, t3 = this.nodes.popover.cloneNode(true);
                return t3.style.visibility = "hidden", t3.style.position = "absolute", t3.style.top = "-1000px", t3.classList.add(a2.CSS.popoverOpened), document.body.appendChild(t3), e4 = t3.offsetHeight, t3.remove(), e4;
              } }, { key: "render", value: function() {
                var e4 = this;
                this.nodes.wrapper = c.default.make("div", this.className), this.nodes.popover = c.default.make("div", a2.CSS.popover), this.nodes.wrapper.appendChild(this.nodes.popover), this.nodes.overlay = c.default.make("div", [a2.CSS.popoverOverlay, a2.CSS.popoverOverlayHidden]), this.nodes.wrapper.appendChild(this.nodes.overlay), this.searchable && this.addSearch(this.nodes.popover), this.customContent && (this.customContent.classList.add(a2.CSS.customContent), this.nodes.popover.appendChild(this.customContent)), this.nodes.items = c.default.make("div", a2.CSS.itemsWrapper), this.items.forEach(function(t3) {
                  e4.nodes.items.appendChild(e4.createItem(t3));
                }), this.nodes.popover.appendChild(this.nodes.items), this.nodes.nothingFound = c.default.make("div", [a2.CSS.noFoundMessage], { textContent: this.nothingFoundLabel }), this.nodes.popover.appendChild(this.nodes.nothingFound), this.listeners.on(this.nodes.popover, "click", function(t3) {
                  var n3 = t3.target.closest(".".concat(a2.CSS.item));
                  n3 && e4.itemClicked(n3, t3);
                }), this.listeners.on(this.nodes.overlay, "click", function() {
                  e4.emit(b.OverlayClicked);
                });
              } }, { key: "addSearch", value: function(e4) {
                var t3 = this;
                this.search = new d.default({ items: this.items, placeholder: this.filterLabel, onSearch: function(e5) {
                  var n4 = [];
                  t3.items.forEach(function(o4, r4) {
                    var i3 = t3.nodes.items.children[r4];
                    e5.includes(o4) ? (n4.push(i3), i3.classList.remove(a2.CSS.itemHidden)) : i3.classList.add(a2.CSS.itemHidden);
                  }), t3.nodes.nothingFound.classList.toggle(a2.CSS.noFoundMessageShown, 0 === n4.length);
                  var o3 = e5.length === t3.items.length, r3 = o3 ? t3.flippableElements : n4;
                  t3.customContent && t3.customContent.classList.toggle(a2.CSS.customContentHidden, !o3), t3.flipper.isActivated && (t3.reactivateFlipper(r3), t3.flipper.focusFirst());
                } });
                var n3 = this.search.getElement();
                e4.appendChild(n3);
              } }, { key: "createItem", value: function(e4) {
                var t3 = c.default.make("div", a2.CSS.item);
                e4.name && (t3.dataset.itemName = e4.name);
                var n3 = c.default.make("div", a2.CSS.itemLabel, { innerHTML: e4.title || "" });
                return t3.appendChild(c.default.make("div", a2.CSS.itemIcon, { innerHTML: e4.icon || g.IconDotCircle })), t3.appendChild(n3), e4.secondaryLabel && t3.appendChild(c.default.make("div", a2.CSS.itemSecondaryLabel, { textContent: e4.secondaryLabel })), e4.isActive && t3.classList.add(a2.CSS.itemActive), e4.isDisabled && t3.classList.add(a2.CSS.itemDisabled), t3;
              } }, { key: "itemClicked", value: function(e4, t3) {
                var n3 = this, o3 = Array.from(this.nodes.items.children), r3 = o3.indexOf(e4), i3 = this.items[r3];
                i3.isDisabled || (o3.filter(function(t4) {
                  return t4 !== e4;
                }).forEach(function(e5) {
                  n3.cleanUpConfirmationStateForItem(e5);
                }), i3.confirmation ? this.enableConfirmationStateForItem(i3, e4, r3) : (i3.onActivate(i3, t3), this.toggleIfNeeded(r3, o3), i3.closeOnActivate && this.hide()));
              } }, { key: "toggleIfNeeded", value: function(e4, t3) {
                var n3 = this, o3 = this.items[e4];
                if (true === o3.toggle)
                  return o3.isActive = !o3.isActive, void t3[e4].classList.toggle(a2.CSS.itemActive);
                if ("string" == typeof o3.toggle) {
                  var r3 = this.items.filter(function(e5) {
                    return e5.toggle === o3.toggle;
                  });
                  if (1 === r3.length)
                    return o3.isActive = !o3.isActive, void t3[e4].classList.toggle(a2.CSS.itemActive);
                  r3.forEach(function(e5) {
                    var r4 = n3.items.indexOf(e5), i3 = e5 === o3;
                    e5.isActive = i3, t3[r4].classList.toggle(a2.CSS.itemActive, i3);
                  });
                }
              } }, { key: "enableConfirmationStateForItem", value: function(e4, n3, o3) {
                var r3;
                void 0 === this.itemsRequiringConfirmation[o3] && (this.itemsRequiringConfirmation[o3] = e4);
                var i3 = Object.assign(Object.assign(Object.assign({}, e4), e4.confirmation), { confirmation: e4.confirmation.confirmation });
                this.items[o3] = i3;
                var s2 = this.createItem(i3);
                (r3 = s2.classList).add.apply(r3, [a2.CSS.itemConfirmation].concat((0, t2.default)(Array.from(n3.classList)))), n3.parentElement.replaceChild(s2, n3), this.enableSpecialHoverAndFocusBehavior(s2), this.reactivateFlipper(this.flippableElements, this.flippableElements.indexOf(s2));
              } }, { key: "cleanUpConfirmationStateForItem", value: function(e4) {
                var t3 = Array.from(this.nodes.items.children).indexOf(e4), n3 = this.itemsRequiringConfirmation[t3];
                if (void 0 !== n3) {
                  var o3 = this.createItem(n3);
                  e4.parentElement.replaceChild(o3, e4), this.items[t3] = n3, delete this.itemsRequiringConfirmation[t3], e4.removeEventListener("mouseleave", this.removeSpecialHoverBehavior), this.disableSpecialHoverAndFocusBehavior(), this.reactivateFlipper(this.flippableElements, this.flippableElements.indexOf(o3));
                }
              } }, { key: "enableSpecialHoverAndFocusBehavior", value: function(e4) {
                e4.classList.add(a2.CSS.itemNoHover), e4.classList.add(a2.CSS.itemNoFocus), e4.addEventListener("mouseleave", this.removeSpecialHoverBehavior, { once: true }), this.flipper.onFlip(this.onFlip);
              } }, { key: "disableSpecialHoverAndFocusBehavior", value: function() {
                this.removeSpecialFocusBehavior(), this.removeSpecialHoverBehavior(), this.flipper.removeOnFlip(this.onFlip);
              } }, { key: "removeSpecialFocusBehavior", value: function() {
                var e4 = this.nodes.items.querySelector(".".concat(a2.CSS.itemNoFocus));
                e4 && e4.classList.remove(a2.CSS.itemNoFocus);
              } }, { key: "reactivateFlipper", value: function(e4, t3) {
                this.flipper.deactivate(), this.flipper.activate(e4, t3);
              } }, { key: "enableFlipper", value: function() {
                this.flipper = new f.default({ items: this.flippableElements, focusedItemClass: a2.CSS.itemFocused, allowedKeys: [h.keyCodes.TAB, h.keyCodes.UP, h.keyCodes.DOWN, h.keyCodes.ENTER] });
              } }, { key: "flippableElements", get: function() {
                var e4 = Array.from(this.nodes.wrapper.querySelectorAll(".".concat(a2.CSS.item)));
                return (this.customContentFlippableItems || []).concat(e4);
              } }, { key: "shouldOpenPopoverBottom", get: function() {
                var e4 = this.nodes.wrapper.getBoundingClientRect(), t3 = this.scopeElement.getBoundingClientRect(), n3 = this.calculateHeight(), o3 = e4.top + n3, r3 = e4.top - n3, i3 = Math.min(window.innerHeight, t3.bottom);
                return r3 < t3.top || o3 <= i3;
              } }], [{ key: "CSS", get: function() {
                return { popover: "ce-popover", popoverOpened: "ce-popover--opened", itemsWrapper: "ce-popover__items", item: "ce-popover__item", itemHidden: "ce-popover__item--hidden", itemFocused: "ce-popover__item--focused", itemActive: "ce-popover__item--active", itemDisabled: "ce-popover__item--disabled", itemConfirmation: "ce-popover__item--confirmation", itemNoHover: "ce-popover__item--no-visible-hover", itemNoFocus: "ce-popover__item--no-visible-focus", itemLabel: "ce-popover__item-label", itemIcon: "ce-popover__item-icon", itemSecondaryLabel: "ce-popover__item-secondary-label", noFoundMessage: "ce-popover__no-found", noFoundMessageShown: "ce-popover__no-found--shown", popoverOverlay: "ce-popover__overlay", popoverOverlayHidden: "ce-popover__overlay--hidden", customContent: "ce-popover__custom-content", customContentHidden: "ce-popover__custom-content--hidden" };
              } }]), a2;
            }(p.default);
            e2.default = w, w.displayName = "Popover", m([h.cacheable], w.prototype, "calculateHeight", null);
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o = n(13), r = n(10).document, i = o(r) && o(r.createElement);
          e.exports = function(e2) {
            return i ? r.createElement(e2) : {};
          };
        }, function(e, t, n) {
          t.f = n(14);
        }, function(e, t, n) {
          var o = n(70)("keys"), r = n(45);
          e.exports = function(e2) {
            return o[e2] || (o[e2] = r(e2));
          };
        }, function(e, t) {
          e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
        }, function(e, t, n) {
          var o = n(10).document;
          e.exports = o && o.documentElement;
        }, function(e, t, n) {
          var o = n(13), r = n(12), i = function(e2, t2) {
            if (r(e2), !o(t2) && null !== t2)
              throw TypeError(t2 + ": can't set as prototype!");
          };
          e.exports = { set: Object.setPrototypeOf || ("__proto__" in {} ? function(e2, t2, o2) {
            try {
              (o2 = n(31)(Function.call, n(34).f(Object.prototype, "__proto__").set, 2))(e2, []), t2 = !(e2 instanceof Array);
            } catch (e3) {
              t2 = true;
            }
            return function(e3, n2) {
              return i(e3, n2), t2 ? e3.__proto__ = n2 : o2(e3, n2), e3;
            };
          }({}, false) : void 0), check: i };
        }, function(e, t) {
          e.exports = "	\n\v\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
        }, function(e, t, n) {
          var o = n(13), r = n(91).set;
          e.exports = function(e2, t2, n2) {
            var i, a = t2.constructor;
            return a !== n2 && "function" == typeof a && (i = a.prototype) !== n2.prototype && o(i) && r && r(e2, i), e2;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(33), r = n(39);
          e.exports = function(e2) {
            var t2 = String(r(this)), n2 = "", i = o(e2);
            if (i < 0 || i == 1 / 0)
              throw RangeError("Count can't be negative");
            for (; i > 0; (i >>>= 1) && (t2 += t2))
              1 & i && (n2 += t2);
            return n2;
          };
        }, function(e, t) {
          e.exports = Math.sign || function(e2) {
            return 0 == (e2 = +e2) || e2 != e2 ? e2 : e2 < 0 ? -1 : 1;
          };
        }, function(e, t) {
          var n = Math.expm1;
          e.exports = !n || n(10) > 22025.465794806718 || n(10) < 22025.465794806718 || -2e-17 != n(-2e-17) ? function(e2) {
            return 0 == (e2 = +e2) ? e2 : e2 > -1e-6 && e2 < 1e-6 ? e2 + e2 * e2 / 2 : Math.exp(e2) - 1;
          } : n;
        }, function(e, t, n) {
          var o = n(33), r = n(39);
          e.exports = function(e2) {
            return function(t2, n2) {
              var i, a, s = String(r(t2)), l = o(n2), c = s.length;
              return l < 0 || l >= c ? e2 ? "" : void 0 : (i = s.charCodeAt(l)) < 55296 || i > 56319 || l + 1 === c || (a = s.charCodeAt(l + 1)) < 56320 || a > 57343 ? e2 ? s.charAt(l) : i : e2 ? s.slice(l, l + 2) : a - 56320 + (i - 55296 << 10) + 65536;
            };
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(46), r = n(0), i = n(23), a = n(27), s = n(57), l = n(131), c = n(55), u = n(51), f = n(14)("iterator"), d = !([].keys && "next" in [].keys()), p = function() {
            return this;
          };
          e.exports = function(e2, t2, n2, h, v, g, y) {
            l(n2, t2, h);
            var k, b, m, w = function(e3) {
              if (!d && e3 in T)
                return T[e3];
              switch (e3) {
                case "keys":
                case "values":
                  return function() {
                    return new n2(this, e3);
                  };
              }
              return function() {
                return new n2(this, e3);
              };
            }, x = t2 + " Iterator", C = "values" == v, S = false, T = e2.prototype, E = T[f] || T["@@iterator"] || v && T[v], B = E || w(v), M = v ? C ? w("entries") : B : void 0, _ = "Array" == t2 && T.entries || E;
            if (_ && (m = u(_.call(new e2()))) !== Object.prototype && m.next && (c(m, x, true), o || "function" == typeof m[f] || a(m, f, p)), C && E && "values" !== E.name && (S = true, B = function() {
              return E.call(this);
            }), o && !y || !d && !S && T[f] || a(T, f, B), s[t2] = B, s[x] = p, v)
              if (k = { values: C ? B : w("values"), keys: g ? B : w("keys"), entries: M }, y)
                for (b in k)
                  b in T || i(T, b, k[b]);
              else
                r(r.P + r.F * (d || S), t2, k);
            return k;
          };
        }, function(e, t, n) {
          var o = n(100), r = n(39);
          e.exports = function(e2, t2, n2) {
            if (o(t2))
              throw TypeError("String#" + n2 + " doesn't accept regex!");
            return String(r(e2));
          };
        }, function(e, t, n) {
          var o = n(13), r = n(38), i = n(14)("match");
          e.exports = function(e2) {
            var t2;
            return o(e2) && (void 0 !== (t2 = e2[i]) ? !!t2 : "RegExp" == r(e2));
          };
        }, function(e, t, n) {
          var o = n(14)("match");
          e.exports = function(e2) {
            var t2 = /./;
            try {
              "/./"[e2](t2);
            } catch (n2) {
              try {
                return t2[o] = false, !"/./"[e2](t2);
              } catch (e3) {
              }
            }
            return true;
          };
        }, function(e, t, n) {
          var o = n(57), r = n(14)("iterator"), i = Array.prototype;
          e.exports = function(e2) {
            return void 0 !== e2 && (o.Array === e2 || i[r] === e2);
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(18), r = n(44);
          e.exports = function(e2, t2, n2) {
            t2 in e2 ? o.f(e2, t2, r(0, n2)) : e2[t2] = n2;
          };
        }, function(e, t, n) {
          var o = n(64), r = n(14)("iterator"), i = n(57);
          e.exports = n(16).getIteratorMethod = function(e2) {
            if (null != e2)
              return e2[r] || e2["@@iterator"] || i[o(e2)];
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(22), r = n(48), i = n(15);
          e.exports = function(e2) {
            for (var t2 = o(this), n2 = i(t2.length), a = arguments.length, s = r(a > 1 ? arguments[1] : void 0, n2), l = a > 2 ? arguments[2] : void 0, c = void 0 === l ? n2 : r(l, n2); c > s; )
              t2[s++] = e2;
            return t2;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(52), r = n(136), i = n(57), a = n(28);
          e.exports = n(98)(Array, "Array", function(e2, t2) {
            this._t = a(e2), this._i = 0, this._k = t2;
          }, function() {
            var e2 = this._t, t2 = this._k, n2 = this._i++;
            return !e2 || n2 >= e2.length ? (this._t = void 0, r(1)) : r(0, "keys" == t2 ? n2 : "values" == t2 ? e2[n2] : [n2, e2[n2]]);
          }, "values"), i.Arguments = i.Array, o("keys"), o("values"), o("entries");
        }, function(e, t, n) {
          "use strict";
          var o, r, i = n(75), a = RegExp.prototype.exec, s = String.prototype.replace, l = a, c = (o = /a/, r = /b*/g, a.call(o, "a"), a.call(r, "a"), 0 !== o.lastIndex || 0 !== r.lastIndex), u = void 0 !== /()??/.exec("")[1];
          (c || u) && (l = function(e2) {
            var t2, n2, o2, r2, l2 = this;
            return u && (n2 = new RegExp("^" + l2.source + "$(?!\\s)", i.call(l2))), c && (t2 = l2.lastIndex), o2 = a.call(l2, e2), c && o2 && (l2.lastIndex = l2.global ? o2.index + o2[0].length : t2), u && o2 && o2.length > 1 && s.call(o2[0], n2, function() {
              for (r2 = 1; r2 < arguments.length - 2; r2++)
                void 0 === arguments[r2] && (o2[r2] = void 0);
            }), o2;
          }), e.exports = l;
        }, function(e, t, n) {
          "use strict";
          var o = n(97)(true);
          e.exports = function(e2, t2, n2) {
            return t2 + (n2 ? o(e2, t2).length : 1);
          };
        }, function(e, t, n) {
          var o, r, i, a = n(31), s = n(125), l = n(90), c = n(86), u = n(10), f = u.process, d = u.setImmediate, p = u.clearImmediate, h = u.MessageChannel, v = u.Dispatch, g = 0, y = {}, k = function() {
            var e2 = +this;
            if (y.hasOwnProperty(e2)) {
              var t2 = y[e2];
              delete y[e2], t2();
            }
          }, b = function(e2) {
            k.call(e2.data);
          };
          d && p || (d = function(e2) {
            for (var t2 = [], n2 = 1; arguments.length > n2; )
              t2.push(arguments[n2++]);
            return y[++g] = function() {
              s("function" == typeof e2 ? e2 : Function(e2), t2);
            }, o(g), g;
          }, p = function(e2) {
            delete y[e2];
          }, "process" == n(38)(f) ? o = function(e2) {
            f.nextTick(a(k, e2, 1));
          } : v && v.now ? o = function(e2) {
            v.now(a(k, e2, 1));
          } : h ? (i = (r = new h()).port2, r.port1.onmessage = b, o = a(i.postMessage, i, 1)) : u.addEventListener && "function" == typeof postMessage && !u.importScripts ? (o = function(e2) {
            u.postMessage(e2 + "", "*");
          }, u.addEventListener("message", b, false)) : o = "onreadystatechange" in c("script") ? function(e2) {
            l.appendChild(c("script")).onreadystatechange = function() {
              l.removeChild(this), k.call(e2);
            };
          } : function(e2) {
            setTimeout(a(k, e2, 1), 0);
          }), e.exports = { set: d, clear: p };
        }, function(e, t, n) {
          "use strict";
          var o = n(10), r = n(17), i = n(46), a = n(81), s = n(27), l = n(60), c = n(11), u = n(59), f = n(33), d = n(15), p = n(144), h = n(50).f, v = n(18).f, g = n(105), y = n(55), k = o.ArrayBuffer, b = o.DataView, m = o.Math, w = o.RangeError, x = o.Infinity, C = k, S = m.abs, T = m.pow, E = m.floor, B = m.log, M = m.LN2, _ = r ? "_b" : "buffer", O = r ? "_l" : "byteLength", I = r ? "_o" : "byteOffset";
          function L2(e2, t2, n2) {
            var o2, r2, i2, a2 = new Array(n2), s2 = 8 * n2 - t2 - 1, l2 = (1 << s2) - 1, c2 = l2 >> 1, u2 = 23 === t2 ? T(2, -24) - T(2, -77) : 0, f2 = 0, d2 = e2 < 0 || 0 === e2 && 1 / e2 < 0 ? 1 : 0;
            for ((e2 = S(e2)) != e2 || e2 === x ? (r2 = e2 != e2 ? 1 : 0, o2 = l2) : (o2 = E(B(e2) / M), e2 * (i2 = T(2, -o2)) < 1 && (o2--, i2 *= 2), (e2 += o2 + c2 >= 1 ? u2 / i2 : u2 * T(2, 1 - c2)) * i2 >= 2 && (o2++, i2 /= 2), o2 + c2 >= l2 ? (r2 = 0, o2 = l2) : o2 + c2 >= 1 ? (r2 = (e2 * i2 - 1) * T(2, t2), o2 += c2) : (r2 = e2 * T(2, c2 - 1) * T(2, t2), o2 = 0)); t2 >= 8; a2[f2++] = 255 & r2, r2 /= 256, t2 -= 8)
              ;
            for (o2 = o2 << t2 | r2, s2 += t2; s2 > 0; a2[f2++] = 255 & o2, o2 /= 256, s2 -= 8)
              ;
            return a2[--f2] |= 128 * d2, a2;
          }
          function P(e2, t2, n2) {
            var o2, r2 = 8 * n2 - t2 - 1, i2 = (1 << r2) - 1, a2 = i2 >> 1, s2 = r2 - 7, l2 = n2 - 1, c2 = e2[l2--], u2 = 127 & c2;
            for (c2 >>= 7; s2 > 0; u2 = 256 * u2 + e2[l2], l2--, s2 -= 8)
              ;
            for (o2 = u2 & (1 << -s2) - 1, u2 >>= -s2, s2 += t2; s2 > 0; o2 = 256 * o2 + e2[l2], l2--, s2 -= 8)
              ;
            if (0 === u2)
              u2 = 1 - a2;
            else {
              if (u2 === i2)
                return o2 ? NaN : c2 ? -x : x;
              o2 += T(2, t2), u2 -= a2;
            }
            return (c2 ? -1 : 1) * o2 * T(2, u2 - t2);
          }
          function j(e2) {
            return e2[3] << 24 | e2[2] << 16 | e2[1] << 8 | e2[0];
          }
          function R(e2) {
            return [255 & e2];
          }
          function A(e2) {
            return [255 & e2, e2 >> 8 & 255];
          }
          function N(e2) {
            return [255 & e2, e2 >> 8 & 255, e2 >> 16 & 255, e2 >> 24 & 255];
          }
          function D(e2) {
            return L2(e2, 52, 8);
          }
          function F(e2) {
            return L2(e2, 23, 4);
          }
          function H(e2, t2, n2) {
            v(e2.prototype, t2, { get: function() {
              return this[n2];
            } });
          }
          function W(e2, t2, n2, o2) {
            var r2 = p(+n2);
            if (r2 + t2 > e2[O])
              throw w("Wrong index!");
            var i2 = e2[_]._b, a2 = r2 + e2[I], s2 = i2.slice(a2, a2 + t2);
            return o2 ? s2 : s2.reverse();
          }
          function U(e2, t2, n2, o2, r2, i2) {
            var a2 = p(+n2);
            if (a2 + t2 > e2[O])
              throw w("Wrong index!");
            for (var s2 = e2[_]._b, l2 = a2 + e2[I], c2 = o2(+r2), u2 = 0; u2 < t2; u2++)
              s2[l2 + u2] = c2[i2 ? u2 : t2 - u2 - 1];
          }
          if (a.ABV) {
            if (!c(function() {
              k(1);
            }) || !c(function() {
              new k(-1);
            }) || c(function() {
              return new k(), new k(1.5), new k(NaN), "ArrayBuffer" != k.name;
            })) {
              for (var z, V = (k = function(e2) {
                return u(this, k), new C(p(e2));
              }).prototype = C.prototype, Y = h(C), X = 0; Y.length > X; )
                (z = Y[X++]) in k || s(k, z, C[z]);
              i || (V.constructor = k);
            }
            var G = new b(new k(2)), K = b.prototype.setInt8;
            G.setInt8(0, 2147483648), G.setInt8(1, 2147483649), !G.getInt8(0) && G.getInt8(1) || l(b.prototype, { setInt8: function(e2, t2) {
              K.call(this, e2, t2 << 24 >> 24);
            }, setUint8: function(e2, t2) {
              K.call(this, e2, t2 << 24 >> 24);
            } }, true);
          } else
            k = function(e2) {
              u(this, k, "ArrayBuffer");
              var t2 = p(e2);
              this._b = g.call(new Array(t2), 0), this[O] = t2;
            }, b = function(e2, t2, n2) {
              u(this, b, "DataView"), u(e2, k, "DataView");
              var o2 = e2[O], r2 = f(t2);
              if (r2 < 0 || r2 > o2)
                throw w("Wrong offset!");
              if (r2 + (n2 = void 0 === n2 ? o2 - r2 : d(n2)) > o2)
                throw w("Wrong length!");
              this[_] = e2, this[I] = r2, this[O] = n2;
            }, r && (H(k, "byteLength", "_l"), H(b, "buffer", "_b"), H(b, "byteLength", "_l"), H(b, "byteOffset", "_o")), l(b.prototype, { getInt8: function(e2) {
              return W(this, 1, e2)[0] << 24 >> 24;
            }, getUint8: function(e2) {
              return W(this, 1, e2)[0];
            }, getInt16: function(e2) {
              var t2 = W(this, 2, e2, arguments[1]);
              return (t2[1] << 8 | t2[0]) << 16 >> 16;
            }, getUint16: function(e2) {
              var t2 = W(this, 2, e2, arguments[1]);
              return t2[1] << 8 | t2[0];
            }, getInt32: function(e2) {
              return j(W(this, 4, e2, arguments[1]));
            }, getUint32: function(e2) {
              return j(W(this, 4, e2, arguments[1])) >>> 0;
            }, getFloat32: function(e2) {
              return P(W(this, 4, e2, arguments[1]), 23, 4);
            }, getFloat64: function(e2) {
              return P(W(this, 8, e2, arguments[1]), 52, 8);
            }, setInt8: function(e2, t2) {
              U(this, 1, e2, R, t2);
            }, setUint8: function(e2, t2) {
              U(this, 1, e2, R, t2);
            }, setInt16: function(e2, t2) {
              U(this, 2, e2, A, t2, arguments[2]);
            }, setUint16: function(e2, t2) {
              U(this, 2, e2, A, t2, arguments[2]);
            }, setInt32: function(e2, t2) {
              U(this, 4, e2, N, t2, arguments[2]);
            }, setUint32: function(e2, t2) {
              U(this, 4, e2, N, t2, arguments[2]);
            }, setFloat32: function(e2, t2) {
              U(this, 4, e2, F, t2, arguments[2]);
            }, setFloat64: function(e2, t2) {
              U(this, 8, e2, D, t2, arguments[2]);
            } });
          y(k, "ArrayBuffer"), y(b, "DataView"), s(b.prototype, a.VIEW, true), t.ArrayBuffer = k, t.DataView = b;
        }, function(e, t) {
          function n(t2, o) {
            return e.exports = n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e2, t3) {
              return e2.__proto__ = t3, e2;
            }, e.exports.__esModule = true, e.exports.default = e.exports, n(t2, o);
          }
          e.exports = n, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s) {
            "use strict";
            var l = n(1);
            function c(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (c = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = l(r2), i2 = l(i2), s = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = c(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(s);
            var u = function() {
              function e2() {
                (0, r2.default)(this, e2), this.allListeners = [];
              }
              return (0, i2.default)(e2, [{ key: "on", value: function(e3, t2, n2) {
                var o3 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], r3 = s.generateId("l"), i3 = { id: r3, element: e3, eventType: t2, handler: n2, options: o3 }, a2 = this.findOne(e3, t2, n2);
                if (!a2)
                  return this.allListeners.push(i3), e3.addEventListener(t2, n2, o3), r3;
              } }, { key: "off", value: function(e3, t2, n2, o3) {
                var r3 = this, i3 = this.findAll(e3, t2, n2);
                i3.forEach(function(e4, t3) {
                  var n3 = r3.allListeners.indexOf(i3[t3]);
                  n3 > -1 && (r3.allListeners.splice(n3, 1), e4.element.removeEventListener(e4.eventType, e4.handler, e4.options));
                });
              } }, { key: "offById", value: function(e3) {
                var t2 = this.findById(e3);
                t2 && t2.element.removeEventListener(t2.eventType, t2.handler, t2.options);
              } }, { key: "findOne", value: function(e3, t2, n2) {
                var o3 = this.findAll(e3, t2, n2);
                return o3.length > 0 ? o3[0] : null;
              } }, { key: "findAll", value: function(e3, t2, n2) {
                var o3 = e3 ? this.findByEventTarget(e3) : [];
                return e3 && t2 && n2 ? o3.filter(function(e4) {
                  return e4.eventType === t2 && e4.handler === n2;
                }) : e3 && t2 ? o3.filter(function(e4) {
                  return e4.eventType === t2;
                }) : o3;
              } }, { key: "removeAll", value: function() {
                this.allListeners.map(function(e3) {
                  e3.element.removeEventListener(e3.eventType, e3.handler, e3.options);
                }), this.allListeners = [];
              } }, { key: "destroy", value: function() {
                this.removeAll();
              } }, { key: "findByEventTarget", value: function(e3) {
                return this.allListeners.filter(function(t2) {
                  if (t2.element === e3)
                    return t2;
                });
              } }, { key: "findByType", value: function(e3) {
                return this.allListeners.filter(function(t2) {
                  if (t2.eventType === e3)
                    return t2;
                });
              } }, { key: "findByHandler", value: function(e3) {
                return this.allListeners.filter(function(t2) {
                  if (t2.handler === e3)
                    return t2;
                });
              } }, { key: "findById", value: function(e3) {
                return this.allListeners.find(function(t2) {
                  return t2.id === e3;
                });
              } }]), e2;
            }();
            o2.default = u, u.displayName = "Listeners", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t], void 0 === (i = "function" == typeof (o = function(n2) {
            "use strict";
            Object.defineProperty(n2, "__esModule", { value: true }), n2.default = void 0;
            var o2 = function(e2) {
              var t2 = { get id() {
                return e2.id;
              }, get name() {
                return e2.name;
              }, get config() {
                return e2.config;
              }, get holder() {
                return e2.holder;
              }, get isEmpty() {
                return e2.isEmpty;
              }, get selected() {
                return e2.selected;
              }, set stretched(t3) {
                e2.stretched = t3;
              }, get stretched() {
                return e2.stretched;
              }, call: function(t3, n3) {
                return e2.call(t3, n3);
              }, save: function() {
                return e2.save();
              }, validate: function(t3) {
                return e2.validate(t3);
              }, dispatchChange: function() {
                e2.dispatchChange();
              } };
              Object.setPrototypeOf(this, t2);
            };
            n2.default = o2, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o = n(377);
          function r() {
            return "undefined" != typeof Reflect && Reflect.get ? (e.exports = r = Reflect.get.bind(), e.exports.__esModule = true, e.exports.default = e.exports) : (e.exports = r = function(e2, t2, n2) {
              var r2 = o(e2, t2);
              if (r2) {
                var i = Object.getOwnPropertyDescriptor(r2, t2);
                return i.get ? i.get.call(arguments.length < 3 ? e2 : n2) : i.value;
              }
            }, e.exports.__esModule = true, e.exports.default = e.exports), r.apply(this, arguments);
          }
          e.exports = r, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(381)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2), a = s(a);
            var l = function() {
              function e2() {
                (0, r2.default)(this, e2), this.lib = new a.default();
              }
              return (0, i2.default)(e2, [{ key: "destroy", value: function() {
                this.lib.destroy();
              } }, { key: "show", value: function(e3, t2, n2) {
                this.lib.show(e3, t2, n2);
              } }, { key: "hide", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                this.lib.hide(e3);
              } }, { key: "onHover", value: function(e3, t2, n2) {
                this.lib.onHover(e3, t2, n2);
              } }]), e2;
            }();
            o2.default = l, l.displayName = "Tooltip", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(41), n(2), n(3), n(385)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s) {
            "use strict";
            var l = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = l(r2), i2 = l(i2), a = l(a), s = l(s);
            var c = function() {
              function e2() {
                (0, i2.default)(this, e2), this.registeredShortcuts = /* @__PURE__ */ new Map();
              }
              return (0, a.default)(e2, [{ key: "add", value: function(e3) {
                if (this.findShortcut(e3.on, e3.name))
                  throw Error("Shortcut ".concat(e3.name, " is already registered for ").concat(e3.on, ". Please remove it before add a new handler."));
                var t2 = new s.default({ name: e3.name, on: e3.on, callback: e3.handler }), n2 = this.registeredShortcuts.get(e3.on) || [];
                this.registeredShortcuts.set(e3.on, [].concat((0, r2.default)(n2), [t2]));
              } }, { key: "remove", value: function(e3, t2) {
                var n2 = this.findShortcut(e3, t2);
                if (n2) {
                  n2.remove();
                  var o3 = this.registeredShortcuts.get(e3);
                  this.registeredShortcuts.set(e3, o3.filter(function(e4) {
                    return e4 !== n2;
                  }));
                }
              } }, { key: "findShortcut", value: function(e3, t2) {
                return (this.registeredShortcuts.get(e3) || []).find(function(e4) {
                  return e4.name === t2;
                });
              } }]), e2;
            }();
            c.displayName = "Shortcuts";
            var u = new c();
            o2.default = u, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          e.exports = !n(17) && !n(11)(function() {
            return 7 != Object.defineProperty(n(86)("div"), "a", { get: function() {
              return 7;
            } }).a;
          });
        }, function(e, t, n) {
          var o = n(10), r = n(16), i = n(46), a = n(87), s = n(18).f;
          e.exports = function(e2) {
            var t2 = r.Symbol || (r.Symbol = i ? {} : o.Symbol || {});
            "_" == e2.charAt(0) || e2 in t2 || s(t2, e2, { value: a.f(e2) });
          };
        }, function(e, t, n) {
          var o = n(26), r = n(28), i = n(71)(false), a = n(88)("IE_PROTO");
          e.exports = function(e2, t2) {
            var n2, s = r(e2), l = 0, c = [];
            for (n2 in s)
              n2 != a && o(s, n2) && c.push(n2);
            for (; t2.length > l; )
              o(s, n2 = t2[l++]) && (~i(c, n2) || c.push(n2));
            return c;
          };
        }, function(e, t, n) {
          var o = n(18), r = n(12), i = n(47);
          e.exports = n(17) ? Object.defineProperties : function(e2, t2) {
            r(e2);
            for (var n2, a = i(t2), s = a.length, l = 0; s > l; )
              o.f(e2, n2 = a[l++], t2[n2]);
            return e2;
          };
        }, function(e, t, n) {
          var o = n(28), r = n(50).f, i = {}.toString, a = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
          e.exports.f = function(e2) {
            return a && "[object Window]" == i.call(e2) ? function(e3) {
              try {
                return r(e3);
              } catch (e4) {
                return a.slice();
              }
            }(e2) : r(o(e2));
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(17), r = n(47), i = n(72), a = n(63), s = n(22), l = n(62), c = Object.assign;
          e.exports = !c || n(11)(function() {
            var e2 = {}, t2 = {}, n2 = Symbol(), o2 = "abcdefghijklmnopqrst";
            return e2[n2] = 7, o2.split("").forEach(function(e3) {
              t2[e3] = e3;
            }), 7 != c({}, e2)[n2] || Object.keys(c({}, t2)).join("") != o2;
          }) ? function(e2, t2) {
            for (var n2 = s(e2), c2 = arguments.length, u = 1, f = i.f, d = a.f; c2 > u; )
              for (var p, h = l(arguments[u++]), v = f ? r(h).concat(f(h)) : r(h), g = v.length, y = 0; g > y; )
                p = v[y++], o && !d.call(h, p) || (n2[p] = h[p]);
            return n2;
          } : c;
        }, function(e, t) {
          e.exports = Object.is || function(e2, t2) {
            return e2 === t2 ? 0 !== e2 || 1 / e2 == 1 / t2 : e2 != e2 && t2 != t2;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(32), r = n(13), i = n(125), a = [].slice, s = {}, l = function(e2, t2, n2) {
            if (!(t2 in s)) {
              for (var o2 = [], r2 = 0; r2 < t2; r2++)
                o2[r2] = "a[" + r2 + "]";
              s[t2] = Function("F,a", "return new F(" + o2.join(",") + ")");
            }
            return s[t2](e2, n2);
          };
          e.exports = Function.bind || function(e2) {
            var t2 = o(this), n2 = a.call(arguments, 1), s2 = function() {
              var o2 = n2.concat(a.call(arguments));
              return this instanceof s2 ? l(t2, o2.length, o2) : i(t2, o2, e2);
            };
            return r(t2.prototype) && (s2.prototype = t2.prototype), s2;
          };
        }, function(e, t) {
          e.exports = function(e2, t2, n) {
            var o = void 0 === n;
            switch (t2.length) {
              case 0:
                return o ? e2() : e2.call(n);
              case 1:
                return o ? e2(t2[0]) : e2.call(n, t2[0]);
              case 2:
                return o ? e2(t2[0], t2[1]) : e2.call(n, t2[0], t2[1]);
              case 3:
                return o ? e2(t2[0], t2[1], t2[2]) : e2.call(n, t2[0], t2[1], t2[2]);
              case 4:
                return o ? e2(t2[0], t2[1], t2[2], t2[3]) : e2.call(n, t2[0], t2[1], t2[2], t2[3]);
            }
            return e2.apply(n, t2);
          };
        }, function(e, t, n) {
          var o = n(10).parseInt, r = n(56).trim, i = n(92), a = /^[-+]?0[xX]/;
          e.exports = 8 !== o(i + "08") || 22 !== o(i + "0x16") ? function(e2, t2) {
            var n2 = r(String(e2), 3);
            return o(n2, t2 >>> 0 || (a.test(n2) ? 16 : 10));
          } : o;
        }, function(e, t, n) {
          var o = n(10).parseFloat, r = n(56).trim;
          e.exports = 1 / o(n(92) + "-0") != -1 / 0 ? function(e2) {
            var t2 = r(String(e2), 3), n2 = o(t2);
            return 0 === n2 && "-" == t2.charAt(0) ? -0 : n2;
          } : o;
        }, function(e, t, n) {
          var o = n(38);
          e.exports = function(e2, t2) {
            if ("number" != typeof e2 && "Number" != o(e2))
              throw TypeError(t2);
            return +e2;
          };
        }, function(e, t, n) {
          var o = n(13), r = Math.floor;
          e.exports = function(e2) {
            return !o(e2) && isFinite(e2) && r(e2) === e2;
          };
        }, function(e, t) {
          e.exports = Math.log1p || function(e2) {
            return (e2 = +e2) > -1e-8 && e2 < 1e-8 ? e2 - e2 * e2 / 2 : Math.log(1 + e2);
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(49), r = n(44), i = n(55), a = {};
          n(27)(a, n(14)("iterator"), function() {
            return this;
          }), e.exports = function(e2, t2, n2) {
            e2.prototype = o(a, { next: r(1, n2) }), i(e2, t2 + " Iterator");
          };
        }, function(e, t, n) {
          var o = n(12);
          e.exports = function(e2, t2, n2, r) {
            try {
              return r ? t2(o(n2)[0], n2[1]) : t2(n2);
            } catch (t3) {
              var i = e2.return;
              throw void 0 !== i && o(i.call(e2)), t3;
            }
          };
        }, function(e, t, n) {
          var o = n(282);
          e.exports = function(e2, t2) {
            return new (o(e2))(t2);
          };
        }, function(e, t, n) {
          var o = n(32), r = n(22), i = n(62), a = n(15);
          e.exports = function(e2, t2, n2, s, l) {
            o(t2);
            var c = r(e2), u = i(c), f = a(c.length), d = l ? f - 1 : 0, p = l ? -1 : 1;
            if (n2 < 2)
              for (; ; ) {
                if (d in u) {
                  s = u[d], d += p;
                  break;
                }
                if (d += p, l ? d < 0 : f <= d)
                  throw TypeError("Reduce of empty array with no initial value");
              }
            for (; l ? d >= 0 : f > d; d += p)
              d in u && (s = t2(s, u[d], d, c));
            return s;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(22), r = n(48), i = n(15);
          e.exports = [].copyWithin || function(e2, t2) {
            var n2 = o(this), a = i(n2.length), s = r(e2, a), l = r(t2, a), c = arguments.length > 2 ? arguments[2] : void 0, u = Math.min((void 0 === c ? a : r(c, a)) - l, a - s), f = 1;
            for (l < s && s < l + u && (f = -1, l += u - 1, s += u - 1); u-- > 0; )
              l in n2 ? n2[s] = n2[l] : delete n2[s], s += f, l += f;
            return n2;
          };
        }, function(e, t) {
          e.exports = function(e2, t2) {
            return { value: t2, done: !!e2 };
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(107);
          n(0)({ target: "RegExp", proto: true, forced: o !== /./.exec }, { exec: o });
        }, function(e, t, n) {
          n(17) && "g" != /./g.flags && n(18).f(RegExp.prototype, "flags", { configurable: true, get: n(75) });
        }, function(e, t, n) {
          "use strict";
          var o, r, i, a, s = n(46), l = n(10), c = n(31), u = n(64), f = n(0), d = n(13), p = n(32), h = n(59), v = n(78), g = n(65), y = n(109).set, k = n(302)(), b = n(140), m = n(303), w = n(79), x = n(141), C = l.TypeError, S = l.process, T = S && S.versions, E = T && T.v8 || "", B = l.Promise, M = "process" == u(S), _ = function() {
          }, O = r = b.f, I = !!function() {
            try {
              var e2 = B.resolve(1), t2 = (e2.constructor = {})[n(14)("species")] = function(e3) {
                e3(_, _);
              };
              return (M || "function" == typeof PromiseRejectionEvent) && e2.then(_) instanceof t2 && 0 !== E.indexOf("6.6") && -1 === w.indexOf("Chrome/66");
            } catch (e3) {
            }
          }(), L2 = function(e2) {
            var t2;
            return !(!d(e2) || "function" != typeof (t2 = e2.then)) && t2;
          }, P = function(e2, t2) {
            if (!e2._n) {
              e2._n = true;
              var n2 = e2._c;
              k(function() {
                for (var o2 = e2._v, r2 = 1 == e2._s, i2 = 0, a2 = function(t3) {
                  var n3, i3, a3, s2 = r2 ? t3.ok : t3.fail, l2 = t3.resolve, c2 = t3.reject, u2 = t3.domain;
                  try {
                    s2 ? (r2 || (2 == e2._h && A(e2), e2._h = 1), true === s2 ? n3 = o2 : (u2 && u2.enter(), n3 = s2(o2), u2 && (u2.exit(), a3 = true)), n3 === t3.promise ? c2(C("Promise-chain cycle")) : (i3 = L2(n3)) ? i3.call(n3, l2, c2) : l2(n3)) : c2(o2);
                  } catch (e3) {
                    u2 && !a3 && u2.exit(), c2(e3);
                  }
                }; n2.length > i2; )
                  a2(n2[i2++]);
                e2._c = [], e2._n = false, t2 && !e2._h && j(e2);
              });
            }
          }, j = function(e2) {
            y.call(l, function() {
              var t2, n2, o2, r2 = e2._v, i2 = R(e2);
              if (i2 && (t2 = m(function() {
                M ? S.emit("unhandledRejection", r2, e2) : (n2 = l.onunhandledrejection) ? n2({ promise: e2, reason: r2 }) : (o2 = l.console) && o2.error && o2.error("Unhandled promise rejection", r2);
              }), e2._h = M || R(e2) ? 2 : 1), e2._a = void 0, i2 && t2.e)
                throw t2.v;
            });
          }, R = function(e2) {
            return 1 !== e2._h && 0 === (e2._a || e2._c).length;
          }, A = function(e2) {
            y.call(l, function() {
              var t2;
              M ? S.emit("rejectionHandled", e2) : (t2 = l.onrejectionhandled) && t2({ promise: e2, reason: e2._v });
            });
          }, N = function(e2) {
            var t2 = this;
            t2._d || (t2._d = true, (t2 = t2._w || t2)._v = e2, t2._s = 2, t2._a || (t2._a = t2._c.slice()), P(t2, true));
          }, D = function(e2) {
            var t2, n2 = this;
            if (!n2._d) {
              n2._d = true, n2 = n2._w || n2;
              try {
                if (n2 === e2)
                  throw C("Promise can't be resolved itself");
                (t2 = L2(e2)) ? k(function() {
                  var o2 = { _w: n2, _d: false };
                  try {
                    t2.call(e2, c(D, o2, 1), c(N, o2, 1));
                  } catch (e3) {
                    N.call(o2, e3);
                  }
                }) : (n2._v = e2, n2._s = 1, P(n2, false));
              } catch (e3) {
                N.call({ _w: n2, _d: false }, e3);
              }
            }
          };
          I || (B = function(e2) {
            h(this, B, "Promise", "_h"), p(e2), o.call(this);
            try {
              e2(c(D, this, 1), c(N, this, 1));
            } catch (e3) {
              N.call(this, e3);
            }
          }, (o = function(e2) {
            this._c = [], this._a = void 0, this._s = 0, this._d = false, this._v = void 0, this._h = 0, this._n = false;
          }).prototype = n(60)(B.prototype, { then: function(e2, t2) {
            var n2 = O(g(this, B));
            return n2.ok = "function" != typeof e2 || e2, n2.fail = "function" == typeof t2 && t2, n2.domain = M ? S.domain : void 0, this._c.push(n2), this._a && this._a.push(n2), this._s && P(this, false), n2.promise;
          }, catch: function(e2) {
            return this.then(void 0, e2);
          } }), i = function() {
            var e2 = new o();
            this.promise = e2, this.resolve = c(D, e2, 1), this.reject = c(N, e2, 1);
          }, b.f = O = function(e2) {
            return e2 === B || e2 === a ? new i(e2) : r(e2);
          }), f(f.G + f.W + f.F * !I, { Promise: B }), n(55)(B, "Promise"), n(58)("Promise"), a = n(16).Promise, f(f.S + f.F * !I, "Promise", { reject: function(e2) {
            var t2 = O(this);
            return (0, t2.reject)(e2), t2.promise;
          } }), f(f.S + f.F * (s || !I), "Promise", { resolve: function(e2) {
            return x(s && this === a ? B : this, e2);
          } }), f(f.S + f.F * !(I && n(74)(function(e2) {
            B.all(e2).catch(_);
          })), "Promise", { all: function(e2) {
            var t2 = this, n2 = O(t2), o2 = n2.resolve, r2 = n2.reject, i2 = m(function() {
              var n3 = [], i3 = 0, a2 = 1;
              v(e2, false, function(e3) {
                var s2 = i3++, l2 = false;
                n3.push(void 0), a2++, t2.resolve(e3).then(function(e4) {
                  l2 || (l2 = true, n3[s2] = e4, --a2 || o2(n3));
                }, r2);
              }), --a2 || o2(n3);
            });
            return i2.e && r2(i2.v), n2.promise;
          }, race: function(e2) {
            var t2 = this, n2 = O(t2), o2 = n2.reject, r2 = m(function() {
              v(e2, false, function(e3) {
                t2.resolve(e3).then(n2.resolve, o2);
              });
            });
            return r2.e && o2(r2.v), n2.promise;
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(32);
          function r(e2) {
            var t2, n2;
            this.promise = new e2(function(e3, o2) {
              if (void 0 !== t2 || void 0 !== n2)
                throw TypeError("Bad Promise constructor");
              t2 = e3, n2 = o2;
            }), this.resolve = o(t2), this.reject = o(n2);
          }
          e.exports.f = function(e2) {
            return new r(e2);
          };
        }, function(e, t, n) {
          var o = n(12), r = n(13), i = n(140);
          e.exports = function(e2, t2) {
            if (o(e2), r(t2) && t2.constructor === e2)
              return t2;
            var n2 = i.f(e2);
            return (0, n2.resolve)(t2), n2.promise;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(18).f, r = n(49), i = n(60), a = n(31), s = n(59), l = n(78), c = n(98), u = n(136), f = n(58), d = n(17), p = n(43).fastKey, h = n(53), v = d ? "_s" : "size", g = function(e2, t2) {
            var n2, o2 = p(t2);
            if ("F" !== o2)
              return e2._i[o2];
            for (n2 = e2._f; n2; n2 = n2.n)
              if (n2.k == t2)
                return n2;
          };
          e.exports = { getConstructor: function(e2, t2, n2, c2) {
            var u2 = e2(function(e3, o2) {
              s(e3, u2, t2, "_i"), e3._t = t2, e3._i = r(null), e3._f = void 0, e3._l = void 0, e3[v] = 0, null != o2 && l(o2, n2, e3[c2], e3);
            });
            return i(u2.prototype, { clear: function() {
              for (var e3 = h(this, t2), n3 = e3._i, o2 = e3._f; o2; o2 = o2.n)
                o2.r = true, o2.p && (o2.p = o2.p.n = void 0), delete n3[o2.i];
              e3._f = e3._l = void 0, e3[v] = 0;
            }, delete: function(e3) {
              var n3 = h(this, t2), o2 = g(n3, e3);
              if (o2) {
                var r2 = o2.n, i2 = o2.p;
                delete n3._i[o2.i], o2.r = true, i2 && (i2.n = r2), r2 && (r2.p = i2), n3._f == o2 && (n3._f = r2), n3._l == o2 && (n3._l = i2), n3[v]--;
              }
              return !!o2;
            }, forEach: function(e3) {
              h(this, t2);
              for (var n3, o2 = a(e3, arguments.length > 1 ? arguments[1] : void 0, 3); n3 = n3 ? n3.n : this._f; )
                for (o2(n3.v, n3.k, this); n3 && n3.r; )
                  n3 = n3.p;
            }, has: function(e3) {
              return !!g(h(this, t2), e3);
            } }), d && o(u2.prototype, "size", { get: function() {
              return h(this, t2)[v];
            } }), u2;
          }, def: function(e2, t2, n2) {
            var o2, r2, i2 = g(e2, t2);
            return i2 ? i2.v = n2 : (e2._l = i2 = { i: r2 = p(t2, true), k: t2, v: n2, p: o2 = e2._l, n: void 0, r: false }, e2._f || (e2._f = i2), o2 && (o2.n = i2), e2[v]++, "F" !== r2 && (e2._i[r2] = i2)), e2;
          }, getEntry: g, setStrong: function(e2, t2, n2) {
            c(e2, t2, function(e3, n3) {
              this._t = h(e3, t2), this._k = n3, this._l = void 0;
            }, function() {
              for (var e3 = this._k, t3 = this._l; t3 && t3.r; )
                t3 = t3.p;
              return this._t && (this._l = t3 = t3 ? t3.n : this._t._f) ? u(0, "keys" == e3 ? t3.k : "values" == e3 ? t3.v : [t3.k, t3.v]) : (this._t = void 0, u(1));
            }, n2 ? "entries" : "values", !n2, true), f(t2);
          } };
        }, function(e, t, n) {
          "use strict";
          var o = n(60), r = n(43).getWeak, i = n(12), a = n(13), s = n(59), l = n(78), c = n(36), u = n(26), f = n(53), d = c(5), p = c(6), h = 0, v = function(e2) {
            return e2._l || (e2._l = new g());
          }, g = function() {
            this.a = [];
          }, y = function(e2, t2) {
            return d(e2.a, function(e3) {
              return e3[0] === t2;
            });
          };
          g.prototype = { get: function(e2) {
            var t2 = y(this, e2);
            if (t2)
              return t2[1];
          }, has: function(e2) {
            return !!y(this, e2);
          }, set: function(e2, t2) {
            var n2 = y(this, e2);
            n2 ? n2[1] = t2 : this.a.push([e2, t2]);
          }, delete: function(e2) {
            var t2 = p(this.a, function(t3) {
              return t3[0] === e2;
            });
            return ~t2 && this.a.splice(t2, 1), !!~t2;
          } }, e.exports = { getConstructor: function(e2, t2, n2, i2) {
            var c2 = e2(function(e3, o2) {
              s(e3, c2, t2, "_i"), e3._t = t2, e3._i = h++, e3._l = void 0, null != o2 && l(o2, n2, e3[i2], e3);
            });
            return o(c2.prototype, { delete: function(e3) {
              if (!a(e3))
                return false;
              var n3 = r(e3);
              return true === n3 ? v(f(this, t2)).delete(e3) : n3 && u(n3, this._i) && delete n3[this._i];
            }, has: function(e3) {
              if (!a(e3))
                return false;
              var n3 = r(e3);
              return true === n3 ? v(f(this, t2)).has(e3) : n3 && u(n3, this._i);
            } }), c2;
          }, def: function(e2, t2, n2) {
            var o2 = r(i(t2), true);
            return true === o2 ? v(e2).set(t2, n2) : o2[e2._i] = n2, e2;
          }, ufstore: v };
        }, function(e, t, n) {
          var o = n(33), r = n(15);
          e.exports = function(e2) {
            if (void 0 === e2)
              return 0;
            var t2 = o(e2), n2 = r(t2);
            if (t2 !== n2)
              throw RangeError("Wrong length!");
            return n2;
          };
        }, function(e, t, n) {
          var o = n(50), r = n(72), i = n(12), a = n(10).Reflect;
          e.exports = a && a.ownKeys || function(e2) {
            var t2 = o.f(i(e2)), n2 = r.f;
            return n2 ? t2.concat(n2(e2)) : t2;
          };
        }, function(e, t, n) {
          var o = n(15), r = n(94), i = n(39);
          e.exports = function(e2, t2, n2, a) {
            var s = String(i(e2)), l = s.length, c = void 0 === n2 ? " " : String(n2), u = o(t2);
            if (u <= l || "" == c)
              return s;
            var f = u - l, d = r.call(c, Math.ceil(f / c.length));
            return d.length > f && (d = d.slice(0, f)), a ? d + s : s + d;
          };
        }, function(e, t, n) {
          var o = n(17), r = n(47), i = n(28), a = n(63).f;
          e.exports = function(e2) {
            return function(t2) {
              for (var n2, s = i(t2), l = r(s), c = l.length, u = 0, f = []; c > u; )
                n2 = l[u++], o && !a.call(s, n2) || f.push(e2 ? [n2, s[n2]] : s[n2]);
              return f;
            };
          };
        }, function(e, t, n) {
          var o = n(149);
          e.exports = function(e2, t2) {
            if (e2) {
              if ("string" == typeof e2)
                return o(e2, t2);
              var n2 = Object.prototype.toString.call(e2).slice(8, -1);
              return "Object" === n2 && e2.constructor && (n2 = e2.constructor.name), "Map" === n2 || "Set" === n2 ? Array.from(e2) : "Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2) ? o(e2, t2) : void 0;
            }
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function(e2, t2) {
            (null == t2 || t2 > e2.length) && (t2 = e2.length);
            for (var n = 0, o = new Array(t2); n < t2; n++)
              o[n] = e2[n];
            return o;
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e) {
          e.exports = JSON.parse('{"ui":{"blockTunes":{"toggler":{"Click to tune":"","or drag to move":""}},"inlineToolbar":{"converter":{"Convert to":""}},"toolbar":{"toolbox":{"Add":""}},"popover":{"Filter":"","Nothing found":""}},"toolNames":{"Text":"","Link":"","Bold":"","Italic":""},"tools":{"link":{"Add a link":""},"stub":{"The block can not be displayed correctly.":""}},"blockTunes":{"delete":{"Delete":"","Click to delete":""},"moveUp":{"Move up":""},"moveDown":{"Move down":""}}}');
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(3), n(2), n(5), n(6), n(4), n(153)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2, r2, i2, a, s) {
            "use strict";
            var l = n(1);
            function c(e3) {
              var t3 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e4) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, a.default)(e3);
                if (t3) {
                  var r3 = (0, a.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, i2.default)(this, n2);
              };
            }
            Object.defineProperty(e2, "__esModule", { value: true }), e2.CriticalError = void 0, t2 = l(t2), o2 = l(o2), r2 = l(r2), i2 = l(i2), a = l(a);
            var u = function(e3) {
              (0, r2.default)(i3, e3);
              var n2 = c(i3);
              function i3() {
                return (0, o2.default)(this, i3), n2.apply(this, arguments);
              }
              return (0, t2.default)(i3);
            }((0, (s = l(s)).default)(Error));
            e2.CriticalError = u, u.displayName = "CriticalError";
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t) {
          e.exports = function(e2) {
            if (void 0 === e2)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e2;
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(4), r = n(111), i = n(373), a = n(374);
          function s(t2) {
            var n2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
            return e.exports = s = function(e2) {
              if (null === e2 || !i(e2))
                return e2;
              if ("function" != typeof e2)
                throw new TypeError("Super expression must either be null or a function");
              if (void 0 !== n2) {
                if (n2.has(e2))
                  return n2.get(e2);
                n2.set(e2, t3);
              }
              function t3() {
                return a(e2, arguments, o(this).constructor);
              }
              return t3.prototype = Object.create(e2.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }), r(t3, e2);
            }, e.exports.__esModule = true, e.exports.default = e.exports, s(t2);
          }
          e.exports = s, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(5), n(6), n(4), n(8), n(113), n(9), n(61)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v) {
            "use strict";
            var g = n(1);
            function y(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (y = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function k(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, f.default)(e2);
                if (t2) {
                  var r3 = (0, f.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, u.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = g(r2), i2 = g(i2), s = g(s), l = g(l), c = g(c), u = g(u), f = g(f), d = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = y(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(d), p = g(p), h = g(h), v = g(v);
            var b = function(e2) {
              (0, c.default)(n2, e2);
              var t2 = k(n2);
              function n2() {
                var e3;
                return (0, s.default)(this, n2), (e3 = t2.apply(this, arguments)).insert = function() {
                  var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e3.config.defaultBlock, n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, o3 = arguments.length > 3 ? arguments[3] : void 0, r3 = arguments.length > 4 ? arguments[4] : void 0, i3 = arguments.length > 5 ? arguments[5] : void 0, a2 = arguments.length > 6 ? arguments[6] : void 0, s2 = e3.Editor.BlockManager.insert({ id: a2, tool: t3, data: n3, index: o3, needToFocus: r3, replace: i3 });
                  return new p.default(s2);
                }, e3.composeBlockData = function() {
                  var t3 = (0, i2.default)(r2.default.mark(function t4(n3) {
                    var o3, i3;
                    return r2.default.wrap(function(t5) {
                      for (; ; )
                        switch (t5.prev = t5.next) {
                          case 0:
                            return o3 = e3.Editor.Tools.blockTools.get(n3), i3 = new v.default({ tool: o3, api: e3.Editor.API, readOnly: true, data: {}, tunesData: {} }), t5.abrupt("return", i3.data);
                          case 3:
                          case "end":
                            return t5.stop();
                        }
                    }, t4);
                  }));
                  return function(e4) {
                    return t3.apply(this, arguments);
                  };
                }(), e3.update = function(t3, n3) {
                  var o3 = e3.Editor.BlockManager, r3 = o3.getBlockById(t3);
                  if (r3) {
                    var i3 = o3.getBlockIndex(r3);
                    o3.insert({ id: r3.id, tool: r3.name, data: n3, index: i3, replace: true, tunes: r3.tunes });
                  } else
                    d.log("blocks.update(): Block with passed id was not found", "warn");
                }, e3;
              }
              return (0, l.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { clear: function() {
                  return e3.clear();
                }, render: function(t3) {
                  return e3.render(t3);
                }, renderFromHTML: function(t3) {
                  return e3.renderFromHTML(t3);
                }, delete: function(t3) {
                  return e3.delete(t3);
                }, swap: function(t3, n3) {
                  return e3.swap(t3, n3);
                }, move: function(t3, n3) {
                  return e3.move(t3, n3);
                }, getBlockByIndex: function(t3) {
                  return e3.getBlockByIndex(t3);
                }, getById: function(t3) {
                  return e3.getById(t3);
                }, getCurrentBlockIndex: function() {
                  return e3.getCurrentBlockIndex();
                }, getBlockIndex: function(t3) {
                  return e3.getBlockIndex(t3);
                }, getBlocksCount: function() {
                  return e3.getBlocksCount();
                }, stretchBlock: function(t3) {
                  var n3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                  return e3.stretchBlock(t3, n3);
                }, insertNewBlock: function() {
                  return e3.insertNewBlock();
                }, insert: this.insert, update: this.update, composeBlockData: this.composeBlockData };
              } }, { key: "getBlocksCount", value: function() {
                return this.Editor.BlockManager.blocks.length;
              } }, { key: "getCurrentBlockIndex", value: function() {
                return this.Editor.BlockManager.currentBlockIndex;
              } }, { key: "getBlockIndex", value: function(e3) {
                var t3 = this.Editor.BlockManager.getBlockById(e3);
                if (t3)
                  return this.Editor.BlockManager.getBlockIndex(t3);
                d.logLabeled("There is no block with id `" + e3 + "`", "warn");
              } }, { key: "getBlockByIndex", value: function(e3) {
                var t3 = this.Editor.BlockManager.getBlockByIndex(e3);
                if (void 0 !== t3)
                  return new p.default(t3);
                d.logLabeled("There is no block at index `" + e3 + "`", "warn");
              } }, { key: "getById", value: function(e3) {
                var t3 = this.Editor.BlockManager.getBlockById(e3);
                return void 0 === t3 ? (d.logLabeled("There is no block with id `" + e3 + "`", "warn"), null) : new p.default(t3);
              } }, { key: "swap", value: function(e3, t3) {
                d.log("`blocks.swap()` method is deprecated and will be removed in the next major release. Use `block.move()` method instead", "info"), this.Editor.BlockManager.swap(e3, t3);
              } }, { key: "move", value: function(e3, t3) {
                this.Editor.BlockManager.move(e3, t3);
              } }, { key: "delete", value: function(e3) {
                try {
                  this.Editor.BlockManager.removeBlock(e3);
                } catch (e4) {
                  return void d.logLabeled(e4, "warn");
                }
                0 === this.Editor.BlockManager.blocks.length && this.Editor.BlockManager.insert(), this.Editor.BlockManager.currentBlock && this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock, this.Editor.Caret.positions.END), this.Editor.Toolbar.close();
              } }, { key: "clear", value: function() {
                this.Editor.BlockManager.clear(true), this.Editor.InlineToolbar.close();
              } }, { key: "render", value: function(e3) {
                return this.Editor.BlockManager.clear(), this.Editor.Renderer.render(e3.blocks);
              } }, { key: "renderFromHTML", value: function(e3) {
                return this.Editor.BlockManager.clear(), this.Editor.Paste.processText(e3, true);
              } }, { key: "stretchBlock", value: function(e3) {
                var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                d.deprecationAssert(true, "blocks.stretchBlock()", "BlockAPI");
                var n3 = this.Editor.BlockManager.getBlockByIndex(e3);
                n3 && (n3.stretched = t3);
              } }, { key: "insertNewBlock", value: function() {
                d.log("Method blocks.insertNewBlock() is deprecated and it will be removed in the next major release. Use blocks.insert() instead.", "warn"), this.insert();
              } }]), n2;
            }(h.default);
            o2.default = b, b.displayName = "BlocksAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                var e3;
                return (0, r2.default)(this, n2), (e3 = t2.apply(this, arguments)).setToFirstBlock = function() {
                  var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e3.Editor.Caret.positions.DEFAULT, n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                  return !!e3.Editor.BlockManager.firstBlock && (e3.Editor.Caret.setToBlock(e3.Editor.BlockManager.firstBlock, t3, n3), true);
                }, e3.setToLastBlock = function() {
                  var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e3.Editor.Caret.positions.DEFAULT, n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                  return !!e3.Editor.BlockManager.lastBlock && (e3.Editor.Caret.setToBlock(e3.Editor.BlockManager.lastBlock, t3, n3), true);
                }, e3.setToPreviousBlock = function() {
                  var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e3.Editor.Caret.positions.DEFAULT, n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                  return !!e3.Editor.BlockManager.previousBlock && (e3.Editor.Caret.setToBlock(e3.Editor.BlockManager.previousBlock, t3, n3), true);
                }, e3.setToNextBlock = function() {
                  var t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e3.Editor.Caret.positions.DEFAULT, n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                  return !!e3.Editor.BlockManager.nextBlock && (e3.Editor.Caret.setToBlock(e3.Editor.BlockManager.nextBlock, t3, n3), true);
                }, e3.setToBlock = function(t3) {
                  var n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : e3.Editor.Caret.positions.DEFAULT, o3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                  return !!e3.Editor.BlockManager.blocks[t3] && (e3.Editor.Caret.setToBlock(e3.Editor.BlockManager.blocks[t3], n3, o3), true);
                }, e3.focus = function() {
                  var t3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                  return t3 ? e3.setToLastBlock(e3.Editor.Caret.positions.END) : e3.setToFirstBlock(e3.Editor.Caret.positions.START);
                }, e3;
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                return { setToFirstBlock: this.setToFirstBlock, setToLastBlock: this.setToLastBlock, setToPreviousBlock: this.setToPreviousBlock, setToNextBlock: this.setToNextBlock, setToBlock: this.setToBlock, focus: this.focus };
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "CaretAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { emit: function(t3, n3) {
                  return e3.emit(t3, n3);
                }, off: function(t3, n3) {
                  return e3.off(t3, n3);
                }, on: function(t3, n3) {
                  return e3.on(t3, n3);
                } };
              } }, { key: "on", value: function(e3, t3) {
                this.eventsDispatcher.on(e3, t3);
              } }, { key: "emit", value: function(e3, t3) {
                this.eventsDispatcher.emit(e3, t3);
              } }, { key: "off", value: function(e3, t3) {
                this.eventsDispatcher.off(e3, t3);
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "EventsAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(54), n(8), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u, f) {
            "use strict";
            var d = n(1);
            function p(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = d(r2), i2 = d(i2), a = d(a), s = d(s), l = d(l), c = d(c);
            var h = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = p(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                return { t: function() {
                  (0, u.logLabeled)("I18n.t() method can be accessed only from Tools", "warn");
                } };
              } }, { key: "getMethodsForTool", value: function(e3) {
                return Object.assign(this.methods, { t: function(t3) {
                  return c.default.t(n2.getNamespace(e3), t3);
                } });
              } }], [{ key: "getNamespace", value: function(e3) {
                return e3.isTune() ? "blockTunes.".concat(e3.name) : "tools.".concat(e3.name);
              } }]), n2;
            }((f = d(f)).default);
            o2.default = h, h.displayName = "I18nAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { close: function() {
                  return e3.close();
                }, open: function() {
                  return e3.open();
                } };
              } }, { key: "open", value: function() {
                this.Editor.InlineToolbar.tryToShow();
              } }, { key: "close", value: function() {
                this.Editor.InlineToolbar.close();
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "InlineToolbarAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { on: function(t3, n3, o3, r3) {
                  return e3.on(t3, n3, o3, r3);
                }, off: function(t3, n3, o3, r3) {
                  return e3.off(t3, n3, o3, r3);
                }, offById: function(t3) {
                  return e3.offById(t3);
                } };
              } }, { key: "on", value: function(e3, t3, n3, o3) {
                return this.listeners.on(e3, t3, n3, o3);
              } }, { key: "off", value: function(e3, t3, n3, o3) {
                this.listeners.off(e3, t3, n3, o3);
              } }, { key: "offById", value: function(e3) {
                this.listeners.offById(e3);
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "ListenersAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(378), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u) {
            "use strict";
            var f = n(1);
            function d(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = f(r2), i2 = f(i2), a = f(a), s = f(s), l = f(l), c = f(c);
            var p = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = d(n2);
              function n2(e3) {
                var o3, i3 = e3.config, a2 = e3.eventsDispatcher;
                return (0, r2.default)(this, n2), (o3 = t2.call(this, { config: i3, eventsDispatcher: a2 })).notifier = new c.default(), o3;
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { show: function(t3) {
                  return e3.show(t3);
                } };
              } }, { key: "show", value: function(e3) {
                return this.notifier.show(e3);
              } }]), n2;
            }((u = f(u)).default);
            o2.default = p, p.displayName = "NotifierAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { toggle: function(t3) {
                  return e3.toggle(t3);
                }, get isEnabled() {
                  return e3.isEnabled;
                } };
              } }, { key: "toggle", value: function(e3) {
                return this.Editor.ReadOnly.toggle(e3);
              } }, { key: "isEnabled", get: function() {
                return this.Editor.ReadOnly.isEnabled;
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "ReadOnlyAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(66)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u) {
            "use strict";
            var f = n(1);
            function d(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = f(r2), i2 = f(i2), a = f(a), s = f(s), l = f(l);
            var p = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = d(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { clean: function(t3, n3) {
                  return e3.clean(t3, n3);
                } };
              } }, { key: "clean", value: function(e3, t3) {
                return (0, u.clean)(e3, t3);
              } }]), n2;
            }((c = f(c)).default);
            o2.default = p, p.displayName = "SanitizerAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(8), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f) {
            "use strict";
            var d = n(1);
            function p(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (p = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function h(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = d(r2), i2 = d(i2), s = d(s), l = d(l), c = d(c), u = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = p(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(u);
            var v = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = h(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { save: function() {
                  return e3.save();
                } };
              } }, { key: "save", value: function() {
                var e3 = "Editor's content can not be saved in read-only mode";
                return this.Editor.ReadOnly.isEnabled ? (u.logLabeled(e3, "warn"), Promise.reject(new Error(e3))) : this.Editor.Saver.save();
              } }]), n2;
            }((f = d(f)).default);
            o2.default = v, v.displayName = "SaverAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(25), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u) {
            "use strict";
            var f = n(1);
            function d(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = f(r2), i2 = f(i2), a = f(a), s = f(s), l = f(l), c = f(c);
            var p = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = d(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { findParentTag: function(t3, n3) {
                  return e3.findParentTag(t3, n3);
                }, expandToTag: function(t3) {
                  return e3.expandToTag(t3);
                } };
              } }, { key: "findParentTag", value: function(e3, t3) {
                return new c.default().findParentTag(e3, t3);
              } }, { key: "expandToTag", value: function(e3) {
                new c.default().expandToTag(e3);
              } }]), n2;
            }((u = f(u)).default);
            o2.default = p, p.displayName = "SelectionAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "classes", get: function() {
                return { block: "cdx-block", inlineToolButton: "ce-inline-tool", inlineToolButtonActive: "ce-inline-tool--active", input: "cdx-input", loader: "cdx-loader", button: "cdx-button", settingsButton: "cdx-settings-button", settingsButtonActive: "cdx-settings-button--active" };
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "StylesAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f) {
            "use strict";
            var d = n(1);
            function p(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (p = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function h(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = d(r2), i2 = d(i2), s = d(s), l = d(l), c = d(c), u = d(u), f = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = p(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(f);
            var v = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = h(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                var e3 = this;
                return { close: function() {
                  return e3.close();
                }, open: function() {
                  return e3.open();
                }, toggleBlockSettings: function(t3) {
                  return e3.toggleBlockSettings(t3);
                } };
              } }, { key: "open", value: function() {
                this.Editor.Toolbar.moveAndOpen();
              } }, { key: "close", value: function() {
                this.Editor.Toolbar.close();
              } }, { key: "toggleBlockSettings", value: function(e3) {
                -1 !== this.Editor.BlockManager.currentBlockIndex ? (null != e3 ? e3 : !this.Editor.BlockSettings.opened) ? (this.Editor.Toolbar.moveAndOpen(), this.Editor.BlockSettings.open()) : this.Editor.BlockSettings.close() : f.logLabeled("Could't toggle the Toolbar because there is no block selected ", "warn");
              } }]), n2;
            }(u.default);
            o2.default = v, v.displayName = "ToolbarAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(115)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u) {
            "use strict";
            var f = n(1);
            function d(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = f(r2), i2 = f(i2), a = f(a), s = f(s), l = f(l), c = f(c), u = f(u);
            var p = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = d(n2);
              function n2(e3) {
                var o3, i3 = e3.config, a2 = e3.eventsDispatcher;
                return (0, r2.default)(this, n2), (o3 = t2.call(this, { config: i3, eventsDispatcher: a2 })).tooltip = new u.default(), o3;
              }
              return (0, i2.default)(n2, [{ key: "destroy", value: function() {
                this.tooltip.destroy();
              } }, { key: "methods", get: function() {
                var e3 = this;
                return { show: function(t3, n3, o3) {
                  return e3.show(t3, n3, o3);
                }, hide: function() {
                  return e3.hide();
                }, onHover: function(t3, n3, o3) {
                  return e3.onHover(t3, n3, o3);
                } };
              } }, { key: "show", value: function(e3, t3, n3) {
                this.tooltip.show(e3, t3, n3);
              } }, { key: "hide", value: function() {
                this.tooltip.hide();
              } }, { key: "onHover", value: function(e3, t3, n3) {
                this.tooltip.onHover(e3, t3, n3);
              } }]), n2;
            }(c.default);
            o2.default = p, p.displayName = "TooltipAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, l.default)(e2);
                if (t2) {
                  var r3 = (0, l.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, s.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), a = u(a), s = u(s), l = u(l);
            var d = function(e2) {
              (0, a.default)(n2, e2);
              var t2 = f(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "methods", get: function() {
                return { nodes: this.editorNodes };
              } }, { key: "editorNodes", get: function() {
                return { wrapper: this.Editor.UI.nodes.wrapper, redactor: this.Editor.UI.nodes.redactor };
              } }]), n2;
            }((c = u(c)).default);
            o2.default = d, d.displayName = "UiAPI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(8), n(25), n(67)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p) {
            "use strict";
            var h = n(1);
            function v(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (v = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function g(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = h(r2), i2 = h(i2), s = h(s), l = h(l), c = h(c), u = h(u), f = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = v(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(f), d = h(d), p = h(p);
            var y = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = g(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "keydown", value: function(e3) {
                switch (this.beforeKeydownProcessing(e3), e3.keyCode) {
                  case f.keyCodes.BACKSPACE:
                    this.backspace(e3);
                    break;
                  case f.keyCodes.ENTER:
                    this.enter(e3);
                    break;
                  case f.keyCodes.DOWN:
                  case f.keyCodes.RIGHT:
                    this.arrowRightAndDown(e3);
                    break;
                  case f.keyCodes.UP:
                  case f.keyCodes.LEFT:
                    this.arrowLeftAndUp(e3);
                    break;
                  case f.keyCodes.TAB:
                    this.tabPressed(e3);
                }
              } }, { key: "beforeKeydownProcessing", value: function(e3) {
                this.needToolbarClosing(e3) && f.isPrintableKey(e3.keyCode) && (this.Editor.Toolbar.close(), this.Editor.ConversionToolbar.close(), e3.ctrlKey || e3.metaKey || e3.altKey || e3.shiftKey || (this.Editor.BlockManager.clearFocused(), this.Editor.BlockSelection.clearSelection(e3)));
              } }, { key: "keyup", value: function(e3) {
                e3.shiftKey || this.Editor.UI.checkEmptiness();
              } }, { key: "tabPressed", value: function(e3) {
                this.Editor.BlockSelection.clearSelection(e3);
                var t3 = this.Editor, n3 = t3.BlockManager, o3 = t3.InlineToolbar, r3 = t3.ConversionToolbar, i3 = n3.currentBlock;
                if (i3) {
                  var a2 = i3.isEmpty, s2 = i3.tool.isDefault && a2, l2 = !a2 && r3.opened, c2 = !a2 && !d.default.isCollapsed && o3.opened, u2 = !l2 && !c2;
                  s2 ? this.activateToolbox() : u2 && this.activateBlockSettings();
                }
              } }, { key: "dragOver", value: function(e3) {
                this.Editor.BlockManager.getBlockByChildNode(e3.target).dropTarget = true;
              } }, { key: "dragLeave", value: function(e3) {
                this.Editor.BlockManager.getBlockByChildNode(e3.target).dropTarget = false;
              } }, { key: "handleCommandC", value: function(e3) {
                var t3 = this.Editor.BlockSelection;
                t3.anyBlockSelected && t3.copySelectedBlocks(e3);
              } }, { key: "handleCommandX", value: function(e3) {
                var t3 = this.Editor, n3 = t3.BlockSelection, o3 = t3.BlockManager, r3 = t3.Caret;
                n3.anyBlockSelected && n3.copySelectedBlocks(e3).then(function() {
                  var t4 = o3.removeSelectedBlocks(), i3 = o3.insertDefaultBlockAtIndex(t4, true);
                  r3.setToBlock(i3, r3.positions.START), n3.clearSelection(e3);
                });
              } }, { key: "enter", value: function(e3) {
                var t3 = this.Editor, n3 = t3.BlockManager, o3 = t3.UI;
                if (!n3.currentBlock.tool.isLineBreaksEnabled && !(o3.someToolbarOpened && o3.someFlipperButtonFocused || e3.shiftKey)) {
                  var r3 = this.Editor.BlockManager.currentBlock;
                  this.Editor.Caret.isAtStart && !this.Editor.BlockManager.currentBlock.hasMedia ? this.Editor.BlockManager.insertDefaultBlockAtIndex(this.Editor.BlockManager.currentBlockIndex) : r3 = this.Editor.BlockManager.split(), this.Editor.Caret.setToBlock(r3), this.Editor.Toolbar.moveAndOpen(r3), e3.preventDefault();
                }
              } }, { key: "backspace", value: function(e3) {
                var t3 = this.Editor, n3 = t3.BlockManager, o3 = t3.BlockSelection, r3 = t3.Caret, i3 = n3.currentBlock, a2 = i3.tool;
                if (i3.selected || i3.isEmpty && i3.currentInput === i3.firstInput) {
                  e3.preventDefault();
                  var s2 = n3.currentBlockIndex;
                  return n3.previousBlock && 0 === n3.previousBlock.inputs.length ? n3.removeBlock(s2 - 1) : n3.removeBlock(), r3.setToBlock(n3.currentBlock, s2 ? r3.positions.END : r3.positions.START), this.Editor.Toolbar.close(), void o3.clearSelection(e3);
                }
                if (!a2.isLineBreaksEnabled || r3.isAtStart) {
                  var l2 = 0 === n3.currentBlockIndex;
                  r3.isAtStart && d.default.isCollapsed && i3.currentInput === i3.firstInput && !l2 && (e3.preventDefault(), this.mergeBlocks());
                }
              } }, { key: "mergeBlocks", value: function() {
                var e3 = this.Editor, t3 = e3.BlockManager, n3 = e3.Caret, o3 = e3.Toolbar, r3 = t3.previousBlock, i3 = t3.currentBlock;
                if (i3.name !== r3.name || !r3.mergeable)
                  return 0 === r3.inputs.length || r3.isEmpty ? (t3.removeBlock(t3.currentBlockIndex - 1), n3.setToBlock(t3.currentBlock), void o3.close()) : void (n3.navigatePrevious() && o3.close());
                n3.createShadow(r3.pluginsContent), t3.mergeBlocks(r3, i3).then(function() {
                  n3.restoreCaret(r3.pluginsContent), r3.pluginsContent.normalize(), o3.close();
                });
              } }, { key: "arrowRightAndDown", value: function(e3) {
                var t3 = this, n3 = p.default.usedKeys.includes(e3.keyCode) && (!e3.shiftKey || e3.keyCode === f.keyCodes.TAB);
                if (!this.Editor.UI.someToolbarOpened || !n3) {
                  this.Editor.BlockManager.clearFocused(), this.Editor.Toolbar.close();
                  var o3 = this.Editor.Caret.isAtEnd || this.Editor.BlockSelection.anyBlockSelected;
                  e3.shiftKey && e3.keyCode === f.keyCodes.DOWN && o3 ? this.Editor.CrossBlockSelection.toggleBlockSelectedState() : ((e3.keyCode === f.keyCodes.DOWN || e3.keyCode === f.keyCodes.RIGHT && !this.isRtl ? this.Editor.Caret.navigateNext() : this.Editor.Caret.navigatePrevious()) ? e3.preventDefault() : f.delay(function() {
                    t3.Editor.BlockManager.currentBlock && t3.Editor.BlockManager.currentBlock.updateCurrentInput();
                  }, 20)(), this.Editor.BlockSelection.clearSelection(e3));
                }
              } }, { key: "arrowLeftAndUp", value: function(e3) {
                var t3 = this;
                if (this.Editor.UI.someToolbarOpened) {
                  if (p.default.usedKeys.includes(e3.keyCode) && (!e3.shiftKey || e3.keyCode === f.keyCodes.TAB))
                    return;
                  this.Editor.UI.closeAllToolbars();
                }
                this.Editor.BlockManager.clearFocused(), this.Editor.Toolbar.close();
                var n3 = this.Editor.Caret.isAtStart || this.Editor.BlockSelection.anyBlockSelected;
                e3.shiftKey && e3.keyCode === f.keyCodes.UP && n3 ? this.Editor.CrossBlockSelection.toggleBlockSelectedState(false) : ((e3.keyCode === f.keyCodes.UP || e3.keyCode === f.keyCodes.LEFT && !this.isRtl ? this.Editor.Caret.navigatePrevious() : this.Editor.Caret.navigateNext()) ? e3.preventDefault() : f.delay(function() {
                  t3.Editor.BlockManager.currentBlock && t3.Editor.BlockManager.currentBlock.updateCurrentInput();
                }, 20)(), this.Editor.BlockSelection.clearSelection(e3));
              } }, { key: "needToolbarClosing", value: function(e3) {
                var t3 = e3.keyCode === f.keyCodes.ENTER && this.Editor.Toolbar.toolbox.opened, n3 = e3.keyCode === f.keyCodes.ENTER && this.Editor.BlockSettings.opened, o3 = e3.keyCode === f.keyCodes.ENTER && this.Editor.InlineToolbar.opened, r3 = e3.keyCode === f.keyCodes.ENTER && this.Editor.ConversionToolbar.opened, i3 = e3.keyCode === f.keyCodes.TAB;
                return !(e3.shiftKey || i3 || t3 || n3 || o3 || r3);
              } }, { key: "activateToolbox", value: function() {
                this.Editor.Toolbar.opened || this.Editor.Toolbar.moveAndOpen(), this.Editor.Toolbar.toolbox.open();
              } }, { key: "activateBlockSettings", value: function() {
                this.Editor.Toolbar.opened || (this.Editor.BlockManager.currentBlock.focused = true, this.Editor.Toolbar.moveAndOpen()), this.Editor.BlockSettings.opened || this.Editor.BlockSettings.open();
              } }]), n2;
            }(u.default);
            o2.default = y, y.displayName = "BlockEvents", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(5), n(6), n(4), n(61), n(9), n(19), n(8), n(383), n(113), n(384)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y, k) {
            "use strict";
            var b = n(1);
            function m(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (m = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function w(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = m(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }
            function x(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, f.default)(e2);
                if (t2) {
                  var r3 = (0, f.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, u.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = b(r2), i2 = b(i2), s = b(s), l = b(l), c = b(c), u = b(u), f = b(f), d = w(d), p = b(p), h = b(h), v = w(v), g = b(g), y = b(y);
            var C = function(e2) {
              (0, c.default)(a2, e2);
              var t2, n2, o3 = x(a2);
              function a2() {
                var e3;
                return (0, s.default)(this, a2), (e3 = o3.apply(this, arguments))._currentBlockIndex = -1, e3._blocks = null, e3;
              }
              return (0, l.default)(a2, [{ key: "currentBlockIndex", get: function() {
                return this._currentBlockIndex;
              }, set: function(e3) {
                this._blocks[this._currentBlockIndex] && this._blocks[this._currentBlockIndex].willUnselect(), this._blocks[e3] && this._blocks[e3].willSelect(), this._currentBlockIndex = e3;
              } }, { key: "firstBlock", get: function() {
                return this._blocks[0];
              } }, { key: "lastBlock", get: function() {
                return this._blocks[this._blocks.length - 1];
              } }, { key: "currentBlock", get: function() {
                return this._blocks[this.currentBlockIndex];
              }, set: function(e3) {
                this.currentBlockIndex = this.getBlockIndex(e3);
              } }, { key: "nextBlock", get: function() {
                return this.currentBlockIndex === this._blocks.length - 1 ? null : this._blocks[this.currentBlockIndex + 1];
              } }, { key: "nextContentfulBlock", get: function() {
                return this.blocks.slice(this.currentBlockIndex + 1).find(function(e3) {
                  return !!e3.inputs.length;
                });
              } }, { key: "previousContentfulBlock", get: function() {
                return this.blocks.slice(0, this.currentBlockIndex).reverse().find(function(e3) {
                  return !!e3.inputs.length;
                });
              } }, { key: "previousBlock", get: function() {
                return 0 === this.currentBlockIndex ? null : this._blocks[this.currentBlockIndex - 1];
              } }, { key: "blocks", get: function() {
                return this._blocks.array;
              } }, { key: "isEditorEmpty", get: function() {
                return this.blocks.every(function(e3) {
                  return e3.isEmpty;
                });
              } }, { key: "prepare", value: function() {
                var e3 = this, t3 = new g.default(this.Editor.UI.nodes.redactor);
                this._blocks = new Proxy(t3, { set: g.default.set, get: g.default.get }), this.listeners.on(document, "copy", function(t4) {
                  return e3.Editor.BlockEvents.handleCommandC(t4);
                });
              } }, { key: "toggleReadOnly", value: function(e3) {
                e3 ? this.disableModuleBindings() : this.enableModuleBindings();
              } }, { key: "composeBlock", value: function(e3) {
                var t3 = e3.tool, n3 = e3.data, o4 = void 0 === n3 ? {} : n3, r3 = e3.id, i3 = void 0 === r3 ? void 0 : r3, a3 = e3.tunes, s2 = void 0 === a3 ? {} : a3, l2 = this.Editor.ReadOnly.isEnabled, c2 = this.Editor.Tools.blockTools.get(t3), u2 = new d.default({ id: i3, data: o4, tool: c2, api: this.Editor.API, readOnly: l2, tunesData: s2 });
                return l2 || this.bindBlockEvents(u2), u2;
              } }, { key: "insert", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t3 = e3.id, n3 = void 0 === t3 ? void 0 : t3, o4 = e3.tool, r3 = void 0 === o4 ? this.config.defaultBlock : o4, i3 = e3.data, a3 = void 0 === i3 ? {} : i3, s2 = e3.index, l2 = e3.needToFocus, c2 = void 0 === l2 || l2, u2 = e3.replace, f2 = void 0 !== u2 && u2, d2 = e3.tunes, p2 = void 0 === d2 ? {} : d2, h2 = s2;
                void 0 === h2 && (h2 = this.currentBlockIndex + (f2 ? 0 : 1));
                var v2 = this.composeBlock({ id: n3, tool: r3, data: a3, tunes: p2 });
                return f2 && this.blockDidMutated(k.BlockMutationType.Removed, this.getBlockByIndex(h2), { index: h2 }), this._blocks.insert(h2, v2, f2), this.blockDidMutated(k.BlockMutationType.Added, v2, { index: h2 }), c2 ? this.currentBlockIndex = h2 : h2 <= this.currentBlockIndex && this.currentBlockIndex++, v2;
              } }, { key: "replace", value: function(e3) {
                var t3 = e3.tool, n3 = void 0 === t3 ? this.config.defaultBlock : t3, o4 = e3.data, r3 = void 0 === o4 ? {} : o4;
                return this.insert({ tool: n3, data: r3, index: this.currentBlockIndex, replace: true });
              } }, { key: "paste", value: function(e3, t3) {
                var n3 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], o4 = this.insert({ tool: e3, replace: n3 });
                try {
                  o4.call(d.BlockToolAPI.ON_PASTE, t3);
                } catch (t4) {
                  v.log("".concat(e3, ": onPaste callback call is failed"), "error", t4);
                }
                return o4;
              } }, { key: "insertDefaultBlockAtIndex", value: function(e3) {
                var t3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n3 = this.composeBlock({ tool: this.config.defaultBlock });
                return this._blocks[e3] = n3, this.blockDidMutated(k.BlockMutationType.Added, n3, { index: e3 }), t3 ? this.currentBlockIndex = e3 : e3 <= this.currentBlockIndex && this.currentBlockIndex++, n3;
              } }, { key: "insertAtEnd", value: function() {
                return this.currentBlockIndex = this.blocks.length - 1, this.insert();
              } }, { key: "mergeBlocks", value: (n2 = (0, i2.default)(r2.default.mark(function e3(t3, n3) {
                var o4, i3;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (o4 = this._blocks.indexOf(n3), !n3.isEmpty) {
                          e4.next = 3;
                          break;
                        }
                        return e4.abrupt("return");
                      case 3:
                        return e4.next = 5, n3.data;
                      case 5:
                        if (i3 = e4.sent, v.isEmpty(i3)) {
                          e4.next = 9;
                          break;
                        }
                        return e4.next = 9, t3.mergeWith(i3);
                      case 9:
                        this.removeBlock(o4), this.currentBlockIndex = this._blocks.indexOf(t3);
                      case 11:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3, t3) {
                return n2.apply(this, arguments);
              }) }, { key: "removeBlock", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currentBlockIndex;
                if (!this.validateIndex(e3))
                  throw new Error("Can't find a Block to remove");
                var t3 = this._blocks[e3];
                t3.destroy(), this._blocks.remove(e3), this.blockDidMutated(k.BlockMutationType.Removed, t3, { index: e3 }), this.currentBlockIndex >= e3 && this.currentBlockIndex--, this.blocks.length ? 0 === e3 && (this.currentBlockIndex = 0) : (this.currentBlockIndex = -1, this.insert());
              } }, { key: "removeSelectedBlocks", value: function() {
                for (var e3, t3 = this.blocks.length - 1; t3 >= 0; t3--)
                  this.blocks[t3].selected && (this.removeBlock(t3), e3 = t3);
                return e3;
              } }, { key: "removeAllBlocks", value: function() {
                for (var e3 = this.blocks.length - 1; e3 >= 0; e3--)
                  this._blocks.remove(e3);
                this.currentBlockIndex = -1, this.insert(), this.currentBlock.firstInput.focus();
              } }, { key: "split", value: function() {
                var e3 = this.Editor.Caret.extractFragmentFromCaretPosition(), t3 = h.default.make("div");
                t3.appendChild(e3);
                var n3 = { text: h.default.isEmpty(t3) ? "" : t3.innerHTML };
                return this.insert({ data: n3 });
              } }, { key: "getBlockByIndex", value: function(e3) {
                return -1 === e3 && (e3 = this._blocks.length - 1), this._blocks[e3];
              } }, { key: "getBlockIndex", value: function(e3) {
                return this._blocks.indexOf(e3);
              } }, { key: "getBlockById", value: function(e3) {
                return this._blocks.array.find(function(t3) {
                  return t3.id === e3;
                });
              } }, { key: "getBlock", value: function(e3) {
                h.default.isElement(e3) || (e3 = e3.parentNode);
                var t3 = this._blocks.nodes, n3 = e3.closest(".".concat(d.default.CSS.wrapper)), o4 = t3.indexOf(n3);
                if (o4 >= 0)
                  return this._blocks[o4];
              } }, { key: "highlightCurrentNode", value: function() {
                this.clearFocused(), this.currentBlock.focused = true;
              } }, { key: "clearFocused", value: function() {
                this.blocks.forEach(function(e3) {
                  e3.focused = false;
                });
              } }, { key: "setCurrentBlockByChildNode", value: function(e3) {
                h.default.isElement(e3) || (e3 = e3.parentNode);
                var t3 = e3.closest(".".concat(d.default.CSS.wrapper));
                if (t3) {
                  var n3 = t3.closest(".".concat(this.Editor.UI.CSS.editorWrapper));
                  if (null == n3 ? void 0 : n3.isEqualNode(this.Editor.UI.nodes.wrapper))
                    return this.currentBlockIndex = this._blocks.nodes.indexOf(t3), this.currentBlock.updateCurrentInput(), this.currentBlock;
                }
              } }, { key: "getBlockByChildNode", value: function(e3) {
                h.default.isElement(e3) || (e3 = e3.parentNode);
                var t3 = e3.closest(".".concat(d.default.CSS.wrapper));
                return this.blocks.find(function(e4) {
                  return e4.holder === t3;
                });
              } }, { key: "swap", value: function(e3, t3) {
                this._blocks.swap(e3, t3), this.currentBlockIndex = t3;
              } }, { key: "move", value: function(e3) {
                var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.currentBlockIndex;
                isNaN(e3) || isNaN(t3) ? v.log("Warning during 'move' call: incorrect indices provided.", "warn") : this.validateIndex(e3) && this.validateIndex(t3) ? (this._blocks.move(e3, t3), this.currentBlockIndex = e3, this.blockDidMutated(k.BlockMutationType.Moved, this.currentBlock, { fromIndex: t3, toIndex: e3 })) : v.log("Warning during 'move' call: indices cannot be lower than 0 or greater than the amount of blocks.", "warn");
              } }, { key: "dropPointer", value: function() {
                this.currentBlockIndex = -1, this.clearFocused();
              } }, { key: "clear", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                this._blocks.removeAll(), this.dropPointer(), e3 && this.insert(), this.Editor.UI.checkEmptiness();
              } }, { key: "destroy", value: (t2 = (0, i2.default)(r2.default.mark(function e3() {
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return e4.next = 2, Promise.all(this.blocks.map(function(e5) {
                          return e5.destroy();
                        }));
                      case 2:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "bindBlockEvents", value: function(e3) {
                var t3 = this, n3 = this.Editor.BlockEvents;
                this.readOnlyMutableListeners.on(e3.holder, "keydown", function(e4) {
                  n3.keydown(e4);
                }), this.readOnlyMutableListeners.on(e3.holder, "keyup", function(e4) {
                  n3.keyup(e4);
                }), this.readOnlyMutableListeners.on(e3.holder, "dragover", function(e4) {
                  n3.dragOver(e4);
                }), this.readOnlyMutableListeners.on(e3.holder, "dragleave", function(e4) {
                  n3.dragLeave(e4);
                }), e3.on("didMutated", function(e4) {
                  return t3.blockDidMutated(k.BlockMutationType.Changed, e4, { index: t3.getBlockIndex(e4) });
                });
              } }, { key: "disableModuleBindings", value: function() {
                this.readOnlyMutableListeners.clearAll();
              } }, { key: "enableModuleBindings", value: function() {
                var e3 = this;
                this.readOnlyMutableListeners.on(document, "cut", function(t3) {
                  return e3.Editor.BlockEvents.handleCommandX(t3);
                }), this.blocks.forEach(function(t3) {
                  e3.bindBlockEvents(t3);
                });
              } }, { key: "validateIndex", value: function(e3) {
                return !(e3 < 0 || e3 >= this._blocks.length);
              } }, { key: "blockDidMutated", value: function(e3, t3) {
                var n3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, o4 = new CustomEvent(e3, { detail: Object.assign({ target: new y.default(t3) }, n3) });
                return this.Editor.ModificationsObserver.onChange(o4), t3;
              } }]), a2;
            }(p.default);
            o2.default = C, C.displayName = "BlockManager", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(8), n(19), n(116), n(25), n(66)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v) {
            "use strict";
            var g = n(1);
            function y(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (y = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function k(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = g(r2), i2 = g(i2), s = g(s), l = g(l), c = g(c), u = g(u), f = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = y(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(f), d = g(d), p = g(p), h = g(h);
            var b = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = k(n2);
              function n2() {
                var e3;
                return (0, r2.default)(this, n2), (e3 = t2.apply(this, arguments)).anyBlockSelectedCache = null, e3.needToSelectAll = false, e3.nativeInputSelected = false, e3.readyToBlockSelection = false, e3;
              }
              return (0, i2.default)(n2, [{ key: "sanitizerConfig", get: function() {
                return { p: {}, h1: {}, h2: {}, h3: {}, h4: {}, h5: {}, h6: {}, ol: {}, ul: {}, li: {}, br: true, img: { src: true, width: true, height: true }, a: { href: true }, b: {}, i: {}, u: {} };
              } }, { key: "allBlocksSelected", get: function() {
                return this.Editor.BlockManager.blocks.every(function(e3) {
                  return true === e3.selected;
                });
              }, set: function(e3) {
                this.Editor.BlockManager.blocks.forEach(function(t3) {
                  t3.selected = e3;
                }), this.clearCache();
              } }, { key: "anyBlockSelected", get: function() {
                var e3 = this.Editor.BlockManager;
                return null === this.anyBlockSelectedCache && (this.anyBlockSelectedCache = e3.blocks.some(function(e4) {
                  return true === e4.selected;
                })), this.anyBlockSelectedCache;
              } }, { key: "selectedBlocks", get: function() {
                return this.Editor.BlockManager.blocks.filter(function(e3) {
                  return e3.selected;
                });
              } }, { key: "prepare", value: function() {
                var e3 = this;
                this.selection = new h.default(), p.default.add({ name: "CMD+A", handler: function(t3) {
                  var n3 = e3.Editor, o3 = n3.BlockManager;
                  if (n3.ReadOnly.isEnabled)
                    return t3.preventDefault(), void e3.selectAllBlocks();
                  o3.currentBlock && e3.handleCommandA(t3);
                }, on: this.Editor.UI.nodes.redactor });
              } }, { key: "toggleReadOnly", value: function() {
                h.default.get().removeAllRanges(), this.allBlocksSelected = false;
              } }, { key: "unSelectBlockByIndex", value: function(e3) {
                var t3 = this.Editor.BlockManager;
                (isNaN(e3) ? t3.currentBlock : t3.getBlockByIndex(e3)).selected = false, this.clearCache();
              } }, { key: "clearSelection", value: function(e3) {
                var t3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n3 = this.Editor, o3 = n3.BlockManager, r3 = n3.Caret, i3 = n3.RectangleSelection;
                this.needToSelectAll = false, this.nativeInputSelected = false, this.readyToBlockSelection = false;
                var a2 = e3 && e3 instanceof KeyboardEvent, s2 = a2 && f.isPrintableKey(e3.keyCode);
                if (this.anyBlockSelected && a2 && s2 && !h.default.isSelectionExists) {
                  var l2 = o3.removeSelectedBlocks();
                  o3.insertDefaultBlockAtIndex(l2, true), r3.setToBlock(o3.currentBlock), f.delay(function() {
                    var t4 = e3.key;
                    r3.insertContentAtCaretPosition(t4.length > 1 ? "" : t4);
                  }, 20)();
                }
                this.Editor.CrossBlockSelection.clear(e3), this.anyBlockSelected && !i3.isRectActivated() ? (t3 && this.selection.restore(), this.allBlocksSelected = false) : this.Editor.RectangleSelection.clearSelection();
              } }, { key: "copySelectedBlocks", value: function(e3) {
                var t3 = this;
                e3.preventDefault();
                var n3 = d.default.make("div");
                this.selectedBlocks.forEach(function(e4) {
                  var o4 = (0, v.clean)(e4.holder.innerHTML, t3.sanitizerConfig), r4 = d.default.make("p");
                  r4.innerHTML = o4, n3.appendChild(r4);
                });
                var o3 = Array.from(n3.childNodes).map(function(e4) {
                  return e4.textContent;
                }).join("\n\n"), r3 = n3.innerHTML;
                return e3.clipboardData.setData("text/plain", o3), e3.clipboardData.setData("text/html", r3), Promise.all(this.selectedBlocks.map(function(e4) {
                  return e4.save();
                })).then(function(n4) {
                  try {
                    e3.clipboardData.setData(t3.Editor.Paste.MIME_TYPE, JSON.stringify(n4));
                  } catch (e4) {
                  }
                });
              } }, { key: "selectBlockByIndex", value: function(e3) {
                var t3, n3 = this.Editor.BlockManager;
                n3.clearFocused(), t3 = isNaN(e3) ? n3.currentBlock : n3.getBlockByIndex(e3), this.selection.save(), h.default.get().removeAllRanges(), t3.selected = true, this.clearCache(), this.Editor.InlineToolbar.close();
              } }, { key: "clearCache", value: function() {
                this.anyBlockSelectedCache = null;
              } }, { key: "destroy", value: function() {
                p.default.remove(this.Editor.UI.nodes.redactor, "CMD+A");
              } }, { key: "handleCommandA", value: function(e3) {
                if (this.Editor.RectangleSelection.clearSelection(), !d.default.isNativeInput(e3.target) || this.readyToBlockSelection) {
                  var t3 = this.Editor.BlockManager.getBlock(e3.target).inputs;
                  t3.length > 1 && !this.readyToBlockSelection ? this.readyToBlockSelection = true : 1 !== t3.length || this.needToSelectAll ? this.needToSelectAll ? (e3.preventDefault(), this.selectAllBlocks(), this.needToSelectAll = false, this.readyToBlockSelection = false, this.Editor.ConversionToolbar.close()) : this.readyToBlockSelection && (e3.preventDefault(), this.selectBlockByIndex(), this.needToSelectAll = true) : this.needToSelectAll = true;
                } else
                  this.readyToBlockSelection = true;
              } }, { key: "selectAllBlocks", value: function() {
                this.selection.save(), h.default.get().removeAllRanges(), this.allBlocksSelected = true, this.Editor.InlineToolbar.close();
              } }]), n2;
            }(u.default);
            o2.default = b, b.displayName = "BlockSelection", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(25), n(9), n(19), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p) {
            "use strict";
            var h = n(1);
            function v(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (v = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function g(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = h(r2), i2 = h(i2), s = h(s), l = h(l), c = h(c), u = h(u), f = h(f), d = h(d), p = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = v(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(p);
            var y = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = g(n2);
              function n2() {
                return (0, r2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, i2.default)(n2, [{ key: "positions", get: function() {
                return { START: "start", END: "end", DEFAULT: "default" };
              } }, { key: "isAtStart", get: function() {
                var e3 = u.default.get(), t3 = d.default.getDeepestNode(this.Editor.BlockManager.currentBlock.currentInput), n3 = e3.focusNode;
                if (d.default.isNativeInput(t3))
                  return 0 === t3.selectionEnd;
                if (!e3.anchorNode)
                  return false;
                var o3 = n3.textContent.search(/\S/);
                -1 === o3 && (o3 = 0);
                var r3 = e3.focusOffset;
                return n3.nodeType !== Node.TEXT_NODE && n3.childNodes.length && (n3.childNodes[r3] ? (n3 = n3.childNodes[r3], r3 = 0) : r3 = (n3 = n3.childNodes[r3 - 1]).textContent.length), !(!d.default.isLineBreakTag(t3) && !d.default.isEmpty(t3) || !this.getHigherLevelSiblings(n3, "left").every(function(e4) {
                  var t4 = d.default.isLineBreakTag(e4), n4 = 1 === e4.children.length && d.default.isLineBreakTag(e4.children[0]), o4 = t4 || n4;
                  return d.default.isEmpty(e4) && !o4;
                }) || r3 !== o3) || (null === t3 || n3 === t3 && r3 <= o3);
              } }, { key: "isAtEnd", get: function() {
                var e3 = u.default.get(), t3 = e3.focusNode, n3 = d.default.getDeepestNode(this.Editor.BlockManager.currentBlock.currentInput, true);
                if (d.default.isNativeInput(n3))
                  return n3.selectionEnd === n3.value.length;
                if (!e3.focusNode)
                  return false;
                var o3 = e3.focusOffset;
                if (t3.nodeType !== Node.TEXT_NODE && t3.childNodes.length && (t3.childNodes[o3 - 1] ? o3 = (t3 = t3.childNodes[o3 - 1]).textContent.length : (t3 = t3.childNodes[0], o3 = 0)), d.default.isLineBreakTag(n3) || d.default.isEmpty(n3)) {
                  var r3 = this.getHigherLevelSiblings(t3, "right");
                  if (r3.every(function(e4, t4) {
                    return t4 === r3.length - 1 && d.default.isLineBreakTag(e4) || d.default.isEmpty(e4) && !d.default.isLineBreakTag(e4);
                  }) && o3 === t3.textContent.length)
                    return true;
                }
                var i3 = n3.textContent.replace(/\s+$/, "");
                return t3 === n3 && o3 >= i3.length;
              } }, { key: "setToBlock", value: function(e3) {
                var t3, n3 = this, o3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.positions.DEFAULT, r3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, i3 = this.Editor.BlockManager;
                switch (o3) {
                  case this.positions.START:
                    t3 = e3.firstInput;
                    break;
                  case this.positions.END:
                    t3 = e3.lastInput;
                    break;
                  default:
                    t3 = e3.currentInput;
                }
                if (t3) {
                  var a2 = d.default.getDeepestNode(t3, o3 === this.positions.END), s2 = d.default.getContentLength(a2);
                  switch (true) {
                    case o3 === this.positions.START:
                      r3 = 0;
                      break;
                    case o3 === this.positions.END:
                    case r3 > s2:
                      r3 = s2;
                  }
                  p.delay(function() {
                    n3.set(a2, r3);
                  }, 20)(), i3.setCurrentBlockByChildNode(e3.holder), i3.currentBlock.currentInput = t3;
                }
              } }, { key: "setToInput", value: function(e3) {
                var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.positions.DEFAULT, n3 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0, o3 = this.Editor.BlockManager.currentBlock, r3 = d.default.getDeepestNode(e3);
                switch (t3) {
                  case this.positions.START:
                    this.set(r3, 0);
                    break;
                  case this.positions.END:
                    this.set(r3, d.default.getContentLength(r3));
                    break;
                  default:
                    n3 && this.set(r3, n3);
                }
                o3.currentInput = e3;
              } }, { key: "set", value: function(e3) {
                var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n3 = u.default.setCursor(e3, t3), o3 = n3.top, r3 = n3.bottom, i3 = window, a2 = i3.innerHeight;
                o3 < 0 && window.scrollBy(0, o3), r3 > a2 && window.scrollBy(0, r3 - a2);
              } }, { key: "setToTheLastBlock", value: function() {
                var e3 = this.Editor.BlockManager.lastBlock;
                if (e3)
                  if (e3.tool.isDefault && e3.isEmpty)
                    this.setToBlock(e3);
                  else {
                    var t3 = this.Editor.BlockManager.insertAtEnd();
                    this.setToBlock(t3);
                  }
              } }, { key: "extractFragmentFromCaretPosition", value: function() {
                var e3 = u.default.get();
                if (e3.rangeCount) {
                  var t3 = e3.getRangeAt(0), n3 = this.Editor.BlockManager.currentBlock.currentInput;
                  if (t3.deleteContents(), n3) {
                    if (d.default.isNativeInput(n3)) {
                      var o3 = n3, r3 = document.createDocumentFragment(), i3 = o3.value.substring(0, o3.selectionStart), a2 = o3.value.substring(o3.selectionStart);
                      return r3.textContent = a2, o3.value = i3, r3;
                    }
                    var s2 = t3.cloneRange();
                    return s2.selectNodeContents(n3), s2.setStart(t3.endContainer, t3.endOffset), s2.extractContents();
                  }
                }
              } }, { key: "navigateNext", value: function() {
                var e3 = this.Editor.BlockManager, t3 = e3.currentBlock, n3 = e3.nextContentfulBlock, o3 = t3.nextInput, r3 = this.isAtEnd, i3 = n3;
                if (!i3 && !o3) {
                  if (t3.tool.isDefault || !r3)
                    return false;
                  i3 = e3.insertAtEnd();
                }
                return !!r3 && (o3 ? this.setToInput(o3, this.positions.START) : this.setToBlock(i3, this.positions.START), true);
              } }, { key: "navigatePrevious", value: function() {
                var e3 = this.Editor.BlockManager, t3 = e3.currentBlock, n3 = e3.previousContentfulBlock;
                if (!t3)
                  return false;
                var o3 = t3.previousInput;
                return !(!n3 && !o3 || !this.isAtStart || (o3 ? this.setToInput(o3, this.positions.END) : this.setToBlock(n3, this.positions.END), 0));
              } }, { key: "createShadow", value: function(e3) {
                var t3 = document.createElement("span");
                t3.classList.add(n2.CSS.shadowCaret), e3.insertAdjacentElement("beforeend", t3);
              } }, { key: "restoreCaret", value: function(e3) {
                var t3 = e3.querySelector(".".concat(n2.CSS.shadowCaret));
                t3 && (new u.default().expandToTag(t3), setTimeout(function() {
                  var e4 = document.createRange();
                  e4.selectNode(t3), e4.extractContents();
                }, 50));
              } }, { key: "insertContentAtCaretPosition", value: function(e3) {
                var t3 = document.createDocumentFragment(), n3 = document.createElement("div"), o3 = u.default.get(), r3 = u.default.range;
                n3.innerHTML = e3, Array.from(n3.childNodes).forEach(function(e4) {
                  return t3.appendChild(e4);
                }), 0 === t3.childNodes.length && t3.appendChild(new Text());
                var i3 = t3.lastChild;
                r3.deleteContents(), r3.insertNode(t3);
                var a2 = document.createRange();
                a2.setStart(i3, i3.textContent.length), o3.removeAllRanges(), o3.addRange(a2);
              } }, { key: "getHigherLevelSiblings", value: function(e3, t3) {
                for (var n3 = e3, o3 = []; n3.parentNode && "true" !== n3.parentNode.contentEditable; )
                  n3 = n3.parentNode;
                for (var r3 = "left" === t3 ? "previousSibling" : "nextSibling"; n3[r3]; )
                  n3 = n3[r3], o3.push(n3);
                return o3;
              } }], [{ key: "CSS", get: function() {
                return { shadowCaret: "cdx-shadow-caret" };
              } }]), n2;
            }(f.default);
            o2.default = y, y.displayName = "Caret", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(5), n(6), n(4), n(9), n(25), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h) {
            "use strict";
            var v = n(1);
            function g(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (g = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function y(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, f.default)(e2);
                if (t2) {
                  var r3 = (0, f.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, u.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = v(r2), i2 = v(i2), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = v(d), p = v(p), h = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = g(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(h);
            var k = function(e2) {
              (0, c.default)(o3, e2);
              var t2, n2 = y(o3);
              function o3() {
                var e3;
                return (0, s.default)(this, o3), (e3 = n2.apply(this, arguments)).onMouseUp = function() {
                  e3.listeners.off(document, "mouseover", e3.onMouseOver), e3.listeners.off(document, "mouseup", e3.onMouseUp);
                }, e3.onMouseOver = function(t3) {
                  var n3 = e3.Editor, o4 = n3.BlockManager, r3 = n3.BlockSelection, i3 = o4.getBlockByChildNode(t3.relatedTarget) || e3.lastSelectedBlock, a2 = o4.getBlockByChildNode(t3.target);
                  if (i3 && a2 && a2 !== i3) {
                    if (i3 === e3.firstSelectedBlock)
                      return p.default.get().removeAllRanges(), i3.selected = true, a2.selected = true, void r3.clearCache();
                    if (a2 === e3.firstSelectedBlock)
                      return i3.selected = false, a2.selected = false, void r3.clearCache();
                    e3.Editor.InlineToolbar.close(), e3.toggleBlocksSelectedState(i3, a2), e3.lastSelectedBlock = a2;
                  }
                }, e3;
              }
              return (0, l.default)(o3, [{ key: "prepare", value: (t2 = (0, i2.default)(r2.default.mark(function e3() {
                var t3 = this;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        this.listeners.on(document, "mousedown", function(e5) {
                          t3.enableCrossBlockSelection(e5);
                        });
                      case 1:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "watchSelection", value: function(e3) {
                if (e3.button === h.mouseButtons.LEFT) {
                  var t3 = this.Editor.BlockManager;
                  this.firstSelectedBlock = t3.getBlock(e3.target), this.lastSelectedBlock = this.firstSelectedBlock, this.listeners.on(document, "mouseover", this.onMouseOver), this.listeners.on(document, "mouseup", this.onMouseUp);
                }
              } }, { key: "isCrossBlockSelectionStarted", get: function() {
                return !!this.firstSelectedBlock && !!this.lastSelectedBlock;
              } }, { key: "toggleBlockSelectedState", value: function() {
                var e3 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = this.Editor, n3 = t3.BlockManager, o4 = t3.BlockSelection;
                this.lastSelectedBlock || (this.lastSelectedBlock = this.firstSelectedBlock = n3.currentBlock), this.firstSelectedBlock === this.lastSelectedBlock && (this.firstSelectedBlock.selected = true, o4.clearCache(), p.default.get().removeAllRanges());
                var r3 = n3.blocks.indexOf(this.lastSelectedBlock) + (e3 ? 1 : -1), i3 = n3.blocks[r3];
                i3 && (this.lastSelectedBlock.selected !== i3.selected ? (i3.selected = true, o4.clearCache()) : (this.lastSelectedBlock.selected = false, o4.clearCache()), this.lastSelectedBlock = i3, this.Editor.InlineToolbar.close(), i3.holder.scrollIntoView({ block: "nearest" }));
              } }, { key: "clear", value: function(e3) {
                var t3 = this.Editor, n3 = t3.BlockManager, o4 = t3.BlockSelection, r3 = t3.Caret, i3 = n3.blocks.indexOf(this.firstSelectedBlock), a2 = n3.blocks.indexOf(this.lastSelectedBlock);
                if (o4.anyBlockSelected && i3 > -1 && a2 > -1)
                  if (e3 && e3 instanceof KeyboardEvent)
                    switch (e3.keyCode) {
                      case h.keyCodes.DOWN:
                      case h.keyCodes.RIGHT:
                        r3.setToBlock(n3.blocks[Math.max(i3, a2)], r3.positions.END);
                        break;
                      case h.keyCodes.UP:
                      case h.keyCodes.LEFT:
                        r3.setToBlock(n3.blocks[Math.min(i3, a2)], r3.positions.START);
                        break;
                      default:
                        r3.setToBlock(n3.blocks[Math.max(i3, a2)], r3.positions.END);
                    }
                  else
                    r3.setToBlock(n3.blocks[Math.max(i3, a2)], r3.positions.END);
                this.firstSelectedBlock = this.lastSelectedBlock = null;
              } }, { key: "enableCrossBlockSelection", value: function(e3) {
                var t3 = this.Editor.UI;
                p.default.isCollapsed || this.Editor.BlockSelection.clearSelection(e3), t3.nodes.redactor.contains(e3.target) ? this.watchSelection(e3) : this.Editor.BlockSelection.clearSelection(e3);
              } }, { key: "toggleBlocksSelectedState", value: function(e3, t3) {
                for (var n3 = this.Editor, o4 = n3.BlockManager, r3 = n3.BlockSelection, i3 = o4.blocks.indexOf(e3), a2 = o4.blocks.indexOf(t3), s2 = e3.selected !== t3.selected, l2 = Math.min(i3, a2); l2 <= Math.max(i3, a2); l2++) {
                  var c2 = o4.blocks[l2];
                  c2 !== this.firstSelectedBlock && c2 !== (s2 ? e3 : t3) && (o4.blocks[l2].selected = !o4.blocks[l2].selected, r3.clearCache());
                }
              } }]), o3;
            }(d.default);
            o2.default = k, k.displayName = "CrossBlockSelection", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(5), n(6), n(4), n(25), n(9)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u, f, d) {
            "use strict";
            var p = n(1);
            function h(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, u.default)(e2);
                if (t2) {
                  var r3 = (0, u.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, c.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = p(r2), i2 = p(i2), a = p(a), s = p(s), l = p(l), c = p(c), u = p(u), f = p(f);
            var v = function(e2) {
              (0, l.default)(o3, e2);
              var t2, n2 = h(o3);
              function o3() {
                var e3;
                return (0, a.default)(this, o3), (e3 = n2.apply(this, arguments)).isStartedAtEditor = false, e3;
              }
              return (0, s.default)(o3, [{ key: "toggleReadOnly", value: function(e3) {
                e3 ? this.disableModuleBindings() : this.enableModuleBindings();
              } }, { key: "enableModuleBindings", value: function() {
                var e3 = this, t3 = this.Editor.UI;
                this.readOnlyMutableListeners.on(t3.nodes.holder, "drop", function() {
                  var t4 = (0, i2.default)(r2.default.mark(function t5(n3) {
                    return r2.default.wrap(function(t6) {
                      for (; ; )
                        switch (t6.prev = t6.next) {
                          case 0:
                            return t6.next = 2, e3.processDrop(n3);
                          case 2:
                          case "end":
                            return t6.stop();
                        }
                    }, t5);
                  }));
                  return function(e4) {
                    return t4.apply(this, arguments);
                  };
                }(), true), this.readOnlyMutableListeners.on(t3.nodes.holder, "dragstart", function() {
                  e3.processDragStart();
                }), this.readOnlyMutableListeners.on(t3.nodes.holder, "dragover", function(t4) {
                  e3.processDragOver(t4);
                }, true);
              } }, { key: "disableModuleBindings", value: function() {
                this.readOnlyMutableListeners.clearAll();
              } }, { key: "processDrop", value: (t2 = (0, i2.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3, a2, s2, l2;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return n3 = this.Editor, o4 = n3.BlockManager, i3 = n3.Caret, a2 = n3.Paste, t3.preventDefault(), o4.blocks.forEach(function(e5) {
                          e5.dropTarget = false;
                        }), f.default.isAtEditor && !f.default.isCollapsed && this.isStartedAtEditor && document.execCommand("delete"), this.isStartedAtEditor = false, (s2 = o4.setCurrentBlockByChildNode(t3.target)) ? this.Editor.Caret.setToBlock(s2, i3.positions.END) : (l2 = o4.setCurrentBlockByChildNode(o4.lastBlock.holder), this.Editor.Caret.setToBlock(l2, i3.positions.END)), e4.next = 9, a2.processDataTransfer(t3.dataTransfer, true);
                      case 9:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return t2.apply(this, arguments);
              }) }, { key: "processDragStart", value: function() {
                f.default.isAtEditor && !f.default.isCollapsed && (this.isStartedAtEditor = true), this.Editor.InlineToolbar.close();
              } }, { key: "processDragOver", value: function(e3) {
                e3.preventDefault();
              } }]), o3;
            }((d = p(d)).default);
            o2.default = v, v.displayName = "DragNDrop", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f) {
            "use strict";
            var d = n(1);
            function p(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (p = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function h(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = d(r2), i2 = d(i2), s = d(s), l = d(l), c = d(c), u = d(u), f = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = p(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(f);
            var v = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = h(n2);
              function n2() {
                var e3;
                return (0, r2.default)(this, n2), (e3 = t2.apply(this, arguments)).disabled = false, e3;
              }
              return (0, i2.default)(n2, [{ key: "enable", value: function() {
                this.disabled = false;
              } }, { key: "disable", value: function() {
                this.disabled = true;
              } }, { key: "onChange", value: function(e3) {
                !this.disabled && f.isFunction(this.config.onChange) && this.config.onChange(this.Editor.API.methods, e3);
              } }]), n2;
            }(u.default);
            o2.default = v, v.displayName = "ModificationsObserver", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(30), n(41), n(21), n(2), n(3), n(5), n(6), n(4), n(9), n(19), n(8), n(66)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y) {
            "use strict";
            var k = n(1);
            function b(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (b = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function m(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, p.default)(e2);
                if (t2) {
                  var r3 = (0, p.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, d.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = k(r2), i2 = k(i2), s = k(s), l = k(l), c = k(c), u = k(u), f = k(f), d = k(d), p = k(p), h = k(h), v = k(v), g = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = b(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(g);
            var w = function(e2) {
              (0, f.default)(w2, e2);
              var t2, n2, o3, a2, d2, p2, h2, k2, b2 = m(w2);
              function w2() {
                var e3;
                return (0, c.default)(this, w2), (e3 = b2.apply(this, arguments)).MIME_TYPE = "application/x-editor-js", e3.toolsTags = {}, e3.tagsByTool = {}, e3.toolsPatterns = [], e3.toolsFiles = {}, e3.exceptionList = [], e3.processTool = function(t3) {
                  try {
                    var n3 = t3.create({}, {}, false);
                    if (false === t3.pasteConfig)
                      return void e3.exceptionList.push(t3.name);
                    if (!g.isFunction(n3.onPaste))
                      return;
                    e3.getTagsConfig(t3), e3.getFilesConfig(t3), e3.getPatternsConfig(t3);
                  } catch (e4) {
                    g.log("Paste handling for \xAB".concat(t3.name, "\xBB Tool hasn't been set up because of the error"), "warn", e4);
                  }
                }, e3.handlePasteEvent = function() {
                  var t3 = (0, l.default)(r2.default.mark(function t4(n3) {
                    var o4, i3, a3;
                    return r2.default.wrap(function(t5) {
                      for (; ; )
                        switch (t5.prev = t5.next) {
                          case 0:
                            if (o4 = e3.Editor, i3 = o4.BlockManager, a3 = o4.Toolbar, i3.currentBlock && (!e3.isNativeBehaviour(n3.target) || n3.clipboardData.types.includes("Files"))) {
                              t5.next = 3;
                              break;
                            }
                            return t5.abrupt("return");
                          case 3:
                            if (!i3.currentBlock || !e3.exceptionList.includes(i3.currentBlock.name)) {
                              t5.next = 5;
                              break;
                            }
                            return t5.abrupt("return");
                          case 5:
                            n3.preventDefault(), e3.processDataTransfer(n3.clipboardData), i3.clearFocused(), a3.close();
                          case 9:
                          case "end":
                            return t5.stop();
                        }
                    }, t4);
                  }));
                  return function(e4) {
                    return t3.apply(this, arguments);
                  };
                }(), e3;
              }
              return (0, u.default)(w2, [{ key: "prepare", value: (k2 = (0, l.default)(r2.default.mark(function e3() {
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        this.processTools();
                      case 1:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return k2.apply(this, arguments);
              }) }, { key: "toggleReadOnly", value: function(e3) {
                e3 ? this.unsetCallback() : this.setCallback();
              } }, { key: "processDataTransfer", value: (h2 = (0, l.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3, a3, s2, l2, c2, u2, f2, d3 = this, p3 = arguments;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (n3 = p3.length > 1 && void 0 !== p3[1] && p3[1], o4 = this.Editor.Tools, !((i3 = t3.types).includes ? i3.includes("Files") : i3.contains("Files")) || g.isEmpty(this.toolsFiles)) {
                          e4.next = 8;
                          break;
                        }
                        return e4.next = 7, this.processFiles(t3.files);
                      case 7:
                        return e4.abrupt("return");
                      case 8:
                        if (a3 = t3.getData(this.MIME_TYPE), s2 = t3.getData("text/plain"), l2 = t3.getData("text/html"), !a3) {
                          e4.next = 19;
                          break;
                        }
                        return e4.prev = 12, this.insertEditorJSData(JSON.parse(a3)), e4.abrupt("return");
                      case 17:
                        e4.prev = 17, e4.t0 = e4.catch(12);
                      case 19:
                        if (n3 && s2.trim() && l2.trim() && (l2 = "<p>" + (l2.trim() ? l2 : s2) + "</p>"), c2 = Object.keys(this.toolsTags).reduce(function(e5, t4) {
                          var n4;
                          return e5[t4.toLowerCase()] = null !== (n4 = d3.toolsTags[t4].sanitizationConfig) && void 0 !== n4 ? n4 : {}, e5;
                        }, {}), u2 = Object.assign({}, c2, o4.getAllInlineToolsSanitizeConfig(), { br: {} }), (f2 = (0, y.clean)(l2, u2)).trim() && f2.trim() !== s2 && v.default.isHTMLString(f2)) {
                          e4.next = 28;
                          break;
                        }
                        return e4.next = 26, this.processText(s2);
                      case 26:
                        e4.next = 30;
                        break;
                      case 28:
                        return e4.next = 30, this.processText(f2, true);
                      case 30:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this, [[12, 17]]);
              })), function(e3) {
                return h2.apply(this, arguments);
              }) }, { key: "processText", value: (p2 = (0, l.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3, a3, s2, c2, u2, f2 = this, d3 = arguments;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (n3 = d3.length > 1 && void 0 !== d3[1] && d3[1], o4 = this.Editor, i3 = o4.Caret, a3 = o4.BlockManager, (s2 = n3 ? this.processHTML(t3) : this.processPlain(t3)).length) {
                          e4.next = 5;
                          break;
                        }
                        return e4.abrupt("return");
                      case 5:
                        if (1 !== s2.length) {
                          e4.next = 8;
                          break;
                        }
                        return s2[0].isBlock ? this.processSingleBlock(s2.pop()) : this.processInlinePaste(s2.pop()), e4.abrupt("return");
                      case 8:
                        c2 = a3.currentBlock && a3.currentBlock.tool.isDefault, u2 = c2 && a3.currentBlock.isEmpty, s2.map(function() {
                          var e5 = (0, l.default)(r2.default.mark(function e6(t4, n4) {
                            return r2.default.wrap(function(e7) {
                              for (; ; )
                                switch (e7.prev = e7.next) {
                                  case 0:
                                    return e7.abrupt("return", f2.insertBlock(t4, 0 === n4 && u2));
                                  case 1:
                                  case "end":
                                    return e7.stop();
                                }
                            }, e6);
                          }));
                          return function(t4, n4) {
                            return e5.apply(this, arguments);
                          };
                        }()), a3.currentBlock && i3.setToBlock(a3.currentBlock, i3.positions.END);
                      case 12:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return p2.apply(this, arguments);
              }) }, { key: "setCallback", value: function() {
                this.listeners.on(this.Editor.UI.nodes.holder, "paste", this.handlePasteEvent);
              } }, { key: "unsetCallback", value: function() {
                this.listeners.off(this.Editor.UI.nodes.holder, "paste", this.handlePasteEvent);
              } }, { key: "processTools", value: function() {
                var e3 = this.Editor.Tools.blockTools;
                Array.from(e3.values()).forEach(this.processTool);
              } }, { key: "collectTagNames", value: function(e3) {
                return g.isString(e3) ? [e3] : g.isObject(e3) ? Object.keys(e3) : [];
              } }, { key: "getTagsConfig", value: function(e3) {
                var t3 = this, n3 = e3.pasteConfig.tags || [], o4 = [];
                n3.forEach(function(n4) {
                  var r3 = t3.collectTagNames(n4);
                  o4.push.apply(o4, (0, s.default)(r3)), r3.forEach(function(o5) {
                    if (Object.prototype.hasOwnProperty.call(t3.toolsTags, o5))
                      g.log("Paste handler for \xAB".concat(e3.name, "\xBB Tool on \xAB").concat(o5, "\xBB tag is skipped ") + "because it is already used by \xAB".concat(t3.toolsTags[o5].tool.name, "\xBB Tool."), "warn");
                    else {
                      var r4 = g.isObject(n4) ? n4[o5] : null;
                      t3.toolsTags[o5.toUpperCase()] = { tool: e3, sanitizationConfig: r4 };
                    }
                  });
                }), this.tagsByTool[e3.name] = o4.map(function(e4) {
                  return e4.toUpperCase();
                });
              } }, { key: "getFilesConfig", value: function(e3) {
                var t3 = e3.pasteConfig.files, n3 = void 0 === t3 ? {} : t3, o4 = n3.extensions, r3 = n3.mimeTypes;
                (o4 || r3) && (o4 && !Array.isArray(o4) && (g.log("\xABextensions\xBB property of the onDrop config for \xAB".concat(e3.name, "\xBB Tool should be an array")), o4 = []), r3 && !Array.isArray(r3) && (g.log("\xABmimeTypes\xBB property of the onDrop config for \xAB".concat(e3.name, "\xBB Tool should be an array")), r3 = []), r3 && (r3 = r3.filter(function(t4) {
                  return !!g.isValidMimeType(t4) || (g.log("MIME type value \xAB".concat(t4, "\xBB for the \xAB").concat(e3.name, "\xBB Tool is not a valid MIME type"), "warn"), false);
                })), this.toolsFiles[e3.name] = { extensions: o4 || [], mimeTypes: r3 || [] });
              } }, { key: "getPatternsConfig", value: function(e3) {
                var t3 = this;
                e3.pasteConfig.patterns && !g.isEmpty(e3.pasteConfig.patterns) && Object.entries(e3.pasteConfig.patterns).forEach(function(n3) {
                  var o4 = (0, i2.default)(n3, 2), r3 = o4[0], a3 = o4[1];
                  a3 instanceof RegExp || g.log("Pattern ".concat(a3, " for \xAB").concat(e3.name, "\xBB Tool is skipped because it should be a Regexp instance."), "warn"), t3.toolsPatterns.push({ key: r3, pattern: a3, tool: e3 });
                });
              } }, { key: "isNativeBehaviour", value: function(e3) {
                return v.default.isNativeInput(e3);
              } }, { key: "processFiles", value: (d2 = (0, l.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3, a3, s2 = this;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return n3 = this.Editor.BlockManager, e4.next = 3, Promise.all(Array.from(t3).map(function(e5) {
                          return s2.processFile(e5);
                        }));
                      case 3:
                        o4 = (o4 = e4.sent).filter(function(e5) {
                          return !!e5;
                        }), i3 = n3.currentBlock.tool.isDefault, a3 = i3 && n3.currentBlock.isEmpty, o4.forEach(function(e5, t4) {
                          n3.paste(e5.type, e5.event, 0 === t4 && a3);
                        });
                      case 8:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return d2.apply(this, arguments);
              }) }, { key: "processFile", value: (a2 = (0, l.default)(r2.default.mark(function e3(t3) {
                var n3, o4, a3, s2, l2;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (n3 = g.getFileExtension(t3), o4 = Object.entries(this.toolsFiles).find(function(e5) {
                          var o5 = (0, i2.default)(e5, 2), r3 = (o5[0], o5[1]), a4 = r3.mimeTypes, s3 = r3.extensions, l3 = t3.type.split("/"), c2 = (0, i2.default)(l3, 2), u2 = c2[0], f2 = c2[1], d3 = s3.find(function(e6) {
                            return e6.toLowerCase() === n3.toLowerCase();
                          }), p3 = a4.find(function(e6) {
                            var t4 = e6.split("/"), n4 = (0, i2.default)(t4, 2), o6 = n4[0], r4 = n4[1];
                            return o6 === u2 && (r4 === f2 || "*" === r4);
                          });
                          return !!d3 || !!p3;
                        })) {
                          e4.next = 4;
                          break;
                        }
                        return e4.abrupt("return");
                      case 4:
                        return a3 = (0, i2.default)(o4, 1), s2 = a3[0], l2 = this.composePasteEvent("file", { file: t3 }), e4.abrupt("return", { event: l2, type: s2 });
                      case 7:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return a2.apply(this, arguments);
              }) }, { key: "processHTML", value: function(e3) {
                var t3 = this, n3 = this.Editor.Tools, o4 = v.default.make("DIV");
                return o4.innerHTML = e3, this.getNodes(o4).map(function(e4) {
                  var o5, r3 = n3.defaultTool, i3 = false;
                  switch (e4.nodeType) {
                    case Node.DOCUMENT_FRAGMENT_NODE:
                      (o5 = v.default.make("div")).appendChild(e4);
                      break;
                    case Node.ELEMENT_NODE:
                      o5 = e4, i3 = true, t3.toolsTags[o5.tagName] && (r3 = t3.toolsTags[o5.tagName].tool);
                  }
                  var a3 = r3.pasteConfig.tags.reduce(function(e5, n4) {
                    return t3.collectTagNames(n4).forEach(function(t4) {
                      var o6 = g.isObject(n4) ? n4[t4] : null;
                      e5[t4.toLowerCase()] = o6 || {};
                    }), e5;
                  }, {}), s2 = Object.assign({}, a3, r3.baseSanitizeConfig);
                  if ("table" === o5.tagName.toLowerCase()) {
                    var l2 = (0, y.clean)(o5.outerHTML, s2);
                    o5 = v.default.make("div", void 0, { innerHTML: l2 }).firstChild;
                  } else
                    o5.innerHTML = (0, y.clean)(o5.innerHTML, s2);
                  var c2 = t3.composePasteEvent("tag", { data: o5 });
                  return { content: o5, isBlock: i3, tool: r3.name, event: c2 };
                }).filter(function(e4) {
                  var t4 = v.default.isEmpty(e4.content), n4 = v.default.isSingleTag(e4.content);
                  return !t4 || n4;
                });
              } }, { key: "processPlain", value: function(e3) {
                var t3 = this, n3 = this.config.defaultBlock;
                if (!e3)
                  return [];
                var o4 = n3;
                return e3.split(/\r?\n/).filter(function(e4) {
                  return e4.trim();
                }).map(function(e4) {
                  var n4 = v.default.make("div");
                  n4.textContent = e4;
                  var r3 = t3.composePasteEvent("tag", { data: n4 });
                  return { content: n4, tool: o4, isBlock: false, event: r3 };
                });
              } }, { key: "processSingleBlock", value: (o3 = (0, l.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3, a3;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (n3 = this.Editor, o4 = n3.Caret, i3 = n3.BlockManager, (a3 = i3.currentBlock) && t3.tool === a3.name && v.default.containsOnlyInlineElements(t3.content.innerHTML)) {
                          e4.next = 5;
                          break;
                        }
                        return this.insertBlock(t3, (null == a3 ? void 0 : a3.tool.isDefault) && a3.isEmpty), e4.abrupt("return");
                      case 5:
                        o4.insertContentAtCaretPosition(t3.content.innerHTML);
                      case 6:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return o3.apply(this, arguments);
              }) }, { key: "processInlinePaste", value: (n2 = (0, l.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3, a3, s2, l2, c2, u2;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (n3 = this.Editor, o4 = n3.BlockManager, i3 = n3.Caret, a3 = t3.content, !(o4.currentBlock && o4.currentBlock.tool.isDefault && a3.textContent.length < w2.PATTERN_PROCESSING_MAX_LENGTH)) {
                          e4.next = 12;
                          break;
                        }
                        return e4.next = 6, this.processPattern(a3.textContent);
                      case 6:
                        if (!(s2 = e4.sent)) {
                          e4.next = 12;
                          break;
                        }
                        return l2 = o4.currentBlock && o4.currentBlock.tool.isDefault && o4.currentBlock.isEmpty, c2 = o4.paste(s2.tool, s2.event, l2), i3.setToBlock(c2, i3.positions.END), e4.abrupt("return");
                      case 12:
                        o4.currentBlock && o4.currentBlock.currentInput ? (u2 = o4.currentBlock.tool.baseSanitizeConfig, document.execCommand("insertHTML", false, (0, y.clean)(a3.innerHTML, u2))) : this.insertBlock(t3);
                      case 13:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return n2.apply(this, arguments);
              }) }, { key: "processPattern", value: (t2 = (0, l.default)(r2.default.mark(function e3(t3) {
                var n3, o4;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (n3 = this.toolsPatterns.find(function(e5) {
                          var n4 = e5.pattern.exec(t3);
                          return !!n4 && t3 === n4.shift();
                        })) {
                          e4.next = 3;
                          break;
                        }
                        return e4.abrupt("return");
                      case 3:
                        return o4 = this.composePasteEvent("pattern", { key: n3.key, data: t3 }), e4.abrupt("return", { event: o4, tool: n3.tool.name });
                      case 5:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return t2.apply(this, arguments);
              }) }, { key: "insertBlock", value: function(e3) {
                var t3, n3 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o4 = this.Editor, r3 = o4.BlockManager, i3 = o4.Caret, a3 = r3.currentBlock;
                if (n3 && a3 && a3.isEmpty)
                  return t3 = r3.paste(e3.tool, e3.event, true), void i3.setToBlock(t3, i3.positions.END);
                t3 = r3.paste(e3.tool, e3.event), i3.setToBlock(t3, i3.positions.END);
              } }, { key: "insertEditorJSData", value: function(e3) {
                var t3 = this.Editor, n3 = t3.BlockManager, o4 = t3.Caret, r3 = t3.Tools;
                (0, y.sanitizeBlocks)(e3, function(e4) {
                  return r3.blockTools.get(e4).sanitizeConfig;
                }).forEach(function(e4, t4) {
                  var r4 = e4.tool, i3 = e4.data, a3 = false;
                  0 === t4 && (a3 = n3.currentBlock && n3.currentBlock.tool.isDefault && n3.currentBlock.isEmpty);
                  var s2 = n3.insert({ tool: r4, data: i3, replace: a3 });
                  o4.setToBlock(s2, o4.positions.END);
                });
              } }, { key: "processElementNode", value: function(e3, t3, n3) {
                var o4 = Object.keys(this.toolsTags), r3 = e3, i3 = (this.toolsTags[r3.tagName] || {}).tool, a3 = this.tagsByTool[null == i3 ? void 0 : i3.name] || [], l2 = o4.includes(r3.tagName), c2 = v.default.blockElements.includes(r3.tagName.toLowerCase()), u2 = Array.from(r3.children).some(function(e4) {
                  var t4 = e4.tagName;
                  return o4.includes(t4) && !a3.includes(t4);
                }), f2 = Array.from(r3.children).some(function(e4) {
                  var t4 = e4.tagName;
                  return v.default.blockElements.includes(t4.toLowerCase());
                });
                return c2 || l2 || u2 ? l2 && !u2 || c2 && !f2 && !u2 ? [].concat((0, s.default)(t3), [n3, r3]) : void 0 : (n3.appendChild(r3), [].concat((0, s.default)(t3), [n3]));
              } }, { key: "getNodes", value: function(e3) {
                var t3, n3 = this;
                return Array.from(e3.childNodes).reduce(function e4(o4, r3) {
                  if (v.default.isEmpty(r3) && !v.default.isSingleTag(r3))
                    return o4;
                  var i3 = o4[o4.length - 1], a3 = new DocumentFragment();
                  switch (i3 && v.default.isFragment(i3) && (a3 = o4.pop()), r3.nodeType) {
                    case Node.ELEMENT_NODE:
                      if (t3 = n3.processElementNode(r3, o4, a3))
                        return t3;
                      break;
                    case Node.TEXT_NODE:
                      return a3.appendChild(r3), [].concat((0, s.default)(o4), [a3]);
                    default:
                      return [].concat((0, s.default)(o4), [a3]);
                  }
                  return [].concat((0, s.default)(o4), (0, s.default)(Array.from(r3.childNodes).reduce(e4, [])));
                }, []);
              } }, { key: "composePasteEvent", value: function(e3, t3) {
                return new CustomEvent(e3, { detail: t3 });
              } }]), w2;
            }(h.default);
            o2.default = w, w.displayName = "Paste", w.PATTERN_PROCESSING_MAX_LENGTH = 450, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(30), n(21), n(2), n(3), n(5), n(6), n(4), n(9), n(151)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u, f, d, p) {
            "use strict";
            var h = n(1);
            function v(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, f.default)(e2);
                if (t2) {
                  var r3 = (0, f.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, u.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = h(r2), i2 = h(i2), a = h(a), s = h(s), l = h(l), c = h(c), u = h(u), f = h(f);
            var g = function(e2) {
              (0, c.default)(u2, e2);
              var t2, n2, o3 = v(u2);
              function u2() {
                var e3;
                return (0, s.default)(this, u2), (e3 = o3.apply(this, arguments)).toolsDontSupportReadOnly = [], e3.readOnlyEnabled = false, e3;
              }
              return (0, l.default)(u2, [{ key: "isEnabled", get: function() {
                return this.readOnlyEnabled;
              } }, { key: "prepare", value: (n2 = (0, a.default)(r2.default.mark(function e3() {
                var t3, n3, o4;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        t3 = this.Editor.Tools, n3 = t3.blockTools, o4 = [], Array.from(n3.entries()).forEach(function(e5) {
                          var t4 = (0, i2.default)(e5, 2), n4 = t4[0];
                          t4[1].isReadOnlySupported || o4.push(n4);
                        }), this.toolsDontSupportReadOnly = o4, this.config.readOnly && o4.length > 0 && this.throwCriticalError(), this.toggle(this.config.readOnly);
                      case 7:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return n2.apply(this, arguments);
              }) }, { key: "toggle", value: (t2 = (0, a.default)(r2.default.mark(function e3() {
                var t3, n3, o4, i3, a2 = arguments;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        (t3 = a2.length > 0 && void 0 !== a2[0] ? a2[0] : !this.readOnlyEnabled) && this.toolsDontSupportReadOnly.length > 0 && this.throwCriticalError(), n3 = this.readOnlyEnabled, this.readOnlyEnabled = t3, e4.t0 = r2.default.keys(this.Editor);
                      case 5:
                        if ((e4.t1 = e4.t0()).done) {
                          e4.next = 12;
                          break;
                        }
                        if (o4 = e4.t1.value, this.Editor[o4].toggleReadOnly) {
                          e4.next = 9;
                          break;
                        }
                        return e4.abrupt("continue", 5);
                      case 9:
                        this.Editor[o4].toggleReadOnly(t3), e4.next = 5;
                        break;
                      case 12:
                        if (n3 !== t3) {
                          e4.next = 14;
                          break;
                        }
                        return e4.abrupt("return", this.readOnlyEnabled);
                      case 14:
                        return e4.next = 16, this.Editor.Saver.save();
                      case 16:
                        return i3 = e4.sent, e4.next = 19, this.Editor.BlockManager.clear();
                      case 19:
                        return e4.next = 21, this.Editor.Renderer.render(i3.blocks);
                      case 21:
                        return e4.abrupt("return", this.readOnlyEnabled);
                      case 22:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "throwCriticalError", value: function() {
                throw new p.CriticalError("To enable read-only mode all connected tools should support it. Tools ".concat(this.toolsDontSupportReadOnly.join(", "), " don't support read-only mode."));
              } }]), u2;
            }((d = h(d)).default);
            o2.default = g, g.displayName = "ReadOnly", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(9), n(19), n(25), n(61), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h) {
            "use strict";
            var v = n(1);
            function g(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (g = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function y(e2, t2) {
              var n2 = "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
              if (!n2) {
                if (Array.isArray(e2) || (n2 = function(e3, t3) {
                  if (e3) {
                    if ("string" == typeof e3)
                      return k(e3, t3);
                    var n3 = Object.prototype.toString.call(e3).slice(8, -1);
                    return "Object" === n3 && e3.constructor && (n3 = e3.constructor.name), "Map" === n3 || "Set" === n3 ? Array.from(e3) : "Arguments" === n3 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? k(e3, t3) : void 0;
                  }
                }(e2)) || t2 && e2 && "number" == typeof e2.length) {
                  n2 && (e2 = n2);
                  var o3 = 0, r3 = function() {
                  };
                  return { s: r3, n: function() {
                    return o3 >= e2.length ? { done: true } : { done: false, value: e2[o3++] };
                  }, e: function(e3) {
                    throw e3;
                  }, f: r3 };
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var i3, a2 = true, s2 = false;
              return { s: function() {
                n2 = n2.call(e2);
              }, n: function() {
                var e3 = n2.next();
                return a2 = e3.done, e3;
              }, e: function(e3) {
                s2 = true, i3 = e3;
              }, f: function() {
                try {
                  a2 || null == n2.return || n2.return();
                } finally {
                  if (s2)
                    throw i3;
                }
              } };
            }
            function k(e2, t2) {
              (null == t2 || t2 > e2.length) && (t2 = e2.length);
              for (var n2 = 0, o3 = new Array(t2); n2 < t2; n2++)
                o3[n2] = e2[n2];
              return o3;
            }
            function b(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = v(r2), i2 = v(i2), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = v(d), p = v(p), h = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = g(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(h);
            var m = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = b(n2);
              function n2() {
                var e3;
                return (0, r2.default)(this, n2), (e3 = t2.apply(this, arguments)).isRectSelectionActivated = false, e3.SCROLL_SPEED = 3, e3.HEIGHT_OF_SCROLL_ZONE = 40, e3.BOTTOM_SCROLL_ZONE = 1, e3.TOP_SCROLL_ZONE = 2, e3.MAIN_MOUSE_BUTTON = 0, e3.mousedown = false, e3.isScrolling = false, e3.inScrollZone = null, e3.startX = 0, e3.startY = 0, e3.mouseX = 0, e3.mouseY = 0, e3.stackOfSelected = [], e3.listenerIds = [], e3;
              }
              return (0, i2.default)(n2, [{ key: "prepare", value: function() {
                this.enableModuleBindings();
              } }, { key: "startSelection", value: function(e3, t3) {
                var n3 = document.elementFromPoint(e3 - window.pageXOffset, t3 - window.pageYOffset);
                n3.closest(".".concat(this.Editor.Toolbar.CSS.toolbar)) || (this.Editor.BlockSelection.allBlocksSelected = false, this.clearSelection(), this.stackOfSelected = []);
                var o3 = [".".concat(p.default.CSS.content), ".".concat(this.Editor.Toolbar.CSS.toolbar), ".".concat(this.Editor.InlineToolbar.CSS.inlineToolbar)], r3 = n3.closest("." + this.Editor.UI.CSS.editorWrapper), i3 = o3.some(function(e4) {
                  return !!n3.closest(e4);
                });
                r3 && !i3 && (this.mousedown = true, this.startX = e3, this.startY = t3);
              } }, { key: "endSelection", value: function() {
                this.mousedown = false, this.startX = 0, this.startY = 0, this.overlayRectangle.style.display = "none";
              } }, { key: "isRectActivated", value: function() {
                return this.isRectSelectionActivated;
              } }, { key: "clearSelection", value: function() {
                this.isRectSelectionActivated = false;
              } }, { key: "enableModuleBindings", value: function() {
                var e3 = this, t3 = this.genHTML().container;
                this.listeners.on(t3, "mousedown", function(t4) {
                  e3.processMouseDown(t4);
                }, false), this.listeners.on(document.body, "mousemove", h.throttle(function(t4) {
                  e3.processMouseMove(t4);
                }, 10), { passive: true }), this.listeners.on(document.body, "mouseleave", function() {
                  e3.processMouseLeave();
                }), this.listeners.on(window, "scroll", h.throttle(function(t4) {
                  e3.processScroll(t4);
                }, 10), { passive: true }), this.listeners.on(document.body, "mouseup", function() {
                  e3.processMouseUp();
                }, false);
              } }, { key: "processMouseDown", value: function(e3) {
                e3.button === this.MAIN_MOUSE_BUTTON && (null !== e3.target.closest(f.default.allInputsSelector) || this.startSelection(e3.pageX, e3.pageY));
              } }, { key: "processMouseMove", value: function(e3) {
                this.changingRectangle(e3), this.scrollByZones(e3.clientY);
              } }, { key: "processMouseLeave", value: function() {
                this.clearSelection(), this.endSelection();
              } }, { key: "processScroll", value: function(e3) {
                this.changingRectangle(e3);
              } }, { key: "processMouseUp", value: function() {
                this.clearSelection(), this.endSelection();
              } }, { key: "scrollByZones", value: function(e3) {
                this.inScrollZone = null, e3 <= this.HEIGHT_OF_SCROLL_ZONE && (this.inScrollZone = this.TOP_SCROLL_ZONE), document.documentElement.clientHeight - e3 <= this.HEIGHT_OF_SCROLL_ZONE && (this.inScrollZone = this.BOTTOM_SCROLL_ZONE), this.inScrollZone ? this.isScrolling || (this.scrollVertical(this.inScrollZone === this.TOP_SCROLL_ZONE ? -this.SCROLL_SPEED : this.SCROLL_SPEED), this.isScrolling = true) : this.isScrolling = false;
              } }, { key: "genHTML", value: function() {
                var e3 = this.Editor.UI, t3 = e3.nodes.holder.querySelector("." + e3.CSS.editorWrapper), o3 = f.default.make("div", n2.CSS.overlay, {}), r3 = f.default.make("div", n2.CSS.overlayContainer, {}), i3 = f.default.make("div", n2.CSS.rect, {});
                return r3.appendChild(i3), o3.appendChild(r3), t3.appendChild(o3), this.overlayRectangle = i3, { container: t3, overlay: o3 };
              } }, { key: "scrollVertical", value: function(e3) {
                var t3 = this;
                if (this.inScrollZone && this.mousedown) {
                  var n3 = window.pageYOffset;
                  window.scrollBy(0, e3), this.mouseY += window.pageYOffset - n3, setTimeout(function() {
                    t3.scrollVertical(e3);
                  }, 0);
                }
              } }, { key: "changingRectangle", value: function(e3) {
                if (this.mousedown) {
                  void 0 !== e3.pageY && (this.mouseX = e3.pageX, this.mouseY = e3.pageY);
                  var t3 = this.genInfoForMouseSelection(), n3 = t3.rightPos, o3 = t3.leftPos, r3 = t3.index, i3 = this.startX > n3 && this.mouseX > n3, a2 = this.startX < o3 && this.mouseX < o3;
                  this.rectCrossesBlocks = !(i3 || a2), this.isRectSelectionActivated || (this.rectCrossesBlocks = false, this.isRectSelectionActivated = true, this.shrinkRectangleToPoint(), this.overlayRectangle.style.display = "block"), this.updateRectangleSize(), this.Editor.Toolbar.close(), void 0 !== r3 && (this.trySelectNextBlock(r3), this.inverseSelection(), d.default.get().removeAllRanges());
                }
              } }, { key: "shrinkRectangleToPoint", value: function() {
                this.overlayRectangle.style.left = "".concat(this.startX - window.pageXOffset, "px"), this.overlayRectangle.style.top = "".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.bottom = "calc(100% - ".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.right = "calc(100% - ".concat(this.startX - window.pageXOffset, "px");
              } }, { key: "inverseSelection", value: function() {
                var e3 = this.Editor.BlockManager.getBlockByIndex(this.stackOfSelected[0]).selected;
                if (this.rectCrossesBlocks && !e3) {
                  var t3, n3 = y(this.stackOfSelected);
                  try {
                    for (n3.s(); !(t3 = n3.n()).done; ) {
                      var o3 = t3.value;
                      this.Editor.BlockSelection.selectBlockByIndex(o3);
                    }
                  } catch (e4) {
                    n3.e(e4);
                  } finally {
                    n3.f();
                  }
                }
                if (!this.rectCrossesBlocks && e3) {
                  var r3, i3 = y(this.stackOfSelected);
                  try {
                    for (i3.s(); !(r3 = i3.n()).done; ) {
                      var a2 = r3.value;
                      this.Editor.BlockSelection.unSelectBlockByIndex(a2);
                    }
                  } catch (e4) {
                    i3.e(e4);
                  } finally {
                    i3.f();
                  }
                }
              } }, { key: "updateRectangleSize", value: function() {
                this.mouseY >= this.startY ? (this.overlayRectangle.style.top = "".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.bottom = "calc(100% - ".concat(this.mouseY - window.pageYOffset, "px")) : (this.overlayRectangle.style.bottom = "calc(100% - ".concat(this.startY - window.pageYOffset, "px"), this.overlayRectangle.style.top = "".concat(this.mouseY - window.pageYOffset, "px")), this.mouseX >= this.startX ? (this.overlayRectangle.style.left = "".concat(this.startX - window.pageXOffset, "px"), this.overlayRectangle.style.right = "calc(100% - ".concat(this.mouseX - window.pageXOffset, "px")) : (this.overlayRectangle.style.right = "calc(100% - ".concat(this.startX - window.pageXOffset, "px"), this.overlayRectangle.style.left = "".concat(this.mouseX - window.pageXOffset, "px"));
              } }, { key: "genInfoForMouseSelection", value: function() {
                var e3, t3 = document.body.offsetWidth / 2, n3 = this.mouseY - window.pageYOffset, o3 = document.elementFromPoint(t3, n3), r3 = this.Editor.BlockManager.getBlockByChildNode(o3);
                void 0 !== r3 && (e3 = this.Editor.BlockManager.blocks.findIndex(function(e4) {
                  return e4.holder === r3.holder;
                }));
                var i3 = this.Editor.BlockManager.lastBlock.holder.querySelector("." + p.default.CSS.content), a2 = Number.parseInt(window.getComputedStyle(i3).width, 10) / 2;
                return { index: e3, leftPos: t3 - a2, rightPos: t3 + a2 };
              } }, { key: "addBlockInSelection", value: function(e3) {
                this.rectCrossesBlocks && this.Editor.BlockSelection.selectBlockByIndex(e3), this.stackOfSelected.push(e3);
              } }, { key: "trySelectNextBlock", value: function(e3) {
                var t3 = this, n3 = this.stackOfSelected[this.stackOfSelected.length - 1] === e3, o3 = this.stackOfSelected.length;
                if (!n3) {
                  var r3 = this.stackOfSelected[o3 - 1] - this.stackOfSelected[o3 - 2] > 0, i3 = 0;
                  o3 > 1 && (i3 = r3 ? 1 : -1);
                  var a2 = e3 > this.stackOfSelected[o3 - 1] && 1 === i3, s2 = e3 < this.stackOfSelected[o3 - 1] && -1 === i3, l2 = !(a2 || s2 || 0 === i3);
                  if (l2 || !(e3 > this.stackOfSelected[o3 - 1] || void 0 === this.stackOfSelected[o3 - 1])) {
                    if (!l2 && e3 < this.stackOfSelected[o3 - 1])
                      for (var c2 = this.stackOfSelected[o3 - 1] - 1; c2 >= e3; c2--)
                        this.addBlockInSelection(c2);
                    else if (l2) {
                      var u2, f2 = o3 - 1;
                      for (u2 = e3 > this.stackOfSelected[o3 - 1] ? function() {
                        return e3 > t3.stackOfSelected[f2];
                      } : function() {
                        return e3 < t3.stackOfSelected[f2];
                      }; u2(); )
                        this.rectCrossesBlocks && this.Editor.BlockSelection.unSelectBlockByIndex(this.stackOfSelected[f2]), this.stackOfSelected.pop(), f2--;
                    }
                  } else
                    for (var d2 = this.stackOfSelected[o3 - 1] + 1 || e3; d2 <= e3; d2++)
                      this.addBlockInSelection(d2);
                }
              } }], [{ key: "CSS", get: function() {
                return { overlay: "codex-editor-overlay", overlayContainer: "codex-editor-overlay__container", rect: "codex-editor-overlay__rectangle", topScrollZone: "codex-editor-overlay__scroll-zone--top", bottomScrollZone: "codex-editor-overlay__scroll-zone--bottom" };
              } }]), n2;
            }(u.default);
            o2.default = m, m.displayName = "RectangleSelection", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(5), n(6), n(4), n(9), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p) {
            "use strict";
            var h = n(1);
            function v(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (v = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function g(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, f.default)(e2);
                if (t2) {
                  var r3 = (0, f.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, u.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = h(r2), i2 = h(i2), s = h(s), l = h(l), c = h(c), u = h(u), f = h(f), d = h(d), p = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = v(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(p);
            var y = function(e2) {
              (0, c.default)(a2, e2);
              var t2, n2, o3 = g(a2);
              function a2() {
                return (0, s.default)(this, a2), o3.apply(this, arguments);
              }
              return (0, l.default)(a2, [{ key: "render", value: (n2 = (0, i2.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3 = this;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return n3 = t3.map(function(e5) {
                          return { function: function() {
                            return i3.insertBlock(e5);
                          } };
                        }), this.Editor.ModificationsObserver.disable(), e4.next = 4, p.sequence(n3);
                      case 4:
                        return o4 = e4.sent, this.Editor.ModificationsObserver.enable(), this.Editor.UI.checkEmptiness(), e4.abrupt("return", o4);
                      case 8:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3) {
                return n2.apply(this, arguments);
              }) }, { key: "insertBlock", value: (t2 = (0, i2.default)(r2.default.mark(function e3(t3) {
                var n3, o4, i3, a3, s2, l2, c2, u2, f2, d2, h2;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (o4 = this.Editor, i3 = o4.Tools, a3 = o4.BlockManager, s2 = t3.type, l2 = t3.data, c2 = t3.tunes, u2 = t3.id, !i3.available.has(s2)) {
                          e4.next = 13;
                          break;
                        }
                        e4.prev = 3, a3.insert({ id: u2, tool: s2, data: l2, tunes: c2 }), e4.next = 11;
                        break;
                      case 7:
                        throw e4.prev = 7, e4.t0 = e4.catch(3), p.log("Block \xAB".concat(s2, "\xBB skipped because of plugins error"), "warn", l2), Error(e4.t0);
                      case 11:
                        e4.next = 18;
                        break;
                      case 13:
                        f2 = { savedData: { id: u2, type: s2, data: l2 }, title: s2 }, i3.unavailable.has(s2) && (d2 = i3.unavailable.get(s2).toolbox, h2 = null === (n3 = d2[0]) || void 0 === n3 ? void 0 : n3.title, f2.title = h2 || f2.title), a3.insert({ id: u2, tool: i3.stubTool, data: f2 }).stretched = true, p.log("Tool \xAB".concat(s2, "\xBB is not found. Check 'tools' property at your initial Editor.js config."), "warn");
                      case 18:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this, [[3, 7]]);
              })), function(e3) {
                return t2.apply(this, arguments);
              }) }]), a2;
            }(d.default);
            o2.default = y, y.displayName = "Renderer", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(5), n(6), n(4), n(9), n(8), n(66)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h) {
            "use strict";
            var v = n(1);
            function g(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (g = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function y(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, f.default)(e2);
                if (t2) {
                  var r3 = (0, f.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, u.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = v(r2), i2 = v(i2), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = v(d), p = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = g(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(p);
            var k = function(e2) {
              (0, c.default)(a2, e2);
              var t2, n2, o3 = y(a2);
              function a2() {
                return (0, s.default)(this, a2), o3.apply(this, arguments);
              }
              return (0, l.default)(a2, [{ key: "save", value: (n2 = (0, i2.default)(r2.default.mark(function e3() {
                var t3, n3, o4, i3, a3, s2, l2, c2 = this;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return t3 = this.Editor, n3 = t3.BlockManager, o4 = t3.Tools, i3 = n3.blocks, a3 = [], e4.prev = 2, i3.forEach(function(e5) {
                          a3.push(c2.getSavedData(e5));
                        }), e4.next = 6, Promise.all(a3);
                      case 6:
                        return s2 = e4.sent, e4.next = 9, (0, h.sanitizeBlocks)(s2, function(e5) {
                          return o4.blockTools.get(e5).sanitizeConfig;
                        });
                      case 9:
                        return l2 = e4.sent, e4.abrupt("return", this.makeOutput(l2));
                      case 13:
                        e4.prev = 13, e4.t0 = e4.catch(2), p.logLabeled("Saving failed due to the Error %o", "error", e4.t0);
                      case 16:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this, [[2, 13]]);
              })), function() {
                return n2.apply(this, arguments);
              }) }, { key: "getSavedData", value: (t2 = (0, i2.default)(r2.default.mark(function e3(t3) {
                var n3, o4;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return e4.next = 2, t3.save();
                      case 2:
                        if (n3 = e4.sent, e4.t0 = n3, !e4.t0) {
                          e4.next = 8;
                          break;
                        }
                        return e4.next = 7, t3.validate(n3.data);
                      case 7:
                        e4.t0 = e4.sent;
                      case 8:
                        return o4 = e4.t0, e4.abrupt("return", Object.assign(Object.assign({}, n3), { isValid: o4 }));
                      case 10:
                      case "end":
                        return e4.stop();
                    }
                }, e3);
              })), function(e3) {
                return t2.apply(this, arguments);
              }) }, { key: "makeOutput", value: function(e3) {
                var t3 = this, n3 = 0, o4 = [];
                return p.log("[Editor.js saving]:", "groupCollapsed"), e3.forEach(function(e4) {
                  var r3 = e4.id, i3 = e4.tool, a3 = e4.data, s2 = e4.tunes, l2 = e4.time, c2 = e4.isValid;
                  if (n3 += l2, p.log("".concat(i3.charAt(0).toUpperCase() + i3.slice(1)), "group"), !c2)
                    return p.log("Block \xAB".concat(i3, "\xBB skipped because saved data is invalid")), void p.log(void 0, "groupEnd");
                  if (p.log(a3), p.log(void 0, "groupEnd"), i3 !== t3.Editor.Tools.stubTool) {
                    var u2 = Object.assign({ id: r3, type: i3, data: a3 }, !p.isEmpty(s2) && { tunes: s2 });
                    o4.push(u2);
                  } else
                    o4.push(a3);
                }), p.log("Total", "log", n3), p.log(void 0, "groupEnd"), { time: +new Date(), blocks: o4, version: "2.26.5" };
              } }]), a2;
            }(d.default);
            o2.default = k, k.displayName = "Saver", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(30), n(2), n(3), n(5), n(6), n(4), n(9), n(19), n(25), n(85), n(54), n(68), n(389)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y) {
            "use strict";
            var k = n(1);
            function b(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (b = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function m(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, u.default)(e2);
                if (t2) {
                  var r3 = (0, u.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, c.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = k(r2), i2 = k(i2), s = k(s), l = k(l), c = k(c), u = k(u), f = k(f), d = k(d), p = k(p), h = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = b(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(h), v = k(v);
            var w = function(e2) {
              (0, l.default)(n2, e2);
              var t2 = m(n2);
              function n2() {
                var e3;
                return (0, i2.default)(this, n2), (e3 = t2.apply(this, arguments)).opened = false, e3.selection = new p.default(), e3.onOverlayClicked = function() {
                  e3.close();
                }, e3;
              }
              return (0, s.default)(n2, [{ key: "events", get: function() {
                return { opened: "block-settings-opened", closed: "block-settings-closed" };
              } }, { key: "CSS", get: function() {
                return { settings: "ce-settings" };
              } }, { key: "flipper", get: function() {
                var e3;
                return null === (e3 = this.popover) || void 0 === e3 ? void 0 : e3.flipper;
              } }, { key: "make", value: function() {
                this.nodes.wrapper = d.default.make("div");
              } }, { key: "destroy", value: function() {
                this.removeAllNodes();
              } }, { key: "open", value: function() {
                var e3 = this, t3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.Editor.BlockManager.currentBlock;
                this.opened = true, this.selection.save(), t3.selected = true, this.Editor.BlockSelection.clearCache();
                var n3 = t3.getTunes(), o3 = (0, r2.default)(n3, 2), i3 = o3[0], a2 = o3[1];
                this.eventsDispatcher.emit(this.events.opened), this.popover = new h.default({ className: this.CSS.settings, searchable: true, filterLabel: v.default.ui(g.I18nInternalNS.ui.popover, "Filter"), nothingFoundLabel: v.default.ui(g.I18nInternalNS.ui.popover, "Nothing found"), items: i3.map(function(t4) {
                  return e3.resolveTuneAliases(t4);
                }), customContent: a2, customContentFlippableItems: this.getControls(a2), scopeElement: this.Editor.API.methods.ui.nodes.redactor }), this.popover.on(h.PopoverEvent.OverlayClicked, this.onOverlayClicked), this.popover.on(h.PopoverEvent.Close, function() {
                  return e3.close();
                }), this.nodes.wrapper.append(this.popover.getElement()), this.popover.show();
              } }, { key: "getElement", value: function() {
                return this.nodes.wrapper;
              } }, { key: "close", value: function() {
                this.opened = false, p.default.isAtEditor || this.selection.restore(), this.selection.clearSaved(), !this.Editor.CrossBlockSelection.isCrossBlockSelectionStarted && this.Editor.BlockManager.currentBlock && (this.Editor.BlockManager.currentBlock.selected = false), this.eventsDispatcher.emit(this.events.closed), this.popover && (this.popover.off(h.PopoverEvent.OverlayClicked, this.onOverlayClicked), this.popover.destroy(), this.popover.getElement().remove(), this.popover = null);
              } }, { key: "getControls", value: function(e3) {
                var t3 = this.Editor.StylesAPI, n3 = e3.querySelectorAll(".".concat(t3.classes.settingsButton, ", ").concat(d.default.allInputsSelector));
                return Array.from(n3);
              } }, { key: "resolveTuneAliases", value: function(e3) {
                var t3 = (0, y.resolveAliases)(e3, { label: "title" });
                return e3.confirmation && (t3.confirmation = this.resolveTuneAliases(e3.confirmation)), t3;
              } }]), n2;
            }(f.default);
            o2.default = w, w.displayName = "BlockSettings", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(30), n(21), n(41), n(2), n(3), n(5), n(6), n(4), n(9), n(19), n(8), n(67), n(54), n(68), n(66)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y, k, b, m) {
            "use strict";
            var w = n(1);
            function x(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (x = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function C(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, p.default)(e2);
                if (t2) {
                  var r3 = (0, p.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, d.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = w(r2), i2 = w(i2), s = w(s), l = w(l), c = w(c), u = w(u), f = w(f), d = w(d), p = w(p), h = w(h), v = w(v), g = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = x(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(g), y = w(y), k = w(k);
            var S = function(e2) {
              (0, f.default)(a2, e2);
              var t2, n2, o3 = C(a2);
              function a2() {
                var e3;
                return (0, c.default)(this, a2), (e3 = o3.apply(this, arguments)).opened = false, e3.tools = [], e3.flipper = null, e3.togglingCallback = null, e3;
              }
              return (0, u.default)(a2, [{ key: "make", value: function() {
                this.nodes.wrapper = v.default.make("div", [a2.CSS.conversionToolbarWrapper].concat((0, l.default)(this.isRtl ? [this.Editor.UI.CSS.editorRtlFix] : []))), this.nodes.tools = v.default.make("div", a2.CSS.conversionToolbarTools);
                var e3 = v.default.make("div", a2.CSS.conversionToolbarLabel, { textContent: k.default.ui(b.I18nInternalNS.ui.inlineToolbar.converter, "Convert to") });
                return this.addTools(), this.enableFlipper(), v.default.append(this.nodes.wrapper, e3), v.default.append(this.nodes.wrapper, this.nodes.tools), this.nodes.wrapper;
              } }, { key: "destroy", value: function() {
                this.flipper && (this.flipper.deactivate(), this.flipper = null), this.removeAllNodes();
              } }, { key: "toggle", value: function(e3) {
                this.opened ? this.close() : this.open(), g.isFunction(e3) && (this.togglingCallback = e3);
              } }, { key: "open", value: function() {
                var e3 = this;
                this.filterTools(), this.opened = true, this.nodes.wrapper.classList.add(a2.CSS.conversionToolbarShowed), window.requestAnimationFrame(function() {
                  e3.flipper.activate(e3.tools.map(function(e4) {
                    return e4.button;
                  }).filter(function(e4) {
                    return !e4.classList.contains(a2.CSS.conversionToolHidden);
                  })), e3.flipper.focusFirst(), g.isFunction(e3.togglingCallback) && e3.togglingCallback(true);
                });
              } }, { key: "close", value: function() {
                this.opened = false, this.flipper.deactivate(), this.nodes.wrapper.classList.remove(a2.CSS.conversionToolbarShowed), g.isFunction(this.togglingCallback) && this.togglingCallback(false);
              } }, { key: "hasTools", value: function() {
                return 1 !== this.tools.length || this.tools[0].name !== this.config.defaultBlock;
              } }, { key: "replaceWithBlock", value: (n2 = (0, s.default)(r2.default.mark(function e3(t3, n3) {
                var o4, i3, a3, s2, l2, c2, u2, f2, d2, p2 = this;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return o4 = this.Editor.BlockManager.currentBlock.tool, e4.next = 3, this.Editor.BlockManager.currentBlock.save();
                      case 3:
                        if (i3 = e4.sent, a3 = i3.data, s2 = this.Editor.Tools.blockTools.get(t3), l2 = "", c2 = o4.conversionConfig.export, !g.isFunction(c2)) {
                          e4.next = 12;
                          break;
                        }
                        l2 = c2(a3), e4.next = 18;
                        break;
                      case 12:
                        if (!g.isString(c2)) {
                          e4.next = 16;
                          break;
                        }
                        l2 = a3[c2], e4.next = 18;
                        break;
                      case 16:
                        return g.log("Conversion \xABexport\xBB property must be a string or function. String means key of saved data object to export. Function should export processed string to export."), e4.abrupt("return");
                      case 18:
                        if (u2 = (0, m.clean)(l2, s2.sanitizeConfig), f2 = {}, d2 = s2.conversionConfig.import, !g.isFunction(d2)) {
                          e4.next = 25;
                          break;
                        }
                        f2 = d2(u2), e4.next = 31;
                        break;
                      case 25:
                        if (!g.isString(d2)) {
                          e4.next = 29;
                          break;
                        }
                        f2[d2] = u2, e4.next = 31;
                        break;
                      case 29:
                        return g.log("Conversion \xABimport\xBB property must be a string or function. String means key of tool data to import. Function accepts a imported string and return composed tool data."), e4.abrupt("return");
                      case 31:
                        n3 && (f2 = Object.assign(f2, n3)), this.Editor.BlockManager.replace({ tool: t3, data: f2 }), this.Editor.BlockSelection.clearSelection(), this.close(), this.Editor.InlineToolbar.close(), g.delay(function() {
                          p2.Editor.Caret.setToBlock(p2.Editor.BlockManager.currentBlock);
                        }, 10)();
                      case 37:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function(e3, t3) {
                return n2.apply(this, arguments);
              }) }, { key: "addTools", value: function() {
                var e3 = this, t3 = this.Editor.Tools.blockTools;
                Array.from(t3.entries()).forEach(function(t4) {
                  var n3 = (0, i2.default)(t4, 2), o4 = n3[0], r3 = n3[1], a3 = r3.conversionConfig;
                  a3 && a3.import && r3.toolbox.forEach(function(t5) {
                    return e3.addToolIfValid(o4, t5);
                  });
                });
              } }, { key: "addToolIfValid", value: function(e3, t3) {
                !g.isEmpty(t3) && t3.icon && this.addTool(e3, t3);
              } }, { key: "addTool", value: function(e3, t3) {
                var n3 = this, o4 = v.default.make("div", [a2.CSS.conversionTool]), i3 = v.default.make("div", [a2.CSS.conversionToolIcon]);
                o4.dataset.tool = e3, i3.innerHTML = t3.icon, v.default.append(o4, i3), v.default.append(o4, v.default.text(k.default.t(b.I18nInternalNS.toolNames, t3.title || g.capitalize(e3)))), v.default.append(this.nodes.tools, o4), this.tools.push({ name: e3, button: o4, toolboxItem: t3 }), this.listeners.on(o4, "click", (0, s.default)(r2.default.mark(function o5() {
                  return r2.default.wrap(function(o6) {
                    for (; ; )
                      switch (o6.prev = o6.next) {
                        case 0:
                          return o6.next = 2, n3.replaceWithBlock(e3, t3.data);
                        case 2:
                        case "end":
                          return o6.stop();
                      }
                  }, o5);
                })));
              } }, { key: "filterTools", value: (t2 = (0, s.default)(r2.default.mark(function e3() {
                var t3, n3, o4;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return o4 = function(e5, t4) {
                          return e5.icon === t4.icon && e5.title === t4.title;
                        }, t3 = this.Editor.BlockManager.currentBlock, e4.next = 4, t3.getActiveToolboxEntry();
                      case 4:
                        n3 = e4.sent, this.tools.forEach(function(e5) {
                          var r3 = false;
                          if (n3) {
                            var i3 = o4(n3, e5.toolboxItem);
                            r3 = e5.button.dataset.tool === t3.name && i3;
                          }
                          e5.button.hidden = r3, e5.button.classList.toggle(a2.CSS.conversionToolHidden, r3);
                        });
                      case 6:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "enableFlipper", value: function() {
                this.flipper = new y.default({ focusedItemClass: a2.CSS.conversionToolFocused });
              } }], [{ key: "CSS", get: function() {
                return { conversionToolbarWrapper: "ce-conversion-toolbar", conversionToolbarShowed: "ce-conversion-toolbar--showed", conversionToolbarTools: "ce-conversion-toolbar__tools", conversionToolbarLabel: "ce-conversion-toolbar__label", conversionTool: "ce-conversion-tool", conversionToolHidden: "ce-conversion-tool--hidden", conversionToolIcon: "ce-conversion-tool__icon", conversionToolFocused: "ce-conversion-tool--focused", conversionToolActive: "ce-conversion-tool--active" };
              } }]), a2;
            }(h.default);
            o2.default = S, S.displayName = "ConversionToolbar", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(41), n(30), n(2), n(3), n(5), n(6), n(4), n(9), n(19), n(25), n(8), n(67), n(54), n(68), n(116), n(115), n(69), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y, k, b, m, w, x, C, S) {
            "use strict";
            var T = n(1);
            function E(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (E = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function B(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, p.default)(e2);
                if (t2) {
                  var r3 = (0, p.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, d.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = T(r2), i2 = T(i2), s = T(s), l = T(l), c = T(c), u = T(u), f = T(f), d = T(d), p = T(p), h = T(h), v = T(v), g = T(g), y = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = E(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(y), k = T(k), b = T(b), w = T(w), x = T(x);
            var M = function(e2) {
              (0, f.default)(o3, e2);
              var t2, n2 = B(o3);
              function o3(e3) {
                var t3, r3 = e3.config, i3 = e3.eventsDispatcher;
                return (0, c.default)(this, o3), (t3 = n2.call(this, { config: r3, eventsDispatcher: i3 })).CSS = { inlineToolbar: "ce-inline-toolbar", inlineToolbarShowed: "ce-inline-toolbar--showed", inlineToolbarLeftOriented: "ce-inline-toolbar--left-oriented", inlineToolbarRightOriented: "ce-inline-toolbar--right-oriented", inlineToolbarShortcut: "ce-inline-toolbar__shortcut", buttonsWrapper: "ce-inline-toolbar__buttons", actionsWrapper: "ce-inline-toolbar__actions", inlineToolButton: "ce-inline-tool", inputField: "cdx-input", focusedButton: "ce-inline-tool--focused", conversionToggler: "ce-inline-toolbar__dropdown", conversionTogglerArrow: "ce-inline-toolbar__dropdown-arrow", conversionTogglerHidden: "ce-inline-toolbar__dropdown--hidden", conversionTogglerContent: "ce-inline-toolbar__dropdown-content", togglerAndButtonsWrapper: "ce-inline-toolbar__toggler-and-button-wrapper" }, t3.opened = false, t3.toolbarVerticalMargin = y.isMobileScreen() ? 20 : 6, t3.buttonsList = null, t3.width = 0, t3.flipper = null, t3.tooltip = new x.default(), t3;
              }
              return (0, u.default)(o3, [{ key: "toggleReadOnly", value: function(e3) {
                e3 ? (this.destroy(), this.Editor.ConversionToolbar.destroy()) : this.make();
              } }, { key: "tryToShow", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                this.allowedToShow() ? (this.move(), this.open(t3), this.Editor.Toolbar.close()) : e3 && this.close();
              } }, { key: "move", value: function() {
                var e3 = g.default.rect, t3 = this.Editor.UI.nodes.wrapper.getBoundingClientRect(), n3 = { x: e3.x - t3.left, y: e3.y + e3.height - t3.top + this.toolbarVerticalMargin };
                e3.width && (n3.x += Math.floor(e3.width / 2));
                var o4 = n3.x - this.width / 2, r3 = n3.x + this.width / 2;
                this.nodes.wrapper.classList.toggle(this.CSS.inlineToolbarLeftOriented, o4 < this.Editor.UI.contentRect.left), this.nodes.wrapper.classList.toggle(this.CSS.inlineToolbarRightOriented, r3 > this.Editor.UI.contentRect.right), this.nodes.wrapper.style.left = Math.floor(n3.x) + "px", this.nodes.wrapper.style.top = Math.floor(n3.y) + "px";
              } }, { key: "close", value: function() {
                var e3 = this;
                this.opened && (this.Editor.ReadOnly.isEnabled || (this.nodes.wrapper.classList.remove(this.CSS.inlineToolbarShowed), Array.from(this.toolsInstances.entries()).forEach(function(t3) {
                  var n3 = (0, l.default)(t3, 2), o4 = n3[0], r3 = n3[1], i3 = e3.getToolShortcut(o4);
                  i3 && w.default.remove(e3.Editor.UI.nodes.redactor, i3), y.isFunction(r3.clear) && r3.clear();
                }), this.opened = false, this.flipper.deactivate(), this.Editor.ConversionToolbar.close()));
              } }, { key: "open", value: function() {
                var e3 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                if (!this.opened) {
                  this.addToolsFiltered(), this.nodes.wrapper.classList.add(this.CSS.inlineToolbarShowed), this.buttonsList = this.nodes.buttons.querySelectorAll(".".concat(this.CSS.inlineToolButton)), this.opened = true, e3 && this.Editor.ConversionToolbar.hasTools() ? this.setConversionTogglerContent() : this.nodes.conversionToggler.hidden = true;
                  var t3 = Array.from(this.buttonsList);
                  t3.unshift(this.nodes.conversionToggler), t3 = t3.filter(function(e4) {
                    return !e4.hidden;
                  }), this.flipper.activate(t3);
                }
              } }, { key: "containsNode", value: function(e3) {
                return this.nodes.wrapper.contains(e3);
              } }, { key: "destroy", value: function() {
                this.flipper && (this.flipper.deactivate(), this.flipper = null), this.removeAllNodes(), this.tooltip.destroy();
              } }, { key: "make", value: function() {
                var e3 = this;
                this.nodes.wrapper = v.default.make("div", [this.CSS.inlineToolbar].concat((0, s.default)(this.isRtl ? [this.Editor.UI.CSS.editorRtlFix] : []))), this.nodes.togglerAndButtonsWrapper = v.default.make("div", this.CSS.togglerAndButtonsWrapper), this.nodes.buttons = v.default.make("div", this.CSS.buttonsWrapper), this.nodes.actions = v.default.make("div", this.CSS.actionsWrapper), this.listeners.on(this.nodes.wrapper, "mousedown", function(t3) {
                  t3.target.closest(".".concat(e3.CSS.actionsWrapper)) || t3.preventDefault();
                }), v.default.append(this.nodes.wrapper, [this.nodes.togglerAndButtonsWrapper, this.nodes.actions]), v.default.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper), this.addConversionToggler(), v.default.append(this.nodes.togglerAndButtonsWrapper, this.nodes.buttons), this.prepareConversionToolbar(), this.recalculateWidth(), this.enableFlipper();
              } }, { key: "allowedToShow", value: function() {
                var e3 = g.default.get(), t3 = g.default.text;
                if (!e3 || !e3.anchorNode)
                  return false;
                if (e3.isCollapsed || t3.length < 1)
                  return false;
                var n3 = v.default.isElement(e3.anchorNode) ? e3.anchorNode : e3.anchorNode.parentElement;
                if (e3 && ["IMG", "INPUT"].includes(n3.tagName))
                  return false;
                if (null === n3.closest('[contenteditable="true"]'))
                  return false;
                var o4 = this.Editor.BlockManager.getBlock(e3.anchorNode);
                return !!o4 && 0 !== o4.tool.inlineTools.size;
              } }, { key: "recalculateWidth", value: function() {
                this.width = this.nodes.wrapper.offsetWidth;
              } }, { key: "addConversionToggler", value: function() {
                var e3 = this;
                this.nodes.conversionToggler = v.default.make("div", this.CSS.conversionToggler), this.nodes.conversionTogglerContent = v.default.make("div", this.CSS.conversionTogglerContent);
                var t3 = v.default.make("div", this.CSS.conversionTogglerArrow, { innerHTML: S.IconChevronDown });
                this.nodes.conversionToggler.appendChild(this.nodes.conversionTogglerContent), this.nodes.conversionToggler.appendChild(t3), this.nodes.togglerAndButtonsWrapper.appendChild(this.nodes.conversionToggler), this.listeners.on(this.nodes.conversionToggler, "click", function() {
                  e3.Editor.ConversionToolbar.toggle(function(t4) {
                    !t4 && e3.opened ? e3.flipper.activate() : e3.opened && e3.flipper.deactivate();
                  });
                }), false === y.isMobileScreen() && this.tooltip.onHover(this.nodes.conversionToggler, b.default.ui(m.I18nInternalNS.ui.inlineToolbar.converter, "Convert to"), { placement: "top", hidingDelay: 100 });
              } }, { key: "setConversionTogglerContent", value: (t2 = (0, i2.default)(r2.default.mark(function e3() {
                var t3, n3, o4, i3, a2, s2;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return t3 = this.Editor.BlockManager, n3 = t3.currentBlock, o4 = n3.name, i3 = n3.tool.conversionConfig, a2 = i3 && i3.export, this.nodes.conversionToggler.hidden = !a2, this.nodes.conversionToggler.classList.toggle(this.CSS.conversionTogglerHidden, !a2), e4.next = 9, n3.getActiveToolboxEntry();
                      case 9:
                        if (e4.t0 = e4.sent, e4.t0) {
                          e4.next = 12;
                          break;
                        }
                        e4.t0 = {};
                      case 12:
                        s2 = e4.t0, this.nodes.conversionTogglerContent.innerHTML = s2.icon || s2.title || y.capitalize(o4);
                      case 14:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "prepareConversionToolbar", value: function() {
                var e3 = this.Editor.ConversionToolbar.make();
                v.default.append(this.nodes.wrapper, e3);
              } }, { key: "addToolsFiltered", value: function() {
                var e3 = this, t3 = g.default.get(), n3 = this.Editor.BlockManager.getBlock(t3.anchorNode);
                this.nodes.buttons.innerHTML = "", this.nodes.actions.innerHTML = "", this.toolsInstances = /* @__PURE__ */ new Map(), Array.from(n3.tool.inlineTools.values()).forEach(function(t4) {
                  e3.addTool(t4);
                }), this.recalculateWidth();
              } }, { key: "addTool", value: function(e3) {
                var t3 = this, n3 = e3.create(), o4 = n3.render();
                if (o4) {
                  if (o4.dataset.tool = e3.name, this.nodes.buttons.appendChild(o4), this.toolsInstances.set(e3.name, n3), y.isFunction(n3.renderActions)) {
                    var r3 = n3.renderActions();
                    this.nodes.actions.appendChild(r3);
                  }
                  this.listeners.on(o4, "click", function(e4) {
                    t3.toolClicked(n3), e4.preventDefault();
                  });
                  var i3 = this.getToolShortcut(e3.name);
                  if (i3)
                    try {
                      this.enableShortcuts(n3, i3);
                    } catch (e4) {
                    }
                  var a2 = v.default.make("div"), s2 = b.default.t(m.I18nInternalNS.toolNames, e3.title || y.capitalize(e3.name));
                  a2.appendChild(v.default.text(s2)), i3 && a2.appendChild(v.default.make("div", this.CSS.inlineToolbarShortcut, { textContent: y.beautifyShortcut(i3) })), false === y.isMobileScreen() && this.tooltip.onHover(o4, a2, { placement: "top", hidingDelay: 100 }), n3.checkState(g.default.get());
                } else
                  y.log("Render method must return an instance of Node", "warn", e3.name);
              } }, { key: "getToolShortcut", value: function(e3) {
                var t3 = this.Editor.Tools, n3 = t3.inlineTools.get(e3), o4 = t3.internal.inlineTools;
                return Array.from(o4.keys()).includes(e3) ? this.inlineTools[e3][C.CommonInternalSettings.Shortcut] : n3.shortcut;
              } }, { key: "enableShortcuts", value: function(e3, t3) {
                var n3 = this;
                w.default.add({ name: t3, handler: function(t4) {
                  var o4 = n3.Editor.BlockManager.currentBlock;
                  o4 && o4.tool.enabledInlineTools && (t4.preventDefault(), n3.toolClicked(e3));
                }, on: this.Editor.UI.nodes.redactor });
              } }, { key: "toolClicked", value: function(e3) {
                var t3 = g.default.range;
                e3.surround(t3), this.checkToolsState(), void 0 !== e3.renderActions && this.flipper.deactivate();
              } }, { key: "checkToolsState", value: function() {
                this.toolsInstances.forEach(function(e3) {
                  e3.checkState(g.default.get());
                });
              } }, { key: "inlineTools", get: function() {
                var e3 = {};
                return Array.from(this.Editor.Tools.inlineTools.entries()).forEach(function(t3) {
                  var n3 = (0, l.default)(t3, 2), o4 = n3[0], r3 = n3[1];
                  e3[o4] = r3.create();
                }), e3;
              } }, { key: "enableFlipper", value: function() {
                this.flipper = new k.default({ focusedItemClass: this.CSS.focusedButton, allowedKeys: [y.keyCodes.ENTER, y.keyCodes.TAB] });
              } }]), o3;
            }(h.default);
            o2.default = M, M.displayName = "InlineToolbar", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(41), n(30), n(21), n(2), n(3), n(5), n(6), n(4), n(7), n(390), n(9), n(8), n(391), n(392), n(393), n(394), n(395), n(399), n(400), n(401), n(185)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y, k, b, m, w, x, C, S, T, E) {
            "use strict";
            var B = n(1);
            function M(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (M = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function _(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, p.default)(e2);
                if (t2) {
                  var r3 = (0, p.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, d.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = B(r2), i2 = B(i2), s = B(s), l = B(l), c = B(c), u = B(u), f = B(f), d = B(d), p = B(p), h = B(h), v = B(v), g = B(g), y = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = M(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(y), k = B(k), b = B(b), m = B(m), w = B(w), x = B(x), C = B(C), S = B(S), T = B(T), E = B(E);
            var O = function(e2, t2, n2, o3) {
              var r3, i3 = arguments.length, a2 = i3 < 3 ? t2 : null === o3 ? o3 = Object.getOwnPropertyDescriptor(t2, n2) : o3;
              if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, h.default)(Reflect)) && "function" == typeof Reflect.decorate)
                a2 = Reflect.decorate(e2, t2, n2, o3);
              else
                for (var s2 = e2.length - 1; s2 >= 0; s2--)
                  (r3 = e2[s2]) && (a2 = (i3 < 3 ? r3(a2) : i3 > 3 ? r3(t2, n2, a2) : r3(t2, n2)) || a2);
              return i3 > 3 && a2 && Object.defineProperty(t2, n2, a2), a2;
            }, I = function(e2) {
              (0, f.default)(o3, e2);
              var t2, n2 = _(o3);
              function o3() {
                var e3;
                return (0, c.default)(this, o3), (e3 = n2.apply(this, arguments)).stubTool = "stub", e3.toolsAvailable = new E.default(), e3.toolsUnavailable = new E.default(), e3;
              }
              return (0, u.default)(o3, [{ key: "available", get: function() {
                return this.toolsAvailable;
              } }, { key: "unavailable", get: function() {
                return this.toolsUnavailable;
              } }, { key: "inlineTools", get: function() {
                return this.available.inlineTools;
              } }, { key: "blockTools", get: function() {
                return this.available.blockTools;
              } }, { key: "blockTunes", get: function() {
                return this.available.blockTunes;
              } }, { key: "defaultTool", get: function() {
                return this.blockTools.get(this.config.defaultBlock);
              } }, { key: "internal", get: function() {
                return this.available.internalTools;
              } }, { key: "prepare", value: (t2 = (0, l.default)(r2.default.mark(function e3() {
                var t3, n3, o4 = this;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (this.validateTools(), this.config.tools = y.deepMerge({}, this.internalTools, this.config.tools), Object.prototype.hasOwnProperty.call(this.config, "tools") && 0 !== Object.keys(this.config.tools).length) {
                          e4.next = 4;
                          break;
                        }
                        throw Error("Can't start without tools");
                      case 4:
                        if (t3 = this.prepareConfig(), this.factory = new x.default(t3, this.config, this.Editor.API), 0 !== (n3 = this.getListOfPrepareFunctions(t3)).length) {
                          e4.next = 9;
                          break;
                        }
                        return e4.abrupt("return", Promise.resolve());
                      case 9:
                        return e4.next = 11, y.sequence(n3, function(e5) {
                          o4.toolPrepareMethodSuccess(e5);
                        }, function(e5) {
                          o4.toolPrepareMethodFallback(e5);
                        });
                      case 11:
                        this.prepareBlockTools();
                      case 12:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "getAllInlineToolsSanitizeConfig", value: function() {
                var e3 = {};
                return Array.from(this.inlineTools.values()).forEach(function(t3) {
                  Object.assign(e3, t3.sanitizeConfig);
                }), e3;
              } }, { key: "destroy", value: function() {
                Object.values(this.available).forEach(function() {
                  var e3 = (0, l.default)(r2.default.mark(function e4(t3) {
                    return r2.default.wrap(function(e5) {
                      for (; ; )
                        switch (e5.prev = e5.next) {
                          case 0:
                            if (!y.isFunction(t3.reset)) {
                              e5.next = 3;
                              break;
                            }
                            return e5.next = 3, t3.reset();
                          case 3:
                          case "end":
                            return e5.stop();
                        }
                    }, e4);
                  }));
                  return function(t3) {
                    return e3.apply(this, arguments);
                  };
                }());
              } }, { key: "internalTools", get: function() {
                return { bold: { class: k.default, isInternal: true }, italic: { class: b.default, isInternal: true }, link: { class: m.default, isInternal: true }, paragraph: { class: v.default, inlineToolbar: true, isInternal: true }, stub: { class: w.default, isInternal: true }, moveUp: { class: T.default, isInternal: true }, delete: { class: S.default, isInternal: true }, moveDown: { class: C.default, isInternal: true } };
              } }, { key: "toolPrepareMethodSuccess", value: function(e3) {
                var t3 = this.factory.get(e3.toolName);
                if (t3.isInline()) {
                  var n3 = ["render", "surround", "checkState"].filter(function(e4) {
                    return !t3.create()[e4];
                  });
                  if (n3.length)
                    return y.log("Incorrect Inline Tool: ".concat(t3.name, ". Some of required methods is not implemented %o"), "warn", n3), void this.toolsUnavailable.set(t3.name, t3);
                }
                this.toolsAvailable.set(t3.name, t3);
              } }, { key: "toolPrepareMethodFallback", value: function(e3) {
                this.toolsUnavailable.set(e3.toolName, this.factory.get(e3.toolName));
              } }, { key: "getListOfPrepareFunctions", value: function(e3) {
                var t3 = [];
                return Object.entries(e3).forEach(function(e4) {
                  var n3 = (0, s.default)(e4, 2), o4 = n3[0], r3 = n3[1];
                  t3.push({ function: y.isFunction(r3.class.prepare) ? r3.class.prepare : function() {
                  }, data: { toolName: o4, config: r3.config } });
                }), t3;
              } }, { key: "prepareBlockTools", value: function() {
                var e3 = this;
                Array.from(this.blockTools.values()).forEach(function(t3) {
                  e3.assignInlineToolsToBlockTool(t3), e3.assignBlockTunesToBlockTool(t3);
                });
              } }, { key: "assignInlineToolsToBlockTool", value: function(e3) {
                var t3 = this;
                false !== this.config.inlineToolbar && (true !== e3.enabledInlineTools ? Array.isArray(e3.enabledInlineTools) && (e3.inlineTools = new E.default(e3.enabledInlineTools.map(function(e4) {
                  return [e4, t3.inlineTools.get(e4)];
                }))) : e3.inlineTools = new E.default(Array.isArray(this.config.inlineToolbar) ? this.config.inlineToolbar.map(function(e4) {
                  return [e4, t3.inlineTools.get(e4)];
                }) : Array.from(this.inlineTools.entries())));
              } }, { key: "assignBlockTunesToBlockTool", value: function(e3) {
                var t3 = this;
                if (false !== e3.enabledBlockTunes)
                  if (Array.isArray(e3.enabledBlockTunes)) {
                    var n3 = new E.default(e3.enabledBlockTunes.map(function(e4) {
                      return [e4, t3.blockTunes.get(e4)];
                    }));
                    e3.tunes = new E.default([].concat((0, i2.default)(n3), (0, i2.default)(this.blockTunes.internalTools)));
                  } else if (Array.isArray(this.config.tunes)) {
                    var o4 = new E.default(this.config.tunes.map(function(e4) {
                      return [e4, t3.blockTunes.get(e4)];
                    }));
                    e3.tunes = new E.default([].concat((0, i2.default)(o4), (0, i2.default)(this.blockTunes.internalTools)));
                  } else
                    e3.tunes = this.blockTunes.internalTools;
              } }, { key: "validateTools", value: function() {
                for (var e3 in this.config.tools)
                  if (Object.prototype.hasOwnProperty.call(this.config.tools, e3)) {
                    if (e3 in this.internalTools)
                      return;
                    var t3 = this.config.tools[e3];
                    if (!y.isFunction(t3) && !y.isFunction(t3.class))
                      throw Error("Tool \xAB".concat(e3, "\xBB must be a constructor function or an object with function in the \xABclass\xBB property"));
                  }
              } }, { key: "prepareConfig", value: function() {
                var e3 = {};
                for (var t3 in this.config.tools)
                  y.isObject(this.config.tools[t3]) ? e3[t3] = this.config.tools[t3] : e3[t3] = { class: this.config.tools[t3] };
                return e3;
              } }]), o3;
            }(g.default);
            o2.default = I, I.displayName = "Tools", O([y.cacheable], I.prototype, "getAllInlineToolsSanitizeConfig", null), e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(30), n(2), n(3), n(5), n(6), n(4), n(153)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c, u) {
            "use strict";
            var f = n(1);
            function d(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = f(r2), i2 = f(i2), a = f(a), s = f(s), l = f(l), c = f(c);
            var p = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = d(n2);
              function n2() {
                return (0, i2.default)(this, n2), t2.apply(this, arguments);
              }
              return (0, a.default)(n2, [{ key: "blockTools", get: function() {
                return new n2(Array.from(this.entries()).filter(function(e3) {
                  return (0, r2.default)(e3, 2)[1].isBlock();
                }));
              } }, { key: "inlineTools", get: function() {
                return new n2(Array.from(this.entries()).filter(function(e3) {
                  return (0, r2.default)(e3, 2)[1].isInline();
                }));
              } }, { key: "blockTunes", get: function() {
                return new n2(Array.from(this.entries()).filter(function(e3) {
                  return (0, r2.default)(e3, 2)[1].isTune();
                }));
              } }, { key: "internalTools", get: function() {
                return new n2(Array.from(this.entries()).filter(function(e3) {
                  return (0, r2.default)(e3, 2)[1].isInternal;
                }));
              } }, { key: "externalTools", get: function() {
                return new n2(Array.from(this.entries()).filter(function(e3) {
                  return !(0, r2.default)(e3, 2)[1].isInternal;
                }));
              } }]), n2;
            }((0, (u = f(u)).default)(Map));
            o2.default = p, p.displayName = "ToolsCollection", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(41), n(30), n(21), n(2), n(3), n(5), n(6), n(4), n(9), n(19), n(8), n(25), n(61), n(67)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y, k, b) {
            "use strict";
            var m = n(1);
            function w(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (w = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function x(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, p.default)(e2);
                if (t2) {
                  var r3 = (0, p.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, d.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = m(r2), i2 = m(i2), s = m(s), l = m(l), c = m(c), u = m(u), f = m(f), d = m(d), p = m(p), h = m(h), v = m(v), g = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = w(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(g), y = m(y), k = m(k), b = m(b);
            var C = function(e2) {
              (0, f.default)(a2, e2);
              var t2, o3 = x(a2);
              function a2() {
                var e3;
                return (0, c.default)(this, a2), (e3 = o3.apply(this, arguments)).isMobile = false, e3.contentRectCache = void 0, e3.resizeDebouncer = g.debounce(function() {
                  e3.windowResize();
                }, 200), e3;
              }
              return (0, u.default)(a2, [{ key: "events", get: function() {
                return { blockHovered: "block-hovered" };
              } }, { key: "CSS", get: function() {
                return { editorWrapper: "codex-editor", editorWrapperNarrow: "codex-editor--narrow", editorZone: "codex-editor__redactor", editorZoneHidden: "codex-editor__redactor--hidden", editorLoader: "codex-editor__loader", editorEmpty: "codex-editor--empty", editorRtlFix: "codex-editor--rtl" };
              } }, { key: "contentRect", get: function() {
                if (this.contentRectCache)
                  return this.contentRectCache;
                var e3 = this.nodes.wrapper.querySelector(".".concat(k.default.CSS.content));
                return e3 ? (this.contentRectCache = e3.getBoundingClientRect(), this.contentRectCache) : { width: 650, left: 0, right: 0 };
              } }, { key: "addLoader", value: function() {
                this.nodes.loader = v.default.make("div", this.CSS.editorLoader), this.nodes.wrapper.prepend(this.nodes.loader), this.nodes.redactor.classList.add(this.CSS.editorZoneHidden);
              } }, { key: "removeLoader", value: function() {
                this.nodes.loader.remove(), this.nodes.redactor.classList.remove(this.CSS.editorZoneHidden);
              } }, { key: "prepare", value: (t2 = (0, l.default)(r2.default.mark(function e3() {
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        this.checkIsMobile(), this.make(), this.addLoader(), this.loadStyles();
                      case 4:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "toggleReadOnly", value: function(e3) {
                e3 ? this.disableModuleBindings() : this.enableModuleBindings();
              } }, { key: "checkEmptiness", value: function() {
                var e3 = this.Editor.BlockManager;
                this.nodes.wrapper.classList.toggle(this.CSS.editorEmpty, e3.isEditorEmpty);
              } }, { key: "someToolbarOpened", get: function() {
                var e3 = this.Editor, t3 = e3.Toolbar, n2 = e3.BlockSettings, o4 = e3.InlineToolbar, r3 = e3.ConversionToolbar;
                return n2.opened || o4.opened || r3.opened || t3.toolbox.opened;
              } }, { key: "someFlipperButtonFocused", get: function() {
                return !!this.Editor.Toolbar.toolbox.hasFocus() || Object.entries(this.Editor).filter(function(e3) {
                  var t3 = (0, s.default)(e3, 2);
                  return t3[0], t3[1].flipper instanceof b.default;
                }).some(function(e3) {
                  var t3 = (0, s.default)(e3, 2);
                  return t3[0], t3[1].flipper.hasFocus();
                });
              } }, { key: "destroy", value: function() {
                this.nodes.holder.innerHTML = "";
              } }, { key: "closeAllToolbars", value: function() {
                var e3 = this.Editor, t3 = e3.Toolbar, n2 = e3.BlockSettings, o4 = e3.InlineToolbar, r3 = e3.ConversionToolbar;
                n2.close(), o4.close(), r3.close(), t3.toolbox.close();
              } }, { key: "checkIsMobile", value: function() {
                this.isMobile = window.innerWidth < g.mobileScreenBreakpoint;
              } }, { key: "make", value: function() {
                this.nodes.holder = v.default.getHolder(this.config.holder), this.nodes.wrapper = v.default.make("div", [this.CSS.editorWrapper].concat((0, i2.default)(this.isRtl ? [this.CSS.editorRtlFix] : []))), this.nodes.redactor = v.default.make("div", this.CSS.editorZone), this.nodes.holder.offsetWidth < this.contentRect.width && this.nodes.wrapper.classList.add(this.CSS.editorWrapperNarrow), this.nodes.redactor.style.paddingBottom = this.config.minHeight + "px", this.nodes.wrapper.appendChild(this.nodes.redactor), this.nodes.holder.appendChild(this.nodes.wrapper);
              } }, { key: "loadStyles", value: function() {
                var e3 = n(402);
                if (!v.default.get("editor-js-styles")) {
                  var t3 = v.default.make("style", null, { id: "editor-js-styles", textContent: e3.toString() });
                  v.default.prepend(document.head, t3);
                }
              } }, { key: "enableModuleBindings", value: function() {
                var e3 = this;
                this.readOnlyMutableListeners.on(this.nodes.redactor, "click", function(t3) {
                  e3.redactorClicked(t3);
                }, false), this.readOnlyMutableListeners.on(this.nodes.redactor, "mousedown", function(t3) {
                  e3.documentTouched(t3);
                }, true), this.readOnlyMutableListeners.on(this.nodes.redactor, "touchstart", function(t3) {
                  e3.documentTouched(t3);
                }, true), this.readOnlyMutableListeners.on(document, "keydown", function(t3) {
                  e3.documentKeydown(t3);
                }, true), this.readOnlyMutableListeners.on(document, "mousedown", function(t3) {
                  e3.documentClicked(t3);
                }, true), this.readOnlyMutableListeners.on(document, "selectionchange", function() {
                  e3.selectionChanged();
                }, true), this.readOnlyMutableListeners.on(window, "resize", function() {
                  e3.resizeDebouncer();
                }, { passive: true }), this.watchBlockHoveredEvents();
              } }, { key: "watchBlockHoveredEvents", value: function() {
                var e3, t3 = this;
                this.readOnlyMutableListeners.on(this.nodes.redactor, "mousemove", g.throttle(function(n2) {
                  var o4 = n2.target.closest(".ce-block");
                  t3.Editor.BlockSelection.anyBlockSelected || o4 && e3 !== o4 && (e3 = o4, t3.eventsDispatcher.emit(t3.events.blockHovered, { block: t3.Editor.BlockManager.getBlockByChildNode(o4) }));
                }, 20), { passive: true });
              } }, { key: "disableModuleBindings", value: function() {
                this.readOnlyMutableListeners.clearAll();
              } }, { key: "windowResize", value: function() {
                this.contentRectCache = null, this.checkIsMobile();
              } }, { key: "documentKeydown", value: function(e3) {
                switch (e3.keyCode) {
                  case g.keyCodes.ENTER:
                    this.enterPressed(e3);
                    break;
                  case g.keyCodes.BACKSPACE:
                    this.backspacePressed(e3);
                    break;
                  case g.keyCodes.ESC:
                    this.escapePressed(e3);
                    break;
                  default:
                    this.defaultBehaviour(e3);
                }
              } }, { key: "defaultBehaviour", value: function(e3) {
                var t3 = this.Editor.BlockManager.currentBlock, n2 = e3.target.closest(".".concat(this.CSS.editorWrapper)), o4 = e3.altKey || e3.ctrlKey || e3.metaKey || e3.shiftKey;
                void 0 === t3 || null !== n2 ? n2 || t3 && o4 || (this.Editor.BlockManager.dropPointer(), this.Editor.Toolbar.close()) : this.Editor.BlockEvents.keydown(e3);
              } }, { key: "backspacePressed", value: function(e3) {
                var t3 = this.Editor, n2 = t3.BlockManager, o4 = t3.BlockSelection, r3 = t3.Caret;
                if (o4.anyBlockSelected && !y.default.isSelectionExists) {
                  var i3 = n2.removeSelectedBlocks();
                  r3.setToBlock(n2.insertDefaultBlockAtIndex(i3, true), r3.positions.START), o4.clearSelection(e3), e3.preventDefault(), e3.stopPropagation(), e3.stopImmediatePropagation();
                }
              } }, { key: "escapePressed", value: function(e3) {
                this.Editor.BlockSelection.clearSelection(e3), this.Editor.Toolbar.toolbox.opened ? (this.Editor.Toolbar.toolbox.close(), this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock)) : this.Editor.BlockSettings.opened ? this.Editor.BlockSettings.close() : this.Editor.ConversionToolbar.opened ? this.Editor.ConversionToolbar.close() : this.Editor.InlineToolbar.opened ? this.Editor.InlineToolbar.close() : this.Editor.Toolbar.close();
              } }, { key: "enterPressed", value: function(e3) {
                var t3 = this.Editor, n2 = t3.BlockManager, o4 = t3.BlockSelection, r3 = n2.currentBlockIndex >= 0;
                if (o4.anyBlockSelected && !y.default.isSelectionExists)
                  return o4.clearSelection(e3), e3.preventDefault(), e3.stopImmediatePropagation(), void e3.stopPropagation();
                if (!this.someToolbarOpened && r3 && "BODY" === e3.target.tagName) {
                  var i3 = this.Editor.BlockManager.insert();
                  this.Editor.Caret.setToBlock(i3), this.Editor.BlockManager.highlightCurrentNode(), this.Editor.Toolbar.moveAndOpen(i3);
                }
                this.Editor.BlockSelection.clearSelection(e3);
              } }, { key: "documentClicked", value: function(e3) {
                if (e3.isTrusted) {
                  var t3 = e3.target;
                  this.nodes.holder.contains(t3) || y.default.isAtEditor || (this.Editor.BlockManager.dropPointer(), this.Editor.Toolbar.close());
                  var n2 = this.Editor.BlockSettings.nodes.wrapper.contains(t3), o4 = this.Editor.Toolbar.nodes.settingsToggler.contains(t3), r3 = n2 || o4;
                  if (this.Editor.BlockSettings.opened && !r3) {
                    this.Editor.BlockSettings.close();
                    var i3 = this.Editor.BlockManager.getBlockByChildNode(t3);
                    this.Editor.Toolbar.moveAndOpen(i3);
                  }
                  this.Editor.BlockSelection.clearSelection(e3);
                }
              } }, { key: "documentTouched", value: function(e3) {
                var t3 = e3.target;
                if (t3 === this.nodes.redactor) {
                  var n2 = e3 instanceof MouseEvent ? e3.clientX : e3.touches[0].clientX, o4 = e3 instanceof MouseEvent ? e3.clientY : e3.touches[0].clientY;
                  t3 = document.elementFromPoint(n2, o4);
                }
                try {
                  this.Editor.BlockManager.setCurrentBlockByChildNode(t3), this.Editor.BlockManager.highlightCurrentNode();
                } catch (e4) {
                  this.Editor.RectangleSelection.isRectActivated() || this.Editor.Caret.setToTheLastBlock();
                }
                this.Editor.Toolbar.moveAndOpen();
              } }, { key: "redactorClicked", value: function(e3) {
                var t3 = this.Editor.BlockSelection;
                if (y.default.isCollapsed) {
                  var n2 = function() {
                    e3.stopImmediatePropagation(), e3.stopPropagation();
                  }, o4 = e3.target, r3 = e3.metaKey || e3.ctrlKey;
                  if (v.default.isAnchor(o4) && r3) {
                    n2();
                    var i3 = o4.getAttribute("href"), a3 = g.getValidUrl(i3);
                    g.openTab(a3);
                  } else {
                    var s2 = this.Editor.BlockManager.getBlockByIndex(-1), l2 = v.default.offset(s2.holder).bottom, c2 = e3.pageY;
                    if (e3.target instanceof Element && e3.target.isEqualNode(this.nodes.redactor) && !t3.anyBlockSelected && l2 < c2) {
                      n2();
                      var u2 = this.Editor, f2 = u2.BlockManager, d2 = u2.Caret, p2 = u2.Toolbar;
                      f2.lastBlock.tool.isDefault && f2.lastBlock.isEmpty || f2.insertAtEnd(), d2.setToTheLastBlock(), p2.moveAndOpen(f2.lastBlock);
                    }
                  }
                }
              } }, { key: "selectionChanged", value: function() {
                var e3 = this.Editor, t3 = e3.CrossBlockSelection, n2 = e3.BlockSelection, o4 = y.default.anchorElement;
                if (t3.isCrossBlockSelectionStarted && n2.anyBlockSelected && y.default.get().removeAllRanges(), o4) {
                  var r3 = null === o4.closest(".".concat(k.default.CSS.content));
                  if (r3 && (this.Editor.InlineToolbar.containsNode(o4) || this.Editor.InlineToolbar.close(), "true" !== o4.dataset.inlineToolbar))
                    return;
                  this.Editor.BlockManager.currentBlock || this.Editor.BlockManager.setCurrentBlockByChildNode(o4);
                  var i3 = true !== r3;
                  this.Editor.InlineToolbar.tryToShow(true, i3);
                } else
                  y.default.range || this.Editor.InlineToolbar.close();
              } }]), a2;
            }(h.default);
            o2.default = C, C.displayName = "UI", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          n(188), e.exports = n(361);
        }, function(e, t, n) {
          n(189);
        }, function(e, t, n) {
          "use strict";
          n(190), n(333), n(335), n(338), n(340), n(342), n(344), n(346), n(348), n(350), n(352), n(354), n(356), n(360);
        }, function(e, t, n) {
          n(191), n(194), n(195), n(196), n(197), n(198), n(199), n(200), n(201), n(202), n(203), n(204), n(205), n(206), n(207), n(208), n(209), n(210), n(211), n(212), n(213), n(214), n(215), n(216), n(217), n(218), n(219), n(220), n(221), n(222), n(223), n(224), n(225), n(226), n(227), n(228), n(229), n(230), n(231), n(232), n(233), n(234), n(235), n(237), n(238), n(239), n(240), n(241), n(242), n(243), n(244), n(245), n(246), n(247), n(248), n(249), n(250), n(251), n(252), n(253), n(254), n(255), n(256), n(257), n(258), n(259), n(260), n(261), n(262), n(263), n(264), n(265), n(266), n(267), n(268), n(269), n(270), n(272), n(273), n(275), n(276), n(277), n(278), n(279), n(280), n(281), n(283), n(284), n(285), n(286), n(287), n(288), n(289), n(290), n(291), n(292), n(293), n(294), n(295), n(106), n(296), n(137), n(297), n(138), n(298), n(299), n(300), n(301), n(139), n(304), n(305), n(306), n(307), n(308), n(309), n(310), n(311), n(312), n(313), n(314), n(315), n(316), n(317), n(318), n(319), n(320), n(321), n(322), n(323), n(324), n(325), n(326), n(327), n(328), n(329), n(330), n(331), n(332), e.exports = n(16);
        }, function(e, t, n) {
          "use strict";
          var o = n(10), r = n(26), i = n(17), a = n(0), s = n(23), l = n(43).KEY, c = n(11), u = n(70), f = n(55), d = n(45), p = n(14), h = n(87), v = n(118), g = n(193), y = n(73), k = n(12), b = n(13), m = n(22), w = n(28), x = n(42), C = n(44), S = n(49), T = n(121), E = n(34), B = n(72), M = n(18), _ = n(47), O = E.f, I = M.f, L2 = T.f, P = o.Symbol, j = o.JSON, R = j && j.stringify, A = p("_hidden"), N = p("toPrimitive"), D = {}.propertyIsEnumerable, F = u("symbol-registry"), H = u("symbols"), W = u("op-symbols"), U = Object.prototype, z = "function" == typeof P && !!B.f, V = o.QObject, Y = !V || !V.prototype || !V.prototype.findChild, X = i && c(function() {
            return 7 != S(I({}, "a", { get: function() {
              return I(this, "a", { value: 7 }).a;
            } })).a;
          }) ? function(e2, t2, n2) {
            var o2 = O(U, t2);
            o2 && delete U[t2], I(e2, t2, n2), o2 && e2 !== U && I(U, t2, o2);
          } : I, G = function(e2) {
            var t2 = H[e2] = S(P.prototype);
            return t2._k = e2, t2;
          }, K = z && "symbol" == typeof P.iterator ? function(e2) {
            return "symbol" == typeof e2;
          } : function(e2) {
            return e2 instanceof P;
          }, Z = function(e2, t2, n2) {
            return e2 === U && Z(W, t2, n2), k(e2), t2 = x(t2, true), k(n2), r(H, t2) ? (n2.enumerable ? (r(e2, A) && e2[A][t2] && (e2[A][t2] = false), n2 = S(n2, { enumerable: C(0, false) })) : (r(e2, A) || I(e2, A, C(1, {})), e2[A][t2] = true), X(e2, t2, n2)) : I(e2, t2, n2);
          }, q = function(e2, t2) {
            k(e2);
            for (var n2, o2 = g(t2 = w(t2)), r2 = 0, i2 = o2.length; i2 > r2; )
              Z(e2, n2 = o2[r2++], t2[n2]);
            return e2;
          }, J = function(e2) {
            var t2 = D.call(this, e2 = x(e2, true));
            return !(this === U && r(H, e2) && !r(W, e2)) && (!(t2 || !r(this, e2) || !r(H, e2) || r(this, A) && this[A][e2]) || t2);
          }, $2 = function(e2, t2) {
            if (e2 = w(e2), t2 = x(t2, true), e2 !== U || !r(H, t2) || r(W, t2)) {
              var n2 = O(e2, t2);
              return !n2 || !r(H, t2) || r(e2, A) && e2[A][t2] || (n2.enumerable = true), n2;
            }
          }, Q = function(e2) {
            for (var t2, n2 = L2(w(e2)), o2 = [], i2 = 0; n2.length > i2; )
              r(H, t2 = n2[i2++]) || t2 == A || t2 == l || o2.push(t2);
            return o2;
          }, ee = function(e2) {
            for (var t2, n2 = e2 === U, o2 = L2(n2 ? W : w(e2)), i2 = [], a2 = 0; o2.length > a2; )
              !r(H, t2 = o2[a2++]) || n2 && !r(U, t2) || i2.push(H[t2]);
            return i2;
          };
          z || (s((P = function() {
            if (this instanceof P)
              throw TypeError("Symbol is not a constructor!");
            var e2 = d(arguments.length > 0 ? arguments[0] : void 0), t2 = function(n2) {
              this === U && t2.call(W, n2), r(this, A) && r(this[A], e2) && (this[A][e2] = false), X(this, e2, C(1, n2));
            };
            return i && Y && X(U, e2, { configurable: true, set: t2 }), G(e2);
          }).prototype, "toString", function() {
            return this._k;
          }), E.f = $2, M.f = Z, n(50).f = T.f = Q, n(63).f = J, B.f = ee, i && !n(46) && s(U, "propertyIsEnumerable", J, true), h.f = function(e2) {
            return G(p(e2));
          }), a(a.G + a.W + a.F * !z, { Symbol: P });
          for (var te = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), ne = 0; te.length > ne; )
            p(te[ne++]);
          for (var oe = _(p.store), re = 0; oe.length > re; )
            v(oe[re++]);
          a(a.S + a.F * !z, "Symbol", { for: function(e2) {
            return r(F, e2 += "") ? F[e2] : F[e2] = P(e2);
          }, keyFor: function(e2) {
            if (!K(e2))
              throw TypeError(e2 + " is not a symbol!");
            for (var t2 in F)
              if (F[t2] === e2)
                return t2;
          }, useSetter: function() {
            Y = true;
          }, useSimple: function() {
            Y = false;
          } }), a(a.S + a.F * !z, "Object", { create: function(e2, t2) {
            return void 0 === t2 ? S(e2) : q(S(e2), t2);
          }, defineProperty: Z, defineProperties: q, getOwnPropertyDescriptor: $2, getOwnPropertyNames: Q, getOwnPropertySymbols: ee });
          var ie = c(function() {
            B.f(1);
          });
          a(a.S + a.F * ie, "Object", { getOwnPropertySymbols: function(e2) {
            return B.f(m(e2));
          } }), j && a(a.S + a.F * (!z || c(function() {
            var e2 = P();
            return "[null]" != R([e2]) || "{}" != R({ a: e2 }) || "{}" != R(Object(e2));
          })), "JSON", { stringify: function(e2) {
            for (var t2, n2, o2 = [e2], r2 = 1; arguments.length > r2; )
              o2.push(arguments[r2++]);
            if (n2 = t2 = o2[1], (b(t2) || void 0 !== e2) && !K(e2))
              return y(t2) || (t2 = function(e3, t3) {
                if ("function" == typeof n2 && (t3 = n2.call(this, e3, t3)), !K(t3))
                  return t3;
              }), o2[1] = t2, R.apply(j, o2);
          } }), P.prototype[N] || n(27)(P.prototype, N, P.prototype.valueOf), f(P, "Symbol"), f(Math, "Math", true), f(o.JSON, "JSON", true);
        }, function(e, t, n) {
          e.exports = n(70)("native-function-to-string", Function.toString);
        }, function(e, t, n) {
          var o = n(47), r = n(72), i = n(63);
          e.exports = function(e2) {
            var t2 = o(e2), n2 = r.f;
            if (n2)
              for (var a, s = n2(e2), l = i.f, c = 0; s.length > c; )
                l.call(e2, a = s[c++]) && t2.push(a);
            return t2;
          };
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Object", { create: n(49) });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S + o.F * !n(17), "Object", { defineProperty: n(18).f });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S + o.F * !n(17), "Object", { defineProperties: n(120) });
        }, function(e, t, n) {
          var o = n(28), r = n(34).f;
          n(35)("getOwnPropertyDescriptor", function() {
            return function(e2, t2) {
              return r(o(e2), t2);
            };
          });
        }, function(e, t, n) {
          var o = n(22), r = n(51);
          n(35)("getPrototypeOf", function() {
            return function(e2) {
              return r(o(e2));
            };
          });
        }, function(e, t, n) {
          var o = n(22), r = n(47);
          n(35)("keys", function() {
            return function(e2) {
              return r(o(e2));
            };
          });
        }, function(e, t, n) {
          n(35)("getOwnPropertyNames", function() {
            return n(121).f;
          });
        }, function(e, t, n) {
          var o = n(13), r = n(43).onFreeze;
          n(35)("freeze", function(e2) {
            return function(t2) {
              return e2 && o(t2) ? e2(r(t2)) : t2;
            };
          });
        }, function(e, t, n) {
          var o = n(13), r = n(43).onFreeze;
          n(35)("seal", function(e2) {
            return function(t2) {
              return e2 && o(t2) ? e2(r(t2)) : t2;
            };
          });
        }, function(e, t, n) {
          var o = n(13), r = n(43).onFreeze;
          n(35)("preventExtensions", function(e2) {
            return function(t2) {
              return e2 && o(t2) ? e2(r(t2)) : t2;
            };
          });
        }, function(e, t, n) {
          var o = n(13);
          n(35)("isFrozen", function(e2) {
            return function(t2) {
              return !o(t2) || !!e2 && e2(t2);
            };
          });
        }, function(e, t, n) {
          var o = n(13);
          n(35)("isSealed", function(e2) {
            return function(t2) {
              return !o(t2) || !!e2 && e2(t2);
            };
          });
        }, function(e, t, n) {
          var o = n(13);
          n(35)("isExtensible", function(e2) {
            return function(t2) {
              return !!o(t2) && (!e2 || e2(t2));
            };
          });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S + o.F, "Object", { assign: n(122) });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Object", { is: n(123) });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Object", { setPrototypeOf: n(91).set });
        }, function(e, t, n) {
          "use strict";
          var o = n(64), r = {};
          r[n(14)("toStringTag")] = "z", r + "" != "[object z]" && n(23)(Object.prototype, "toString", function() {
            return "[object " + o(this) + "]";
          }, true);
        }, function(e, t, n) {
          var o = n(0);
          o(o.P, "Function", { bind: n(124) });
        }, function(e, t, n) {
          var o = n(18).f, r = Function.prototype, i = /^\s*function ([^ (]*)/;
          "name" in r || n(17) && o(r, "name", { configurable: true, get: function() {
            try {
              return ("" + this).match(i)[1];
            } catch (e2) {
              return "";
            }
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(13), r = n(51), i = n(14)("hasInstance"), a = Function.prototype;
          i in a || n(18).f(a, i, { value: function(e2) {
            if ("function" != typeof this || !o(e2))
              return false;
            if (!o(this.prototype))
              return e2 instanceof this;
            for (; e2 = r(e2); )
              if (this.prototype === e2)
                return true;
            return false;
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(126);
          o(o.G + o.F * (parseInt != r), { parseInt: r });
        }, function(e, t, n) {
          var o = n(0), r = n(127);
          o(o.G + o.F * (parseFloat != r), { parseFloat: r });
        }, function(e, t, n) {
          "use strict";
          var o = n(10), r = n(26), i = n(38), a = n(93), s = n(42), l = n(11), c = n(50).f, u = n(34).f, f = n(18).f, d = n(56).trim, p = o.Number, h = p, v = p.prototype, g = "Number" == i(n(49)(v)), y = "trim" in String.prototype, k = function(e2) {
            var t2 = s(e2, false);
            if ("string" == typeof t2 && t2.length > 2) {
              var n2, o2, r2, i2 = (t2 = y ? t2.trim() : d(t2, 3)).charCodeAt(0);
              if (43 === i2 || 45 === i2) {
                if (88 === (n2 = t2.charCodeAt(2)) || 120 === n2)
                  return NaN;
              } else if (48 === i2) {
                switch (t2.charCodeAt(1)) {
                  case 66:
                  case 98:
                    o2 = 2, r2 = 49;
                    break;
                  case 79:
                  case 111:
                    o2 = 8, r2 = 55;
                    break;
                  default:
                    return +t2;
                }
                for (var a2, l2 = t2.slice(2), c2 = 0, u2 = l2.length; c2 < u2; c2++)
                  if ((a2 = l2.charCodeAt(c2)) < 48 || a2 > r2)
                    return NaN;
                return parseInt(l2, o2);
              }
            }
            return +t2;
          };
          if (!p(" 0o1") || !p("0b1") || p("+0x1")) {
            p = function(e2) {
              var t2 = arguments.length < 1 ? 0 : e2, n2 = this;
              return n2 instanceof p && (g ? l(function() {
                v.valueOf.call(n2);
              }) : "Number" != i(n2)) ? a(new h(k(t2)), n2, p) : k(t2);
            };
            for (var b, m = n(17) ? c(h) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), w = 0; m.length > w; w++)
              r(h, b = m[w]) && !r(p, b) && f(p, b, u(h, b));
            p.prototype = v, v.constructor = p, n(23)(o, "Number", p);
          }
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(33), i = n(128), a = n(94), s = 1 .toFixed, l = Math.floor, c = [0, 0, 0, 0, 0, 0], u = "Number.toFixed: incorrect invocation!", f = function(e2, t2) {
            for (var n2 = -1, o2 = t2; ++n2 < 6; )
              o2 += e2 * c[n2], c[n2] = o2 % 1e7, o2 = l(o2 / 1e7);
          }, d = function(e2) {
            for (var t2 = 6, n2 = 0; --t2 >= 0; )
              n2 += c[t2], c[t2] = l(n2 / e2), n2 = n2 % e2 * 1e7;
          }, p = function() {
            for (var e2 = 6, t2 = ""; --e2 >= 0; )
              if ("" !== t2 || 0 === e2 || 0 !== c[e2]) {
                var n2 = String(c[e2]);
                t2 = "" === t2 ? n2 : t2 + a.call("0", 7 - n2.length) + n2;
              }
            return t2;
          }, h = function(e2, t2, n2) {
            return 0 === t2 ? n2 : t2 % 2 == 1 ? h(e2, t2 - 1, n2 * e2) : h(e2 * e2, t2 / 2, n2);
          };
          o(o.P + o.F * (!!s && ("0.000" !== 8e-5 .toFixed(3) || "1" !== 0.9 .toFixed(0) || "1.25" !== 1.255 .toFixed(2) || "1000000000000000128" !== 1000000000000000100 .toFixed(0)) || !n(11)(function() {
            s.call({});
          })), "Number", { toFixed: function(e2) {
            var t2, n2, o2, s2, l2 = i(this, u), c2 = r(e2), v = "", g = "0";
            if (c2 < 0 || c2 > 20)
              throw RangeError(u);
            if (l2 != l2)
              return "NaN";
            if (l2 <= -1e21 || l2 >= 1e21)
              return String(l2);
            if (l2 < 0 && (v = "-", l2 = -l2), l2 > 1e-21)
              if (n2 = (t2 = function(e3) {
                for (var t3 = 0, n3 = e3; n3 >= 4096; )
                  t3 += 12, n3 /= 4096;
                for (; n3 >= 2; )
                  t3 += 1, n3 /= 2;
                return t3;
              }(l2 * h(2, 69, 1)) - 69) < 0 ? l2 * h(2, -t2, 1) : l2 / h(2, t2, 1), n2 *= 4503599627370496, (t2 = 52 - t2) > 0) {
                for (f(0, n2), o2 = c2; o2 >= 7; )
                  f(1e7, 0), o2 -= 7;
                for (f(h(10, o2, 1), 0), o2 = t2 - 1; o2 >= 23; )
                  d(1 << 23), o2 -= 23;
                d(1 << o2), f(1, 1), d(2), g = p();
              } else
                f(0, n2), f(1 << -t2, 0), g = p() + a.call("0", c2);
            return g = c2 > 0 ? v + ((s2 = g.length) <= c2 ? "0." + a.call("0", c2 - s2) + g : g.slice(0, s2 - c2) + "." + g.slice(s2 - c2)) : v + g;
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(11), i = n(128), a = 1 .toPrecision;
          o(o.P + o.F * (r(function() {
            return "1" !== a.call(1, void 0);
          }) || !r(function() {
            a.call({});
          })), "Number", { toPrecision: function(e2) {
            var t2 = i(this, "Number#toPrecision: incorrect invocation!");
            return void 0 === e2 ? a.call(t2) : a.call(t2, e2);
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Number", { EPSILON: Math.pow(2, -52) });
        }, function(e, t, n) {
          var o = n(0), r = n(10).isFinite;
          o(o.S, "Number", { isFinite: function(e2) {
            return "number" == typeof e2 && r(e2);
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Number", { isInteger: n(129) });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Number", { isNaN: function(e2) {
            return e2 != e2;
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(129), i = Math.abs;
          o(o.S, "Number", { isSafeInteger: function(e2) {
            return r(e2) && i(e2) <= 9007199254740991;
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Number", { MAX_SAFE_INTEGER: 9007199254740991 });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Number", { MIN_SAFE_INTEGER: -9007199254740991 });
        }, function(e, t, n) {
          var o = n(0), r = n(127);
          o(o.S + o.F * (Number.parseFloat != r), "Number", { parseFloat: r });
        }, function(e, t, n) {
          var o = n(0), r = n(126);
          o(o.S + o.F * (Number.parseInt != r), "Number", { parseInt: r });
        }, function(e, t, n) {
          var o = n(0), r = n(130), i = Math.sqrt, a = Math.acosh;
          o(o.S + o.F * !(a && 710 == Math.floor(a(Number.MAX_VALUE)) && a(1 / 0) == 1 / 0), "Math", { acosh: function(e2) {
            return (e2 = +e2) < 1 ? NaN : e2 > 9490626562425156e-8 ? Math.log(e2) + Math.LN2 : r(e2 - 1 + i(e2 - 1) * i(e2 + 1));
          } });
        }, function(e, t, n) {
          var o = n(0), r = Math.asinh;
          o(o.S + o.F * !(r && 1 / r(0) > 0), "Math", { asinh: function e2(t2) {
            return isFinite(t2 = +t2) && 0 != t2 ? t2 < 0 ? -e2(-t2) : Math.log(t2 + Math.sqrt(t2 * t2 + 1)) : t2;
          } });
        }, function(e, t, n) {
          var o = n(0), r = Math.atanh;
          o(o.S + o.F * !(r && 1 / r(-0) < 0), "Math", { atanh: function(e2) {
            return 0 == (e2 = +e2) ? e2 : Math.log((1 + e2) / (1 - e2)) / 2;
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(95);
          o(o.S, "Math", { cbrt: function(e2) {
            return r(e2 = +e2) * Math.pow(Math.abs(e2), 1 / 3);
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Math", { clz32: function(e2) {
            return (e2 >>>= 0) ? 31 - Math.floor(Math.log(e2 + 0.5) * Math.LOG2E) : 32;
          } });
        }, function(e, t, n) {
          var o = n(0), r = Math.exp;
          o(o.S, "Math", { cosh: function(e2) {
            return (r(e2 = +e2) + r(-e2)) / 2;
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(96);
          o(o.S + o.F * (r != Math.expm1), "Math", { expm1: r });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Math", { fround: n(236) });
        }, function(e, t, n) {
          var o = n(95), r = Math.pow, i = r(2, -52), a = r(2, -23), s = r(2, 127) * (2 - a), l = r(2, -126);
          e.exports = Math.fround || function(e2) {
            var t2, n2, r2 = Math.abs(e2), c = o(e2);
            return r2 < l ? c * (r2 / l / a + 1 / i - 1 / i) * l * a : (n2 = (t2 = (1 + a / i) * r2) - (t2 - r2)) > s || n2 != n2 ? c * (1 / 0) : c * n2;
          };
        }, function(e, t, n) {
          var o = n(0), r = Math.abs;
          o(o.S, "Math", { hypot: function(e2, t2) {
            for (var n2, o2, i = 0, a = 0, s = arguments.length, l = 0; a < s; )
              l < (n2 = r(arguments[a++])) ? (i = i * (o2 = l / n2) * o2 + 1, l = n2) : i += n2 > 0 ? (o2 = n2 / l) * o2 : n2;
            return l === 1 / 0 ? 1 / 0 : l * Math.sqrt(i);
          } });
        }, function(e, t, n) {
          var o = n(0), r = Math.imul;
          o(o.S + o.F * n(11)(function() {
            return -5 != r(4294967295, 5) || 2 != r.length;
          }), "Math", { imul: function(e2, t2) {
            var n2 = +e2, o2 = +t2, r2 = 65535 & n2, i = 65535 & o2;
            return 0 | r2 * i + ((65535 & n2 >>> 16) * i + r2 * (65535 & o2 >>> 16) << 16 >>> 0);
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Math", { log10: function(e2) {
            return Math.log(e2) * Math.LOG10E;
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Math", { log1p: n(130) });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Math", { log2: function(e2) {
            return Math.log(e2) / Math.LN2;
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Math", { sign: n(95) });
        }, function(e, t, n) {
          var o = n(0), r = n(96), i = Math.exp;
          o(o.S + o.F * n(11)(function() {
            return -2e-17 != !Math.sinh(-2e-17);
          }), "Math", { sinh: function(e2) {
            return Math.abs(e2 = +e2) < 1 ? (r(e2) - r(-e2)) / 2 : (i(e2 - 1) - i(-e2 - 1)) * (Math.E / 2);
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(96), i = Math.exp;
          o(o.S, "Math", { tanh: function(e2) {
            var t2 = r(e2 = +e2), n2 = r(-e2);
            return t2 == 1 / 0 ? 1 : n2 == 1 / 0 ? -1 : (t2 - n2) / (i(e2) + i(-e2));
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Math", { trunc: function(e2) {
            return (e2 > 0 ? Math.floor : Math.ceil)(e2);
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(48), i = String.fromCharCode, a = String.fromCodePoint;
          o(o.S + o.F * (!!a && 1 != a.length), "String", { fromCodePoint: function(e2) {
            for (var t2, n2 = [], o2 = arguments.length, a2 = 0; o2 > a2; ) {
              if (t2 = +arguments[a2++], r(t2, 1114111) !== t2)
                throw RangeError(t2 + " is not a valid code point");
              n2.push(t2 < 65536 ? i(t2) : i(55296 + ((t2 -= 65536) >> 10), t2 % 1024 + 56320));
            }
            return n2.join("");
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(28), i = n(15);
          o(o.S, "String", { raw: function(e2) {
            for (var t2 = r(e2.raw), n2 = i(t2.length), o2 = arguments.length, a = [], s = 0; n2 > s; )
              a.push(String(t2[s++])), s < o2 && a.push(String(arguments[s]));
            return a.join("");
          } });
        }, function(e, t, n) {
          "use strict";
          n(56)("trim", function(e2) {
            return function() {
              return e2(this, 3);
            };
          });
        }, function(e, t, n) {
          "use strict";
          var o = n(97)(true);
          n(98)(String, "String", function(e2) {
            this._t = String(e2), this._i = 0;
          }, function() {
            var e2, t2 = this._t, n2 = this._i;
            return n2 >= t2.length ? { value: void 0, done: true } : (e2 = o(t2, n2), this._i += e2.length, { value: e2, done: false });
          });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(97)(false);
          o(o.P, "String", { codePointAt: function(e2) {
            return r(this, e2);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(15), i = n(99), a = "".endsWith;
          o(o.P + o.F * n(101)("endsWith"), "String", { endsWith: function(e2) {
            var t2 = i(this, e2, "endsWith"), n2 = arguments.length > 1 ? arguments[1] : void 0, o2 = r(t2.length), s = void 0 === n2 ? o2 : Math.min(r(n2), o2), l = String(e2);
            return a ? a.call(t2, l, s) : t2.slice(s - l.length, s) === l;
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(99);
          o(o.P + o.F * n(101)("includes"), "String", { includes: function(e2) {
            return !!~r(this, e2, "includes").indexOf(e2, arguments.length > 1 ? arguments[1] : void 0);
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.P, "String", { repeat: n(94) });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(15), i = n(99), a = "".startsWith;
          o(o.P + o.F * n(101)("startsWith"), "String", { startsWith: function(e2) {
            var t2 = i(this, e2, "startsWith"), n2 = r(Math.min(arguments.length > 1 ? arguments[1] : void 0, t2.length)), o2 = String(e2);
            return a ? a.call(t2, o2, n2) : t2.slice(n2, n2 + o2.length) === o2;
          } });
        }, function(e, t, n) {
          "use strict";
          n(24)("anchor", function(e2) {
            return function(t2) {
              return e2(this, "a", "name", t2);
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("big", function(e2) {
            return function() {
              return e2(this, "big", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("blink", function(e2) {
            return function() {
              return e2(this, "blink", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("bold", function(e2) {
            return function() {
              return e2(this, "b", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("fixed", function(e2) {
            return function() {
              return e2(this, "tt", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("fontcolor", function(e2) {
            return function(t2) {
              return e2(this, "font", "color", t2);
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("fontsize", function(e2) {
            return function(t2) {
              return e2(this, "font", "size", t2);
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("italics", function(e2) {
            return function() {
              return e2(this, "i", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("link", function(e2) {
            return function(t2) {
              return e2(this, "a", "href", t2);
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("small", function(e2) {
            return function() {
              return e2(this, "small", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("strike", function(e2) {
            return function() {
              return e2(this, "strike", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("sub", function(e2) {
            return function() {
              return e2(this, "sub", "", "");
            };
          });
        }, function(e, t, n) {
          "use strict";
          n(24)("sup", function(e2) {
            return function() {
              return e2(this, "sup", "", "");
            };
          });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Date", { now: function() {
            return new Date().getTime();
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(22), i = n(42);
          o(o.P + o.F * n(11)(function() {
            return null !== new Date(NaN).toJSON() || 1 !== Date.prototype.toJSON.call({ toISOString: function() {
              return 1;
            } });
          }), "Date", { toJSON: function(e2) {
            var t2 = r(this), n2 = i(t2);
            return "number" != typeof n2 || isFinite(n2) ? t2.toISOString() : null;
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(271);
          o(o.P + o.F * (Date.prototype.toISOString !== r), "Date", { toISOString: r });
        }, function(e, t, n) {
          "use strict";
          var o = n(11), r = Date.prototype.getTime, i = Date.prototype.toISOString, a = function(e2) {
            return e2 > 9 ? e2 : "0" + e2;
          };
          e.exports = o(function() {
            return "0385-07-25T07:06:39.999Z" != i.call(new Date(-50000000000001));
          }) || !o(function() {
            i.call(new Date(NaN));
          }) ? function() {
            if (!isFinite(r.call(this)))
              throw RangeError("Invalid time value");
            var e2 = this, t2 = e2.getUTCFullYear(), n2 = e2.getUTCMilliseconds(), o2 = t2 < 0 ? "-" : t2 > 9999 ? "+" : "";
            return o2 + ("00000" + Math.abs(t2)).slice(o2 ? -6 : -4) + "-" + a(e2.getUTCMonth() + 1) + "-" + a(e2.getUTCDate()) + "T" + a(e2.getUTCHours()) + ":" + a(e2.getUTCMinutes()) + ":" + a(e2.getUTCSeconds()) + "." + (n2 > 99 ? n2 : "0" + a(n2)) + "Z";
          } : i;
        }, function(e, t, n) {
          var o = Date.prototype, r = o.toString, i = o.getTime;
          new Date(NaN) + "" != "Invalid Date" && n(23)(o, "toString", function() {
            var e2 = i.call(this);
            return e2 == e2 ? r.call(this) : "Invalid Date";
          });
        }, function(e, t, n) {
          var o = n(14)("toPrimitive"), r = Date.prototype;
          o in r || n(27)(r, o, n(274));
        }, function(e, t, n) {
          "use strict";
          var o = n(12), r = n(42);
          e.exports = function(e2) {
            if ("string" !== e2 && "number" !== e2 && "default" !== e2)
              throw TypeError("Incorrect hint");
            return r(o(this), "number" != e2);
          };
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Array", { isArray: n(73) });
        }, function(e, t, n) {
          "use strict";
          var o = n(31), r = n(0), i = n(22), a = n(132), s = n(102), l = n(15), c = n(103), u = n(104);
          r(r.S + r.F * !n(74)(function(e2) {
            Array.from(e2);
          }), "Array", { from: function(e2) {
            var t2, n2, r2, f, d = i(e2), p = "function" == typeof this ? this : Array, h = arguments.length, v = h > 1 ? arguments[1] : void 0, g = void 0 !== v, y = 0, k = u(d);
            if (g && (v = o(v, h > 2 ? arguments[2] : void 0, 2)), null == k || p == Array && s(k))
              for (n2 = new p(t2 = l(d.length)); t2 > y; y++)
                c(n2, y, g ? v(d[y], y) : d[y]);
            else
              for (f = k.call(d), n2 = new p(); !(r2 = f.next()).done; y++)
                c(n2, y, g ? a(f, v, [r2.value, y], true) : r2.value);
            return n2.length = y, n2;
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(103);
          o(o.S + o.F * n(11)(function() {
            function e2() {
            }
            return !(Array.of.call(e2) instanceof e2);
          }), "Array", { of: function() {
            for (var e2 = 0, t2 = arguments.length, n2 = new ("function" == typeof this ? this : Array)(t2); t2 > e2; )
              r(n2, e2, arguments[e2++]);
            return n2.length = t2, n2;
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(28), i = [].join;
          o(o.P + o.F * (n(62) != Object || !n(29)(i)), "Array", { join: function(e2) {
            return i.call(r(this), void 0 === e2 ? "," : e2);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(90), i = n(38), a = n(48), s = n(15), l = [].slice;
          o(o.P + o.F * n(11)(function() {
            r && l.call(r);
          }), "Array", { slice: function(e2, t2) {
            var n2 = s(this.length), o2 = i(this);
            if (t2 = void 0 === t2 ? n2 : t2, "Array" == o2)
              return l.call(this, e2, t2);
            for (var r2 = a(e2, n2), c = a(t2, n2), u = s(c - r2), f = new Array(u), d = 0; d < u; d++)
              f[d] = "String" == o2 ? this.charAt(r2 + d) : this[r2 + d];
            return f;
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(32), i = n(22), a = n(11), s = [].sort, l = [1, 2, 3];
          o(o.P + o.F * (a(function() {
            l.sort(void 0);
          }) || !a(function() {
            l.sort(null);
          }) || !n(29)(s)), "Array", { sort: function(e2) {
            return void 0 === e2 ? s.call(i(this)) : s.call(i(this), r(e2));
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(36)(0), i = n(29)([].forEach, true);
          o(o.P + o.F * !i, "Array", { forEach: function(e2) {
            return r(this, e2, arguments[1]);
          } });
        }, function(e, t, n) {
          var o = n(13), r = n(73), i = n(14)("species");
          e.exports = function(e2) {
            var t2;
            return r(e2) && ("function" != typeof (t2 = e2.constructor) || t2 !== Array && !r(t2.prototype) || (t2 = void 0), o(t2) && null === (t2 = t2[i]) && (t2 = void 0)), void 0 === t2 ? Array : t2;
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(36)(1);
          o(o.P + o.F * !n(29)([].map, true), "Array", { map: function(e2) {
            return r(this, e2, arguments[1]);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(36)(2);
          o(o.P + o.F * !n(29)([].filter, true), "Array", { filter: function(e2) {
            return r(this, e2, arguments[1]);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(36)(3);
          o(o.P + o.F * !n(29)([].some, true), "Array", { some: function(e2) {
            return r(this, e2, arguments[1]);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(36)(4);
          o(o.P + o.F * !n(29)([].every, true), "Array", { every: function(e2) {
            return r(this, e2, arguments[1]);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(134);
          o(o.P + o.F * !n(29)([].reduce, true), "Array", { reduce: function(e2) {
            return r(this, e2, arguments.length, arguments[1], false);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(134);
          o(o.P + o.F * !n(29)([].reduceRight, true), "Array", { reduceRight: function(e2) {
            return r(this, e2, arguments.length, arguments[1], true);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(71)(false), i = [].indexOf, a = !!i && 1 / [1].indexOf(1, -0) < 0;
          o(o.P + o.F * (a || !n(29)(i)), "Array", { indexOf: function(e2) {
            return a ? i.apply(this, arguments) || 0 : r(this, e2, arguments[1]);
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(28), i = n(33), a = n(15), s = [].lastIndexOf, l = !!s && 1 / [1].lastIndexOf(1, -0) < 0;
          o(o.P + o.F * (l || !n(29)(s)), "Array", { lastIndexOf: function(e2) {
            if (l)
              return s.apply(this, arguments) || 0;
            var t2 = r(this), n2 = a(t2.length), o2 = n2 - 1;
            for (arguments.length > 1 && (o2 = Math.min(o2, i(arguments[1]))), o2 < 0 && (o2 = n2 + o2); o2 >= 0; o2--)
              if (o2 in t2 && t2[o2] === e2)
                return o2 || 0;
            return -1;
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.P, "Array", { copyWithin: n(135) }), n(52)("copyWithin");
        }, function(e, t, n) {
          var o = n(0);
          o(o.P, "Array", { fill: n(105) }), n(52)("fill");
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(36)(5), i = true;
          "find" in [] && Array(1).find(function() {
            i = false;
          }), o(o.P + o.F * i, "Array", { find: function(e2) {
            return r(this, e2, arguments.length > 1 ? arguments[1] : void 0);
          } }), n(52)("find");
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(36)(6), i = "findIndex", a = true;
          i in [] && Array(1)[i](function() {
            a = false;
          }), o(o.P + o.F * a, "Array", { findIndex: function(e2) {
            return r(this, e2, arguments.length > 1 ? arguments[1] : void 0);
          } }), n(52)(i);
        }, function(e, t, n) {
          n(58)("Array");
        }, function(e, t, n) {
          var o = n(10), r = n(93), i = n(18).f, a = n(50).f, s = n(100), l = n(75), c = o.RegExp, u = c, f = c.prototype, d = /a/g, p = /a/g, h = new c(d) !== d;
          if (n(17) && (!h || n(11)(function() {
            return p[n(14)("match")] = false, c(d) != d || c(p) == p || "/a/i" != c(d, "i");
          }))) {
            c = function(e2, t2) {
              var n2 = this instanceof c, o2 = s(e2), i2 = void 0 === t2;
              return !n2 && o2 && e2.constructor === c && i2 ? e2 : r(h ? new u(o2 && !i2 ? e2.source : e2, t2) : u((o2 = e2 instanceof c) ? e2.source : e2, o2 && i2 ? l.call(e2) : t2), n2 ? this : f, c);
            };
            for (var v = function(e2) {
              e2 in c || i(c, e2, { configurable: true, get: function() {
                return u[e2];
              }, set: function(t2) {
                u[e2] = t2;
              } });
            }, g = a(u), y = 0; g.length > y; )
              v(g[y++]);
            f.constructor = c, c.prototype = f, n(23)(o, "RegExp", c);
          }
          n(58)("RegExp");
        }, function(e, t, n) {
          "use strict";
          n(138);
          var o = n(12), r = n(75), i = n(17), a = /./.toString, s = function(e2) {
            n(23)(RegExp.prototype, "toString", e2, true);
          };
          n(11)(function() {
            return "/a/b" != a.call({ source: "a", flags: "b" });
          }) ? s(function() {
            var e2 = o(this);
            return "/".concat(e2.source, "/", "flags" in e2 ? e2.flags : !i && e2 instanceof RegExp ? r.call(e2) : void 0);
          }) : "toString" != a.name && s(function() {
            return a.call(this);
          });
        }, function(e, t, n) {
          "use strict";
          var o = n(12), r = n(15), i = n(108), a = n(76);
          n(77)("match", 1, function(e2, t2, n2, s) {
            return [function(n3) {
              var o2 = e2(this), r2 = null == n3 ? void 0 : n3[t2];
              return void 0 !== r2 ? r2.call(n3, o2) : new RegExp(n3)[t2](String(o2));
            }, function(e3) {
              var t3 = s(n2, e3, this);
              if (t3.done)
                return t3.value;
              var l = o(e3), c = String(this);
              if (!l.global)
                return a(l, c);
              var u = l.unicode;
              l.lastIndex = 0;
              for (var f, d = [], p = 0; null !== (f = a(l, c)); ) {
                var h = String(f[0]);
                d[p] = h, "" === h && (l.lastIndex = i(c, r(l.lastIndex), u)), p++;
              }
              return 0 === p ? null : d;
            }];
          });
        }, function(e, t, n) {
          "use strict";
          var o = n(12), r = n(22), i = n(15), a = n(33), s = n(108), l = n(76), c = Math.max, u = Math.min, f = Math.floor, d = /\$([$&`']|\d\d?|<[^>]*>)/g, p = /\$([$&`']|\d\d?)/g;
          n(77)("replace", 2, function(e2, t2, n2, h) {
            return [function(o2, r2) {
              var i2 = e2(this), a2 = null == o2 ? void 0 : o2[t2];
              return void 0 !== a2 ? a2.call(o2, i2, r2) : n2.call(String(i2), o2, r2);
            }, function(e3, t3) {
              var r2 = h(n2, e3, this, t3);
              if (r2.done)
                return r2.value;
              var f2 = o(e3), d2 = String(this), p2 = "function" == typeof t3;
              p2 || (t3 = String(t3));
              var g = f2.global;
              if (g) {
                var y = f2.unicode;
                f2.lastIndex = 0;
              }
              for (var k = []; ; ) {
                var b = l(f2, d2);
                if (null === b)
                  break;
                if (k.push(b), !g)
                  break;
                "" === String(b[0]) && (f2.lastIndex = s(d2, i(f2.lastIndex), y));
              }
              for (var m, w = "", x = 0, C = 0; C < k.length; C++) {
                b = k[C];
                for (var S = String(b[0]), T = c(u(a(b.index), d2.length), 0), E = [], B = 1; B < b.length; B++)
                  E.push(void 0 === (m = b[B]) ? m : String(m));
                var M = b.groups;
                if (p2) {
                  var _ = [S].concat(E, T, d2);
                  void 0 !== M && _.push(M);
                  var O = String(t3.apply(void 0, _));
                } else
                  O = v(S, d2, T, E, M, t3);
                T >= x && (w += d2.slice(x, T) + O, x = T + S.length);
              }
              return w + d2.slice(x);
            }];
            function v(e3, t3, o2, i2, a2, s2) {
              var l2 = o2 + e3.length, c2 = i2.length, u2 = p;
              return void 0 !== a2 && (a2 = r(a2), u2 = d), n2.call(s2, u2, function(n3, r2) {
                var s3;
                switch (r2.charAt(0)) {
                  case "$":
                    return "$";
                  case "&":
                    return e3;
                  case "`":
                    return t3.slice(0, o2);
                  case "'":
                    return t3.slice(l2);
                  case "<":
                    s3 = a2[r2.slice(1, -1)];
                    break;
                  default:
                    var u3 = +r2;
                    if (0 === u3)
                      return n3;
                    if (u3 > c2) {
                      var d2 = f(u3 / 10);
                      return 0 === d2 ? n3 : d2 <= c2 ? void 0 === i2[d2 - 1] ? r2.charAt(1) : i2[d2 - 1] + r2.charAt(1) : n3;
                    }
                    s3 = i2[u3 - 1];
                }
                return void 0 === s3 ? "" : s3;
              });
            }
          });
        }, function(e, t, n) {
          "use strict";
          var o = n(12), r = n(123), i = n(76);
          n(77)("search", 1, function(e2, t2, n2, a) {
            return [function(n3) {
              var o2 = e2(this), r2 = null == n3 ? void 0 : n3[t2];
              return void 0 !== r2 ? r2.call(n3, o2) : new RegExp(n3)[t2](String(o2));
            }, function(e3) {
              var t3 = a(n2, e3, this);
              if (t3.done)
                return t3.value;
              var s = o(e3), l = String(this), c = s.lastIndex;
              r(c, 0) || (s.lastIndex = 0);
              var u = i(s, l);
              return r(s.lastIndex, c) || (s.lastIndex = c), null === u ? -1 : u.index;
            }];
          });
        }, function(e, t, n) {
          "use strict";
          var o = n(100), r = n(12), i = n(65), a = n(108), s = n(15), l = n(76), c = n(107), u = n(11), f = Math.min, d = [].push, p = "length", h = !u(function() {
            RegExp(4294967295, "y");
          });
          n(77)("split", 2, function(e2, t2, n2, u2) {
            var v;
            return v = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1)[p] || 2 != "ab".split(/(?:ab)*/)[p] || 4 != ".".split(/(.?)(.?)/)[p] || ".".split(/()()/)[p] > 1 || "".split(/.?/)[p] ? function(e3, t3) {
              var r2 = String(this);
              if (void 0 === e3 && 0 === t3)
                return [];
              if (!o(e3))
                return n2.call(r2, e3, t3);
              for (var i2, a2, s2, l2 = [], u3 = (e3.ignoreCase ? "i" : "") + (e3.multiline ? "m" : "") + (e3.unicode ? "u" : "") + (e3.sticky ? "y" : ""), f2 = 0, h2 = void 0 === t3 ? 4294967295 : t3 >>> 0, v2 = new RegExp(e3.source, u3 + "g"); (i2 = c.call(v2, r2)) && !((a2 = v2.lastIndex) > f2 && (l2.push(r2.slice(f2, i2.index)), i2[p] > 1 && i2.index < r2[p] && d.apply(l2, i2.slice(1)), s2 = i2[0][p], f2 = a2, l2[p] >= h2)); )
                v2.lastIndex === i2.index && v2.lastIndex++;
              return f2 === r2[p] ? !s2 && v2.test("") || l2.push("") : l2.push(r2.slice(f2)), l2[p] > h2 ? l2.slice(0, h2) : l2;
            } : "0".split(void 0, 0)[p] ? function(e3, t3) {
              return void 0 === e3 && 0 === t3 ? [] : n2.call(this, e3, t3);
            } : n2, [function(n3, o2) {
              var r2 = e2(this), i2 = null == n3 ? void 0 : n3[t2];
              return void 0 !== i2 ? i2.call(n3, r2, o2) : v.call(String(r2), n3, o2);
            }, function(e3, t3) {
              var o2 = u2(v, e3, this, t3, v !== n2);
              if (o2.done)
                return o2.value;
              var c2 = r(e3), d2 = String(this), p2 = i(c2, RegExp), g = c2.unicode, y = (c2.ignoreCase ? "i" : "") + (c2.multiline ? "m" : "") + (c2.unicode ? "u" : "") + (h ? "y" : "g"), k = new p2(h ? c2 : "^(?:" + c2.source + ")", y), b = void 0 === t3 ? 4294967295 : t3 >>> 0;
              if (0 === b)
                return [];
              if (0 === d2.length)
                return null === l(k, d2) ? [d2] : [];
              for (var m = 0, w = 0, x = []; w < d2.length; ) {
                k.lastIndex = h ? w : 0;
                var C, S = l(k, h ? d2 : d2.slice(w));
                if (null === S || (C = f(s(k.lastIndex + (h ? 0 : w)), d2.length)) === m)
                  w = a(d2, w, g);
                else {
                  if (x.push(d2.slice(m, w)), x.length === b)
                    return x;
                  for (var T = 1; T <= S.length - 1; T++)
                    if (x.push(S[T]), x.length === b)
                      return x;
                  w = m = C;
                }
              }
              return x.push(d2.slice(m)), x;
            }];
          });
        }, function(e, t, n) {
          var o = n(10), r = n(109).set, i = o.MutationObserver || o.WebKitMutationObserver, a = o.process, s = o.Promise, l = "process" == n(38)(a);
          e.exports = function() {
            var e2, t2, n2, c = function() {
              var o2, r2;
              for (l && (o2 = a.domain) && o2.exit(); e2; ) {
                r2 = e2.fn, e2 = e2.next;
                try {
                  r2();
                } catch (o3) {
                  throw e2 ? n2() : t2 = void 0, o3;
                }
              }
              t2 = void 0, o2 && o2.enter();
            };
            if (l)
              n2 = function() {
                a.nextTick(c);
              };
            else if (!i || o.navigator && o.navigator.standalone)
              if (s && s.resolve) {
                var u = s.resolve(void 0);
                n2 = function() {
                  u.then(c);
                };
              } else
                n2 = function() {
                  r.call(o, c);
                };
            else {
              var f = true, d = document.createTextNode("");
              new i(c).observe(d, { characterData: true }), n2 = function() {
                d.data = f = !f;
              };
            }
            return function(o2) {
              var r2 = { fn: o2, next: void 0 };
              t2 && (t2.next = r2), e2 || (e2 = r2, n2()), t2 = r2;
            };
          };
        }, function(e, t) {
          e.exports = function(e2) {
            try {
              return { e: false, v: e2() };
            } catch (e3) {
              return { e: true, v: e3 };
            }
          };
        }, function(e, t, n) {
          "use strict";
          var o = n(142), r = n(53);
          e.exports = n(80)("Map", function(e2) {
            return function() {
              return e2(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, { get: function(e2) {
            var t2 = o.getEntry(r(this, "Map"), e2);
            return t2 && t2.v;
          }, set: function(e2, t2) {
            return o.def(r(this, "Map"), 0 === e2 ? 0 : e2, t2);
          } }, o, true);
        }, function(e, t, n) {
          "use strict";
          var o = n(142), r = n(53);
          e.exports = n(80)("Set", function(e2) {
            return function() {
              return e2(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, { add: function(e2) {
            return o.def(r(this, "Set"), e2 = 0 === e2 ? 0 : e2, e2);
          } }, o);
        }, function(e, t, n) {
          "use strict";
          var o, r = n(10), i = n(36)(0), a = n(23), s = n(43), l = n(122), c = n(143), u = n(13), f = n(53), d = n(53), p = !r.ActiveXObject && "ActiveXObject" in r, h = s.getWeak, v = Object.isExtensible, g = c.ufstore, y = function(e2) {
            return function() {
              return e2(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, k = { get: function(e2) {
            if (u(e2)) {
              var t2 = h(e2);
              return true === t2 ? g(f(this, "WeakMap")).get(e2) : t2 ? t2[this._i] : void 0;
            }
          }, set: function(e2, t2) {
            return c.def(f(this, "WeakMap"), e2, t2);
          } }, b = e.exports = n(80)("WeakMap", y, k, c, true, true);
          d && p && (l((o = c.getConstructor(y, "WeakMap")).prototype, k), s.NEED = true, i(["delete", "has", "get", "set"], function(e2) {
            var t2 = b.prototype, n2 = t2[e2];
            a(t2, e2, function(t3, r2) {
              if (u(t3) && !v(t3)) {
                this._f || (this._f = new o());
                var i2 = this._f[e2](t3, r2);
                return "set" == e2 ? this : i2;
              }
              return n2.call(this, t3, r2);
            });
          }));
        }, function(e, t, n) {
          "use strict";
          var o = n(143), r = n(53);
          n(80)("WeakSet", function(e2) {
            return function() {
              return e2(this, arguments.length > 0 ? arguments[0] : void 0);
            };
          }, { add: function(e2) {
            return o.def(r(this, "WeakSet"), e2, true);
          } }, o, false, true);
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(81), i = n(110), a = n(12), s = n(48), l = n(15), c = n(13), u = n(10).ArrayBuffer, f = n(65), d = i.ArrayBuffer, p = i.DataView, h = r.ABV && u.isView, v = d.prototype.slice, g = r.VIEW;
          o(o.G + o.W + o.F * (u !== d), { ArrayBuffer: d }), o(o.S + o.F * !r.CONSTR, "ArrayBuffer", { isView: function(e2) {
            return h && h(e2) || c(e2) && g in e2;
          } }), o(o.P + o.U + o.F * n(11)(function() {
            return !new d(2).slice(1, void 0).byteLength;
          }), "ArrayBuffer", { slice: function(e2, t2) {
            if (void 0 !== v && void 0 === t2)
              return v.call(a(this), e2);
            for (var n2 = a(this).byteLength, o2 = s(e2, n2), r2 = s(void 0 === t2 ? n2 : t2, n2), i2 = new (f(this, d))(l(r2 - o2)), c2 = new p(this), u2 = new p(i2), h2 = 0; o2 < r2; )
              u2.setUint8(h2++, c2.getUint8(o2++));
            return i2;
          } }), n(58)("ArrayBuffer");
        }, function(e, t, n) {
          var o = n(0);
          o(o.G + o.W + o.F * !n(81).ABV, { DataView: n(110).DataView });
        }, function(e, t, n) {
          n(40)("Int8", 1, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          n(40)("Uint8", 1, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          n(40)("Uint8", 1, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          }, true);
        }, function(e, t, n) {
          n(40)("Int16", 2, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          n(40)("Uint16", 2, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          n(40)("Int32", 4, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          n(40)("Uint32", 4, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          n(40)("Float32", 4, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          n(40)("Float64", 8, function(e2) {
            return function(t2, n2, o) {
              return e2(this, t2, n2, o);
            };
          });
        }, function(e, t, n) {
          var o = n(0), r = n(32), i = n(12), a = (n(10).Reflect || {}).apply, s = Function.apply;
          o(o.S + o.F * !n(11)(function() {
            a(function() {
            });
          }), "Reflect", { apply: function(e2, t2, n2) {
            var o2 = r(e2), l = i(n2);
            return a ? a(o2, t2, l) : s.call(o2, t2, l);
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(49), i = n(32), a = n(12), s = n(13), l = n(11), c = n(124), u = (n(10).Reflect || {}).construct, f = l(function() {
            function e2() {
            }
            return !(u(function() {
            }, [], e2) instanceof e2);
          }), d = !l(function() {
            u(function() {
            });
          });
          o(o.S + o.F * (f || d), "Reflect", { construct: function(e2, t2) {
            i(e2), a(t2);
            var n2 = arguments.length < 3 ? e2 : i(arguments[2]);
            if (d && !f)
              return u(e2, t2, n2);
            if (e2 == n2) {
              switch (t2.length) {
                case 0:
                  return new e2();
                case 1:
                  return new e2(t2[0]);
                case 2:
                  return new e2(t2[0], t2[1]);
                case 3:
                  return new e2(t2[0], t2[1], t2[2]);
                case 4:
                  return new e2(t2[0], t2[1], t2[2], t2[3]);
              }
              var o2 = [null];
              return o2.push.apply(o2, t2), new (c.apply(e2, o2))();
            }
            var l2 = n2.prototype, p = r(s(l2) ? l2 : Object.prototype), h = Function.apply.call(e2, p, t2);
            return s(h) ? h : p;
          } });
        }, function(e, t, n) {
          var o = n(18), r = n(0), i = n(12), a = n(42);
          r(r.S + r.F * n(11)(function() {
            Reflect.defineProperty(o.f({}, 1, { value: 1 }), 1, { value: 2 });
          }), "Reflect", { defineProperty: function(e2, t2, n2) {
            i(e2), t2 = a(t2, true), i(n2);
            try {
              return o.f(e2, t2, n2), true;
            } catch (e3) {
              return false;
            }
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(34).f, i = n(12);
          o(o.S, "Reflect", { deleteProperty: function(e2, t2) {
            var n2 = r(i(e2), t2);
            return !(n2 && !n2.configurable) && delete e2[t2];
          } });
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(12), i = function(e2) {
            this._t = r(e2), this._i = 0;
            var t2, n2 = this._k = [];
            for (t2 in e2)
              n2.push(t2);
          };
          n(131)(i, "Object", function() {
            var e2, t2 = this._k;
            do {
              if (this._i >= t2.length)
                return { value: void 0, done: true };
            } while (!((e2 = t2[this._i++]) in this._t));
            return { value: e2, done: false };
          }), o(o.S, "Reflect", { enumerate: function(e2) {
            return new i(e2);
          } });
        }, function(e, t, n) {
          var o = n(34), r = n(51), i = n(26), a = n(0), s = n(13), l = n(12);
          a(a.S, "Reflect", { get: function e2(t2, n2) {
            var a2, c, u = arguments.length < 3 ? t2 : arguments[2];
            return l(t2) === u ? t2[n2] : (a2 = o.f(t2, n2)) ? i(a2, "value") ? a2.value : void 0 !== a2.get ? a2.get.call(u) : void 0 : s(c = r(t2)) ? e2(c, n2, u) : void 0;
          } });
        }, function(e, t, n) {
          var o = n(34), r = n(0), i = n(12);
          r(r.S, "Reflect", { getOwnPropertyDescriptor: function(e2, t2) {
            return o.f(i(e2), t2);
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(51), i = n(12);
          o(o.S, "Reflect", { getPrototypeOf: function(e2) {
            return r(i(e2));
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Reflect", { has: function(e2, t2) {
            return t2 in e2;
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(12), i = Object.isExtensible;
          o(o.S, "Reflect", { isExtensible: function(e2) {
            return r(e2), !i || i(e2);
          } });
        }, function(e, t, n) {
          var o = n(0);
          o(o.S, "Reflect", { ownKeys: n(145) });
        }, function(e, t, n) {
          var o = n(0), r = n(12), i = Object.preventExtensions;
          o(o.S, "Reflect", { preventExtensions: function(e2) {
            r(e2);
            try {
              return i && i(e2), true;
            } catch (e3) {
              return false;
            }
          } });
        }, function(e, t, n) {
          var o = n(18), r = n(34), i = n(51), a = n(26), s = n(0), l = n(44), c = n(12), u = n(13);
          s(s.S, "Reflect", { set: function e2(t2, n2, s2) {
            var f, d, p = arguments.length < 4 ? t2 : arguments[3], h = r.f(c(t2), n2);
            if (!h) {
              if (u(d = i(t2)))
                return e2(d, n2, s2, p);
              h = l(0);
            }
            if (a(h, "value")) {
              if (false === h.writable || !u(p))
                return false;
              if (f = r.f(p, n2)) {
                if (f.get || f.set || false === f.writable)
                  return false;
                f.value = s2, o.f(p, n2, f);
              } else
                o.f(p, n2, l(0, s2));
              return true;
            }
            return void 0 !== h.set && (h.set.call(p, s2), true);
          } });
        }, function(e, t, n) {
          var o = n(0), r = n(91);
          r && o(o.S, "Reflect", { setPrototypeOf: function(e2, t2) {
            r.check(e2, t2);
            try {
              return r.set(e2, t2), true;
            } catch (e3) {
              return false;
            }
          } });
        }, function(e, t, n) {
          n(334), e.exports = n(16).Array.includes;
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(71)(true);
          o(o.P, "Array", { includes: function(e2) {
            return r(this, e2, arguments.length > 1 ? arguments[1] : void 0);
          } }), n(52)("includes");
        }, function(e, t, n) {
          n(336), e.exports = n(16).Array.flatMap;
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(337), i = n(22), a = n(15), s = n(32), l = n(133);
          o(o.P, "Array", { flatMap: function(e2) {
            var t2, n2, o2 = i(this);
            return s(e2), t2 = a(o2.length), n2 = l(o2, 0), r(n2, o2, o2, t2, 0, 1, e2, arguments[1]), n2;
          } }), n(52)("flatMap");
        }, function(e, t, n) {
          "use strict";
          var o = n(73), r = n(13), i = n(15), a = n(31), s = n(14)("isConcatSpreadable");
          e.exports = function e2(t2, n2, l, c, u, f, d, p) {
            for (var h, v, g = u, y = 0, k = !!d && a(d, p, 3); y < c; ) {
              if (y in l) {
                if (h = k ? k(l[y], y, n2) : l[y], v = false, r(h) && (v = void 0 !== (v = h[s]) ? !!v : o(h)), v && f > 0)
                  g = e2(t2, n2, h, i(h.length), g, f - 1) - 1;
                else {
                  if (g >= 9007199254740991)
                    throw TypeError();
                  t2[g] = h;
                }
                g++;
              }
              y++;
            }
            return g;
          };
        }, function(e, t, n) {
          n(339), e.exports = n(16).String.padStart;
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(146), i = n(79), a = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);
          o(o.P + o.F * a, "String", { padStart: function(e2) {
            return r(this, e2, arguments.length > 1 ? arguments[1] : void 0, true);
          } });
        }, function(e, t, n) {
          n(341), e.exports = n(16).String.padEnd;
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(146), i = n(79), a = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);
          o(o.P + o.F * a, "String", { padEnd: function(e2) {
            return r(this, e2, arguments.length > 1 ? arguments[1] : void 0, false);
          } });
        }, function(e, t, n) {
          n(343), e.exports = n(16).String.trimLeft;
        }, function(e, t, n) {
          "use strict";
          n(56)("trimLeft", function(e2) {
            return function() {
              return e2(this, 1);
            };
          }, "trimStart");
        }, function(e, t, n) {
          n(345), e.exports = n(16).String.trimRight;
        }, function(e, t, n) {
          "use strict";
          n(56)("trimRight", function(e2) {
            return function() {
              return e2(this, 2);
            };
          }, "trimEnd");
        }, function(e, t, n) {
          n(347), e.exports = n(87).f("asyncIterator");
        }, function(e, t, n) {
          n(118)("asyncIterator");
        }, function(e, t, n) {
          n(349), e.exports = n(16).Object.getOwnPropertyDescriptors;
        }, function(e, t, n) {
          var o = n(0), r = n(145), i = n(28), a = n(34), s = n(103);
          o(o.S, "Object", { getOwnPropertyDescriptors: function(e2) {
            for (var t2, n2, o2 = i(e2), l = a.f, c = r(o2), u = {}, f = 0; c.length > f; )
              void 0 !== (n2 = l(o2, t2 = c[f++])) && s(u, t2, n2);
            return u;
          } });
        }, function(e, t, n) {
          n(351), e.exports = n(16).Object.values;
        }, function(e, t, n) {
          var o = n(0), r = n(147)(false);
          o(o.S, "Object", { values: function(e2) {
            return r(e2);
          } });
        }, function(e, t, n) {
          n(353), e.exports = n(16).Object.entries;
        }, function(e, t, n) {
          var o = n(0), r = n(147)(true);
          o(o.S, "Object", { entries: function(e2) {
            return r(e2);
          } });
        }, function(e, t, n) {
          "use strict";
          n(139), n(355), e.exports = n(16).Promise.finally;
        }, function(e, t, n) {
          "use strict";
          var o = n(0), r = n(16), i = n(10), a = n(65), s = n(141);
          o(o.P + o.R, "Promise", { finally: function(e2) {
            var t2 = a(this, r.Promise || i.Promise), n2 = "function" == typeof e2;
            return this.then(n2 ? function(n3) {
              return s(t2, e2()).then(function() {
                return n3;
              });
            } : e2, n2 ? function(n3) {
              return s(t2, e2()).then(function() {
                throw n3;
              });
            } : e2);
          } });
        }, function(e, t, n) {
          n(357), n(358), n(359), e.exports = n(16);
        }, function(e, t, n) {
          var o = n(10), r = n(0), i = n(79), a = [].slice, s = /MSIE .\./.test(i), l = function(e2) {
            return function(t2, n2) {
              var o2 = arguments.length > 2, r2 = !!o2 && a.call(arguments, 2);
              return e2(o2 ? function() {
                ("function" == typeof t2 ? t2 : Function(t2)).apply(this, r2);
              } : t2, n2);
            };
          };
          r(r.G + r.B + r.F * s, { setTimeout: l(o.setTimeout), setInterval: l(o.setInterval) });
        }, function(e, t, n) {
          var o = n(0), r = n(109);
          o(o.G + o.B, { setImmediate: r.set, clearImmediate: r.clear });
        }, function(e, t, n) {
          for (var o = n(106), r = n(47), i = n(23), a = n(10), s = n(27), l = n(57), c = n(14), u = c("iterator"), f = c("toStringTag"), d = l.Array, p = { CSSRuleList: true, CSSStyleDeclaration: false, CSSValueList: false, ClientRectList: false, DOMRectList: false, DOMStringList: false, DOMTokenList: true, DataTransferItemList: false, FileList: false, HTMLAllCollection: false, HTMLCollection: false, HTMLFormElement: false, HTMLSelectElement: false, MediaList: true, MimeTypeArray: false, NamedNodeMap: false, NodeList: true, PaintRequestList: false, Plugin: false, PluginArray: false, SVGLengthList: false, SVGNumberList: false, SVGPathSegList: false, SVGPointList: false, SVGStringList: false, SVGTransformList: false, SourceBufferList: false, StyleSheetList: true, TextTrackCueList: false, TextTrackList: false, TouchList: false }, h = r(p), v = 0; v < h.length; v++) {
            var g, y = h[v], k = p[y], b = a[y], m = b && b.prototype;
            if (m && (m[u] || s(m, u, d), m[f] || s(m, f, y), l[y] = d, k))
              for (g in o)
                m[g] || i(m, g, o[g], true);
          }
        }, function(e, t, n) {
          var o = function(e2) {
            "use strict";
            var t2 = Object.prototype, n2 = t2.hasOwnProperty, o2 = Object.defineProperty || function(e3, t3, n3) {
              e3[t3] = n3.value;
            }, r = "function" == typeof Symbol ? Symbol : {}, i = r.iterator || "@@iterator", a = r.asyncIterator || "@@asyncIterator", s = r.toStringTag || "@@toStringTag";
            function l(e3, t3, n3) {
              return Object.defineProperty(e3, t3, { value: n3, enumerable: true, configurable: true, writable: true }), e3[t3];
            }
            try {
              l({}, "");
            } catch (e3) {
              l = function(e4, t3, n3) {
                return e4[t3] = n3;
              };
            }
            function c(e3, t3, n3, r2) {
              var i2 = t3 && t3.prototype instanceof d ? t3 : d, a2 = Object.create(i2.prototype), s2 = new T(r2 || []);
              return o2(a2, "_invoke", { value: w(e3, n3, s2) }), a2;
            }
            function u(e3, t3, n3) {
              try {
                return { type: "normal", arg: e3.call(t3, n3) };
              } catch (e4) {
                return { type: "throw", arg: e4 };
              }
            }
            e2.wrap = c;
            var f = {};
            function d() {
            }
            function p() {
            }
            function h() {
            }
            var v = {};
            l(v, i, function() {
              return this;
            });
            var g = Object.getPrototypeOf, y = g && g(g(E([])));
            y && y !== t2 && n2.call(y, i) && (v = y);
            var k = h.prototype = d.prototype = Object.create(v);
            function b(e3) {
              ["next", "throw", "return"].forEach(function(t3) {
                l(e3, t3, function(e4) {
                  return this._invoke(t3, e4);
                });
              });
            }
            function m(e3, t3) {
              var r2;
              o2(this, "_invoke", { value: function(o3, i2) {
                function a2() {
                  return new t3(function(r3, a3) {
                    !function o4(r4, i3, a4, s2) {
                      var l2 = u(e3[r4], e3, i3);
                      if ("throw" !== l2.type) {
                        var c2 = l2.arg, f2 = c2.value;
                        return f2 && "object" == typeof f2 && n2.call(f2, "__await") ? t3.resolve(f2.__await).then(function(e4) {
                          o4("next", e4, a4, s2);
                        }, function(e4) {
                          o4("throw", e4, a4, s2);
                        }) : t3.resolve(f2).then(function(e4) {
                          c2.value = e4, a4(c2);
                        }, function(e4) {
                          return o4("throw", e4, a4, s2);
                        });
                      }
                      s2(l2.arg);
                    }(o3, i2, r3, a3);
                  });
                }
                return r2 = r2 ? r2.then(a2, a2) : a2();
              } });
            }
            function w(e3, t3, n3) {
              var o3 = "suspendedStart";
              return function(r2, i2) {
                if ("executing" === o3)
                  throw new Error("Generator is already running");
                if ("completed" === o3) {
                  if ("throw" === r2)
                    throw i2;
                  return B();
                }
                for (n3.method = r2, n3.arg = i2; ; ) {
                  var a2 = n3.delegate;
                  if (a2) {
                    var s2 = x(a2, n3);
                    if (s2) {
                      if (s2 === f)
                        continue;
                      return s2;
                    }
                  }
                  if ("next" === n3.method)
                    n3.sent = n3._sent = n3.arg;
                  else if ("throw" === n3.method) {
                    if ("suspendedStart" === o3)
                      throw o3 = "completed", n3.arg;
                    n3.dispatchException(n3.arg);
                  } else
                    "return" === n3.method && n3.abrupt("return", n3.arg);
                  o3 = "executing";
                  var l2 = u(e3, t3, n3);
                  if ("normal" === l2.type) {
                    if (o3 = n3.done ? "completed" : "suspendedYield", l2.arg === f)
                      continue;
                    return { value: l2.arg, done: n3.done };
                  }
                  "throw" === l2.type && (o3 = "completed", n3.method = "throw", n3.arg = l2.arg);
                }
              };
            }
            function x(e3, t3) {
              var n3 = t3.method, o3 = e3.iterator[n3];
              if (void 0 === o3)
                return t3.delegate = null, "throw" === n3 && e3.iterator.return && (t3.method = "return", t3.arg = void 0, x(e3, t3), "throw" === t3.method) || "return" !== n3 && (t3.method = "throw", t3.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), f;
              var r2 = u(o3, e3.iterator, t3.arg);
              if ("throw" === r2.type)
                return t3.method = "throw", t3.arg = r2.arg, t3.delegate = null, f;
              var i2 = r2.arg;
              return i2 ? i2.done ? (t3[e3.resultName] = i2.value, t3.next = e3.nextLoc, "return" !== t3.method && (t3.method = "next", t3.arg = void 0), t3.delegate = null, f) : i2 : (t3.method = "throw", t3.arg = new TypeError("iterator result is not an object"), t3.delegate = null, f);
            }
            function C(e3) {
              var t3 = { tryLoc: e3[0] };
              1 in e3 && (t3.catchLoc = e3[1]), 2 in e3 && (t3.finallyLoc = e3[2], t3.afterLoc = e3[3]), this.tryEntries.push(t3);
            }
            function S(e3) {
              var t3 = e3.completion || {};
              t3.type = "normal", delete t3.arg, e3.completion = t3;
            }
            function T(e3) {
              this.tryEntries = [{ tryLoc: "root" }], e3.forEach(C, this), this.reset(true);
            }
            function E(e3) {
              if (e3) {
                var t3 = e3[i];
                if (t3)
                  return t3.call(e3);
                if ("function" == typeof e3.next)
                  return e3;
                if (!isNaN(e3.length)) {
                  var o3 = -1, r2 = function t4() {
                    for (; ++o3 < e3.length; )
                      if (n2.call(e3, o3))
                        return t4.value = e3[o3], t4.done = false, t4;
                    return t4.value = void 0, t4.done = true, t4;
                  };
                  return r2.next = r2;
                }
              }
              return { next: B };
            }
            function B() {
              return { value: void 0, done: true };
            }
            return p.prototype = h, o2(k, "constructor", { value: h, configurable: true }), o2(h, "constructor", { value: p, configurable: true }), p.displayName = l(h, s, "GeneratorFunction"), e2.isGeneratorFunction = function(e3) {
              var t3 = "function" == typeof e3 && e3.constructor;
              return !!t3 && (t3 === p || "GeneratorFunction" === (t3.displayName || t3.name));
            }, e2.mark = function(e3) {
              return Object.setPrototypeOf ? Object.setPrototypeOf(e3, h) : (e3.__proto__ = h, l(e3, s, "GeneratorFunction")), e3.prototype = Object.create(k), e3;
            }, e2.awrap = function(e3) {
              return { __await: e3 };
            }, b(m.prototype), l(m.prototype, a, function() {
              return this;
            }), e2.AsyncIterator = m, e2.async = function(t3, n3, o3, r2, i2) {
              void 0 === i2 && (i2 = Promise);
              var a2 = new m(c(t3, n3, o3, r2), i2);
              return e2.isGeneratorFunction(n3) ? a2 : a2.next().then(function(e3) {
                return e3.done ? e3.value : a2.next();
              });
            }, b(k), l(k, s, "Generator"), l(k, i, function() {
              return this;
            }), l(k, "toString", function() {
              return "[object Generator]";
            }), e2.keys = function(e3) {
              var t3 = Object(e3), n3 = [];
              for (var o3 in t3)
                n3.push(o3);
              return n3.reverse(), function e4() {
                for (; n3.length; ) {
                  var o4 = n3.pop();
                  if (o4 in t3)
                    return e4.value = o4, e4.done = false, e4;
                }
                return e4.done = true, e4;
              };
            }, e2.values = E, T.prototype = { constructor: T, reset: function(e3) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(S), !e3)
                for (var t3 in this)
                  "t" === t3.charAt(0) && n2.call(this, t3) && !isNaN(+t3.slice(1)) && (this[t3] = void 0);
            }, stop: function() {
              this.done = true;
              var e3 = this.tryEntries[0].completion;
              if ("throw" === e3.type)
                throw e3.arg;
              return this.rval;
            }, dispatchException: function(e3) {
              if (this.done)
                throw e3;
              var t3 = this;
              function o3(n3, o4) {
                return a2.type = "throw", a2.arg = e3, t3.next = n3, o4 && (t3.method = "next", t3.arg = void 0), !!o4;
              }
              for (var r2 = this.tryEntries.length - 1; r2 >= 0; --r2) {
                var i2 = this.tryEntries[r2], a2 = i2.completion;
                if ("root" === i2.tryLoc)
                  return o3("end");
                if (i2.tryLoc <= this.prev) {
                  var s2 = n2.call(i2, "catchLoc"), l2 = n2.call(i2, "finallyLoc");
                  if (s2 && l2) {
                    if (this.prev < i2.catchLoc)
                      return o3(i2.catchLoc, true);
                    if (this.prev < i2.finallyLoc)
                      return o3(i2.finallyLoc);
                  } else if (s2) {
                    if (this.prev < i2.catchLoc)
                      return o3(i2.catchLoc, true);
                  } else {
                    if (!l2)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < i2.finallyLoc)
                      return o3(i2.finallyLoc);
                  }
                }
              }
            }, abrupt: function(e3, t3) {
              for (var o3 = this.tryEntries.length - 1; o3 >= 0; --o3) {
                var r2 = this.tryEntries[o3];
                if (r2.tryLoc <= this.prev && n2.call(r2, "finallyLoc") && this.prev < r2.finallyLoc) {
                  var i2 = r2;
                  break;
                }
              }
              i2 && ("break" === e3 || "continue" === e3) && i2.tryLoc <= t3 && t3 <= i2.finallyLoc && (i2 = null);
              var a2 = i2 ? i2.completion : {};
              return a2.type = e3, a2.arg = t3, i2 ? (this.method = "next", this.next = i2.finallyLoc, f) : this.complete(a2);
            }, complete: function(e3, t3) {
              if ("throw" === e3.type)
                throw e3.arg;
              return "break" === e3.type || "continue" === e3.type ? this.next = e3.arg : "return" === e3.type ? (this.rval = this.arg = e3.arg, this.method = "return", this.next = "end") : "normal" === e3.type && t3 && (this.next = t3), f;
            }, finish: function(e3) {
              for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
                var n3 = this.tryEntries[t3];
                if (n3.finallyLoc === e3)
                  return this.complete(n3.completion, n3.afterLoc), S(n3), f;
              }
            }, catch: function(e3) {
              for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
                var n3 = this.tryEntries[t3];
                if (n3.tryLoc === e3) {
                  var o3 = n3.completion;
                  if ("throw" === o3.type) {
                    var r2 = o3.arg;
                    S(n3);
                  }
                  return r2;
                }
              }
              throw new Error("illegal catch attempt");
            }, delegateYield: function(e3, t3, n3) {
              return this.delegate = { iterator: E(e3), resultName: t3, nextLoc: n3 }, "next" === this.method && (this.arg = void 0), f;
            } }, e2;
          }(e.exports);
          try {
            regeneratorRuntime = o;
          } catch (e2) {
            "object" == typeof globalThis ? globalThis.regeneratorRuntime = o : Function("r", "regeneratorRuntime = r")(o);
          }
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(30), n(2), n(3), n(365), n(366), n(367), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f) {
            "use strict";
            var d = n(1);
            function p(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (p = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = d(r2), i2 = d(i2), s = d(s), u = d(u), f = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = p(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(f);
            var h = function() {
              function e2(t2) {
                var n2 = this;
                (0, i2.default)(this, e2);
                var o3 = function() {
                };
                f.isObject(t2) && f.isFunction(t2.onReady) && (o3 = t2.onReady);
                var r3 = new u.default(t2);
                this.isReady = r3.isReady.then(function() {
                  n2.exportAPI(r3), o3();
                });
              }
              return (0, s.default)(e2, [{ key: "exportAPI", value: function(e3) {
                var t2 = this;
                ["configuration"].forEach(function(n2) {
                  t2[n2] = e3[n2];
                }), this.destroy = function() {
                  for (var n2 in Object.values(e3.moduleInstances).forEach(function(e4) {
                    f.isFunction(e4.destroy) && e4.destroy(), e4.listeners.removeAll();
                  }), e3 = null, t2)
                    Object.prototype.hasOwnProperty.call(t2, n2) && delete t2[n2];
                  Object.setPrototypeOf(t2, null);
                }, Object.setPrototypeOf(this, e3.moduleInstances.API.methods), delete this.exportAPI, Object.entries({ blocks: { clear: "clear", render: "render" }, caret: { focus: "focus" }, events: { on: "on", off: "off", emit: "emit" }, saver: { save: "save" } }).forEach(function(n2) {
                  var o3 = (0, r2.default)(n2, 2), i3 = o3[0], a2 = o3[1];
                  Object.entries(a2).forEach(function(n3) {
                    var o4 = (0, r2.default)(n3, 2), a3 = o4[0], s2 = o4[1];
                    t2[s2] = e3.moduleInstances.API.methods[i3][a3];
                  });
                });
              } }], [{ key: "version", get: function() {
                return "2.26.5";
              } }]), e2;
            }();
            o2.default = h, h.displayName = "EditorJS", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t) {
          e.exports = function(e2) {
            if (Array.isArray(e2))
              return e2;
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function(e2, t2) {
            var n = null == e2 ? null : "undefined" != typeof Symbol && e2[Symbol.iterator] || e2["@@iterator"];
            if (null != n) {
              var o, r, i = [], a = true, s = false;
              try {
                for (n = n.call(e2); !(a = (o = n.next()).done) && (i.push(o.value), !t2 || i.length !== t2); a = true)
                  ;
              } catch (e3) {
                s = true, r = e3;
              } finally {
                try {
                  a || null == n.return || n.return();
                } finally {
                  if (s)
                    throw r;
                }
              }
              return i;
            }
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          function n() {
          }
          e.exports = Object.assign(n, { default: n, register: n, revert: function() {
          }, __esModule: true });
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [], void 0 === (i = "function" == typeof (o = function() {
            "use strict";
            Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function(e2) {
              for (var t2 = (this.document || this.ownerDocument).querySelectorAll(e2), n2 = t2.length; --n2 >= 0 && t2.item(n2) !== this; )
                ;
              return n2 > -1;
            }), Element.prototype.closest || (Element.prototype.closest = function(e2) {
              var t2 = this;
              if (!document.documentElement.contains(t2))
                return null;
              do {
                if (t2.matches(e2))
                  return t2;
                t2 = t2.parentElement || t2.parentNode;
              } while (null !== t2);
              return null;
            }), Element.prototype.prepend || (Element.prototype.prepend = function(e2) {
              var t2 = document.createDocumentFragment();
              Array.isArray(e2) || (e2 = [e2]), e2.forEach(function(e3) {
                var n2 = e3 instanceof Node;
                t2.appendChild(n2 ? e3 : document.createTextNode(e3));
              }), this.insertBefore(t2, this.firstChild);
            }), Element.prototype.scrollIntoViewIfNeeded || (Element.prototype.scrollIntoViewIfNeeded = function(e2) {
              e2 = 0 === arguments.length || !!e2;
              var t2 = this.parentNode, n2 = window.getComputedStyle(t2, null), o2 = parseInt(n2.getPropertyValue("border-top-width")), r2 = parseInt(n2.getPropertyValue("border-left-width")), i2 = this.offsetTop - t2.offsetTop < t2.scrollTop, a = this.offsetTop - t2.offsetTop + this.clientHeight - o2 > t2.scrollTop + t2.clientHeight, s = this.offsetLeft - t2.offsetLeft < t2.scrollLeft, l = this.offsetLeft - t2.offsetLeft + this.clientWidth - r2 > t2.scrollLeft + t2.clientWidth, c = i2 && !a;
              (i2 || a) && e2 && (t2.scrollTop = this.offsetTop - t2.offsetTop - t2.clientHeight / 2 - o2 + this.clientHeight / 2), (s || l) && e2 && (t2.scrollLeft = this.offsetLeft - t2.offsetLeft - t2.clientWidth / 2 - r2 + this.clientWidth / 2), (i2 || a || s || l) && !e2 && this.scrollIntoView(c);
            });
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(19), n(8), n(54), n(151), n(82)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p) {
            "use strict";
            var h = n(1);
            function v(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (v = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = h(r2), i2 = h(i2), s = h(s), l = h(l), c = h(c), u = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = v(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(u), f = h(f), p = h(p);
            var g = n(376), y = [];
            g.keys().forEach(function(e2) {
              e2.match(/^\.\/[^_][\w/]*\.([tj])s$/) && y.push(g(e2));
            });
            var k = function() {
              function e2(t3) {
                var n3, o3, a2 = this;
                (0, s.default)(this, e2), this.moduleInstances = {}, this.eventsDispatcher = new p.default(), this.isReady = new Promise(function(e3, t4) {
                  n3 = e3, o3 = t4;
                }), Promise.resolve().then((0, i2.default)(r2.default.mark(function e3() {
                  return r2.default.wrap(function(e4) {
                    for (; ; )
                      switch (e4.prev = e4.next) {
                        case 0:
                          return a2.configuration = t3, e4.next = 3, a2.validate();
                        case 3:
                          return e4.next = 5, a2.init();
                        case 5:
                          return e4.next = 7, a2.start();
                        case 7:
                          u.logLabeled("I'm ready! (\uFF89\u25D5\u30EE\u25D5)\uFF89*:\uFF65\uFF9F\u2727", "log", "", "color: #E24A75"), setTimeout((0, i2.default)(r2.default.mark(function e5() {
                            var t4, o4, i3;
                            return r2.default.wrap(function(e6) {
                              for (; ; )
                                switch (e6.prev = e6.next) {
                                  case 0:
                                    return e6.next = 2, a2.render();
                                  case 2:
                                    a2.configuration.autofocus && (t4 = a2.moduleInstances, o4 = t4.BlockManager, (i3 = t4.Caret).setToBlock(o4.blocks[0], i3.positions.START), o4.highlightCurrentNode()), a2.moduleInstances.UI.removeLoader(), n3();
                                  case 5:
                                  case "end":
                                    return e6.stop();
                                }
                            }, e5);
                          })), 500);
                        case 9:
                        case "end":
                          return e4.stop();
                      }
                  }, e3);
                }))).catch(function(e3) {
                  u.log("Editor.js is not ready because of ".concat(e3), "error"), o3(e3);
                });
              }
              var t2, n2;
              return (0, l.default)(e2, [{ key: "configuration", get: function() {
                return this.config;
              }, set: function(e3) {
                var t3, n3;
                u.isObject(e3) ? this.config = Object.assign({}, e3) : this.config = { holder: e3 }, u.deprecationAssert(!!this.config.holderId, "config.holderId", "config.holder"), this.config.holderId && !this.config.holder && (this.config.holder = this.config.holderId, this.config.holderId = null), null == this.config.holder && (this.config.holder = "editorjs"), this.config.logLevel || (this.config.logLevel = u.LogLevels.VERBOSE), u.setLogLevel(this.config.logLevel), u.deprecationAssert(Boolean(this.config.initialBlock), "config.initialBlock", "config.defaultBlock"), this.config.defaultBlock = this.config.defaultBlock || this.config.initialBlock || "paragraph", this.config.minHeight = void 0 !== this.config.minHeight ? this.config.minHeight : 300;
                var o3 = { type: this.config.defaultBlock, data: {} };
                this.config.placeholder = this.config.placeholder || false, this.config.sanitizer = this.config.sanitizer || { p: true, b: true, a: true }, this.config.hideToolbar = !!this.config.hideToolbar && this.config.hideToolbar, this.config.tools = this.config.tools || {}, this.config.i18n = this.config.i18n || {}, this.config.data = this.config.data || { blocks: [] }, this.config.onReady = this.config.onReady || function() {
                }, this.config.onChange = this.config.onChange || function() {
                }, this.config.inlineToolbar = void 0 === this.config.inlineToolbar || this.config.inlineToolbar, !u.isEmpty(this.config.data) && this.config.data.blocks && 0 !== this.config.data.blocks.length || (this.config.data = { blocks: [o3] }), this.config.readOnly = this.config.readOnly || false, (null === (t3 = this.config.i18n) || void 0 === t3 ? void 0 : t3.messages) && f.default.setDictionary(this.config.i18n.messages), this.config.i18n.direction = (null === (n3 = this.config.i18n) || void 0 === n3 ? void 0 : n3.direction) || "ltr";
              } }, { key: "validate", value: (n2 = (0, i2.default)(r2.default.mark(function e3() {
                var t3, n3, o3;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        if (t3 = this.config, n3 = t3.holderId, o3 = t3.holder, !n3 || !o3) {
                          e4.next = 3;
                          break;
                        }
                        throw Error("\xABholderId\xBB and \xABholder\xBB param can't assign at the same time.");
                      case 3:
                        if (!u.isString(o3) || c.default.get(o3)) {
                          e4.next = 5;
                          break;
                        }
                        throw Error("element with ID \xAB".concat(o3, "\xBB is missing. Pass correct holder's ID."));
                      case 5:
                        if (!o3 || !u.isObject(o3) || c.default.isElement(o3)) {
                          e4.next = 7;
                          break;
                        }
                        throw Error("\xABholder\xBB value must be an Element node");
                      case 7:
                      case "end":
                        return e4.stop();
                    }
                }, e3, this);
              })), function() {
                return n2.apply(this, arguments);
              }) }, { key: "init", value: function() {
                this.constructModules(), this.configureModules();
              } }, { key: "start", value: (t2 = (0, i2.default)(r2.default.mark(function e3() {
                var t3, n3 = this;
                return r2.default.wrap(function(e4) {
                  for (; ; )
                    switch (e4.prev = e4.next) {
                      case 0:
                        return t3 = ["Tools", "UI", "BlockManager", "Paste", "BlockSelection", "RectangleSelection", "CrossBlockSelection", "ReadOnly"], e4.next = 3, t3.reduce(function(e5, t4) {
                          return e5.then((0, i2.default)(r2.default.mark(function e6() {
                            return r2.default.wrap(function(e7) {
                              for (; ; )
                                switch (e7.prev = e7.next) {
                                  case 0:
                                    return e7.prev = 0, e7.next = 3, n3.moduleInstances[t4].prepare();
                                  case 3:
                                    e7.next = 10;
                                    break;
                                  case 5:
                                    if (e7.prev = 5, e7.t0 = e7.catch(0), !(e7.t0 instanceof d.CriticalError)) {
                                      e7.next = 9;
                                      break;
                                    }
                                    throw new Error(e7.t0.message);
                                  case 9:
                                    u.log("Module ".concat(t4, " was skipped because of %o"), "warn", e7.t0);
                                  case 10:
                                  case "end":
                                    return e7.stop();
                                }
                            }, e6, null, [[0, 5]]);
                          })));
                        }, Promise.resolve());
                      case 3:
                      case "end":
                        return e4.stop();
                    }
                }, e3);
              })), function() {
                return t2.apply(this, arguments);
              }) }, { key: "render", value: function() {
                return this.moduleInstances.Renderer.render(this.config.data.blocks);
              } }, { key: "constructModules", value: function() {
                var e3 = this;
                y.forEach(function(t3) {
                  var n3 = u.isFunction(t3) ? t3 : t3.default;
                  try {
                    e3.moduleInstances[n3.displayName] = new n3({ config: e3.configuration, eventsDispatcher: e3.eventsDispatcher });
                  } catch (e4) {
                    u.log("Module ".concat(n3.displayName, " skipped because"), "error", e4);
                  }
                });
              } }, { key: "configureModules", value: function() {
                for (var e3 in this.moduleInstances)
                  Object.prototype.hasOwnProperty.call(this.moduleInstances, e3) && (this.moduleInstances[e3].state = this.getModulesDiff(e3));
              } }, { key: "getModulesDiff", value: function(e3) {
                var t3 = {};
                for (var n3 in this.moduleInstances)
                  n3 !== e3 && (t3[n3] = this.moduleInstances[n3]);
                return t3;
              } }]), e2;
            }();
            o2.default = k, k.displayName = "Core", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o = n(7).default;
          function r() {
            "use strict";
            e.exports = r = function() {
              return t2;
            }, e.exports.__esModule = true, e.exports.default = e.exports;
            var t2 = {}, n2 = Object.prototype, i = n2.hasOwnProperty, a = Object.defineProperty || function(e2, t3, n3) {
              e2[t3] = n3.value;
            }, s = "function" == typeof Symbol ? Symbol : {}, l = s.iterator || "@@iterator", c = s.asyncIterator || "@@asyncIterator", u = s.toStringTag || "@@toStringTag";
            function f(e2, t3, n3) {
              return Object.defineProperty(e2, t3, { value: n3, enumerable: true, configurable: true, writable: true }), e2[t3];
            }
            try {
              f({}, "");
            } catch (e2) {
              f = function(e3, t3, n3) {
                return e3[t3] = n3;
              };
            }
            function d(e2, t3, n3, o2) {
              var r2 = t3 && t3.prototype instanceof v ? t3 : v, i2 = Object.create(r2.prototype), s2 = new M(o2 || []);
              return a(i2, "_invoke", { value: S(e2, n3, s2) }), i2;
            }
            function p(e2, t3, n3) {
              try {
                return { type: "normal", arg: e2.call(t3, n3) };
              } catch (e3) {
                return { type: "throw", arg: e3 };
              }
            }
            t2.wrap = d;
            var h = {};
            function v() {
            }
            function g() {
            }
            function y() {
            }
            var k = {};
            f(k, l, function() {
              return this;
            });
            var b = Object.getPrototypeOf, m = b && b(b(_([])));
            m && m !== n2 && i.call(m, l) && (k = m);
            var w = y.prototype = v.prototype = Object.create(k);
            function x(e2) {
              ["next", "throw", "return"].forEach(function(t3) {
                f(e2, t3, function(e3) {
                  return this._invoke(t3, e3);
                });
              });
            }
            function C(e2, t3) {
              var n3;
              a(this, "_invoke", { value: function(r2, a2) {
                function s2() {
                  return new t3(function(n4, s3) {
                    !function n5(r3, a3, s4, l2) {
                      var c2 = p(e2[r3], e2, a3);
                      if ("throw" !== c2.type) {
                        var u2 = c2.arg, f2 = u2.value;
                        return f2 && "object" == o(f2) && i.call(f2, "__await") ? t3.resolve(f2.__await).then(function(e3) {
                          n5("next", e3, s4, l2);
                        }, function(e3) {
                          n5("throw", e3, s4, l2);
                        }) : t3.resolve(f2).then(function(e3) {
                          u2.value = e3, s4(u2);
                        }, function(e3) {
                          return n5("throw", e3, s4, l2);
                        });
                      }
                      l2(c2.arg);
                    }(r2, a2, n4, s3);
                  });
                }
                return n3 = n3 ? n3.then(s2, s2) : s2();
              } });
            }
            function S(e2, t3, n3) {
              var o2 = "suspendedStart";
              return function(r2, i2) {
                if ("executing" === o2)
                  throw new Error("Generator is already running");
                if ("completed" === o2) {
                  if ("throw" === r2)
                    throw i2;
                  return O();
                }
                for (n3.method = r2, n3.arg = i2; ; ) {
                  var a2 = n3.delegate;
                  if (a2) {
                    var s2 = T(a2, n3);
                    if (s2) {
                      if (s2 === h)
                        continue;
                      return s2;
                    }
                  }
                  if ("next" === n3.method)
                    n3.sent = n3._sent = n3.arg;
                  else if ("throw" === n3.method) {
                    if ("suspendedStart" === o2)
                      throw o2 = "completed", n3.arg;
                    n3.dispatchException(n3.arg);
                  } else
                    "return" === n3.method && n3.abrupt("return", n3.arg);
                  o2 = "executing";
                  var l2 = p(e2, t3, n3);
                  if ("normal" === l2.type) {
                    if (o2 = n3.done ? "completed" : "suspendedYield", l2.arg === h)
                      continue;
                    return { value: l2.arg, done: n3.done };
                  }
                  "throw" === l2.type && (o2 = "completed", n3.method = "throw", n3.arg = l2.arg);
                }
              };
            }
            function T(e2, t3) {
              var n3 = e2.iterator[t3.method];
              if (void 0 === n3) {
                if (t3.delegate = null, "throw" === t3.method) {
                  if (e2.iterator.return && (t3.method = "return", t3.arg = void 0, T(e2, t3), "throw" === t3.method))
                    return h;
                  t3.method = "throw", t3.arg = new TypeError("The iterator does not provide a 'throw' method");
                }
                return h;
              }
              var o2 = p(n3, e2.iterator, t3.arg);
              if ("throw" === o2.type)
                return t3.method = "throw", t3.arg = o2.arg, t3.delegate = null, h;
              var r2 = o2.arg;
              return r2 ? r2.done ? (t3[e2.resultName] = r2.value, t3.next = e2.nextLoc, "return" !== t3.method && (t3.method = "next", t3.arg = void 0), t3.delegate = null, h) : r2 : (t3.method = "throw", t3.arg = new TypeError("iterator result is not an object"), t3.delegate = null, h);
            }
            function E(e2) {
              var t3 = { tryLoc: e2[0] };
              1 in e2 && (t3.catchLoc = e2[1]), 2 in e2 && (t3.finallyLoc = e2[2], t3.afterLoc = e2[3]), this.tryEntries.push(t3);
            }
            function B(e2) {
              var t3 = e2.completion || {};
              t3.type = "normal", delete t3.arg, e2.completion = t3;
            }
            function M(e2) {
              this.tryEntries = [{ tryLoc: "root" }], e2.forEach(E, this), this.reset(true);
            }
            function _(e2) {
              if (e2) {
                var t3 = e2[l];
                if (t3)
                  return t3.call(e2);
                if ("function" == typeof e2.next)
                  return e2;
                if (!isNaN(e2.length)) {
                  var n3 = -1, o2 = function t4() {
                    for (; ++n3 < e2.length; )
                      if (i.call(e2, n3))
                        return t4.value = e2[n3], t4.done = false, t4;
                    return t4.value = void 0, t4.done = true, t4;
                  };
                  return o2.next = o2;
                }
              }
              return { next: O };
            }
            function O() {
              return { value: void 0, done: true };
            }
            return g.prototype = y, a(w, "constructor", { value: y, configurable: true }), a(y, "constructor", { value: g, configurable: true }), g.displayName = f(y, u, "GeneratorFunction"), t2.isGeneratorFunction = function(e2) {
              var t3 = "function" == typeof e2 && e2.constructor;
              return !!t3 && (t3 === g || "GeneratorFunction" === (t3.displayName || t3.name));
            }, t2.mark = function(e2) {
              return Object.setPrototypeOf ? Object.setPrototypeOf(e2, y) : (e2.__proto__ = y, f(e2, u, "GeneratorFunction")), e2.prototype = Object.create(w), e2;
            }, t2.awrap = function(e2) {
              return { __await: e2 };
            }, x(C.prototype), f(C.prototype, c, function() {
              return this;
            }), t2.AsyncIterator = C, t2.async = function(e2, n3, o2, r2, i2) {
              void 0 === i2 && (i2 = Promise);
              var a2 = new C(d(e2, n3, o2, r2), i2);
              return t2.isGeneratorFunction(n3) ? a2 : a2.next().then(function(e3) {
                return e3.done ? e3.value : a2.next();
              });
            }, x(w), f(w, u, "Generator"), f(w, l, function() {
              return this;
            }), f(w, "toString", function() {
              return "[object Generator]";
            }), t2.keys = function(e2) {
              var t3 = Object(e2), n3 = [];
              for (var o2 in t3)
                n3.push(o2);
              return n3.reverse(), function e3() {
                for (; n3.length; ) {
                  var o3 = n3.pop();
                  if (o3 in t3)
                    return e3.value = o3, e3.done = false, e3;
                }
                return e3.done = true, e3;
              };
            }, t2.values = _, M.prototype = { constructor: M, reset: function(e2) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(B), !e2)
                for (var t3 in this)
                  "t" === t3.charAt(0) && i.call(this, t3) && !isNaN(+t3.slice(1)) && (this[t3] = void 0);
            }, stop: function() {
              this.done = true;
              var e2 = this.tryEntries[0].completion;
              if ("throw" === e2.type)
                throw e2.arg;
              return this.rval;
            }, dispatchException: function(e2) {
              if (this.done)
                throw e2;
              var t3 = this;
              function n3(n4, o3) {
                return a2.type = "throw", a2.arg = e2, t3.next = n4, o3 && (t3.method = "next", t3.arg = void 0), !!o3;
              }
              for (var o2 = this.tryEntries.length - 1; o2 >= 0; --o2) {
                var r2 = this.tryEntries[o2], a2 = r2.completion;
                if ("root" === r2.tryLoc)
                  return n3("end");
                if (r2.tryLoc <= this.prev) {
                  var s2 = i.call(r2, "catchLoc"), l2 = i.call(r2, "finallyLoc");
                  if (s2 && l2) {
                    if (this.prev < r2.catchLoc)
                      return n3(r2.catchLoc, true);
                    if (this.prev < r2.finallyLoc)
                      return n3(r2.finallyLoc);
                  } else if (s2) {
                    if (this.prev < r2.catchLoc)
                      return n3(r2.catchLoc, true);
                  } else {
                    if (!l2)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < r2.finallyLoc)
                      return n3(r2.finallyLoc);
                  }
                }
              }
            }, abrupt: function(e2, t3) {
              for (var n3 = this.tryEntries.length - 1; n3 >= 0; --n3) {
                var o2 = this.tryEntries[n3];
                if (o2.tryLoc <= this.prev && i.call(o2, "finallyLoc") && this.prev < o2.finallyLoc) {
                  var r2 = o2;
                  break;
                }
              }
              r2 && ("break" === e2 || "continue" === e2) && r2.tryLoc <= t3 && t3 <= r2.finallyLoc && (r2 = null);
              var a2 = r2 ? r2.completion : {};
              return a2.type = e2, a2.arg = t3, r2 ? (this.method = "next", this.next = r2.finallyLoc, h) : this.complete(a2);
            }, complete: function(e2, t3) {
              if ("throw" === e2.type)
                throw e2.arg;
              return "break" === e2.type || "continue" === e2.type ? this.next = e2.arg : "return" === e2.type ? (this.rval = this.arg = e2.arg, this.method = "return", this.next = "end") : "normal" === e2.type && t3 && (this.next = t3), h;
            }, finish: function(e2) {
              for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
                var n3 = this.tryEntries[t3];
                if (n3.finallyLoc === e2)
                  return this.complete(n3.completion, n3.afterLoc), B(n3), h;
              }
            }, catch: function(e2) {
              for (var t3 = this.tryEntries.length - 1; t3 >= 0; --t3) {
                var n3 = this.tryEntries[t3];
                if (n3.tryLoc === e2) {
                  var o2 = n3.completion;
                  if ("throw" === o2.type) {
                    var r2 = o2.arg;
                    B(n3);
                  }
                  return r2;
                }
              }
              throw new Error("illegal catch attempt");
            }, delegateYield: function(e2, t3, n3) {
              return this.delegate = { iterator: _(e2), resultName: t3, nextLoc: n3 }, "next" === this.method && (this.arg = void 0), h;
            } }, t2;
          }
          e.exports = r, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(149);
          e.exports = function(e2) {
            if (Array.isArray(e2))
              return o(e2);
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function(e2) {
            if ("undefined" != typeof Symbol && null != e2[Symbol.iterator] || null != e2["@@iterator"])
              return Array.from(e2);
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function(e2, t2, n) {
            return t2 in e2 ? Object.defineProperty(e2, t2, { value: n, enumerable: true, configurable: true, writable: true }) : e2[t2] = n, e2;
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function(e2) {
            return -1 !== Function.toString.call(e2).indexOf("[native code]");
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = n(111), r = n(375);
          function i(t2, n2, a) {
            return r() ? (e.exports = i = Reflect.construct.bind(), e.exports.__esModule = true, e.exports.default = e.exports) : (e.exports = i = function(e2, t3, n3) {
              var r2 = [null];
              r2.push.apply(r2, t3);
              var i2 = new (Function.bind.apply(e2, r2))();
              return n3 && o(i2, n3.prototype), i2;
            }, e.exports.__esModule = true, e.exports.default = e.exports), i.apply(null, arguments);
          }
          e.exports = i, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t) {
          e.exports = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              })), true;
            } catch (e2) {
              return false;
            }
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o = { "./api": 83, "./api/": 83, "./api/blocks": 154, "./api/blocks.ts": 154, "./api/caret": 155, "./api/caret.ts": 155, "./api/events": 156, "./api/events.ts": 156, "./api/i18n": 157, "./api/i18n.ts": 157, "./api/index": 83, "./api/index.ts": 83, "./api/inlineToolbar": 158, "./api/inlineToolbar.ts": 158, "./api/listeners": 159, "./api/listeners.ts": 159, "./api/notifier": 160, "./api/notifier.ts": 160, "./api/readonly": 161, "./api/readonly.ts": 161, "./api/sanitizer": 162, "./api/sanitizer.ts": 162, "./api/saver": 163, "./api/saver.ts": 163, "./api/selection": 164, "./api/selection.ts": 164, "./api/styles": 165, "./api/styles.ts": 165, "./api/toolbar": 166, "./api/toolbar.ts": 166, "./api/tooltip": 167, "./api/tooltip.ts": 167, "./api/ui": 168, "./api/ui.ts": 168, "./blockEvents": 169, "./blockEvents.ts": 169, "./blockManager": 170, "./blockManager.ts": 170, "./blockSelection": 171, "./blockSelection.ts": 171, "./caret": 172, "./caret.ts": 172, "./crossBlockSelection": 173, "./crossBlockSelection.ts": 173, "./dragNDrop": 174, "./dragNDrop.ts": 174, "./modificationsObserver": 175, "./modificationsObserver.ts": 175, "./paste": 176, "./paste.ts": 176, "./readonly": 177, "./readonly.ts": 177, "./rectangleSelection": 178, "./rectangleSelection.ts": 178, "./renderer": 179, "./renderer.ts": 179, "./saver": 180, "./saver.ts": 180, "./toolbar": 84, "./toolbar/": 84, "./toolbar/blockSettings": 181, "./toolbar/blockSettings.ts": 181, "./toolbar/conversion": 182, "./toolbar/conversion.ts": 182, "./toolbar/index": 84, "./toolbar/index.ts": 84, "./toolbar/inline": 183, "./toolbar/inline.ts": 183, "./tools": 184, "./tools.ts": 184, "./ui": 186, "./ui.ts": 186 };
          function r(e2) {
            var t2 = i(e2);
            return n(t2);
          }
          function i(e2) {
            if (!n.o(o, e2)) {
              var t2 = new Error("Cannot find module '" + e2 + "'");
              throw t2.code = "MODULE_NOT_FOUND", t2;
            }
            return o[e2];
          }
          r.keys = function() {
            return Object.keys(o);
          }, r.resolve = i, e.exports = r, r.id = 376;
        }, function(e, t, n) {
          var o = n(4);
          e.exports = function(e2, t2) {
            for (; !Object.prototype.hasOwnProperty.call(e2, t2) && null !== (e2 = o(e2)); )
              ;
            return e2;
          }, e.exports.__esModule = true, e.exports.default = e.exports;
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(379)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2), a = s(a);
            var l = function() {
              function e2() {
                (0, r2.default)(this, e2);
              }
              return (0, i2.default)(e2, [{ key: "show", value: function(e3) {
                a.default.show(e3);
              } }]), e2;
            }();
            o2.default = l, l.displayName = "Notifier", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          window, e.exports = function(e2) {
            var t2 = {};
            function n2(o) {
              if (t2[o])
                return t2[o].exports;
              var r = t2[o] = { i: o, l: false, exports: {} };
              return e2[o].call(r.exports, r, r.exports, n2), r.l = true, r.exports;
            }
            return n2.m = e2, n2.c = t2, n2.d = function(e3, t3, o) {
              n2.o(e3, t3) || Object.defineProperty(e3, t3, { enumerable: true, get: o });
            }, n2.r = function(e3) {
              "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
            }, n2.t = function(e3, t3) {
              if (1 & t3 && (e3 = n2(e3)), 8 & t3)
                return e3;
              if (4 & t3 && "object" == typeof e3 && e3 && e3.__esModule)
                return e3;
              var o = /* @__PURE__ */ Object.create(null);
              if (n2.r(o), Object.defineProperty(o, "default", { enumerable: true, value: e3 }), 2 & t3 && "string" != typeof e3)
                for (var r in e3)
                  n2.d(o, r, function(t4) {
                    return e3[t4];
                  }.bind(null, r));
              return o;
            }, n2.n = function(e3) {
              var t3 = e3 && e3.__esModule ? function() {
                return e3.default;
              } : function() {
                return e3;
              };
              return n2.d(t3, "a", t3), t3;
            }, n2.o = function(e3, t3) {
              return Object.prototype.hasOwnProperty.call(e3, t3);
            }, n2.p = "/", n2(n2.s = 0);
          }([function(e2, t2, n2) {
            "use strict";
            n2(1), e2.exports = function() {
              var e3 = n2(6), t3 = null;
              return { show: function(n3) {
                if (n3.message) {
                  !function() {
                    if (t3)
                      return true;
                    t3 = e3.getWrapper(), document.body.appendChild(t3);
                  }();
                  var o = null, r = n3.time || 8e3;
                  switch (n3.type) {
                    case "confirm":
                      o = e3.confirm(n3);
                      break;
                    case "prompt":
                      o = e3.prompt(n3);
                      break;
                    default:
                      o = e3.alert(n3), window.setTimeout(function() {
                        o.remove();
                      }, r);
                  }
                  t3.appendChild(o), o.classList.add("cdx-notify--bounce-in");
                }
              } };
            }();
          }, function(e2, t2, n2) {
            var o = n2(2);
            "string" == typeof o && (o = [[e2.i, o, ""]]), n2(4)(o, { hmr: true, transform: void 0, insertInto: void 0 }), o.locals && (e2.exports = o.locals);
          }, function(e2, t2, n2) {
            (e2.exports = n2(3)(false)).push([e2.i, `.cdx-notify--error{background:#fffbfb!important}.cdx-notify--error::before{background:#fb5d5d!important}.cdx-notify__input{max-width:130px;padding:5px 10px;background:#f7f7f7;border:0;border-radius:3px;font-size:13px;color:#656b7c;outline:0}.cdx-notify__input:-ms-input-placeholder{color:#656b7c}.cdx-notify__input::placeholder{color:#656b7c}.cdx-notify__input:focus:-ms-input-placeholder{color:rgba(101,107,124,.3)}.cdx-notify__input:focus::placeholder{color:rgba(101,107,124,.3)}.cdx-notify__button{border:none;border-radius:3px;font-size:13px;padding:5px 10px;cursor:pointer}.cdx-notify__button:last-child{margin-left:10px}.cdx-notify__button--cancel{background:#f2f5f7;box-shadow:0 2px 1px 0 rgba(16,19,29,0);color:#656b7c}.cdx-notify__button--cancel:hover{background:#eee}.cdx-notify__button--confirm{background:#34c992;box-shadow:0 1px 1px 0 rgba(18,49,35,.05);color:#fff}.cdx-notify__button--confirm:hover{background:#33b082}.cdx-notify__btns-wrapper{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;margin-top:5px}.cdx-notify__cross{position:absolute;top:5px;right:5px;width:10px;height:10px;padding:5px;opacity:.54;cursor:pointer}.cdx-notify__cross::after,.cdx-notify__cross::before{content:'';position:absolute;left:9px;top:5px;height:12px;width:2px;background:#575d67}.cdx-notify__cross::before{transform:rotate(-45deg)}.cdx-notify__cross::after{transform:rotate(45deg)}.cdx-notify__cross:hover{opacity:1}.cdx-notifies{position:fixed;z-index:2;bottom:20px;left:20px;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif}.cdx-notify{position:relative;width:220px;margin-top:15px;padding:13px 16px;background:#fff;box-shadow:0 11px 17px 0 rgba(23,32,61,.13);border-radius:5px;font-size:14px;line-height:1.4em;word-wrap:break-word}.cdx-notify::before{content:'';position:absolute;display:block;top:0;left:0;width:3px;height:calc(100% - 6px);margin:3px;border-radius:5px;background:0 0}@keyframes bounceIn{0%{opacity:0;transform:scale(.3)}50%{opacity:1;transform:scale(1.05)}70%{transform:scale(.9)}100%{transform:scale(1)}}.cdx-notify--bounce-in{animation-name:bounceIn;animation-duration:.6s;animation-iteration-count:1}.cdx-notify--success{background:#fafffe!important}.cdx-notify--success::before{background:#41ffb1!important}`, ""]);
          }, function(e2, t2) {
            e2.exports = function(e3) {
              var t3 = [];
              return t3.toString = function() {
                return this.map(function(t4) {
                  var n2 = function(e4, t5) {
                    var n3, o = e4[1] || "", r = e4[3];
                    if (!r)
                      return o;
                    if (t5 && "function" == typeof btoa) {
                      var i = (n3 = r, "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(n3)))) + " */"), a = r.sources.map(function(e5) {
                        return "/*# sourceURL=" + r.sourceRoot + e5 + " */";
                      });
                      return [o].concat(a).concat([i]).join("\n");
                    }
                    return [o].join("\n");
                  }(t4, e3);
                  return t4[2] ? "@media " + t4[2] + "{" + n2 + "}" : n2;
                }).join("");
              }, t3.i = function(e4, n2) {
                "string" == typeof e4 && (e4 = [[null, e4, ""]]);
                for (var o = {}, r = 0; r < this.length; r++) {
                  var i = this[r][0];
                  "number" == typeof i && (o[i] = true);
                }
                for (r = 0; r < e4.length; r++) {
                  var a = e4[r];
                  "number" == typeof a[0] && o[a[0]] || (n2 && !a[2] ? a[2] = n2 : n2 && (a[2] = "(" + a[2] + ") and (" + n2 + ")"), t3.push(a));
                }
              }, t3;
            };
          }, function(e2, t2, n2) {
            var o, r, i = {}, a = (o = function() {
              return window && document && document.all && !window.atob;
            }, function() {
              return void 0 === r && (r = o.apply(this, arguments)), r;
            }), s = function(e3) {
              var t3 = {};
              return function(e4) {
                if ("function" == typeof e4)
                  return e4();
                if (void 0 === t3[e4]) {
                  var n3 = function(e5) {
                    return document.querySelector(e5);
                  }.call(this, e4);
                  if (window.HTMLIFrameElement && n3 instanceof window.HTMLIFrameElement)
                    try {
                      n3 = n3.contentDocument.head;
                    } catch (e5) {
                      n3 = null;
                    }
                  t3[e4] = n3;
                }
                return t3[e4];
              };
            }(), l = null, c = 0, u = [], f = n2(5);
            function d(e3, t3) {
              for (var n3 = 0; n3 < e3.length; n3++) {
                var o2 = e3[n3], r2 = i[o2.id];
                if (r2) {
                  r2.refs++;
                  for (var a2 = 0; a2 < r2.parts.length; a2++)
                    r2.parts[a2](o2.parts[a2]);
                  for (; a2 < o2.parts.length; a2++)
                    r2.parts.push(k(o2.parts[a2], t3));
                } else {
                  var s2 = [];
                  for (a2 = 0; a2 < o2.parts.length; a2++)
                    s2.push(k(o2.parts[a2], t3));
                  i[o2.id] = { id: o2.id, refs: 1, parts: s2 };
                }
              }
            }
            function p(e3, t3) {
              for (var n3 = [], o2 = {}, r2 = 0; r2 < e3.length; r2++) {
                var i2 = e3[r2], a2 = t3.base ? i2[0] + t3.base : i2[0], s2 = { css: i2[1], media: i2[2], sourceMap: i2[3] };
                o2[a2] ? o2[a2].parts.push(s2) : n3.push(o2[a2] = { id: a2, parts: [s2] });
              }
              return n3;
            }
            function h(e3, t3) {
              var n3 = s(e3.insertInto);
              if (!n3)
                throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
              var o2 = u[u.length - 1];
              if ("top" === e3.insertAt)
                o2 ? o2.nextSibling ? n3.insertBefore(t3, o2.nextSibling) : n3.appendChild(t3) : n3.insertBefore(t3, n3.firstChild), u.push(t3);
              else if ("bottom" === e3.insertAt)
                n3.appendChild(t3);
              else {
                if ("object" != typeof e3.insertAt || !e3.insertAt.before)
                  throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
                var r2 = s(e3.insertInto + " " + e3.insertAt.before);
                n3.insertBefore(t3, r2);
              }
            }
            function v(e3) {
              if (null === e3.parentNode)
                return false;
              e3.parentNode.removeChild(e3);
              var t3 = u.indexOf(e3);
              t3 >= 0 && u.splice(t3, 1);
            }
            function g(e3) {
              var t3 = document.createElement("style");
              return void 0 === e3.attrs.type && (e3.attrs.type = "text/css"), y(t3, e3.attrs), h(e3, t3), t3;
            }
            function y(e3, t3) {
              Object.keys(t3).forEach(function(n3) {
                e3.setAttribute(n3, t3[n3]);
              });
            }
            function k(e3, t3) {
              var n3, o2, r2, i2;
              if (t3.transform && e3.css) {
                if (!(i2 = t3.transform(e3.css)))
                  return function() {
                  };
                e3.css = i2;
              }
              if (t3.singleton) {
                var a2 = c++;
                n3 = l || (l = g(t3)), o2 = w.bind(null, n3, a2, false), r2 = w.bind(null, n3, a2, true);
              } else
                e3.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (n3 = function(e4) {
                  var t4 = document.createElement("link");
                  return void 0 === e4.attrs.type && (e4.attrs.type = "text/css"), e4.attrs.rel = "stylesheet", y(t4, e4.attrs), h(e4, t4), t4;
                }(t3), o2 = function(e4, t4, n4) {
                  var o3 = n4.css, r3 = n4.sourceMap, i3 = void 0 === t4.convertToAbsoluteUrls && r3;
                  (t4.convertToAbsoluteUrls || i3) && (o3 = f(o3)), r3 && (o3 += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(r3)))) + " */");
                  var a3 = new Blob([o3], { type: "text/css" }), s2 = e4.href;
                  e4.href = URL.createObjectURL(a3), s2 && URL.revokeObjectURL(s2);
                }.bind(null, n3, t3), r2 = function() {
                  v(n3), n3.href && URL.revokeObjectURL(n3.href);
                }) : (n3 = g(t3), o2 = function(e4, t4) {
                  var n4 = t4.css, o3 = t4.media;
                  if (o3 && e4.setAttribute("media", o3), e4.styleSheet)
                    e4.styleSheet.cssText = n4;
                  else {
                    for (; e4.firstChild; )
                      e4.removeChild(e4.firstChild);
                    e4.appendChild(document.createTextNode(n4));
                  }
                }.bind(null, n3), r2 = function() {
                  v(n3);
                });
              return o2(e3), function(t4) {
                if (t4) {
                  if (t4.css === e3.css && t4.media === e3.media && t4.sourceMap === e3.sourceMap)
                    return;
                  o2(e3 = t4);
                } else
                  r2();
              };
            }
            e2.exports = function(e3, t3) {
              if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document)
                throw new Error("The style-loader cannot be used in a non-browser environment");
              (t3 = t3 || {}).attrs = "object" == typeof t3.attrs ? t3.attrs : {}, t3.singleton || "boolean" == typeof t3.singleton || (t3.singleton = a()), t3.insertInto || (t3.insertInto = "head"), t3.insertAt || (t3.insertAt = "bottom");
              var n3 = p(e3, t3);
              return d(n3, t3), function(e4) {
                for (var o2 = [], r2 = 0; r2 < n3.length; r2++) {
                  var a2 = n3[r2];
                  (s2 = i[a2.id]).refs--, o2.push(s2);
                }
                for (e4 && d(p(e4, t3), t3), r2 = 0; r2 < o2.length; r2++) {
                  var s2;
                  if (0 === (s2 = o2[r2]).refs) {
                    for (var l2 = 0; l2 < s2.parts.length; l2++)
                      s2.parts[l2]();
                    delete i[s2.id];
                  }
                }
              };
            };
            var b, m = (b = [], function(e3, t3) {
              return b[e3] = t3, b.filter(Boolean).join("\n");
            });
            function w(e3, t3, n3, o2) {
              var r2 = n3 ? "" : o2.css;
              if (e3.styleSheet)
                e3.styleSheet.cssText = m(t3, r2);
              else {
                var i2 = document.createTextNode(r2), a2 = e3.childNodes;
                a2[t3] && e3.removeChild(a2[t3]), a2.length ? e3.insertBefore(i2, a2[t3]) : e3.appendChild(i2);
              }
            }
          }, function(e2, t2) {
            e2.exports = function(e3) {
              var t3 = "undefined" != typeof window && window.location;
              if (!t3)
                throw new Error("fixUrls requires window.location");
              if (!e3 || "string" != typeof e3)
                return e3;
              var n2 = t3.protocol + "//" + t3.host, o = n2 + t3.pathname.replace(/\/[^\/]*$/, "/");
              return e3.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(e4, t4) {
                var r, i = t4.trim().replace(/^"(.*)"$/, function(e5, t5) {
                  return t5;
                }).replace(/^'(.*)'$/, function(e5, t5) {
                  return t5;
                });
                return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i) ? e4 : (r = 0 === i.indexOf("//") ? i : 0 === i.indexOf("/") ? n2 + i : o + i.replace(/^\.\//, ""), "url(" + JSON.stringify(r) + ")");
              });
            };
          }, function(e2, t2, n2) {
            "use strict";
            var o, r, i, a, s, l;
            e2.exports = (o = "cdx-notify", r = "cdx-notify__cross", i = "cdx-notify__button--confirm", a = "cdx-notify__button", s = "cdx-notify__btns-wrapper", { alert: l = function(e3) {
              var t3 = document.createElement("DIV"), n3 = document.createElement("DIV"), i2 = e3.message, a2 = e3.style;
              return t3.classList.add(o), a2 && t3.classList.add(o + "--" + a2), t3.innerHTML = i2, n3.classList.add(r), n3.addEventListener("click", t3.remove.bind(t3)), t3.appendChild(n3), t3;
            }, confirm: function(e3) {
              var t3 = l(e3), n3 = document.createElement("div"), o2 = document.createElement("button"), c = document.createElement("button"), u = t3.querySelector("." + r), f = e3.cancelHandler, d = e3.okHandler;
              return n3.classList.add(s), o2.innerHTML = e3.okText || "Confirm", c.innerHTML = e3.cancelText || "Cancel", o2.classList.add(a), c.classList.add(a), o2.classList.add(i), c.classList.add("cdx-notify__button--cancel"), f && "function" == typeof f && (c.addEventListener("click", f), u.addEventListener("click", f)), d && "function" == typeof d && o2.addEventListener("click", d), o2.addEventListener("click", t3.remove.bind(t3)), c.addEventListener("click", t3.remove.bind(t3)), n3.appendChild(o2), n3.appendChild(c), t3.appendChild(n3), t3;
            }, prompt: function(e3) {
              var t3 = l(e3), n3 = document.createElement("div"), o2 = document.createElement("button"), c = document.createElement("input"), u = t3.querySelector("." + r), f = e3.cancelHandler, d = e3.okHandler;
              return n3.classList.add(s), o2.innerHTML = e3.okText || "Ok", o2.classList.add(a), o2.classList.add(i), c.classList.add("cdx-notify__input"), e3.placeholder && c.setAttribute("placeholder", e3.placeholder), e3.default && (c.value = e3.default), e3.inputType && (c.type = e3.inputType), f && "function" == typeof f && u.addEventListener("click", f), d && "function" == typeof d && o2.addEventListener("click", function() {
                d(c.value);
              }), o2.addEventListener("click", t3.remove.bind(t3)), n3.appendChild(c), n3.appendChild(o2), t3.appendChild(n3), t3;
            }, getWrapper: function() {
              var e3 = document.createElement("DIV");
              return e3.classList.add("cdx-notifies"), e3;
            } });
          }]);
        }, function(e, t, n) {
          var o, r;
          void 0 === (r = "function" == typeof (o = function() {
            function e2(e3) {
              var t3 = e3.tags;
              if (!Object.keys(t3).map(function(e4) {
                return typeof t3[e4];
              }).every(function(e4) {
                return "object" === e4 || "boolean" === e4 || "function" === e4;
              }))
                throw new Error("The configuration was invalid");
              this.config = e3;
            }
            var t2 = ["P", "LI", "TD", "TH", "DIV", "H1", "H2", "H3", "H4", "H5", "H6", "PRE"];
            function n2(e3) {
              return -1 !== t2.indexOf(e3.nodeName);
            }
            var o2 = ["A", "B", "STRONG", "I", "EM", "SUB", "SUP", "U", "STRIKE"];
            function r2(e3) {
              return -1 !== o2.indexOf(e3.nodeName);
            }
            function i(e3, t3, n3) {
              return "function" == typeof e3.tags[t3] ? e3.tags[t3](n3) : e3.tags[t3];
            }
            function a(e3, t3) {
              return void 0 === t3 || "boolean" == typeof t3 && !t3;
            }
            function s(e3, t3, n3) {
              var o3 = e3.name.toLowerCase();
              return true !== t3 && ("function" == typeof t3[o3] ? !t3[o3](e3.value, n3) : void 0 === t3[o3] || false === t3[o3] || "string" == typeof t3[o3] && t3[o3] !== e3.value);
            }
            return e2.prototype.clean = function(e3) {
              const t3 = document.implementation.createHTMLDocument(), n3 = t3.createElement("div");
              return n3.innerHTML = e3, this._sanitize(t3, n3), n3.innerHTML;
            }, e2.prototype._sanitize = function(e3, t3) {
              var o3 = function(e4, t4) {
                return e4.createTreeWalker(t4, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT, null, false);
              }(e3, t3), l = o3.firstChild();
              if (l)
                do {
                  if (l.nodeType !== Node.TEXT_NODE) {
                    if (l.nodeType === Node.COMMENT_NODE) {
                      t3.removeChild(l), this._sanitize(e3, t3);
                      break;
                    }
                    var c, u = r2(l);
                    u && (c = Array.prototype.some.call(l.childNodes, n2));
                    var f = !!t3.parentNode, d = n2(t3) && n2(l) && f, p = l.nodeName.toLowerCase(), h = i(this.config, p, l);
                    if (u && c || a(0, h) || !this.config.keepNestedBlockElements && d) {
                      if ("SCRIPT" !== l.nodeName && "STYLE" !== l.nodeName)
                        for (; l.childNodes.length > 0; )
                          t3.insertBefore(l.childNodes[0], l);
                      t3.removeChild(l), this._sanitize(e3, t3);
                      break;
                    }
                    for (var v = 0; v < l.attributes.length; v += 1) {
                      var g = l.attributes[v];
                      s(g, h, l) && (l.removeAttribute(g.name), v -= 1);
                    }
                    this._sanitize(e3, l);
                  } else if ("" === l.data.trim() && (l.previousElementSibling && n2(l.previousElementSibling) || l.nextElementSibling && n2(l.nextElementSibling))) {
                    t3.removeChild(l), this._sanitize(e3, t3);
                    break;
                  }
                } while (l = o3.nextSibling());
            }, e2;
          }) ? o.call(t, n, t, e) : o) || (e.exports = r);
        }, function(e, t, n) {
          window, e.exports = function(e2) {
            var t2 = {};
            function n2(o) {
              if (t2[o])
                return t2[o].exports;
              var r = t2[o] = { i: o, l: false, exports: {} };
              return e2[o].call(r.exports, r, r.exports, n2), r.l = true, r.exports;
            }
            return n2.m = e2, n2.c = t2, n2.d = function(e3, t3, o) {
              n2.o(e3, t3) || Object.defineProperty(e3, t3, { enumerable: true, get: o });
            }, n2.r = function(e3) {
              "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
            }, n2.t = function(e3, t3) {
              if (1 & t3 && (e3 = n2(e3)), 8 & t3)
                return e3;
              if (4 & t3 && "object" == typeof e3 && e3 && e3.__esModule)
                return e3;
              var o = /* @__PURE__ */ Object.create(null);
              if (n2.r(o), Object.defineProperty(o, "default", { enumerable: true, value: e3 }), 2 & t3 && "string" != typeof e3)
                for (var r in e3)
                  n2.d(o, r, function(t4) {
                    return e3[t4];
                  }.bind(null, r));
              return o;
            }, n2.n = function(e3) {
              var t3 = e3 && e3.__esModule ? function() {
                return e3.default;
              } : function() {
                return e3;
              };
              return n2.d(t3, "a", t3), t3;
            }, n2.o = function(e3, t3) {
              return Object.prototype.hasOwnProperty.call(e3, t3);
            }, n2.p = "", n2(n2.s = 0);
          }([function(e2, t2, n2) {
            e2.exports = n2(1);
          }, function(e2, t2, n2) {
            "use strict";
            n2.r(t2), n2.d(t2, "default", function() {
              return o;
            });
            class o {
              constructor() {
                this.nodes = { wrapper: null, content: null }, this.showed = false, this.offsetTop = 10, this.offsetLeft = 10, this.offsetRight = 10, this.hidingDelay = 0, this.handleWindowScroll = () => {
                  this.showed && this.hide(true);
                }, this.loadStyles(), this.prepare(), window.addEventListener("scroll", this.handleWindowScroll, { passive: true });
              }
              get CSS() {
                return { tooltip: "ct", tooltipContent: "ct__content", tooltipShown: "ct--shown", placement: { left: "ct--left", bottom: "ct--bottom", right: "ct--right", top: "ct--top" } };
              }
              show(e3, t3, n3) {
                this.nodes.wrapper || this.prepare(), this.hidingTimeout && clearTimeout(this.hidingTimeout);
                const o2 = Object.assign({ placement: "bottom", marginTop: 0, marginLeft: 0, marginRight: 0, marginBottom: 0, delay: 70, hidingDelay: 0 }, n3);
                if (o2.hidingDelay && (this.hidingDelay = o2.hidingDelay), this.nodes.content.innerHTML = "", "string" == typeof t3)
                  this.nodes.content.appendChild(document.createTextNode(t3));
                else {
                  if (!(t3 instanceof Node))
                    throw Error("[CodeX Tooltip] Wrong type of \xABcontent\xBB passed. It should be an instance of Node or String. But " + typeof t3 + " given.");
                  this.nodes.content.appendChild(t3);
                }
                switch (this.nodes.wrapper.classList.remove(...Object.values(this.CSS.placement)), o2.placement) {
                  case "top":
                    this.placeTop(e3, o2);
                    break;
                  case "left":
                    this.placeLeft(e3, o2);
                    break;
                  case "right":
                    this.placeRight(e3, o2);
                    break;
                  case "bottom":
                  default:
                    this.placeBottom(e3, o2);
                }
                o2 && o2.delay ? this.showingTimeout = setTimeout(() => {
                  this.nodes.wrapper.classList.add(this.CSS.tooltipShown), this.showed = true;
                }, o2.delay) : (this.nodes.wrapper.classList.add(this.CSS.tooltipShown), this.showed = true);
              }
              hide(e3 = false) {
                if (this.hidingDelay && !e3)
                  return this.hidingTimeout && clearTimeout(this.hidingTimeout), void (this.hidingTimeout = setTimeout(() => {
                    this.hide(true);
                  }, this.hidingDelay));
                this.nodes.wrapper.classList.remove(this.CSS.tooltipShown), this.showed = false, this.showingTimeout && clearTimeout(this.showingTimeout);
              }
              onHover(e3, t3, n3) {
                e3.addEventListener("mouseenter", () => {
                  this.show(e3, t3, n3);
                }), e3.addEventListener("mouseleave", () => {
                  this.hide();
                });
              }
              destroy() {
                this.nodes.wrapper.remove(), window.removeEventListener("scroll", this.handleWindowScroll);
              }
              prepare() {
                this.nodes.wrapper = this.make("div", this.CSS.tooltip), this.nodes.content = this.make("div", this.CSS.tooltipContent), this.append(this.nodes.wrapper, this.nodes.content), this.append(document.body, this.nodes.wrapper);
              }
              loadStyles() {
                const e3 = "codex-tooltips-style";
                if (document.getElementById(e3))
                  return;
                const t3 = n2(2), o2 = this.make("style", null, { textContent: t3.toString(), id: e3 });
                this.prepend(document.head, o2);
              }
              placeBottom(e3, t3) {
                const n3 = e3.getBoundingClientRect(), o2 = n3.left + e3.clientWidth / 2 - this.nodes.wrapper.offsetWidth / 2, r = n3.bottom + window.pageYOffset + this.offsetTop + t3.marginTop;
                this.applyPlacement("bottom", o2, r);
              }
              placeTop(e3, t3) {
                const n3 = e3.getBoundingClientRect(), o2 = n3.left + e3.clientWidth / 2 - this.nodes.wrapper.offsetWidth / 2, r = n3.top + window.pageYOffset - this.nodes.wrapper.clientHeight - this.offsetTop;
                this.applyPlacement("top", o2, r);
              }
              placeLeft(e3, t3) {
                const n3 = e3.getBoundingClientRect(), o2 = n3.left - this.nodes.wrapper.offsetWidth - this.offsetLeft - t3.marginLeft, r = n3.top + window.pageYOffset + e3.clientHeight / 2 - this.nodes.wrapper.offsetHeight / 2;
                this.applyPlacement("left", o2, r);
              }
              placeRight(e3, t3) {
                const n3 = e3.getBoundingClientRect(), o2 = n3.right + this.offsetRight + t3.marginRight, r = n3.top + window.pageYOffset + e3.clientHeight / 2 - this.nodes.wrapper.offsetHeight / 2;
                this.applyPlacement("right", o2, r);
              }
              applyPlacement(e3, t3, n3) {
                this.nodes.wrapper.classList.add(this.CSS.placement[e3]), this.nodes.wrapper.style.left = t3 + "px", this.nodes.wrapper.style.top = n3 + "px";
              }
              make(e3, t3 = null, n3 = {}) {
                const o2 = document.createElement(e3);
                Array.isArray(t3) ? o2.classList.add(...t3) : t3 && o2.classList.add(t3);
                for (const e4 in n3)
                  n3.hasOwnProperty(e4) && (o2[e4] = n3[e4]);
                return o2;
              }
              append(e3, t3) {
                Array.isArray(t3) ? t3.forEach((t4) => e3.appendChild(t4)) : e3.appendChild(t3);
              }
              prepend(e3, t3) {
                Array.isArray(t3) ? (t3 = t3.reverse()).forEach((t4) => e3.prepend(t4)) : e3.prepend(t3);
              }
            }
          }, function(e2, t2) {
            e2.exports = `.ct{z-index:999;opacity:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;-webkit-transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1),-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);will-change:opacity,top,left;-webkit-box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);border-radius:9px}.ct,.ct:before{position:absolute;top:0;left:0}.ct:before{content:"";bottom:0;right:0;background-color:#1d202b;z-index:-1;border-radius:4px}@supports(-webkit-mask-box-image:url("")){.ct:before{border-radius:0;-webkit-mask-box-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M10.71 0h2.58c3.02 0 4.64.42 6.1 1.2a8.18 8.18 0 013.4 3.4C23.6 6.07 24 7.7 24 10.71v2.58c0 3.02-.42 4.64-1.2 6.1a8.18 8.18 0 01-3.4 3.4c-1.47.8-3.1 1.21-6.11 1.21H10.7c-3.02 0-4.64-.42-6.1-1.2a8.18 8.18 0 01-3.4-3.4C.4 17.93 0 16.3 0 13.29V10.7c0-3.02.42-4.64 1.2-6.1a8.18 8.18 0 013.4-3.4C6.07.4 7.7 0 10.71 0z"/></svg>') 48% 41% 37.9% 53.3%}}@media (--mobile){.ct{display:none}}.ct__content{padding:6px 10px;color:#cdd1e0;font-size:12px;text-align:center;letter-spacing:.02em;line-height:1em}.ct:after{content:"";width:8px;height:8px;position:absolute;background-color:#1d202b;z-index:-1}.ct--bottom{-webkit-transform:translateY(5px);transform:translateY(5px)}.ct--bottom:after{top:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--top{-webkit-transform:translateY(-5px);transform:translateY(-5px)}.ct--top:after{top:auto;bottom:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--left{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.ct--left:after{top:50%;left:auto;right:0;-webkit-transform:translate(41.6%,-50%) rotate(-45deg);transform:translate(41.6%,-50%) rotate(-45deg)}.ct--right{-webkit-transform:translateX(5px);transform:translateX(5px)}.ct--right:after{top:50%;left:0;-webkit-transform:translate(-41.6%,-50%) rotate(-45deg);transform:translate(-41.6%,-50%) rotate(-45deg)}.ct--shown{opacity:1;-webkit-transform:none;transform:none}`;
          }]).default;
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(19), n(8), n(25)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (f = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), s = u(s), l = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = f(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(l), c = u(c);
            var d = function() {
              function e2(t2, n2) {
                (0, r2.default)(this, e2), this.cursor = -1, this.items = [], this.items = t2 || [], this.focusedCssClass = n2;
              }
              return (0, i2.default)(e2, [{ key: "currentItem", get: function() {
                return -1 === this.cursor ? null : this.items[this.cursor];
              } }, { key: "setCursor", value: function(e3) {
                e3 < this.items.length && e3 >= -1 && (this.dropCursor(), this.cursor = e3, this.items[this.cursor].classList.add(this.focusedCssClass));
              } }, { key: "setItems", value: function(e3) {
                this.items = e3;
              } }, { key: "next", value: function() {
                this.cursor = this.leafNodesAndReturnIndex(e2.directions.RIGHT);
              } }, { key: "previous", value: function() {
                this.cursor = this.leafNodesAndReturnIndex(e2.directions.LEFT);
              } }, { key: "dropCursor", value: function() {
                -1 !== this.cursor && (this.items[this.cursor].classList.remove(this.focusedCssClass), this.cursor = -1);
              } }, { key: "leafNodesAndReturnIndex", value: function(t2) {
                var n2 = this;
                if (0 === this.items.length)
                  return this.cursor;
                var o3 = this.cursor;
                return -1 === o3 ? o3 = t2 === e2.directions.RIGHT ? -1 : 0 : this.items[o3].classList.remove(this.focusedCssClass), o3 = t2 === e2.directions.RIGHT ? (o3 + 1) % this.items.length : (this.items.length + o3 - 1) % this.items.length, s.default.canSetCaret(this.items[o3]) && l.delay(function() {
                  return c.default.setCursor(n2.items[o3]);
                }, 50)(), this.items[o3].classList.add(this.focusedCssClass), o3;
              } }]), e2;
            }();
            o2.default = d, d.displayName = "DomIterator", d.directions = { RIGHT: "right", LEFT: "left" }, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(8), n(19), n(61)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (f = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), s = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = f(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(s), l = u(l);
            var d = function() {
              function e2(t2) {
                (0, r2.default)(this, e2), this.blocks = [], this.workingArea = t2;
              }
              return (0, i2.default)(e2, [{ key: "length", get: function() {
                return this.blocks.length;
              } }, { key: "array", get: function() {
                return this.blocks;
              } }, { key: "nodes", get: function() {
                return s.array(this.workingArea.children);
              } }, { key: "push", value: function(e3) {
                this.blocks.push(e3), this.insertToDOM(e3);
              } }, { key: "swap", value: function(e3, t2) {
                var n2 = this.blocks[t2];
                l.default.swap(this.blocks[e3].holder, n2.holder), this.blocks[t2] = this.blocks[e3], this.blocks[e3] = n2;
              } }, { key: "move", value: function(e3, t2) {
                var n2 = this.blocks.splice(t2, 1)[0], o3 = e3 - 1, r3 = Math.max(0, o3), i3 = this.blocks[r3];
                e3 > 0 ? this.insertToDOM(n2, "afterend", i3) : this.insertToDOM(n2, "beforebegin", i3), this.blocks.splice(e3, 0, n2);
                var a2 = this.composeBlockEvent("move", { fromIndex: t2, toIndex: e3 });
                n2.call(c.BlockToolAPI.MOVED, a2);
              } }, { key: "insert", value: function(e3, t2) {
                var n2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                if (this.length) {
                  e3 > this.length && (e3 = this.length), n2 && (this.blocks[e3].holder.remove(), this.blocks[e3].call(c.BlockToolAPI.REMOVED));
                  var o3 = n2 ? 1 : 0;
                  if (this.blocks.splice(e3, o3, t2), e3 > 0) {
                    var r3 = this.blocks[e3 - 1];
                    this.insertToDOM(t2, "afterend", r3);
                  } else {
                    var i3 = this.blocks[e3 + 1];
                    i3 ? this.insertToDOM(t2, "beforebegin", i3) : this.insertToDOM(t2);
                  }
                } else
                  this.push(t2);
              } }, { key: "remove", value: function(e3) {
                isNaN(e3) && (e3 = this.length - 1), this.blocks[e3].holder.remove(), this.blocks[e3].call(c.BlockToolAPI.REMOVED), this.blocks.splice(e3, 1);
              } }, { key: "removeAll", value: function() {
                this.workingArea.innerHTML = "", this.blocks.forEach(function(e3) {
                  return e3.call(c.BlockToolAPI.REMOVED);
                }), this.blocks.length = 0;
              } }, { key: "insertAfter", value: function(e3, t2) {
                var n2 = this.blocks.indexOf(e3);
                this.insert(n2 + 1, t2);
              } }, { key: "get", value: function(e3) {
                return this.blocks[e3];
              } }, { key: "indexOf", value: function(e3) {
                return this.blocks.indexOf(e3);
              } }, { key: "insertToDOM", value: function(e3, t2, n2) {
                t2 ? n2.holder.insertAdjacentElement(t2, e3.holder) : this.workingArea.appendChild(e3.holder), e3.call(c.BlockToolAPI.RENDERED);
              } }, { key: "composeBlockEvent", value: function(e3, t2) {
                return new CustomEvent(e3, { detail: t2 });
              } }], [{ key: "set", value: function(e3, t2, n2) {
                return isNaN(Number(t2)) ? (Reflect.set(e3, t2, n2), true) : (e3.insert(+t2, n2), true);
              } }, { key: "get", value: function(e3, t2) {
                return isNaN(Number(t2)) ? Reflect.get(e3, t2) : e3.get(+t2);
              } }]), e2;
            }();
            o2.default = d, d.displayName = "Blocks", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t], void 0 === (i = "function" == typeof (o = function(e2) {
            "use strict";
            var t2;
            Object.defineProperty(e2, "__esModule", { value: true }), e2.BlockMutationType = void 0, e2.BlockMutationType = t2, function(e3) {
              e3.Added = "block-added", e3.Removed = "block-removed", e3.Moved = "block-moved", e3.Changed = "block-changed";
            }(t2 || (e2.BlockMutationType = t2 = {}));
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          window, e.exports = function(e2) {
            var t2 = {};
            function n2(o) {
              if (t2[o])
                return t2[o].exports;
              var r = t2[o] = { i: o, l: false, exports: {} };
              return e2[o].call(r.exports, r, r.exports, n2), r.l = true, r.exports;
            }
            return n2.m = e2, n2.c = t2, n2.d = function(e3, t3, o) {
              n2.o(e3, t3) || Object.defineProperty(e3, t3, { enumerable: true, get: o });
            }, n2.r = function(e3) {
              "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
            }, n2.t = function(e3, t3) {
              if (1 & t3 && (e3 = n2(e3)), 8 & t3)
                return e3;
              if (4 & t3 && "object" == typeof e3 && e3 && e3.__esModule)
                return e3;
              var o = /* @__PURE__ */ Object.create(null);
              if (n2.r(o), Object.defineProperty(o, "default", { enumerable: true, value: e3 }), 2 & t3 && "string" != typeof e3)
                for (var r in e3)
                  n2.d(o, r, function(t4) {
                    return e3[t4];
                  }.bind(null, r));
              return o;
            }, n2.n = function(e3) {
              var t3 = e3 && e3.__esModule ? function() {
                return e3.default;
              } : function() {
                return e3;
              };
              return n2.d(t3, "a", t3), t3;
            }, n2.o = function(e3, t3) {
              return Object.prototype.hasOwnProperty.call(e3, t3);
            }, n2.p = "", n2(n2.s = 0);
          }([function(e2, t2, n2) {
            "use strict";
            function o(e3, t3) {
              for (var n3 = 0; n3 < t3.length; n3++) {
                var o2 = t3[n3];
                o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
              }
            }
            function r(e3, t3, n3) {
              return t3 && o(e3.prototype, t3), n3 && o(e3, n3), e3;
            }
            n2.r(t2);
            var i = function() {
              function e3(t3) {
                var n3 = this;
                !function(e4, t4) {
                  if (!(e4 instanceof t4))
                    throw new TypeError("Cannot call a class as a function");
                }(this, e3), this.commands = {}, this.keys = {}, this.name = t3.name, this.parseShortcutName(t3.name), this.element = t3.on, this.callback = t3.callback, this.executeShortcut = function(e4) {
                  n3.execute(e4);
                }, this.element.addEventListener("keydown", this.executeShortcut, false);
              }
              return r(e3, null, [{ key: "supportedCommands", get: function() {
                return { SHIFT: ["SHIFT"], CMD: ["CMD", "CONTROL", "COMMAND", "WINDOWS", "CTRL"], ALT: ["ALT", "OPTION"] };
              } }, { key: "keyCodes", get: function() {
                return { 0: 48, 1: 49, 2: 50, 3: 51, 4: 52, 5: 53, 6: 54, 7: 55, 8: 56, 9: 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, BACKSPACE: 8, ENTER: 13, ESCAPE: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, INSERT: 45, DELETE: 46, ".": 190 };
              } }]), r(e3, [{ key: "parseShortcutName", value: function(t3) {
                t3 = t3.split("+");
                for (var n3 = 0; n3 < t3.length; n3++) {
                  t3[n3] = t3[n3].toUpperCase();
                  var o2 = false;
                  for (var r2 in e3.supportedCommands)
                    if (e3.supportedCommands[r2].includes(t3[n3])) {
                      o2 = this.commands[r2] = true;
                      break;
                    }
                  o2 || (this.keys[t3[n3]] = true);
                }
                for (var i2 in e3.supportedCommands)
                  this.commands[i2] || (this.commands[i2] = false);
              } }, { key: "execute", value: function(t3) {
                var n3, o2 = { CMD: t3.ctrlKey || t3.metaKey, SHIFT: t3.shiftKey, ALT: t3.altKey }, r2 = true;
                for (n3 in this.commands)
                  this.commands[n3] !== o2[n3] && (r2 = false);
                var i2, a = true;
                for (i2 in this.keys)
                  a = a && t3.keyCode === e3.keyCodes[i2];
                r2 && a && this.callback(t3);
              } }, { key: "remove", value: function() {
                this.element.removeEventListener("keydown", this.executeShortcut);
              } }]), e3;
            }();
            t2.default = i;
          }]).default;
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(20), n(21), n(2), n(3), n(114), n(5), n(6), n(4), n(7), n(8), n(61), n(116), n(82), n(85), n(54), n(68)], void 0 === (i = "function" == typeof (o = function(e2, t2, o2, r2, i2, s, l, c, u, f, d, p, h, v, g, y, k) {
            "use strict";
            var b = n(1);
            function m(e3) {
              if ("function" != typeof WeakMap)
                return null;
              var t3 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (m = function(e4) {
                return e4 ? n2 : t3;
              })(e3);
            }
            function w(e3, t3) {
              if (!t3 && e3 && e3.__esModule)
                return e3;
              if (null === e3 || "object" !== a(e3) && "function" != typeof e3)
                return { default: e3 };
              var n2 = m(t3);
              if (n2 && n2.has(e3))
                return n2.get(e3);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e3)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e3, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e3, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e3[i3];
                }
              return o3.default = e3, n2 && n2.set(e3, o3), o3;
            }
            function x(e3) {
              var t3 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e4) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, u.default)(e3);
                if (t3) {
                  var r3 = (0, u.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, c.default)(this, n2);
              };
            }
            Object.defineProperty(e2, "__esModule", { value: true }), e2.default = e2.ToolboxEvent = void 0, t2 = b(t2), o2 = b(o2), r2 = b(r2), i2 = b(i2), s = b(s), l = b(l), c = b(c), u = b(u), f = b(f), d = w(d), h = b(h), v = b(v), g = w(g), y = b(y);
            var C, S = function(e3, t3, n2, o3) {
              var r3, i3 = arguments.length, a2 = i3 < 3 ? t3 : null === o3 ? o3 = Object.getOwnPropertyDescriptor(t3, n2) : o3;
              if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, f.default)(Reflect)) && "function" == typeof Reflect.decorate)
                a2 = Reflect.decorate(e3, t3, n2, o3);
              else
                for (var s2 = e3.length - 1; s2 >= 0; s2--)
                  (r3 = e3[s2]) && (a2 = (i3 < 3 ? r3(a2) : i3 > 3 ? r3(t3, n2, a2) : r3(t3, n2)) || a2);
              return i3 > 3 && a2 && Object.defineProperty(t3, n2, a2), a2;
            };
            e2.ToolboxEvent = C, function(e3) {
              e3.Opened = "toolbox-opened", e3.Closed = "toolbox-closed", e3.BlockAdded = "toolbox-block-added";
            }(C || (e2.ToolboxEvent = C = {}));
            var T = function(e3) {
              (0, l.default)(c2, e3);
              var n2, a2 = x(c2);
              function c2(e4) {
                var t3, n3 = e4.api, o3 = e4.tools, i3 = e4.i18nLabels;
                return (0, r2.default)(this, c2), (t3 = a2.call(this)).opened = false, t3.nodes = { toolbox: null }, t3.onOverlayClicked = function() {
                  t3.close();
                }, t3.api = n3, t3.tools = o3, t3.i18nLabels = i3, t3;
              }
              return (0, i2.default)(c2, [{ key: "isEmpty", get: function() {
                return 0 === this.toolsToBeDisplayed.length;
              } }, { key: "make", value: function() {
                return this.popover = new g.default({ scopeElement: this.api.ui.nodes.redactor, className: c2.CSS.toolbox, searchable: true, filterLabel: this.i18nLabels.filter, nothingFoundLabel: this.i18nLabels.nothingFound, items: this.toolboxItemsToBeDisplayed }), this.popover.on(g.PopoverEvent.OverlayClicked, this.onOverlayClicked), this.enableShortcuts(), this.nodes.toolbox = this.popover.getElement(), this.nodes.toolbox;
              } }, { key: "hasFocus", value: function() {
                var e4;
                return null === (e4 = this.popover) || void 0 === e4 ? void 0 : e4.hasFocus();
              } }, { key: "destroy", value: function() {
                var e4;
                (0, s.default)((0, u.default)(c2.prototype), "destroy", this).call(this), this.nodes && this.nodes.toolbox && (this.nodes.toolbox.remove(), this.nodes.toolbox = null), this.removeAllShortcuts(), null === (e4 = this.popover) || void 0 === e4 || e4.off(g.PopoverEvent.OverlayClicked, this.onOverlayClicked);
              } }, { key: "toolButtonActivated", value: function(e4, t3) {
                this.insertNewBlock(e4, t3);
              } }, { key: "open", value: function() {
                var e4;
                this.isEmpty || (null === (e4 = this.popover) || void 0 === e4 || e4.show(), this.opened = true, this.emit(C.Opened));
              } }, { key: "close", value: function() {
                var e4;
                null === (e4 = this.popover) || void 0 === e4 || e4.hide(), this.opened = false, this.emit(C.Closed);
              } }, { key: "toggle", value: function() {
                this.opened ? this.close() : this.open();
              } }, { key: "toolsToBeDisplayed", get: function() {
                var e4 = [];
                return this.tools.forEach(function(t3) {
                  t3.toolbox && e4.push(t3);
                }), e4;
              } }, { key: "toolboxItemsToBeDisplayed", get: function() {
                var e4 = this, t3 = function(t4, n3) {
                  return { icon: t4.icon, title: y.default.t(k.I18nInternalNS.toolNames, t4.title || d.capitalize(n3.name)), name: n3.name, onActivate: function() {
                    e4.toolButtonActivated(n3.name, t4.data);
                  }, secondaryLabel: n3.shortcut ? d.beautifyShortcut(n3.shortcut) : "" };
                };
                return this.toolsToBeDisplayed.reduce(function(e5, n3) {
                  return Array.isArray(n3.toolbox) ? n3.toolbox.forEach(function(o3) {
                    e5.push(t3(o3, n3));
                  }) : void 0 !== n3.toolbox && e5.push(t3(n3.toolbox, n3)), e5;
                }, []);
              } }, { key: "enableShortcuts", value: function() {
                var e4 = this;
                this.toolsToBeDisplayed.forEach(function(t3) {
                  var n3 = t3.shortcut;
                  n3 && e4.enableShortcutForTool(t3.name, n3);
                });
              } }, { key: "enableShortcutForTool", value: function(e4, t3) {
                var n3 = this;
                h.default.add({ name: t3, on: this.api.ui.nodes.redactor, handler: function(t4) {
                  t4.preventDefault(), n3.insertNewBlock(e4);
                } });
              } }, { key: "removeAllShortcuts", value: function() {
                var e4 = this;
                this.toolsToBeDisplayed.forEach(function(t3) {
                  var n3 = t3.shortcut;
                  n3 && h.default.remove(e4.api.ui.nodes.redactor, n3);
                });
              } }, { key: "insertNewBlock", value: (n2 = (0, o2.default)(t2.default.mark(function e4(n3, o3) {
                var r3, i3, a3, s2, l2, c3;
                return t2.default.wrap(function(e5) {
                  for (; ; )
                    switch (e5.prev = e5.next) {
                      case 0:
                        if (r3 = this.api.blocks.getCurrentBlockIndex(), i3 = this.api.blocks.getBlockByIndex(r3)) {
                          e5.next = 4;
                          break;
                        }
                        return e5.abrupt("return");
                      case 4:
                        if (a3 = i3.isEmpty ? r3 : r3 + 1, !o3) {
                          e5.next = 10;
                          break;
                        }
                        return e5.next = 8, this.api.blocks.composeBlockData(n3);
                      case 8:
                        l2 = e5.sent, s2 = Object.assign(l2, o3);
                      case 10:
                        (c3 = this.api.blocks.insert(n3, s2, void 0, a3, void 0, i3.isEmpty)).call(p.BlockToolAPI.APPEND_CALLBACK), this.api.caret.setToBlock(a3), this.emit(C.BlockAdded, { block: c3 }), this.api.toolbar.close();
                      case 15:
                      case "end":
                        return e5.stop();
                    }
                }, e4, this);
              })), function(e4, t3) {
                return n2.apply(this, arguments);
              }) }], [{ key: "CSS", get: function() {
                return { toolbox: "ce-toolbox" };
              } }]), c2;
            }(v.default);
            e2.default = T, T.displayName = "Toolbox", S([d.cacheable], T.prototype, "toolsToBeDisplayed", null), S([d.cacheable], T.prototype, "toolboxItemsToBeDisplayed", null);
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(19), n(112), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l) {
            "use strict";
            var c = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = c(r2), i2 = c(i2), a = c(a), s = c(s);
            var u = function() {
              function e2(t2) {
                var n2 = t2.items, o3 = t2.onSearch, i3 = t2.placeholder;
                (0, r2.default)(this, e2), this.listeners = new s.default(), this.items = n2, this.onSearch = o3, this.render(i3);
              }
              return (0, i2.default)(e2, [{ key: "getElement", value: function() {
                return this.wrapper;
              } }, { key: "focus", value: function() {
                this.input.focus();
              } }, { key: "clear", value: function() {
                this.input.value = "", this.searchQuery = "", this.onSearch(this.foundItems);
              } }, { key: "destroy", value: function() {
                this.listeners.removeAll();
              } }, { key: "render", value: function(t2) {
                var n2 = this;
                this.wrapper = a.default.make("div", e2.CSS.wrapper);
                var o3 = a.default.make("div", e2.CSS.icon, { innerHTML: l.IconSearch });
                this.input = a.default.make("input", e2.CSS.input, { placeholder: t2 }), this.wrapper.appendChild(o3), this.wrapper.appendChild(this.input), this.listeners.on(this.input, "input", function() {
                  n2.searchQuery = n2.input.value, n2.onSearch(n2.foundItems);
                });
              } }, { key: "foundItems", get: function() {
                var e3 = this;
                return this.items.filter(function(t2) {
                  return e3.checkItem(t2);
                });
              } }, { key: "checkItem", value: function(e3) {
                var t2, n2 = (null === (t2 = e3.title) || void 0 === t2 ? void 0 : t2.toLowerCase()) || "", o3 = this.searchQuery.toLowerCase();
                return n2.includes(o3);
              } }], [{ key: "CSS", get: function() {
                return { wrapper: "cdx-search-field", icon: "cdx-search-field__icon", input: "cdx-search-field__input" };
              } }]), e2;
            }();
            o2.default = u, u.displayName = "SearchInput", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(8)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2);
            var l = function() {
              function e2() {
                (0, r2.default)(this, e2);
              }
              return (0, i2.default)(e2, [{ key: "lock", value: function() {
                a.isIosDevice ? this.lockHard() : document.body.classList.add(e2.CSS.scrollLocked);
              } }, { key: "unlock", value: function() {
                a.isIosDevice ? this.unlockHard() : document.body.classList.remove(e2.CSS.scrollLocked);
              } }, { key: "lockHard", value: function() {
                this.scrollPosition = window.pageYOffset, document.documentElement.style.setProperty("--window-scroll-offset", "".concat(this.scrollPosition, "px")), document.body.classList.add(e2.CSS.scrollLockedHard);
              } }, { key: "unlockHard", value: function() {
                document.body.classList.remove(e2.CSS.scrollLockedHard), null !== this.scrollPosition && window.scrollTo(0, this.scrollPosition), this.scrollPosition = null;
              } }]), e2;
            }();
            o2.default = l, l.displayName = "ScrollLocker", l.CSS = { scrollLocked: "ce-scroll-locked", scrollLockedHard: "ce-scroll-locked--hard" }, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t], void 0 === (i = "function" == typeof (o = function(e2) {
            "use strict";
            Object.defineProperty(e2, "__esModule", { value: true }), e2.resolveAliases = function(e3, t2) {
              var n2 = {};
              return Object.keys(e3).forEach(function(o2) {
                var r2 = t2[o2];
                void 0 !== r2 ? n2[r2] = e3[o2] : n2[o2] = e3[o2];
              }), n2;
            };
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          window, e.exports = function(e2) {
            var t2 = {};
            function n2(o) {
              if (t2[o])
                return t2[o].exports;
              var r = t2[o] = { i: o, l: false, exports: {} };
              return e2[o].call(r.exports, r, r.exports, n2), r.l = true, r.exports;
            }
            return n2.m = e2, n2.c = t2, n2.d = function(e3, t3, o) {
              n2.o(e3, t3) || Object.defineProperty(e3, t3, { enumerable: true, get: o });
            }, n2.r = function(e3) {
              "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e3, "__esModule", { value: true });
            }, n2.t = function(e3, t3) {
              if (1 & t3 && (e3 = n2(e3)), 8 & t3)
                return e3;
              if (4 & t3 && "object" == typeof e3 && e3 && e3.__esModule)
                return e3;
              var o = /* @__PURE__ */ Object.create(null);
              if (n2.r(o), Object.defineProperty(o, "default", { enumerable: true, value: e3 }), 2 & t3 && "string" != typeof e3)
                for (var r in e3)
                  n2.d(o, r, function(t4) {
                    return e3[t4];
                  }.bind(null, r));
              return o;
            }, n2.n = function(e3) {
              var t3 = e3 && e3.__esModule ? function() {
                return e3.default;
              } : function() {
                return e3;
              };
              return n2.d(t3, "a", t3), t3;
            }, n2.o = function(e3, t3) {
              return Object.prototype.hasOwnProperty.call(e3, t3);
            }, n2.p = "/", n2(n2.s = 4);
          }([function(e2, t2, n2) {
            var o = n2(1), r = n2(2);
            "string" == typeof (r = r.__esModule ? r.default : r) && (r = [[e2.i, r, ""]]), o(r, { insert: "head", singleton: false }), e2.exports = r.locals || {};
          }, function(e2, t2, n2) {
            "use strict";
            var o, r = function() {
              var e3 = {};
              return function(t3) {
                if (void 0 === e3[t3]) {
                  var n3 = document.querySelector(t3);
                  if (window.HTMLIFrameElement && n3 instanceof window.HTMLIFrameElement)
                    try {
                      n3 = n3.contentDocument.head;
                    } catch (e4) {
                      n3 = null;
                    }
                  e3[t3] = n3;
                }
                return e3[t3];
              };
            }(), i = [];
            function a(e3) {
              for (var t3 = -1, n3 = 0; n3 < i.length; n3++)
                if (i[n3].identifier === e3) {
                  t3 = n3;
                  break;
                }
              return t3;
            }
            function s(e3, t3) {
              for (var n3 = {}, o2 = [], r2 = 0; r2 < e3.length; r2++) {
                var s2 = e3[r2], l2 = t3.base ? s2[0] + t3.base : s2[0], c2 = n3[l2] || 0, u2 = "".concat(l2, " ").concat(c2);
                n3[l2] = c2 + 1;
                var f2 = a(u2), d2 = { css: s2[1], media: s2[2], sourceMap: s2[3] };
                -1 !== f2 ? (i[f2].references++, i[f2].updater(d2)) : i.push({ identifier: u2, updater: v(d2, t3), references: 1 }), o2.push(u2);
              }
              return o2;
            }
            function l(e3) {
              var t3 = document.createElement("style"), o2 = e3.attributes || {};
              if (void 0 === o2.nonce) {
                var i2 = n2.nc;
                i2 && (o2.nonce = i2);
              }
              if (Object.keys(o2).forEach(function(e4) {
                t3.setAttribute(e4, o2[e4]);
              }), "function" == typeof e3.insert)
                e3.insert(t3);
              else {
                var a2 = r(e3.insert || "head");
                if (!a2)
                  throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
                a2.appendChild(t3);
              }
              return t3;
            }
            var c, u = (c = [], function(e3, t3) {
              return c[e3] = t3, c.filter(Boolean).join("\n");
            });
            function f(e3, t3, n3, o2) {
              var r2 = n3 ? "" : o2.media ? "@media ".concat(o2.media, " {").concat(o2.css, "}") : o2.css;
              if (e3.styleSheet)
                e3.styleSheet.cssText = u(t3, r2);
              else {
                var i2 = document.createTextNode(r2), a2 = e3.childNodes;
                a2[t3] && e3.removeChild(a2[t3]), a2.length ? e3.insertBefore(i2, a2[t3]) : e3.appendChild(i2);
              }
            }
            function d(e3, t3, n3) {
              var o2 = n3.css, r2 = n3.media, i2 = n3.sourceMap;
              if (r2 ? e3.setAttribute("media", r2) : e3.removeAttribute("media"), i2 && btoa && (o2 += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i2)))), " */")), e3.styleSheet)
                e3.styleSheet.cssText = o2;
              else {
                for (; e3.firstChild; )
                  e3.removeChild(e3.firstChild);
                e3.appendChild(document.createTextNode(o2));
              }
            }
            var p = null, h = 0;
            function v(e3, t3) {
              var n3, o2, r2;
              if (t3.singleton) {
                var i2 = h++;
                n3 = p || (p = l(t3)), o2 = f.bind(null, n3, i2, false), r2 = f.bind(null, n3, i2, true);
              } else
                n3 = l(t3), o2 = d.bind(null, n3, t3), r2 = function() {
                  !function(e4) {
                    if (null === e4.parentNode)
                      return false;
                    e4.parentNode.removeChild(e4);
                  }(n3);
                };
              return o2(e3), function(t4) {
                if (t4) {
                  if (t4.css === e3.css && t4.media === e3.media && t4.sourceMap === e3.sourceMap)
                    return;
                  o2(e3 = t4);
                } else
                  r2();
              };
            }
            e2.exports = function(e3, t3) {
              (t3 = t3 || {}).singleton || "boolean" == typeof t3.singleton || (t3.singleton = (void 0 === o && (o = Boolean(window && document && document.all && !window.atob)), o));
              var n3 = s(e3 = e3 || [], t3);
              return function(e4) {
                if (e4 = e4 || [], "[object Array]" === Object.prototype.toString.call(e4)) {
                  for (var o2 = 0; o2 < n3.length; o2++) {
                    var r2 = a(n3[o2]);
                    i[r2].references--;
                  }
                  for (var l2 = s(e4, t3), c2 = 0; c2 < n3.length; c2++) {
                    var u2 = a(n3[c2]);
                    0 === i[u2].references && (i[u2].updater(), i.splice(u2, 1));
                  }
                  n3 = l2;
                }
              };
            };
          }, function(e2, t2, n2) {
            (t2 = n2(3)(false)).push([e2.i, ".ce-paragraph {\n    line-height: 1.6em;\n    outline: none;\n}\n\n.ce-paragraph[data-placeholder]:empty::before{\n  content: attr(data-placeholder);\n  color: #707684;\n  font-weight: normal;\n  opacity: 0;\n}\n\n/** Show placeholder at the first paragraph if Editor is empty */\n.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty::before {\n  opacity: 1;\n}\n\n.codex-editor--toolbox-opened .ce-block:first-child .ce-paragraph[data-placeholder]:empty::before,\n.codex-editor--empty .ce-block:first-child .ce-paragraph[data-placeholder]:empty:focus::before {\n  opacity: 0;\n}\n\n.ce-paragraph p:first-of-type{\n    margin-top: 0;\n}\n\n.ce-paragraph p:last-of-type{\n    margin-bottom: 0;\n}\n", ""]), e2.exports = t2;
          }, function(e2, t2, n2) {
            "use strict";
            e2.exports = function(e3) {
              var t3 = [];
              return t3.toString = function() {
                return this.map(function(t4) {
                  var n3 = function(e4, t5) {
                    var n4, o, r, i = e4[1] || "", a = e4[3];
                    if (!a)
                      return i;
                    if (t5 && "function" == typeof btoa) {
                      var s = (n4 = a, o = btoa(unescape(encodeURIComponent(JSON.stringify(n4)))), r = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o), "/*# ".concat(r, " */")), l = a.sources.map(function(e5) {
                        return "/*# sourceURL=".concat(a.sourceRoot || "").concat(e5, " */");
                      });
                      return [i].concat(l).concat([s]).join("\n");
                    }
                    return [i].join("\n");
                  }(t4, e3);
                  return t4[2] ? "@media ".concat(t4[2], " {").concat(n3, "}") : n3;
                }).join("");
              }, t3.i = function(e4, n3, o) {
                "string" == typeof e4 && (e4 = [[null, e4, ""]]);
                var r = {};
                if (o)
                  for (var i = 0; i < this.length; i++) {
                    var a = this[i][0];
                    null != a && (r[a] = true);
                  }
                for (var s = 0; s < e4.length; s++) {
                  var l = [].concat(e4[s]);
                  o && r[l[0]] || (n3 && (l[2] ? l[2] = "".concat(n3, " and ").concat(l[2]) : l[2] = n3), t3.push(l));
                }
              }, t3;
            };
          }, function(e2, t2, n2) {
            "use strict";
            function o(e3, t3) {
              for (var n3 = 0; n3 < t3.length; n3++) {
                var o2 = t3[n3];
                o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e3, o2.key, o2);
              }
            }
            function r(e3, t3, n3) {
              return t3 && o(e3.prototype, t3), n3 && o(e3, n3), e3;
            }
            n2.r(t2), n2.d(t2, "default", function() {
              return i;
            }), n2(0);
            var i = function() {
              function e3(t3) {
                var n3 = t3.data, o2 = t3.config, r2 = t3.api, i2 = t3.readOnly;
                !function(e4, t4) {
                  if (!(e4 instanceof t4))
                    throw new TypeError("Cannot call a class as a function");
                }(this, e3), this.api = r2, this.readOnly = i2, this._CSS = { block: this.api.styles.block, wrapper: "ce-paragraph" }, this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)), this._placeholder = o2.placeholder ? o2.placeholder : e3.DEFAULT_PLACEHOLDER, this._data = {}, this._element = this.drawView(), this._preserveBlank = void 0 !== o2.preserveBlank && o2.preserveBlank, this.data = n3;
              }
              return r(e3, null, [{ key: "DEFAULT_PLACEHOLDER", get: function() {
                return "";
              } }]), r(e3, [{ key: "onKeyUp", value: function(e4) {
                "Backspace" !== e4.code && "Delete" !== e4.code || "" === this._element.textContent && (this._element.innerHTML = "");
              } }, { key: "drawView", value: function() {
                var e4 = document.createElement("DIV");
                return e4.classList.add(this._CSS.wrapper, this._CSS.block), e4.contentEditable = false, e4.dataset.placeholder = this.api.i18n.t(this._placeholder), this.readOnly || (e4.contentEditable = true, e4.addEventListener("keyup", this.onKeyUp)), e4;
              } }, { key: "render", value: function() {
                return this._element;
              } }, { key: "merge", value: function(e4) {
                var t3 = { text: this.data.text + e4.text };
                this.data = t3;
              } }, { key: "validate", value: function(e4) {
                return !("" === e4.text.trim() && !this._preserveBlank);
              } }, { key: "save", value: function(e4) {
                return { text: e4.innerHTML };
              } }, { key: "onPaste", value: function(e4) {
                var t3 = { text: e4.detail.data.innerHTML };
                this.data = t3;
              } }, { key: "data", get: function() {
                var e4 = this._element.innerHTML;
                return this._data.text = e4, this._data;
              }, set: function(e4) {
                this._data = e4 || {}, this._element.innerHTML = this._data.text || "";
              } }], [{ key: "conversionConfig", get: function() {
                return { export: "text", import: "text" };
              } }, { key: "sanitize", get: function() {
                return { text: { br: true } };
              } }, { key: "isReadOnlySupported", get: function() {
                return true;
              } }, { key: "pasteConfig", get: function() {
                return { tags: ["P"] };
              } }, { key: "toolbox", get: function() {
                return { icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>', title: "Text" };
              } }]), e3;
            }();
          }]).default;
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2);
            var l = function() {
              function e2() {
                (0, r2.default)(this, e2), this.commandName = "bold", this.CSS = { button: "ce-inline-tool", buttonActive: "ce-inline-tool--active", buttonModifier: "ce-inline-tool--bold" }, this.nodes = { button: void 0 };
              }
              return (0, i2.default)(e2, [{ key: "render", value: function() {
                return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.innerHTML = a.IconBold, this.nodes.button;
              } }, { key: "surround", value: function() {
                document.execCommand(this.commandName);
              } }, { key: "checkState", value: function() {
                var e3 = document.queryCommandState(this.commandName);
                return this.nodes.button.classList.toggle(this.CSS.buttonActive, e3), e3;
              } }, { key: "shortcut", get: function() {
                return "CMD+B";
              } }], [{ key: "sanitize", get: function() {
                return { b: {} };
              } }]), e2;
            }();
            o2.default = l, l.displayName = "BoldInlineTool", l.isInline = true, l.title = "Bold", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2);
            var l = function() {
              function e2() {
                (0, r2.default)(this, e2), this.commandName = "italic", this.CSS = { button: "ce-inline-tool", buttonActive: "ce-inline-tool--active", buttonModifier: "ce-inline-tool--italic" }, this.nodes = { button: null };
              }
              return (0, i2.default)(e2, [{ key: "render", value: function() {
                return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.innerHTML = a.IconItalic, this.nodes.button;
              } }, { key: "surround", value: function() {
                document.execCommand(this.commandName);
              } }, { key: "checkState", value: function() {
                var e3 = document.queryCommandState(this.commandName);
                return this.nodes.button.classList.toggle(this.CSS.buttonActive, e3), e3;
              } }, { key: "shortcut", get: function() {
                return "CMD+I";
              } }], [{ key: "sanitize", get: function() {
                return { i: {} };
              } }]), e2;
            }();
            o2.default = l, l.displayName = "ItalicInlineTool", l.isInline = true, l.title = "Italic", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(25), n(8), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c) {
            "use strict";
            var u = n(1);
            function f(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (f = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), s = u(s), l = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = f(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(l);
            var d = function() {
              function e2(t2) {
                var n2 = t2.api;
                (0, r2.default)(this, e2), this.commandLink = "createLink", this.commandUnlink = "unlink", this.ENTER_KEY = 13, this.CSS = { button: "ce-inline-tool", buttonActive: "ce-inline-tool--active", buttonModifier: "ce-inline-tool--link", buttonUnlink: "ce-inline-tool--unlink", input: "ce-inline-tool-input", inputShowed: "ce-inline-tool-input--showed" }, this.nodes = { button: null, input: null }, this.inputOpened = false, this.toolbar = n2.toolbar, this.inlineToolbar = n2.inlineToolbar, this.notifier = n2.notifier, this.i18n = n2.i18n, this.selection = new s.default();
              }
              return (0, i2.default)(e2, [{ key: "render", value: function() {
                return this.nodes.button = document.createElement("button"), this.nodes.button.type = "button", this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier), this.nodes.button.innerHTML = c.IconLink, this.nodes.button;
              } }, { key: "renderActions", value: function() {
                var e3 = this;
                return this.nodes.input = document.createElement("input"), this.nodes.input.placeholder = this.i18n.t("Add a link"), this.nodes.input.classList.add(this.CSS.input), this.nodes.input.addEventListener("keydown", function(t2) {
                  t2.keyCode === e3.ENTER_KEY && e3.enterPressed(t2);
                }), this.nodes.input;
              } }, { key: "surround", value: function(e3) {
                if (e3) {
                  this.inputOpened ? (this.selection.restore(), this.selection.removeFakeBackground()) : (this.selection.setFakeBackground(), this.selection.save());
                  var t2 = this.selection.findParentTag("A");
                  if (t2)
                    return this.selection.expandToTag(t2), this.unlink(), this.closeActions(), this.checkState(), void this.toolbar.close();
                }
                this.toggleActions();
              } }, { key: "checkState", value: function() {
                var e3 = this.selection.findParentTag("A");
                if (e3) {
                  this.nodes.button.innerHTML = c.IconUnlink, this.nodes.button.classList.add(this.CSS.buttonUnlink), this.nodes.button.classList.add(this.CSS.buttonActive), this.openActions();
                  var t2 = e3.getAttribute("href");
                  this.nodes.input.value = "null" !== t2 ? t2 : "", this.selection.save();
                } else
                  this.nodes.button.innerHTML = c.IconLink, this.nodes.button.classList.remove(this.CSS.buttonUnlink), this.nodes.button.classList.remove(this.CSS.buttonActive);
                return !!e3;
              } }, { key: "clear", value: function() {
                this.closeActions();
              } }, { key: "shortcut", get: function() {
                return "CMD+K";
              } }, { key: "toggleActions", value: function() {
                this.inputOpened ? this.closeActions(false) : this.openActions(true);
              } }, { key: "openActions", value: function() {
                var e3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                this.nodes.input.classList.add(this.CSS.inputShowed), e3 && this.nodes.input.focus(), this.inputOpened = true;
              } }, { key: "closeActions", value: function() {
                var e3 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                if (this.selection.isFakeBackgroundEnabled) {
                  var t2 = new s.default();
                  t2.save(), this.selection.restore(), this.selection.removeFakeBackground(), t2.restore();
                }
                this.nodes.input.classList.remove(this.CSS.inputShowed), this.nodes.input.value = "", e3 && this.selection.clearSaved(), this.inputOpened = false;
              } }, { key: "enterPressed", value: function(e3) {
                var t2 = this.nodes.input.value || "";
                return t2.trim() ? this.validateURL(t2) ? (t2 = this.prepareLink(t2), this.selection.restore(), this.selection.removeFakeBackground(), this.insertLink(t2), e3.preventDefault(), e3.stopPropagation(), e3.stopImmediatePropagation(), this.selection.collapseToEnd(), void this.inlineToolbar.close()) : (this.notifier.show({ message: "Pasted link is not valid.", style: "error" }), void l.log("Incorrect Link pasted", "warn", t2)) : (this.selection.restore(), this.unlink(), e3.preventDefault(), void this.closeActions());
              } }, { key: "validateURL", value: function(e3) {
                return !/\s/.test(e3);
              } }, { key: "prepareLink", value: function(e3) {
                return e3 = e3.trim(), e3 = this.addProtocol(e3);
              } }, { key: "addProtocol", value: function(e3) {
                if (/^(\w+):(\/\/)?/.test(e3))
                  return e3;
                var t2 = /^\/[^/\s]/.test(e3), n2 = "#" === e3.substring(0, 1), o3 = /^\/\/[^/\s]/.test(e3);
                return t2 || n2 || o3 || (e3 = "http://" + e3), e3;
              } }, { key: "insertLink", value: function(e3) {
                var t2 = this.selection.findParentTag("A");
                t2 && this.selection.expandToTag(t2), document.execCommand(this.commandLink, false, e3);
              } }, { key: "unlink", value: function() {
                document.execCommand(this.commandUnlink);
              } }], [{ key: "sanitize", get: function() {
                return { a: { href: true, target: "_blank", rel: "nofollow" } };
              } }]), e2;
            }();
            o2.default = d, d.displayName = "LinkInlineTool", d.isInline = true, d.title = "Link", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(19)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2), a = s(a);
            var l = function() {
              function e2(t2) {
                var n2 = t2.data, o3 = t2.api;
                (0, r2.default)(this, e2), this.CSS = { wrapper: "ce-stub", info: "ce-stub__info", title: "ce-stub__title", subtitle: "ce-stub__subtitle" }, this.api = o3, this.title = n2.title || this.api.i18n.t("Error"), this.subtitle = this.api.i18n.t("The block can not be displayed correctly."), this.savedData = n2.savedData, this.wrapper = this.make();
              }
              return (0, i2.default)(e2, [{ key: "render", value: function() {
                return this.wrapper;
              } }, { key: "save", value: function() {
                return this.savedData;
              } }, { key: "make", value: function() {
                var e3 = a.default.make("div", this.CSS.wrapper), t2 = a.default.make("div", this.CSS.info), n2 = a.default.make("div", this.CSS.title, { textContent: this.title }), o3 = a.default.make("div", this.CSS.subtitle, { textContent: this.subtitle });
                return e3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="52" height="52" viewBox="0 0 52 52"><path fill="#D76B6B" fill-rule="nonzero" d="M26 52C11.64 52 0 40.36 0 26S11.64 0 26 0s26 11.64 26 26-11.64 26-26 26zm0-3.25c12.564 0 22.75-10.186 22.75-22.75S38.564 3.25 26 3.25 3.25 13.436 3.25 26 13.436 48.75 26 48.75zM15.708 33.042a2.167 2.167 0 1 1 0-4.334 2.167 2.167 0 0 1 0 4.334zm23.834 0a2.167 2.167 0 1 1 0-4.334 2.167 2.167 0 0 1 0 4.334zm-15.875 5.452a1.083 1.083 0 1 1-1.834-1.155c1.331-2.114 3.49-3.179 6.334-3.179 2.844 0 5.002 1.065 6.333 3.18a1.083 1.083 0 1 1-1.833 1.154c-.913-1.45-2.366-2.167-4.5-2.167s-3.587.717-4.5 2.167z"/></svg>', t2.appendChild(n2), t2.appendChild(o3), e3.appendChild(t2), e3;
              } }]), e2;
            }();
            o2.default = l, l.displayName = "Stub", l.isReadOnlySupported = true, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(69), n(396), n(397), n(398)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s, l, c) {
            "use strict";
            var u = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = u(r2), i2 = u(i2), s = u(s), l = u(l), c = u(c);
            var f = function(e2, t2) {
              var n2 = {};
              for (var o3 in e2)
                Object.prototype.hasOwnProperty.call(e2, o3) && t2.indexOf(o3) < 0 && (n2[o3] = e2[o3]);
              if (null != e2 && "function" == typeof Object.getOwnPropertySymbols) {
                var r3 = 0;
                for (o3 = Object.getOwnPropertySymbols(e2); r3 < o3.length; r3++)
                  t2.indexOf(o3[r3]) < 0 && Object.prototype.propertyIsEnumerable.call(e2, o3[r3]) && (n2[o3[r3]] = e2[o3[r3]]);
              }
              return n2;
            }, d = function() {
              function e2(t2, n2, o3) {
                (0, r2.default)(this, e2), this.api = o3, this.config = t2, this.editorConfig = n2;
              }
              return (0, i2.default)(e2, [{ key: "get", value: function(e3) {
                var t2 = this.config[e3], n2 = t2.class, o3 = t2.isInternal, r3 = void 0 !== o3 && o3, i3 = f(t2, ["class", "isInternal"]);
                return new (this.getConstructor(n2))({ name: e3, constructable: n2, config: i3, api: this.api, isDefault: e3 === this.editorConfig.defaultBlock, defaultPlaceholder: this.editorConfig.placeholder, isInternal: r3 });
              } }, { key: "getConstructor", value: function(e3) {
                switch (true) {
                  case e3[a.InternalInlineToolSettings.IsInline]:
                    return s.default;
                  case e3[a.InternalTuneSettings.IsTune]:
                    return l.default;
                  default:
                    return c.default;
                }
              } }]), e2;
            }();
            o2.default = d, d.displayName = "ToolsFactory", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(69)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u) {
            "use strict";
            var f = n(1);
            function d(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (d = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function p(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = f(r2), i2 = f(i2), s = f(s), l = f(l), c = f(c);
            var h = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = p(n2);
              function n2() {
                var e3;
                return (0, r2.default)(this, n2), (e3 = t2.apply(this, arguments)).type = u.ToolType.Inline, e3;
              }
              return (0, i2.default)(n2, [{ key: "title", get: function() {
                return this.constructable[u.InternalInlineToolSettings.Title];
              } }, { key: "create", value: function() {
                return new this.constructable({ api: this.api.getMethodsForTool(this), config: this.settings });
              } }]), n2;
            }((u = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = d(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(u)).default);
            o2.default = h, h.displayName = "InlineTool", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(5), n(6), n(4), n(69)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u) {
            "use strict";
            var f = n(1);
            function d(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (d = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function p(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, c.default)(e2);
                if (t2) {
                  var r3 = (0, c.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, l.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = f(r2), i2 = f(i2), s = f(s), l = f(l), c = f(c);
            var h = function(e2) {
              (0, s.default)(n2, e2);
              var t2 = p(n2);
              function n2() {
                var e3;
                return (0, r2.default)(this, n2), (e3 = t2.apply(this, arguments)).type = u.ToolType.Tune, e3;
              }
              return (0, i2.default)(n2, [{ key: "create", value: function(e3, t3) {
                return new this.constructable({ api: this.api.getMethodsForTool(this), config: this.settings, block: t3, data: e3 });
              } }]), n2;
            }((u = function(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = d(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }(u)).default);
            o2.default = h, h.displayName = "BlockTune", e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i, a = n(7);
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(114), n(5), n(6), n(4), n(7), n(69), n(8), n(185)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, s, l, c, u, f, d, p, h) {
            "use strict";
            var v = n(1);
            function g(e2) {
              if ("function" != typeof WeakMap)
                return null;
              var t2 = /* @__PURE__ */ new WeakMap(), n2 = /* @__PURE__ */ new WeakMap();
              return (g = function(e3) {
                return e3 ? n2 : t2;
              })(e2);
            }
            function y(e2, t2) {
              if (!t2 && e2 && e2.__esModule)
                return e2;
              if (null === e2 || "object" !== a(e2) && "function" != typeof e2)
                return { default: e2 };
              var n2 = g(t2);
              if (n2 && n2.has(e2))
                return n2.get(e2);
              var o3 = {}, r3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
              for (var i3 in e2)
                if ("default" !== i3 && Object.prototype.hasOwnProperty.call(e2, i3)) {
                  var s2 = r3 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
                  s2 && (s2.get || s2.set) ? Object.defineProperty(o3, i3, s2) : o3[i3] = e2[i3];
                }
              return o3.default = e2, n2 && n2.set(e2, o3), o3;
            }
            function k(e2) {
              var t2 = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if ("function" == typeof Proxy)
                  return true;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), true;
                } catch (e3) {
                  return false;
                }
              }();
              return function() {
                var n2, o3 = (0, u.default)(e2);
                if (t2) {
                  var r3 = (0, u.default)(this).constructor;
                  n2 = Reflect.construct(o3, arguments, r3);
                } else
                  n2 = o3.apply(this, arguments);
                return (0, c.default)(this, n2);
              };
            }
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = v(r2), i2 = v(i2), s = v(s), l = v(l), c = v(c), u = v(u), f = v(f), d = y(d), p = y(p), h = v(h);
            var b = function(e2, t2, n2, o3) {
              var r3, i3 = arguments.length, a2 = i3 < 3 ? t2 : null === o3 ? o3 = Object.getOwnPropertyDescriptor(t2, n2) : o3;
              if ("object" === ("undefined" == typeof Reflect ? "undefined" : (0, f.default)(Reflect)) && "function" == typeof Reflect.decorate)
                a2 = Reflect.decorate(e2, t2, n2, o3);
              else
                for (var s2 = e2.length - 1; s2 >= 0; s2--)
                  (r3 = e2[s2]) && (a2 = (i3 < 3 ? r3(a2) : i3 > 3 ? r3(t2, n2, a2) : r3(t2, n2)) || a2);
              return i3 > 3 && a2 && Object.defineProperty(t2, n2, a2), a2;
            }, m = function(e2) {
              (0, l.default)(n2, e2);
              var t2 = k(n2);
              function n2() {
                var e3;
                return (0, r2.default)(this, n2), (e3 = t2.apply(this, arguments)).type = d.ToolType.Block, e3.inlineTools = new h.default(), e3.tunes = new h.default(), e3;
              }
              return (0, i2.default)(n2, [{ key: "create", value: function(e3, t3, n3) {
                return new this.constructable({ data: e3, block: t3, readOnly: n3, api: this.api.getMethodsForTool(this), config: this.settings });
              } }, { key: "isReadOnlySupported", get: function() {
                return true === this.constructable[d.InternalBlockToolSettings.IsReadOnlySupported];
              } }, { key: "isLineBreaksEnabled", get: function() {
                return this.constructable[d.InternalBlockToolSettings.IsEnabledLineBreaks];
              } }, { key: "toolbox", get: function() {
                var e3 = this.constructable[d.InternalBlockToolSettings.Toolbox], t3 = this.config[d.UserSettings.Toolbox];
                if (!p.isEmpty(e3) && false !== t3)
                  return t3 ? Array.isArray(e3) ? Array.isArray(t3) ? t3.map(function(t4, n3) {
                    var o3 = e3[n3];
                    return o3 ? Object.assign(Object.assign({}, o3), t4) : t4;
                  }) : [t3] : Array.isArray(t3) ? t3 : [Object.assign(Object.assign({}, e3), t3)] : Array.isArray(e3) ? e3 : [e3];
              } }, { key: "conversionConfig", get: function() {
                return this.constructable[d.InternalBlockToolSettings.ConversionConfig];
              } }, { key: "enabledInlineTools", get: function() {
                return this.config[d.UserSettings.EnabledInlineTools] || false;
              } }, { key: "enabledBlockTunes", get: function() {
                return this.config[d.UserSettings.EnabledBlockTunes];
              } }, { key: "pasteConfig", get: function() {
                return this.constructable[d.InternalBlockToolSettings.PasteConfig] || {};
              } }, { key: "sanitizeConfig", get: function() {
                var e3 = (0, s.default)((0, u.default)(n2.prototype), "sanitizeConfig", this), t3 = this.baseSanitizeConfig;
                if (p.isEmpty(e3))
                  return t3;
                var o3 = {};
                for (var r3 in e3)
                  if (Object.prototype.hasOwnProperty.call(e3, r3)) {
                    var i3 = e3[r3];
                    p.isObject(i3) ? o3[r3] = Object.assign({}, t3, i3) : o3[r3] = i3;
                  }
                return o3;
              } }, { key: "baseSanitizeConfig", get: function() {
                var e3 = {};
                return Array.from(this.inlineTools.values()).forEach(function(t3) {
                  return Object.assign(e3, t3.sanitizeConfig);
                }), Array.from(this.tunes.values()).forEach(function(t3) {
                  return Object.assign(e3, t3.sanitizeConfig);
                }), e3;
              } }]), n2;
            }(d.default);
            o2.default = m, m.displayName = "BlockTool", b([p.cacheable], m.prototype, "sanitizeConfig", null), b([p.cacheable], m.prototype, "baseSanitizeConfig", null), e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(85), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s) {
            "use strict";
            var l = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = l(r2), i2 = l(i2), a = l(a);
            var c = function() {
              function e2(t2) {
                var n2 = t2.api;
                (0, r2.default)(this, e2), this.CSS = { animation: "wobble" }, this.api = n2;
              }
              return (0, i2.default)(e2, [{ key: "render", value: function() {
                var e3 = this;
                return { icon: s.IconChevronDown, title: this.api.i18n.t("Move down"), onActivate: function(t2, n2) {
                  return e3.handleClick(n2);
                }, name: "move-down" };
              } }, { key: "handleClick", value: function(e3) {
                var t2 = this, n2 = this.api.blocks.getCurrentBlockIndex(), o3 = this.api.blocks.getBlockByIndex(n2 + 1);
                if (!o3) {
                  var r3 = e3.target.closest("." + a.default.CSS.item).querySelector("." + a.default.CSS.itemIcon);
                  return r3.classList.add(this.CSS.animation), void window.setTimeout(function() {
                    r3.classList.remove(t2.CSS.animation);
                  }, 500);
                }
                var i3 = o3.holder, s2 = i3.getBoundingClientRect(), l2 = Math.abs(window.innerHeight - i3.offsetHeight);
                s2.top < window.innerHeight && (l2 = window.scrollY + i3.offsetHeight), window.scrollTo(0, l2), this.api.blocks.move(n2 + 1), this.api.toolbar.toggleBlockSettings(true);
              } }]), e2;
            }();
            o2.default = c, c.displayName = "MoveDownTune", c.isTune = true, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a) {
            "use strict";
            var s = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = s(r2), i2 = s(i2);
            var l = function() {
              function e2(t2) {
                var n2 = t2.api;
                (0, r2.default)(this, e2), this.api = n2;
              }
              return (0, i2.default)(e2, [{ key: "render", value: function() {
                var e3 = this;
                return { icon: a.IconCross, title: this.api.i18n.t("Delete"), name: "delete", confirmation: { title: this.api.i18n.t("Click to delete"), onActivate: function() {
                  return e3.handleClick();
                } } };
              } }, { key: "handleClick", value: function() {
                this.api.blocks.delete();
              } }]), e2;
            }();
            o2.default = l, l.displayName = "DeleteTune", l.isTune = true, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t, n) {
          var o, r, i;
          "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self && self, r = [t, n(2), n(3), n(85), n(37)], void 0 === (i = "function" == typeof (o = function(o2, r2, i2, a, s) {
            "use strict";
            var l = n(1);
            Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0, r2 = l(r2), i2 = l(i2), a = l(a);
            var c = function() {
              function e2(t2) {
                var n2 = t2.api;
                (0, r2.default)(this, e2), this.CSS = { animation: "wobble" }, this.api = n2;
              }
              return (0, i2.default)(e2, [{ key: "render", value: function() {
                var e3 = this;
                return { icon: s.IconChevronUp, title: this.api.i18n.t("Move up"), onActivate: function(t2, n2) {
                  return e3.handleClick(n2);
                }, name: "move-up" };
              } }, { key: "handleClick", value: function(e3) {
                var t2 = this, n2 = this.api.blocks.getCurrentBlockIndex(), o3 = this.api.blocks.getBlockByIndex(n2), r3 = this.api.blocks.getBlockByIndex(n2 - 1);
                if (0 === n2 || !o3 || !r3) {
                  var i3 = e3.target.closest("." + a.default.CSS.item).querySelector("." + a.default.CSS.itemIcon);
                  return i3.classList.add(this.CSS.animation), void window.setTimeout(function() {
                    i3.classList.remove(t2.CSS.animation);
                  }, 500);
                }
                var s2, l2 = o3.holder, c2 = r3.holder, u = l2.getBoundingClientRect(), f = c2.getBoundingClientRect();
                s2 = f.top > 0 ? Math.abs(u.top) - Math.abs(f.top) : window.innerHeight - Math.abs(u.top) + Math.abs(f.top), window.scrollBy(0, -1 * s2), this.api.blocks.move(n2 - 1), this.api.toolbar.toggleBlockSettings(true);
              } }]), e2;
            }();
            o2.default = c, c.displayName = "MoveUpTune", c.isTune = true, e.exports = t.default;
          }) ? o.apply(t, r) : o) || (e.exports = i);
        }, function(e, t) {
          e.exports = '.codex-editor{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;z-index:1}.codex-editor .hide,.codex-editor__redactor--hidden{display:none}.codex-editor__redactor [contenteditable]:empty:after{content:"\\feff "}@media (min-width:651px){.codex-editor--narrow .codex-editor__redactor{margin-right:50px}}@media (min-width:651px){.codex-editor--narrow.codex-editor--rtl .codex-editor__redactor{margin-left:50px;margin-right:0}}@media (min-width:651px){.codex-editor--narrow .ce-toolbar__actions{right:-5px}}.codex-editor__loader{position:relative;height:30vh}.codex-editor__loader:before{content:"";position:absolute;left:50%;top:50%;width:30px;height:30px;margin-top:-15px;margin-left:-15px;border-radius:50%;border:2px solid rgba(201,201,204,.48);border-top-color:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-animation:editor-loader-spin .8s linear infinite;animation:editor-loader-spin .8s linear infinite;will-change:transform}.codex-editor-copyable{position:absolute;height:1px;width:1px;top:-400%;opacity:.001}.codex-editor-overlay{position:fixed;top:0;left:0;right:0;bottom:0;z-index:999;pointer-events:none;overflow:hidden}.codex-editor-overlay__container{position:relative;pointer-events:auto;z-index:0}.codex-editor-overlay__rectangle{position:absolute;pointer-events:none;background-color:rgba(46,170,220,.2);border:1px solid transparent}.codex-editor svg{max-height:100%}.codex-editor path{stroke:currentColor}::-moz-selection{background-color:#d4ecff}::selection{background-color:#d4ecff}.codex-editor--toolbox-opened [contentEditable=true][data-placeholder]:focus:before{opacity:0!important}@-webkit-keyframes editor-loader-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes editor-loader-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.ce-scroll-locked{overflow:hidden}.ce-scroll-locked--hard{overflow:hidden;top:calc(var(--window-scroll-offset)*-1);position:fixed;width:100%}.ce-toolbar{position:absolute;left:0;right:0;top:0;-webkit-transition:opacity .1s ease;transition:opacity .1s ease;will-change:opacity,top;display:none}.ce-toolbar--opened{display:block}.ce-toolbar__content{max-width:650px;margin:0 auto;position:relative}.ce-toolbar__plus{color:#1d202b;cursor:pointer;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@media (max-width:650px){.ce-toolbar__plus{width:36px;height:36px}}@media (hover:hover){.ce-toolbar__plus:hover{background-color:#eff2f5}}.ce-toolbar__plus--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-toolbar__plus{-ms-flex-negative:0;flex-shrink:0}.ce-toolbar__plus-shortcut{opacity:.6;word-spacing:-2px;margin-top:5px}@media (max-width:650px){.ce-toolbar__plus{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}.ce-toolbar__plus--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__plus--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-toolbar__plus{position:static}}.ce-toolbar__actions{position:absolute;right:100%;opacity:0;display:-webkit-box;display:-ms-flexbox;display:flex;padding-right:5px}.ce-toolbar__actions--opened{opacity:1}@media (max-width:650px){.ce-toolbar__actions{right:auto}}.ce-toolbar__settings-btn{color:#1d202b;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media (max-width:650px){.ce-toolbar__settings-btn{width:36px;height:36px}}@media (hover:hover){.ce-toolbar__settings-btn:hover{background-color:#eff2f5}}.ce-toolbar__settings-btn--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-toolbar__settings-btn{margin-left:3px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}@media (min-width:651px){.ce-toolbar__settings-btn{width:24px}}.ce-toolbar__settings-btn--hidden{display:none}@media (max-width:650px){.ce-toolbar__settings-btn{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}.ce-toolbar__settings-btn--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__settings-btn--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-toolbar__settings-btn{position:static}}.ce-toolbar__plus svg,.ce-toolbar__settings-btn svg{width:24px;height:24px}@media (min-width:651px){.codex-editor--narrow .ce-toolbar__plus{left:5px}}.ce-toolbox{--gap:8px}@media (min-width:651px){.ce-toolbox{position:absolute;top:calc(26px + var(--gap));left:0}.ce-toolbox--opened-top{top:calc(var(--gap)*-1 + var(--popover-height)*-1)}}@media (min-width:651px){.codex-editor--narrow .ce-toolbox{left:auto;right:0}.codex-editor--narrow .ce-toolbox .ce-popover{right:0}}.ce-inline-toolbar{--y-offset:8px;position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}.ce-inline-toolbar--left-oriented:before{left:15px;margin-left:0}.ce-inline-toolbar--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-inline-toolbar{-webkit-transform:translateX(-50%) translateY(8px) scale(.94);transform:translateX(-50%) translateY(8px) scale(.94);opacity:0;visibility:hidden;-webkit-transition:opacity .25s ease,-webkit-transform .15s ease;transition:opacity .25s ease,-webkit-transform .15s ease;transition:transform .15s ease,opacity .25s ease;transition:transform .15s ease,opacity .25s ease,-webkit-transform .15s ease;will-change:transform,opacity;top:0;left:0;z-index:3}.ce-inline-toolbar--showed{opacity:1;visibility:visible;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.ce-inline-toolbar--left-oriented{-webkit-transform:translateX(-23px) translateY(8px) scale(.94);transform:translateX(-23px) translateY(8px) scale(.94)}.ce-inline-toolbar--left-oriented.ce-inline-toolbar--showed{-webkit-transform:translateX(-23px);transform:translateX(-23px)}.ce-inline-toolbar--right-oriented{-webkit-transform:translateX(-100%) translateY(8px) scale(.94);transform:translateX(-100%) translateY(8px) scale(.94);margin-left:23px}.ce-inline-toolbar--right-oriented.ce-inline-toolbar--showed{-webkit-transform:translateX(-100%);transform:translateX(-100%)}.ce-inline-toolbar [hidden]{display:none!important}.ce-inline-toolbar__toggler-and-button-wrapper{width:100%;padding:0 6px}.ce-inline-toolbar__buttons,.ce-inline-toolbar__toggler-and-button-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown{display:-webkit-box;display:-ms-flexbox;display:flex;padding:6px;margin:0 6px 0 -6px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;border-right:1px solid rgba(201,201,204,.48);-webkit-box-sizing:border-box;box-sizing:border-box}@media (hover:hover){.ce-inline-toolbar__dropdown:hover{background:#eff2f5}}.ce-inline-toolbar__dropdown--hidden{display:none}.ce-inline-toolbar__dropdown-arrow,.ce-inline-toolbar__dropdown-content{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown-arrow svg,.ce-inline-toolbar__dropdown-content svg{width:20px;height:20px}.ce-inline-toolbar__shortcut{opacity:.6;word-spacing:-3px;margin-top:3px}.ce-inline-tool{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:6px 1px;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0}.ce-inline-tool svg{width:20px;height:20px}@media (max-width:650px){.ce-inline-tool svg{width:28px;height:28px}}@media (hover:hover){.ce-inline-tool:hover{background-color:#eff2f5}}.ce-inline-tool--active{color:#388ae5}.ce-inline-tool--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-inline-tool--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-inline-tool{border-radius:0;line-height:normal}.ce-inline-tool--link .icon--unlink,.ce-inline-tool--unlink .icon--link{display:none}.ce-inline-tool--unlink .icon--unlink{display:inline-block;margin-bottom:-1px}.ce-inline-tool-input{outline:none;border:0;border-radius:0 0 4px 4px;margin:0;font-size:13px;padding:10px;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;display:none;font-weight:500;border-top:1px solid rgba(201,201,204,.48);-webkit-appearance:none;font-family:inherit}@media (max-width:650px){.ce-inline-tool-input{font-size:15px;font-weight:500}}.ce-inline-tool-input::-webkit-input-placeholder{color:#707684}.ce-inline-tool-input::-moz-placeholder{color:#707684}.ce-inline-tool-input:-ms-input-placeholder{color:#707684}.ce-inline-tool-input::-ms-input-placeholder{color:#707684}.ce-inline-tool-input::placeholder{color:#707684}.ce-inline-tool-input--showed{display:block}.ce-conversion-toolbar{position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}.ce-conversion-toolbar--left-oriented:before{left:15px;margin-left:0}.ce-conversion-toolbar--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-conversion-toolbar{opacity:0;visibility:hidden;will-change:transform,opacity;-webkit-transition:opacity .1s ease,-webkit-transform .1s ease;transition:opacity .1s ease,-webkit-transform .1s ease;transition:transform .1s ease,opacity .1s ease;transition:transform .1s ease,opacity .1s ease,-webkit-transform .1s ease;-webkit-transform:translateY(-8px);transform:translateY(-8px);left:-1px;width:150px;margin-top:5px;-webkit-box-sizing:content-box;box-sizing:content-box}.ce-conversion-toolbar--showed{opacity:1;visibility:visible;-webkit-transform:none;transform:none}.ce-conversion-toolbar [hidden]{display:none!important}.ce-conversion-toolbar__buttons{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-conversion-toolbar__label{color:#707684;font-size:11px;font-weight:500;letter-spacing:.33px;padding:10px 10px 5px;text-transform:uppercase}.ce-conversion-tool{display:-webkit-box;display:-ms-flexbox;display:flex;padding:5px 10px;font-size:14px;line-height:20px;font-weight:500;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ce-conversion-tool--hidden{display:none}.ce-conversion-tool--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-conversion-tool--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-conversion-tool:hover{background:#eff2f5}.ce-conversion-tool__icon{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:26px;height:26px;-webkit-box-shadow:0 0 0 1px rgba(201,201,204,.48);box-shadow:0 0 0 1px rgba(201,201,204,.48);border-radius:5px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:#fff;-webkit-box-sizing:content-box;box-sizing:content-box;-ms-flex-negative:0;flex-shrink:0;margin-right:10px}.ce-conversion-tool__icon svg{width:20px;height:20px}@media (max-width:650px){.ce-conversion-tool__icon{width:36px;height:36px;border-radius:8px}.ce-conversion-tool__icon svg{width:28px;height:28px}}.ce-conversion-tool--last{margin-right:0!important}.ce-conversion-tool--active{color:#388ae5!important;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-settings{position:absolute;z-index:2;--gap:8px}@media (min-width:651px){.ce-settings{position:absolute;top:calc(26px + var(--gap));left:0}.ce-settings--opened-top{top:calc(var(--gap)*-1 + var(--popover-height)*-1)}}.ce-settings__button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:6px 1px;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0}.ce-settings__button svg{width:20px;height:20px}@media (max-width:650px){.ce-settings__button svg{width:28px;height:28px}}@media (hover:hover){.ce-settings__button:hover{background-color:#eff2f5}}.ce-settings__button--active{color:#388ae5}.ce-settings__button--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-settings__button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.ce-settings__button:not(:nth-child(3n+3)){margin-right:3px}.ce-settings__button:nth-child(n+4){margin-top:3px}.ce-settings__button{line-height:32px}.ce-settings__button--disabled{cursor:not-allowed!important;opacity:.3}.ce-settings__button--selected{color:#388ae5}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}.ce-block{-webkit-animation:fade-in .3s ease;animation:fade-in .3s ease;-webkit-animation-fill-mode:none;-webkit-animation-fill-mode:initial;animation-fill-mode:none}.ce-block:first-of-type{margin-top:0}.ce-block--selected .ce-block__content{background:#e1f2ff}.ce-block--selected .ce-block__content [contenteditable]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ce-block--selected .ce-block__content .ce-stub,.ce-block--selected .ce-block__content img{opacity:.55}.ce-block--stretched .ce-block__content{max-width:none}.ce-block__content{position:relative;max-width:650px;margin:0 auto;-webkit-transition:background-color .15s ease;transition:background-color .15s ease}.ce-block--drop-target .ce-block__content:before{content:"";position:absolute;top:100%;left:-20px;margin-top:-1px;height:8px;width:8px;border:solid #388ae5;border-width:1px 1px 0 0;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.ce-block--drop-target .ce-block__content:after{content:"";position:absolute;top:100%;height:1px;width:100%;color:#388ae5;background:repeating-linear-gradient(90deg,#388ae5,#388ae5 1px,#fff 0,#fff 6px)}.ce-block a{cursor:pointer;text-decoration:underline}.ce-block b{font-weight:700}.ce-block i{font-style:italic}@media (min-width:651px){.codex-editor--narrow .ce-block--focused{margin-right:-50px;padding-right:50px}}.wobble{-webkit-animation-name:wobble;animation-name:wobble;-webkit-animation-duration:.4s;animation-duration:.4s}@-webkit-keyframes wobble{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-5%,0,0) rotate(-5deg);transform:translate3d(-5%,0,0) rotate(-5deg)}30%{-webkit-transform:translate3d(2%,0,0) rotate(3deg);transform:translate3d(2%,0,0) rotate(3deg)}45%{-webkit-transform:translate3d(-3%,0,0) rotate(-3deg);transform:translate3d(-3%,0,0) rotate(-3deg)}60%{-webkit-transform:translate3d(2%,0,0) rotate(2deg);transform:translate3d(2%,0,0) rotate(2deg)}75%{-webkit-transform:translate3d(-1%,0,0) rotate(-1deg);transform:translate3d(-1%,0,0) rotate(-1deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes wobble{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-5%,0,0) rotate(-5deg);transform:translate3d(-5%,0,0) rotate(-5deg)}30%{-webkit-transform:translate3d(2%,0,0) rotate(3deg);transform:translate3d(2%,0,0) rotate(3deg)}45%{-webkit-transform:translate3d(-3%,0,0) rotate(-3deg);transform:translate3d(-3%,0,0) rotate(-3deg)}60%{-webkit-transform:translate3d(2%,0,0) rotate(2deg);transform:translate3d(2%,0,0) rotate(2deg)}75%{-webkit-transform:translate3d(-1%,0,0) rotate(-1deg);transform:translate3d(-1%,0,0) rotate(-1deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scaleX(1);transform:scaleX(1)}}@-webkit-keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.cdx-block{padding:.4em 0}.cdx-block::-webkit-input-placeholder{line-height:normal!important}.cdx-input{border:1px solid rgba(201,201,204,.48);-webkit-box-shadow:inset 0 1px 2px 0 rgba(35,44,72,.06);box-shadow:inset 0 1px 2px 0 rgba(35,44,72,.06);border-radius:3px;padding:10px 12px;outline:none;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.cdx-input[data-placeholder]:before{position:static!important;display:inline-block;width:0;white-space:nowrap;pointer-events:none}.cdx-settings-button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:6px 1px;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0}.cdx-settings-button svg{width:20px;height:20px}@media (max-width:650px){.cdx-settings-button svg{width:28px;height:28px}}@media (hover:hover){.cdx-settings-button:hover{background-color:#eff2f5}}.cdx-settings-button--focused{-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.cdx-settings-button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.cdx-settings-button{min-width:26px;min-height:26px}.cdx-settings-button--active{color:#388ae5}.cdx-settings-button svg{width:auto;height:auto}@media (max-width:650px){.cdx-settings-button{width:36px;height:36px;border-radius:8px}}.cdx-loader{position:relative;border:1px solid rgba(201,201,204,.48)}.cdx-loader:before{content:"";position:absolute;left:50%;top:50%;width:18px;height:18px;margin:-11px 0 0 -11px;border:2px solid rgba(201,201,204,.48);border-left-color:#388ae5;border-radius:50%;-webkit-animation:cdxRotation 1.2s linear infinite;animation:cdxRotation 1.2s linear infinite}@-webkit-keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.cdx-button{padding:13px;border-radius:3px;border:1px solid rgba(201,201,204,.48);font-size:14.9px;background:#fff;-webkit-box-shadow:0 2px 2px 0 rgba(18,30,57,.04);box-shadow:0 2px 2px 0 rgba(18,30,57,.04);color:#707684;text-align:center;cursor:pointer}@media (hover:hover){.cdx-button:hover{background:#fbfcfe;-webkit-box-shadow:0 1px 3px 0 rgba(18,30,57,.08);box-shadow:0 1px 3px 0 rgba(18,30,57,.08)}}.cdx-button svg{height:20px;margin-right:.2em;margin-top:-2px}.ce-stub{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;padding:3.5em 0;margin:17px 0;border-radius:3px;background:#fcf7f7;color:#b46262}.ce-stub__info{margin-left:20px}.ce-stub__title{margin-bottom:3px;font-weight:600;font-size:18px;text-transform:capitalize}.ce-stub__subtitle{font-size:16px}.codex-editor.codex-editor--rtl{direction:rtl}.codex-editor.codex-editor--rtl .cdx-list{padding-left:0;padding-right:40px}.codex-editor.codex-editor--rtl .ce-toolbar__plus{right:-26px;left:auto}.codex-editor.codex-editor--rtl .ce-toolbar__actions{right:auto;left:-26px}@media (max-width:650px){.codex-editor.codex-editor--rtl .ce-toolbar__actions{margin-left:0;margin-right:auto;padding-right:0;padding-left:10px}}.codex-editor.codex-editor--rtl .ce-settings{left:5px;right:auto}.codex-editor.codex-editor--rtl .ce-settings:before{right:auto;left:25px}.codex-editor.codex-editor--rtl .ce-settings__button:not(:nth-child(3n+3)){margin-left:3px;margin-right:0}.codex-editor.codex-editor--rtl .ce-conversion-tool__icon{margin-right:0;margin-left:10px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown{border-right:0 solid transparent;border-left:1px solid rgba(201,201,204,.48);margin:0 -6px 0 6px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown .icon--toggler-down{margin-left:0;margin-right:4px}@media (min-width:651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__plus{left:0;right:5px}}@media (min-width:651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__actions{left:-5px}}.ce-popover{opacity:0;will-change:opacity,transform;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:6px;min-width:200px;width:200px;overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-negative:0;flex-shrink:0;max-height:0;pointer-events:none;position:absolute;background-color:#fff;border:1px solid #e8e8eb;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px rgba(13,20,33,.13);border-radius:6px;z-index:2}.ce-popover--left-oriented:before{left:15px;margin-left:0}.ce-popover--right-oriented:before{left:auto;right:15px;margin-left:0}.ce-popover{z-index:4;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.ce-popover--opened{opacity:1;max-height:270px;pointer-events:auto;-webkit-animation:panelShowing .1s ease;animation:panelShowing .1s ease}@media (max-width:650px){.ce-popover--opened{-webkit-animation:panelShowingMobile .25s ease;animation:panelShowingMobile .25s ease}}.ce-popover::-webkit-scrollbar{width:7px}.ce-popover::-webkit-scrollbar-thumb{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:inset 0 0 2px 2px #eff2f5;box-shadow:inset 0 0 2px 2px #eff2f5;border-color:transparent;border-style:solid;border-width:4px 3px 4px 0}@media (max-width:650px){.ce-popover{--offset:5px;position:fixed;max-width:none;min-width:calc(100% - var(--offset)*2);left:var(--offset);right:var(--offset);bottom:calc(var(--offset) + env(safe-area-inset-bottom));top:auto;border-radius:10px}}.ce-popover__items{overflow-y:auto;-ms-scroll-chaining:none;overscroll-behavior:contain}@media (min-width:651px){.ce-popover__items{margin-top:5px}}.ce-popover__item{display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;white-space:nowrap;padding:3px;font-size:14px;line-height:20px;font-weight:500;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:6px}.ce-popover__item:not(:last-of-type){margin-bottom:1px}@media (max-width:650px){.ce-popover__item{font-size:16px;padding:4px}}@media (hover:hover){.ce-popover__item:hover:not(.ce-popover__item--no-visible-hover){background-color:#eff2f5}.ce-popover__item:hover .ce-popover__item-icon{-webkit-box-shadow:none;box-shadow:none}}.ce-popover__item--disabled{color:#707684;cursor:default;pointer-events:none}.ce-popover__item--disabled .ce-popover__item-icon{-webkit-box-shadow:0 0 0 1px #eff0f1;box-shadow:0 0 0 1px #eff0f1}.ce-popover__item--focused:not(.ce-popover__item--no-visible-focus){-webkit-box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px rgba(7,161,227,.08);background:rgba(34,186,255,.08)!important}.ce-popover__item--hidden{display:none}.ce-popover__item--active{background:rgba(56,138,229,.1);color:#388ae5}.ce-popover__item--confirmation{background:#e24a4a}.ce-popover__item--confirmation .ce-popover__item-icon{color:#e24a4a}.ce-popover__item--confirmation .ce-popover__item-label{color:#fff}@media (hover:hover){.ce-popover__item--confirmation:not(.ce-popover__item--no-visible-hover):hover{background:#ce4343}}.ce-popover__item--confirmation:not(.ce-popover__item--no-visible-focus).ce-popover__item--focused{background:#ce4343!important}.ce-popover__item-icon{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:26px;height:26px;-webkit-box-shadow:0 0 0 1px rgba(201,201,204,.48);box-shadow:0 0 0 1px rgba(201,201,204,.48);border-radius:5px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:#fff;-webkit-box-sizing:content-box;box-sizing:content-box;-ms-flex-negative:0;flex-shrink:0;margin-right:10px}.ce-popover__item-icon svg{width:20px;height:20px}@media (max-width:650px){.ce-popover__item-icon{width:36px;height:36px;border-radius:8px}.ce-popover__item-icon svg{width:28px;height:28px}}.ce-popover__item-label{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.ce-popover__item-label:after{content:"";width:25px;display:inline-block}.ce-popover__item-secondary-label{color:#707684;font-size:12px;margin-left:auto;white-space:nowrap;letter-spacing:-.1em;padding-right:5px;margin-bottom:-2px;opacity:.6}@media (max-width:650px){.ce-popover__item-secondary-label{display:none}}.ce-popover__item--active .ce-popover__item-icon,.ce-popover__item--confirmation .ce-popover__item-icon,.ce-popover__item--focused .ce-popover__item-icon{-webkit-box-shadow:none;box-shadow:none}.ce-popover__no-found{display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;white-space:nowrap;padding:3px;font-size:14px;line-height:20px;font-weight:500;cursor:pointer;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:6px}.ce-popover__no-found:not(:last-of-type){margin-bottom:1px}@media (max-width:650px){.ce-popover__no-found{font-size:16px;padding:4px}}.ce-popover__no-found{color:#707684;display:none;cursor:default}.ce-popover__no-found--shown{display:block}@media (max-width:650px){.ce-popover__overlay{position:fixed;top:0;bottom:0;left:0;right:0;background:#1d202b;opacity:.5;z-index:3;-webkit-transition:opacity .12s ease-in;transition:opacity .12s ease-in;will-change:opacity;visibility:visible}.ce-popover .cdx-search-field{display:none}}.ce-popover__overlay--hidden{z-index:0;opacity:0;visibility:hidden}.ce-popover__custom-content:not(:empty){padding:4px}@media (min-width:651px){.ce-popover__custom-content:not(:empty){margin-top:5px;padding:0}}.ce-popover__custom-content--hidden{display:none}.cdx-search-field{--icon-margin-right:10px;background:rgba(232,232,235,.49);border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:2px;display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto}.cdx-search-field__icon{width:26px;height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:var(--icon-margin-right)}.cdx-search-field__icon svg{width:20px;height:20px;color:#707684}.cdx-search-field__input{font-size:14px;outline:none;font-weight:500;font-family:inherit;border:0;background:transparent;margin:0;padding:0;line-height:22px;min-width:calc(100% - 26px - var(--icon-margin-right))}.cdx-search-field__input::-webkit-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-moz-placeholder{color:#707684;font-weight:500}.cdx-search-field__input:-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::placeholder{color:#707684;font-weight:500}';
        }, function(e, t, n) {
          "use strict";
          n.r(t), n.d(t, "nanoid", function() {
            return s;
          }), n.d(t, "customAlphabet", function() {
            return a;
          }), n.d(t, "customRandom", function() {
            return i;
          }), n.d(t, "urlAlphabet", function() {
            return o;
          }), n.d(t, "random", function() {
            return r;
          });
          let o = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
          let r = (e2) => crypto.getRandomValues(new Uint8Array(e2)), i = (e2, t2, n2) => {
            let o2 = (2 << Math.log(e2.length - 1) / Math.LN2) - 1, r2 = -~(1.6 * o2 * t2 / e2.length);
            return () => {
              let i2 = "";
              for (; ; ) {
                let a2 = n2(r2), s2 = r2;
                for (; s2--; )
                  if (i2 += e2[a2[s2] & o2] || "", i2.length === t2)
                    return i2;
              }
            };
          }, a = (e2, t2) => i(e2, t2, r), s = (e2 = 21) => {
            let t2 = "", n2 = crypto.getRandomValues(new Uint8Array(e2));
            for (; e2--; ) {
              let o2 = 63 & n2[e2];
              t2 += o2 < 36 ? o2.toString(36) : o2 < 62 ? (o2 - 26).toString(36).toUpperCase() : o2 < 63 ? "_" : "-";
            }
            return t2;
          };
        }]);
      });
    }
  });

  // node_modules/editorjs-undo/dist/bundle.js
  var require_bundle = __commonJS({
    "node_modules/editorjs-undo/dist/bundle.js"(exports, module) {
      !function(t, e) {
        "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.Undo = e() : t.Undo = e();
      }(window, function() {
        return function(t) {
          var e = {};
          function n(i) {
            if (e[i])
              return e[i].exports;
            var o = e[i] = { i, l: false, exports: {} };
            return t[i].call(o.exports, o, o.exports, n), o.l = true, o.exports;
          }
          return n.m = t, n.c = e, n.d = function(t2, e2, i) {
            n.o(t2, e2) || Object.defineProperty(t2, e2, { enumerable: true, get: i });
          }, n.r = function(t2) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
          }, n.t = function(t2, e2) {
            if (1 & e2 && (t2 = n(t2)), 8 & e2)
              return t2;
            if (4 & e2 && "object" == typeof t2 && t2 && t2.__esModule)
              return t2;
            var i = /* @__PURE__ */ Object.create(null);
            if (n.r(i), Object.defineProperty(i, "default", { enumerable: true, value: t2 }), 2 & e2 && "string" != typeof t2)
              for (var o in t2)
                n.d(i, o, function(e3) {
                  return t2[e3];
                }.bind(null, o));
            return i;
          }, n.n = function(t2) {
            var e2 = t2 && t2.__esModule ? function() {
              return t2.default;
            } : function() {
              return t2;
            };
            return n.d(e2, "a", e2), e2;
          }, n.o = function(t2, e2) {
            return Object.prototype.hasOwnProperty.call(t2, e2);
          }, n.p = "/", n(n.s = 0);
        }([function(t, e, n) {
          "use strict";
          function i(t2, e2) {
            for (var n2 = 0; n2 < e2.length; n2++) {
              var i2 = e2[n2];
              i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
            }
          }
          n.r(e), n.d(e, "default", function() {
            return s;
          });
          var o = function() {
            function t2(e3, n3) {
              !function(t3, e4) {
                if (!(t3 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t2), this.holder = "string" == typeof n3 ? document.getElementById(n3) : n3, this.observer = null, this.debounceTimer = 200, this.mutationDebouncer = this.debounce(function() {
                e3();
              }, this.debounceTimer);
            }
            var e2, n2, o2;
            return e2 = t2, (n2 = [{ key: "setMutationObserver", value: function() {
              var t3 = this, e3 = this.holder;
              this.observer = new MutationObserver(function(e4) {
                t3.mutationHandler(e4);
              }), this.observer.observe(e3, { childList: true, attributes: true, subtree: true, characterData: true, characterDataOldValue: true });
            } }, { key: "mutationHandler", value: function(t3) {
              var e3 = this, n3 = false;
              t3.forEach(function(t4) {
                switch (t4.type) {
                  case "childList":
                    t4.target === e3.holder ? e3.onDestroy() : n3 = true;
                    break;
                  case "characterData":
                    n3 = true;
                    break;
                  case "attributes":
                    t4.target.classList.contains("ce-block") || (n3 = true);
                }
              }), n3 && this.mutationDebouncer();
            } }, { key: "debounce", value: function(t3, e3) {
              var n3, i2 = this;
              return function() {
                for (var o3 = arguments.length, r2 = new Array(o3), s2 = 0; s2 < o3; s2++)
                  r2[s2] = arguments[s2];
                var a = i2;
                clearTimeout(n3), n3 = setTimeout(function() {
                  return t3.apply(a, r2);
                }, e3);
              };
            } }, { key: "onDestroy", value: function() {
              var t3 = new CustomEvent("destroy");
              document.dispatchEvent(t3), this.observer.disconnect();
            } }]) && i(e2.prototype, n2), o2 && i(e2, o2), t2;
          }();
          function r(t2, e2) {
            for (var n2 = 0; n2 < e2.length; n2++) {
              var i2 = e2[n2];
              i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
            }
          }
          var s = function() {
            function t2(e3) {
              var n3 = this, i3 = e3.editor, r2 = e3.onUpdate, s2 = e3.maxLength;
              !function(t3, e4) {
                if (!(t3 instanceof e4))
                  throw new TypeError("Cannot call a class as a function");
              }(this, t2);
              var a = { maxLength: 30, onUpdate: function() {
              } }, u = i3.configuration;
              this.editor = i3, this.shouldSaveHistory = true, this.readOnly = u.readOnly, this.maxLength = s2 || a.maxLength, this.onUpdate = r2 || a.onUpdate, new o(function() {
                return n3.registerChange();
              }, u.holder).setMutationObserver(), this.setEventListeners(), this.initialItem = null, this.clear();
            }
            var e2, n2, i2;
            return e2 = t2, i2 = [{ key: "isReadOnlySupported", get: function() {
              return true;
            } }], (n2 = [{ key: "truncate", value: function(t3, e3) {
              for (; t3.length > e3; )
                t3.shift();
            } }, { key: "initialize", value: function(t3) {
              var e3 = "blocks" in t3 ? t3.blocks : t3, n3 = { index: e3.length - 1, state: e3 };
              this.stack[0] = n3, this.initialItem = n3;
            } }, { key: "clear", value: function() {
              this.stack = this.initialItem ? [this.initialItem] : [{ index: 0, state: [] }], this.position = 0, this.onUpdate();
            } }, { key: "registerChange", value: function() {
              var t3 = this;
              this.readOnly || (this.editor && this.editor.save && this.shouldSaveHistory && this.editor.save().then(function(e3) {
                t3.editorDidUpdate(e3.blocks) && t3.save(e3.blocks);
              }), this.shouldSaveHistory = true);
            } }, { key: "editorDidUpdate", value: function(t3) {
              var e3 = this.stack[this.position].state;
              return t3.length !== e3.length || JSON.stringify(e3) !== JSON.stringify(t3);
            } }, { key: "save", value: function(t3) {
              this.position >= this.maxLength && this.truncate(this.stack, this.maxLength), this.position = Math.min(this.position, this.stack.length - 1), this.stack = this.stack.slice(0, this.position + 1);
              var e3 = this.editor.blocks.getCurrentBlockIndex();
              this.stack.push({ index: e3, state: t3 }), this.position += 1, this.onUpdate();
            } }, { key: "undo", value: function() {
              var t3 = this;
              if (this.canUndo()) {
                this.shouldSaveHistory = false;
                var e3 = this.stack[this.position -= 1], n3 = e3.index, i3 = e3.state;
                this.onUpdate(), this.editor.blocks.render({ blocks: i3 }).then(function() {
                  return t3.editor.caret.setToBlock(n3, "end");
                });
              }
            } }, { key: "redo", value: function() {
              var t3 = this;
              if (this.canRedo()) {
                this.shouldSaveHistory = false;
                var e3 = this.stack[this.position += 1], n3 = e3.index, i3 = e3.state;
                this.onUpdate(), this.editor.blocks.render({ blocks: i3 }).then(function() {
                  return t3.editor.caret.setToBlock(n3, "end");
                });
              }
            } }, { key: "canUndo", value: function() {
              return !this.readOnly && this.position > 0;
            } }, { key: "canRedo", value: function() {
              return !this.readOnly && this.position < this.count();
            } }, { key: "count", value: function() {
              return this.stack.length - 1;
            } }, { key: "setEventListeners", value: function() {
              var t3 = this, e3 = /(Mac)/i.test(navigator.platform) ? "metaKey" : "ctrlKey", n3 = function(n4) {
                n4[e3] && "z" === n4.key && (n4.preventDefault(), t3.undo());
              }, i3 = function(n4) {
                n4[e3] && "y" === n4.key && (n4.preventDefault(), t3.redo());
              };
              document.addEventListener("keydown", n3), document.addEventListener("keydown", i3), document.addEventListener("destroy", function() {
                document.removeEventListener("keydown", n3), document.removeEventListener("keydown", i3);
              });
            } }]) && r(e2.prototype, n2), i2 && r(e2, i2), t2;
          }();
        }]).default;
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/theme-switcher.js
  frappe.provide("frappe.ui");
  frappe.ui.ThemeSwitcher = class CustomThemeSwitcher extends frappe.ui.ThemeSwitcher {
    constructor() {
      super();
    }
    fetch_themes() {
      return new Promise((resolve) => {
        this.themes = [
          {
            name: "light",
            label: "Frappe Light",
            info: "Light Theme"
          },
          {
            name: "dark",
            label: "Timeless Night",
            info: "Dark Theme"
          },
          {
            name: "automatic",
            label: "Automatic",
            info: "Uses system's theme to switch between light and dark mode"
          },
          {
            name: "easy",
            label: "Easy",
            info: "Easy Ui"
          }
        ];
        resolve(this.themes);
      });
    }
  };

  // ../easy_ui/easy_ui/public/js/nav-layout.js
  var sidebar = document.getElementById("sidebar");
  if (sidebar) {
    sidebar.style.color = "red";
  } else {
    console.log("Element with ID 'sidebar' not found");
  }
  console.log("Element with ID 'sidebar' not found");

  // frappe-html:/home/liban/frappe-bench/apps/easy_ui/easy_ui/public/js/frappe/ui/toolbar/navbar.html
  frappe.templates["navbar"] = `
<div class="container  " style="margin-bottom: 1%; margin-left: 15% ; padding-top: 1%;  ">
	<!-- <div class="col-lg-2 layout-side-section">Hello world</div> -->

	<header class="layout-navbar navbar-blur navbar navbar-expand " role="navigation" style="z-index: 1004; ">
			
						<a class="navbar-brand navbar-home" href="/app">
							<img
								class="app-logo"
								style="width: {{ navbar_settings.logo_width || 28 }}px"
								src="{{ frappe.boot.app_logo_url }}"
								alt="{{ __("App Logo") }}"
							>
						</a>
						<div>
							<form class="form-inline fill-width justify-content-end" role="search" onsubmit="return false;">
								{% if (frappe.boot.read_only) { %}
									<span class="indicator-pill yellow no-indicator-dot" title="{%= __("Your site is undergoing maintenance or being updated.") %}">
										{%= __("Read Only Mode") %}
									</span>
								{% } %}
								{% if (frappe.boot.user.impersonated_by) { %}
									<span class="indicator-pill red no-indicator-dot" title="{%= __("You are impersonating as another user.") %}">
										{%= __("Impersonating {0}", [frappe.boot.user.name]) %}
									</span>
								{% } %}
								<div class="input-group search-bar text-muted hidden">
									<input
										id="navbar-search"
										type="text"
										class="form-control"
										placeholder="{%= __('Search or type a command ({0})', [frappe.utils.is_mac() ? '\u2318 + G' : 'Ctrl + G']) %}"
										aria-haspopup="true"
									>
									<span class="search-icon">
										<svg class="icon icon-sm"><use href="#icon-search"></use></svg>
									</span>
								</div>
							</form>
						</div>
							
						
						<ul class="nav navbar-nav d-none d-sm-flex" id="navbar-breadcrumbs"></ul>
						<div class="collapse navbar-collapse justify-content-end" style="justify-content: space-between;" >
							
							
						</div>
				
		
			<div >
				<ul class="navbar-nav" style="background-color: transparent;">
					<li class="nav-item dropdown dropdown-notifications dropdown-mobile hidden">
						<button
							class="btn-reset nav-link notifications-icon text-muted"
							data-toggle="dropdown"
							aria-haspopup="true"
							aria-expanded="false"
						>
							<span class="notifications-seen">
								<span class="sr-only">{{ __("No new notifications") }}</span>
								<svg class="es-icon icon-sm" style="stroke:none;"><use href="#es-line-notifications"></use></svg>
							</span>
							<span class="notifications-unseen">
								<span class="sr-only">{{ __("You have unseen notifications") }}</span>
								<svg class="es-icon icon-sm"><use href="#es-line-notifications-unseen"></use></svg>
							</span>
						</button>
						<div class="dropdown-menu notifications-list dropdown-menu-right" role="menu">
							<div class="notification-list-header">
								<div class="header-items"></div>
								<div class="header-actions"></div>
							</div>
							<div class="notification-list-body">
								<div class="panel-notifications"></div>
								<div class="panel-events"></div>
								<div class="panel-changelog-feed"></div>
							</div>
						</div>
					</li>
					<li class="nav-item dropdown dropdown-message dropdown-mobile hidden">
						<button
							class="btn-reset nav-link notifications-icon text-muted"
							data-toggle="dropdown"
							aria-haspopup="true"
							aria-expanded="true"
						>
							<span>
								<svg class="es-icon icon-sm"><use href="#es-line-chat-alt"></use></svg>
							</span>
						</button>
					</li>
					<li class="vertical-bar d-none d-sm-block"></li>
					<li class="nav-item dropdown dropdown-help dropdown-mobile d-none d-lg-block">
						<button
							class="btn-reset nav-link"
							data-toggle="dropdown"
							aria-controls="toolbar-help"
							aria-label="{{ __("Help Dropdown") }}"
						>
							<span>
								{{ __("Help") }}
								<svg class="es-icon icon-xs"><use href="#es-line-down"></use></svg>
							</span>
						</button>
						<div class="dropdown-menu dropdown-menu-right" id="toolbar-help" role="menu">
							<div id="help-links"></div>
							<div class="dropdown-divider documentation-links"></div>
							{% for item in navbar_settings.help_dropdown %}
								{% if (!item.hidden) { %}
									{% if (item.route) { %}
										<a class="dropdown-item" href="{{ item.route }}">
											{%= __(item.item_label) %}
										</a>
									{% } else if (item.action) { %}
										<button class="btn-reset dropdown-item" onclick="return {{ item.action }}">
											{%= __(item.item_label) %}
										</button>
									{% } else { %}
										<div class="dropdown-divider"></div>
									{% } %}
								{% } %}
							{% endfor %}
						</div>
					</li>
					<li class="nav-item dropdown dropdown-navbar-user dropdown-mobile">
						<button
							class="btn-reset nav-link"
							data-toggle="dropdown"
							aria-label="{{ __("User Menu") }}"
						>
							{{ avatar }}
						</button>
						<div class="dropdown-menu dropdown-menu-right" id="toolbar-user" role="menu">
							{% for item in navbar_settings.settings_dropdown %}
								{% if (!item.hidden) { %}
									{% if (item.route) { %}
										<a class="dropdown-item" href="{{ item.route }}">
											{%= __(item.item_label) %}
										</a>
									{% } else if (item.action) { %}
										<button class="btn-reset dropdown-item" onclick="return {{ item.action }}">
											{%= __(item.item_label) %}
										</button>
									{% } else { %}
										<div class="dropdown-divider"></div>
									{% } %}
								{% } %}
							{% endfor %}
						</div>
					</li>
				</ul>
			</div>
		
	</header>
	
</div>

<!-- <div class="sticky-top yooltech">
	<header class="navbar navbar-expand" role="navigation">
		<div class="container">
			<a class="navbar-brand navbar-home" href="/app">
				<img
					class="app-logo"
					style="width: {{ navbar_settings.logo_width || 28 }}px"
					src="{{ frappe.boot.app_logo_url }}"
					alt="{{ __("App Logo") }}"
				>
			</a>
			<ul class="nav navbar-nav d-none d-sm-flex" id="navbar-breadcrumbs"></ul>
			<div class="collapse navbar-collapse justify-content-end">
				<form class="form-inline fill-width justify-content-end" role="search" onsubmit="return false;">
					{% if (frappe.boot.read_only) { %}
						<span class="indicator-pill yellow no-indicator-dot" title="{%= __("Your site is undergoing maintenance or being updated.") %}">
							{%= __("Read Only Mode") %}
						</span>
					{% } %}
					{% if (frappe.boot.user.impersonated_by) { %}
						<span class="indicator-pill red no-indicator-dot" title="{%= __("You are impersonating as another user.") %}">
							{%= __("Impersonating {0}", [frappe.boot.user.name]) %}
						</span>
					{% } %}
					<div class="input-group search-bar text-muted hidden">
						<input
							id="navbar-search"
							type="text"
							class="form-control"
							placeholder="{%= __('Search or type a command ({0})', [frappe.utils.is_mac() ? '\u2318 + G' : 'Ctrl + G']) %}"
							aria-haspopup="true"
						>
						<span class="search-icon">
							<svg class="icon icon-sm"><use href="#icon-search"></use></svg>
						</span>
					</div>
				</form>
				<ul class="navbar-nav">
					<li class="nav-item dropdown dropdown-notifications dropdown-mobile hidden">
						<button
							class="btn-reset nav-link notifications-icon text-muted"
							data-toggle="dropdown"
							aria-haspopup="true"
							aria-expanded="false"
						>
							<span class="notifications-seen">
								<span class="sr-only">{{ __("No new notifications") }}</span>
								<svg class="es-icon icon-sm" style="stroke:none;"><use href="#es-line-notifications"></use></svg>
							</span>
							<span class="notifications-unseen">
								<span class="sr-only">{{ __("You have unseen notifications") }}</span>
								<svg class="es-icon icon-sm"><use href="#es-line-notifications-unseen"></use></svg>
							</span>
						</button>
						<div class="dropdown-menu notifications-list dropdown-menu-right" role="menu">
							<div class="notification-list-header">
								<div class="header-items"></div>
								<div class="header-actions"></div>
							</div>
							<div class="notification-list-body">
								<div class="panel-notifications"></div>
								<div class="panel-events"></div>
								<div class="panel-changelog-feed"></div>
							</div>
						</div>
					</li>
					<li class="nav-item dropdown dropdown-message dropdown-mobile hidden">
						<button
							class="btn-reset nav-link notifications-icon text-muted"
							data-toggle="dropdown"
							aria-haspopup="true"
							aria-expanded="true"
						>
							<span>
								<svg class="es-icon icon-sm"><use href="#es-line-chat-alt"></use></svg>
							</span>
						</button>
					</li>
					<li class="vertical-bar d-none d-sm-block"></li>
					<li class="nav-item dropdown dropdown-help dropdown-mobile d-none d-lg-block">
						<button
							class="btn-reset nav-link"
							data-toggle="dropdown"
							aria-controls="toolbar-help"
							aria-label="{{ __("Help Dropdown") }}"
						>
							<span>
								{{ __("Help") }}
								<svg class="es-icon icon-xs"><use href="#es-line-down"></use></svg>
							</span>
						</button>
						<div class="dropdown-menu dropdown-menu-right" id="toolbar-help" role="menu">
							<div id="help-links"></div>
							<div class="dropdown-divider documentation-links"></div>
							{% for item in navbar_settings.help_dropdown %}
								{% if (!item.hidden) { %}
									{% if (item.route) { %}
										<a class="dropdown-item" href="{{ item.route }}">
											{%= __(item.item_label) %}
										</a>
									{% } else if (item.action) { %}
										<button class="btn-reset dropdown-item" onclick="return {{ item.action }}">
											{%= __(item.item_label) %}
										</button>
									{% } else { %}
										<div class="dropdown-divider"></div>
									{% } %}
								{% } %}
							{% endfor %}
						</div>
					</li>
					<li class="nav-item dropdown dropdown-navbar-user dropdown-mobile">
						<button
							class="btn-reset nav-link"
							data-toggle="dropdown"
							aria-label="{{ __("User Menu") }}"
						>
							{{ avatar }}
						</button>
						<div class="dropdown-menu dropdown-menu-right" id="toolbar-user" role="menu">
							{% for item in navbar_settings.settings_dropdown %}
								{% if (!item.hidden) { %}
									{% if (item.route) { %}
										<a class="dropdown-item" href="{{ item.route }}">
											{%= __(item.item_label) %}
										</a>
									{% } else if (item.action) { %}
										<button class="btn-reset dropdown-item" onclick="return {{ item.action }}">
											{%= __(item.item_label) %}
										</button>
									{% } else { %}
										<div class="dropdown-divider"></div>
									{% } %}
								{% } %}
							{% endfor %}
						</div>
					</li>
				</ul>
			</div>
		</div>
	</header>

	{% if !localStorage.getItem("dismissed_announcement_widget") && strip_html(navbar_settings.announcement_widget) != '' %}
	<div class="announcement-widget form-message p-2 m-0" style="position: relative; z-index: -1; border-radius: 0; background-color: var(--bg-blue);">
		<div class="container flex justify-between align-center mx-auto">
			{{ navbar_settings.announcement_widget }}
			<div class="close-message p-0 mr-2" style="position: relative;">
			{{ frappe.utils.icon("close") }}
			</div>
		</div>
	</div>
	{% endif %}

</div> -->
`;

  // frappe-html:/home/liban/frappe-bench/apps/easy_ui/easy_ui/public/js/frappe/ui/page.html
  frappe.templates["page"] = `
<div class="col-lg-2 layout-side-section fixed-top layout-vertical-nav "></div>

<div class="container page-body  " style=" padding-top: 1%; margin-right: 7%; ">

	<div class="page-toolbar hide">
		
		<div class="container">
			
		</div>
	</div>

	<div class="page-wrapper">


		<div class="page-content ">

	
			<div class="workflow-button-area btn-group pull-right hide">
				
			</div>
			<div class="page-head flex " style="margin-bottom: 1%; box-shadow: 2px 2px 2px 2px rgb(235, 230, 230); border-radius: 4px;">
				<div class="container">
					<div class="row flex align-center page-head-content justify-between">
						<div class="col-md-4 col-sm-6 col-xs-7 page-title">
							<!-- <div class="title-image hide hidden-md hidden-lg"></div> -->
							<!-- title -->
							<button class="btn-reset sidebar-toggle-btn">
								<svg class="es-icon icon-md sidebar-toggle-placeholder">
									<use href="#es-line-align-justify"></use>
								</svg>
								<span class="sidebar-toggle-icon">
									<svg class="es-icon icon-md">
										<use href="#es-line-sidebar-collapse">
										</use>
									</svg>
								</span>
							</button>
							<div class="flex fill-width title-area">
								<div>
									<div class="flex">
										<h3 class="ellipsis title-text"></h3>
										<span class="indicator-pill whitespace-nowrap"></span>
									</div>
									<div class="ellipsis sub-heading hide text-muted"></div>
								</div>
								<button class="btn btn-default more-button hide">
									<svg class="icon icon-sm">
										<use href="#icon-dot-horizontal">
										</use>
									</svg>
								</button>
							</div>
						</div>
						<div class="flex col page-actions justify-content-end">
							<!-- buttons -->
							<div class="custom-actions hide hidden-xs hidden-md"></div>
							<div class="standard-actions flex">
								<span class="page-icon-group hide hidden-xs hidden-sm"></span>
								<div class="menu-btn-group hide">
									<button type="button" class="btn btn-default icon-btn" data-toggle="dropdown" aria-expanded="false" aria-label="{{ __("Menu") }}">
										<span>
											<span class="menu-btn-group-label">
												<svg class="icon icon-sm">
													<use href="#icon-dot-horizontal">
													</use>
												</svg>
											</span>
										</span>
									</button>
									<ul class="dropdown-menu dropdown-menu-right" role="menu"></ul>
								</div>
								<button class="btn btn-secondary btn-default btn-sm hide"></button>
								<div class="actions-btn-group hide">
									<button type="button" class="btn btn-primary btn-sm" data-toggle="dropdown" aria-expanded="false">
										<span>
											<span class="hidden-xs actions-btn-group-label">{%= __("Actions") %}</span>
											<svg class="icon icon-xs">
												<use href="#icon-select">
												</use>
											</svg>
										</span>
									</button>
									<ul class="dropdown-menu dropdown-menu-right" role="menu">
									</ul>
								</div>
								<button class="btn btn-primary btn-sm hide primary-action"></button>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="clearfix"></div>
		</div>
	</div>
</div>
`;

  // ../easy_ui/easy_ui/public/js/frappe/ui/pages.js
  frappe.ui.make_app_page = function(opts) {
    opts.parent.page = new frappe.ui.Page(opts);
    return opts.parent.page;
  };
  frappe.ui.pages = {};
  frappe.ui.Page = class Page {
    constructor(opts) {
      $.extend(this, opts);
      this.set_document_title = true;
      this.buttons = {};
      this.fields_dict = {};
      this.views = {};
      this.make();
      frappe.ui.pages[frappe.get_route_str()] = this;
    }
    make() {
      this.wrapper = $(this.parent);
      this.add_main_section();
      this.setup_scroll_handler();
      this.setup_sidebar_toggle();
    }
    setup_scroll_handler() {
      let last_scroll = 0;
      $(window).scroll(
        frappe.utils.throttle(() => {
          $(".page-head").toggleClass("drop-shadow", !!document.documentElement.scrollTop);
          let current_scroll = document.documentElement.scrollTop;
          if (current_scroll > 0 && last_scroll <= current_scroll) {
            $(".page-head").css("top", "-15px");
          } else {
            $(".page-head").css("top", "var(--navbar-height)");
          }
          last_scroll = current_scroll;
        }, 500)
      );
    }
    get_empty_state(title, message, primary_action) {
      return $(`<div class="page-card-container">
  			<div class="page-card">
  				<div class="page-card-head">
  					<span class="indicator blue">
  						${title}</span>
  				</div>
  				<p>${message}</p>
  				<div>
  					<button class="btn btn-primary btn-sm">${primary_action}</button>
  				</div>
  			</div>
  		</div>`);
    }
    load_lib(callback) {
      frappe.require(this.required_libs, callback);
    }
    add_main_section() {
      $(frappe.render_template("page", {})).appendTo(this.wrapper);
      if (this.single_column) {
        this.add_view(
          "main",
          '<div class="row layout-main">					<div class="col-md-12 layout-main-section-wrapper">						<div class="layout-main-section"></div>						<div class="layout-footer hide"></div>					</div>				</div>'
        );
      } else {
        this.add_view(
          "main",
          `
				<div class="row layout-main">
					<div class="col layout-main-section-wrapper">
						<div class="layout-main-section"></div>
						<div class="layout-footer hide"></div>
					</div>
				</div>
			`
        );
      }
      this.setup_page();
    }
    setup_page() {
      this.$title_area = this.wrapper.find(".title-area");
      this.$sub_title_area = this.wrapper.find("h6");
      if (this.title)
        this.set_title(this.title);
      if (this.icon)
        this.get_main_icon(this.icon);
      this.body = this.main = this.wrapper.find(".layout-main-section");
      this.container = this.wrapper.find(".page-body");
      this.sidebar = this.wrapper.find(".layout-side-section");
      this.footer = this.wrapper.find(".layout-footer");
      this.indicator = this.wrapper.find(".indicator-pill");
      this.page_actions = this.wrapper.find(".page-actions");
      this.btn_primary = this.page_actions.find(".primary-action");
      this.btn_secondary = this.page_actions.find(".btn-secondary");
      this.menu = this.page_actions.find(".menu-btn-group .dropdown-menu");
      this.menu_btn_group = this.page_actions.find(".menu-btn-group");
      this.actions = this.page_actions.find(".actions-btn-group .dropdown-menu");
      this.actions_btn_group = this.page_actions.find(".actions-btn-group");
      this.standard_actions = this.page_actions.find(".standard-actions");
      this.custom_actions = this.page_actions.find(".custom-actions");
      this.page_form = $('<div class="page-form row hide"></div>').prependTo(this.main);
      this.inner_toolbar = this.custom_actions;
      this.icon_group = this.page_actions.find(".page-icon-group");
      if (this.make_page) {
        this.make_page();
      }
      this.card_layout && this.main.addClass("frappe-card");
      let menu_btn = this.menu_btn_group.find("button");
      menu_btn.attr("title", __("Menu")).tooltip({ delay: { show: 600, hide: 100 } });
      frappe.ui.keys.get_shortcut_group(this.page_actions[0]).add(menu_btn, menu_btn.find(".menu-btn-group-label"));
      let action_btn = this.actions_btn_group.find("button");
      frappe.ui.keys.get_shortcut_group(this.page_actions[0]).add(action_btn, action_btn.find(".actions-btn-group-label"));
      this.skip_link_to_main = $("<button>").addClass("sr-only sr-only-focusable btn btn-primary-light my-2").text(__("Navigate to main content")).attr({ tabindex: 0, role: "link" }).on("click", (e) => {
        e.preventDefault();
        const main = this.main.get(0);
        main.setAttribute("tabindex", -1);
        main.focus();
        main.addEventListener(
          "blur",
          () => {
            main.removeAttribute("tabindex");
          },
          { once: true }
        );
      }).appendTo(this.sidebar);
    }
    setup_sidebar_toggle() {
      let sidebar_toggle = $(".page-head").find(".sidebar-toggle-btn");
      let sidebar_wrapper = this.wrapper.find(".layout-side-section");
      if (this.disable_sidebar_toggle || !sidebar_wrapper.length) {
        sidebar_toggle.last().remove();
      } else {
        if (!frappe.is_mobile()) {
          sidebar_toggle.attr("title", __("Toggle Sidebar"));
        }
        sidebar_toggle.attr("aria-label", __("Toggle Sidebar"));
        sidebar_toggle.tooltip({
          delay: { show: 600, hide: 100 },
          trigger: "hover"
        });
        sidebar_toggle.click(() => {
          if (frappe.utils.is_xs() || frappe.utils.is_sm()) {
            this.setup_overlay_sidebar();
          } else {
            sidebar_wrapper.toggle();
          }
          $(document.body).trigger("toggleSidebar");
          this.update_sidebar_icon();
        });
      }
    }
    setup_overlay_sidebar() {
      this.sidebar.find(".close-sidebar").remove();
      let overlay_sidebar = this.sidebar.find(".overlay-sidebar").addClass("opened");
      $('<div class="close-sidebar">').hide().appendTo(this.sidebar).fadeIn();
      let scroll_container = $("html").css("overflow-y", "hidden");
      this.sidebar.find(".close-sidebar").on("click", (e) => this.close_sidebar(e));
      this.sidebar.on("click", "button:not(.dropdown-toggle)", (e) => this.close_sidebar(e));
      this.close_sidebar = () => {
        scroll_container.css("overflow-y", "");
        this.sidebar.find("div.close-sidebar").fadeOut(() => {
          overlay_sidebar.removeClass("opened").find(".dropdown-toggle").removeClass("text-muted");
        });
      };
    }
    update_sidebar_icon() {
      let sidebar_toggle = $(".page-head").find(".sidebar-toggle-btn");
      let sidebar_toggle_icon = sidebar_toggle.find(".sidebar-toggle-icon");
      let sidebar_wrapper = this.wrapper.find(".layout-side-section");
      let is_sidebar_visible = $(sidebar_wrapper).is(":visible");
      sidebar_toggle_icon.html(
        frappe.utils.icon(
          is_sidebar_visible ? "es-line-sidebar-collapse" : "es-line-sidebar-expand",
          "md"
        )
      );
    }
    set_indicator(label, color) {
      this.clear_indicator().removeClass("hide").html(`<span>${label}</span>`).addClass(color);
    }
    add_action_icon(icon, click, css_class = "", tooltip_label) {
      const button = $(`
			<button class="text-muted btn btn-default ${css_class} icon-btn">
				${frappe.utils.icon(icon)}
			</button>
		`);
      if (!tooltip_label) {
        if (icon.startsWith("es-")) {
          icon = icon.replace("es-line-", "");
          icon = icon.replace("es-solid-", "");
          icon = icon.replace("es-small-", "");
        }
        tooltip_label = frappe.unscrub(icon);
      }
      button.appendTo(this.icon_group.removeClass("hide"));
      button.click(click);
      button.attr("title", __(tooltip_label)).tooltip({ delay: { show: 600, hide: 100 }, trigger: "hover" });
      return button;
    }
    clear_indicator() {
      return this.indicator.removeClass().addClass("indicator-pill no-indicator-dot whitespace-nowrap hide");
    }
    get_icon_label(icon, label) {
      let icon_name = icon;
      let size = "xs";
      if (typeof icon === "object") {
        icon_name = icon.icon;
        size = icon.size || "xs";
      }
      return `${icon ? frappe.utils.icon(icon_name, size) : ""} <span class="hidden-xs"> ${__(
        label
      )} </span>`;
    }
    set_action(btn, opts) {
      let me = this;
      if (opts.icon) {
        opts.iconHTML = this.get_icon_label(opts.icon, opts.label);
      }
      this.clear_action_of(btn);
      btn.removeClass("hide").prop("disabled", false).html(opts.iconHTML || opts.label).attr("data-label", opts.label).on("click", function() {
        let response = opts.click.apply(this, [btn]);
        me.btn_disable_enable(btn, response);
      });
      if (opts.working_label) {
        btn.attr("data-working-label", opts.working_label);
      }
      let text_span = btn.find("span");
      frappe.ui.keys.get_shortcut_group(this).add(btn, text_span.length ? text_span : btn);
    }
    set_primary_action(label, click, icon, working_label) {
      this.set_action(this.btn_primary, {
        label,
        click,
        icon,
        working_label
      });
      return this.btn_primary;
    }
    set_secondary_action(label, click, icon, working_label) {
      this.set_action(this.btn_secondary, {
        label,
        click,
        icon,
        working_label
      });
      return this.btn_secondary;
    }
    clear_action_of(btn) {
      btn.addClass("hide").unbind("click").removeAttr("data-working-label");
    }
    clear_primary_action() {
      this.clear_action_of(this.btn_primary);
    }
    clear_secondary_action() {
      this.clear_action_of(this.btn_secondary);
    }
    clear_actions() {
      this.clear_primary_action();
      this.clear_secondary_action();
    }
    clear_custom_actions() {
      this.custom_actions.addClass("hide").empty();
    }
    clear_icons() {
      this.icon_group.addClass("hide").empty();
    }
    add_menu_item(label, click, standard, shortcut, show_parent) {
      return this.add_dropdown_item({
        label,
        click,
        standard,
        parent: this.menu,
        shortcut,
        show_parent
      });
    }
    add_custom_menu_item(parent, label, click, standard, shortcut, icon = null) {
      return this.add_dropdown_item({
        label,
        click,
        standard,
        parent,
        shortcut,
        icon
      });
    }
    clear_menu() {
      this.clear_btn_group(this.menu);
    }
    show_menu() {
      this.menu_btn_group.removeClass("hide");
    }
    hide_menu() {
      this.menu_btn_group.addClass("hide");
    }
    show_icon_group() {
      this.icon_group.removeClass("hide");
    }
    hide_icon_group() {
      this.icon_group.addClass("hide");
    }
    show_actions_menu() {
      this.actions_btn_group.removeClass("hide");
    }
    hide_actions_menu() {
      this.actions_btn_group.addClass("hide");
    }
    add_action_item(label, click, standard) {
      return this.add_dropdown_item({
        label,
        click,
        standard,
        parent: this.actions
      });
    }
    add_actions_menu_item(label, click, standard, shortcut) {
      return this.add_dropdown_item({
        label,
        click,
        standard,
        shortcut,
        parent: this.actions,
        show_parent: false
      });
    }
    clear_actions_menu() {
      this.clear_btn_group(this.actions);
    }
    add_dropdown_item({
      label,
      click,
      standard,
      parent,
      shortcut,
      show_parent = true,
      icon = null
    }) {
      if (show_parent) {
        parent.parent().removeClass("hide hidden-xl");
      }
      let $link = this.is_in_group_button_dropdown(parent, "li > a.grey-link > span", label);
      if ($link)
        return $link;
      let $li;
      let $icon = ``;
      if (icon) {
        $icon = `<span class="menu-item-icon">${frappe.utils.icon(icon)}</span>`;
      }
      if (shortcut) {
        let shortcut_obj = this.prepare_shortcut_obj(shortcut, click, label);
        $li = $(`
				<li>
					<a class="grey-link dropdown-item" href="#" onClick="return false;">
						${$icon}
						<span class="menu-item-label">${label}</span>
						<kbd class="pull-right">
							<span>${shortcut_obj.shortcut_label}</span>
						</kbd>
					</a>
				</li>
			`);
        frappe.ui.keys.add_shortcut(shortcut_obj);
      } else {
        $li = $(`
				<li>
					<a class="grey-link dropdown-item" href="#" onClick="return false;">
						${$icon}
						<span class="menu-item-label">${label}</span>
					</a>
				</li>
			`);
      }
      $link = $li.find("a").on("click", (e) => {
        if (e.ctrlKey || e.metaKey) {
          frappe.open_in_new_tab = true;
        }
        return click();
      });
      if (standard) {
        $li.appendTo(parent);
      } else {
        this.divider = parent.find(".dropdown-divider");
        if (!this.divider.length) {
          this.divider = $('<li class="dropdown-divider user-action"></li>').prependTo(
            parent
          );
        }
        $li.addClass("user-action").insertBefore(this.divider);
      }
      frappe.ui.keys.get_shortcut_group(parent.get(0)).add($link, $link.find(".menu-item-label"));
      return $link;
    }
    prepare_shortcut_obj(shortcut, click, label) {
      let shortcut_obj;
      if (typeof shortcut === "string") {
        shortcut_obj = { shortcut };
      } else {
        shortcut_obj = shortcut;
      }
      if (frappe.utils.is_mac()) {
        shortcut_obj.shortcut_label = shortcut_obj.shortcut.replace("Ctrl", "\u2318").replace("Alt", "\u2325");
      } else {
        shortcut_obj.shortcut_label = shortcut_obj.shortcut;
      }
      shortcut_obj.shortcut_label = shortcut_obj.shortcut_label.replace("Shift", "\u21E7");
      shortcut_obj.shortcut = shortcut_obj.shortcut.toLowerCase();
      if (!shortcut_obj.action) {
        shortcut_obj.action = click;
      }
      if (!shortcut_obj.description) {
        shortcut_obj.description = label;
      }
      shortcut_obj.page = this;
      return shortcut_obj;
    }
    is_in_group_button_dropdown(parent, selector, label) {
      if (!selector)
        selector = "li";
      if (!label || !parent)
        return false;
      const item_selector = `${selector}[data-label="${encodeURIComponent(label)}"]`;
      const existing_items = $(parent).find(item_selector);
      return (existing_items == null ? void 0 : existing_items.length) > 0 && existing_items;
    }
    clear_btn_group(parent) {
      parent.empty();
      parent.parent().addClass("hide");
    }
    add_divider() {
      return $('<li class="dropdown-divider"></li>').appendTo(this.menu);
    }
    get_or_add_inner_group_button(label) {
      var $group = this.inner_toolbar.find(
        `.inner-group-button[data-label="${encodeURIComponent(label)}"]`
      );
      if (!$group.length) {
        $group = $(
          `<div class="inner-group-button" data-label="${encodeURIComponent(label)}">
					<button type="button" class="btn btn-default ellipsis" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						${label}
						${frappe.utils.icon("select", "xs")}
					</button>
					<div role="menu" class="dropdown-menu"></div>
				</div>`
        ).appendTo(this.inner_toolbar);
      }
      return $group;
    }
    get_inner_group_button(label) {
      return this.inner_toolbar.find(
        `.inner-group-button[data-label="${encodeURIComponent(label)}"]`
      );
    }
    set_inner_btn_group_as_primary(label) {
      this.get_or_add_inner_group_button(label).find("button").removeClass("btn-default").addClass("btn-primary");
    }
    btn_disable_enable(btn, response) {
      if (response && response.then) {
        btn.prop("disabled", true);
        response.then(() => {
          btn.prop("disabled", false);
        });
      } else if (response && response.always) {
        btn.prop("disabled", true);
        response.always(() => {
          btn.prop("disabled", false);
        });
      }
    }
    add_inner_button(label, action, group, type = "default") {
      var me = this;
      let _action = function() {
        let btn = $(this);
        let response = action();
        me.btn_disable_enable(btn, response);
      };
      let menu_item_label = group ? `${group} > ${label}` : label;
      let menu_item = this.add_menu_item(menu_item_label, _action, false, false, false);
      menu_item.parent().addClass("hidden-xl");
      if (this.menu_btn_group.hasClass("hide")) {
        this.menu_btn_group.removeClass("hide").addClass("hidden-xl");
      }
      if (group) {
        var $group = this.get_or_add_inner_group_button(group);
        $(this.inner_toolbar).removeClass("hide");
        if (!this.is_in_group_button_dropdown($group.find(".dropdown-menu"), "a", label)) {
          return $(
            `<a class="dropdown-item" href="#" onclick="return false;" data-label="${encodeURIComponent(
              label
            )}">${label}</a>`
          ).on("click", _action).appendTo($group.find(".dropdown-menu"));
        }
      } else {
        let button = this.inner_toolbar.find(
          `button[data-label="${encodeURIComponent(label)}"]`
        );
        if (button.length == 0) {
          button = $(`<button data-label="${encodeURIComponent(
            label
          )}" class="btn btn-${type} ellipsis">
					${__(label)}
				</button>`);
          button.on("click", _action);
          button.appendTo(this.inner_toolbar.removeClass("hide"));
        }
        return button;
      }
    }
    remove_inner_button(label, group) {
      if (typeof label === "string") {
        label = [label];
      }
      label = label.map((l) => __(l));
      if (group) {
        var $group = this.get_inner_group_button(__(group));
        if ($group.length) {
          $group.find(`.dropdown-item[data-label="${encodeURIComponent(label)}"]`).remove();
        }
        if ($group.find(".dropdown-item").length === 0)
          $group.remove();
      } else {
        this.inner_toolbar.find(`button[data-label="${encodeURIComponent(label)}"]`).remove();
      }
    }
    change_inner_button_type(label, group, type) {
      let btn;
      if (group) {
        var $group = this.get_inner_group_button(__(group));
        if ($group.length) {
          btn = $group.find(`.dropdown-item[data-label="${encodeURIComponent(label)}"]`);
        }
      } else {
        btn = this.inner_toolbar.find(`button[data-label="${encodeURIComponent(label)}"]`);
      }
      if (btn) {
        btn.removeClass().addClass(`btn btn-${type} ellipsis`);
      }
    }
    add_inner_message(message) {
      let $message = $(`<span class='inner-page-message text-muted small'>${message}</div>`);
      this.inner_toolbar.find(".inner-page-message").remove();
      this.inner_toolbar.removeClass("hide").prepend($message);
      return $message;
    }
    clear_inner_toolbar() {
      this.inner_toolbar.empty().addClass("hide");
    }
    clear_user_actions() {
      this.menu.find(".user-action").remove();
    }
    get_title_area() {
      return this.$title_area;
    }
    set_title(title, icon = null, strip = true, tab_title = "", tooltip_label = "") {
      if (!title)
        title = "";
      if (strip) {
        title = strip_html(title);
      }
      this.title = title;
      frappe.utils.set_title(tab_title || title);
      if (icon) {
        title = `${frappe.utils.icon(icon)} ${title}`;
      }
      let title_wrapper = this.$title_area.find(".title-text");
      title_wrapper.html(title);
      title_wrapper.attr("title", tooltip_label || this.title);
      if (tooltip_label) {
        title_wrapper.tooltip({ delay: { show: 600, hide: 100 }, trigger: "hover" });
      }
    }
    set_title_sub(txt) {
      this.$sub_title_area.html(txt).toggleClass("hide", !!!txt);
    }
    get_main_icon(icon) {
      return this.$title_area.find(".title-icon").html('<i class="' + icon + ' fa-fw"></i> ').toggle(true);
    }
    add_help_button(txt) {
    }
    add_button(label, click, opts) {
      if (!opts)
        opts = {};
      let button = $(`<button
			class="btn ${opts.btn_class || "btn-default"} ${opts.btn_size || "btn-sm"} ellipsis">
				${opts.icon ? frappe.utils.icon(opts.icon) : ""}
				${label}
		</button>`);
      let menu_item = this.add_menu_item(label, click, false);
      menu_item.parent().addClass("hidden-xl");
      button.appendTo(this.custom_actions);
      button.on("click", click);
      this.custom_actions.removeClass("hide");
      return button;
    }
    add_custom_button_group(label, icon, parent) {
      let dropdown_label = `<span class="hidden-xs">
			<span class="custom-btn-group-label">${__(label)}</span>
			${frappe.utils.icon("select", "xs")}
		</span>`;
      if (icon) {
        dropdown_label = `<span class="hidden-xs">
				${frappe.utils.icon(icon)}
				<span class="custom-btn-group-label">${__(label)}</span>
				${frappe.utils.icon("select", "xs")}
			</span>
			<span class="visible-xs">
				${frappe.utils.icon(icon)}
			</span>`;
      }
      let custom_btn_group = $(`
			<div class="custom-btn-group">
				<button type="button" class="btn btn-default btn-sm ellipsis" data-toggle="dropdown" aria-expanded="false">
					${dropdown_label}
				</button>
				<ul class="dropdown-menu" role="menu"></ul>
			</div>
		`);
      if (!parent)
        parent = this.custom_actions;
      parent.removeClass("hide").append(custom_btn_group);
      return custom_btn_group.find(".dropdown-menu");
    }
    add_dropdown_button(parent, label, click, icon) {
      frappe.ui.toolbar.add_dropdown_button(parent, label, click, icon);
    }
    add_label(label) {
      this.show_form();
      return $("<label class='col-md-1 page-only-label'>" + label + " </label>").appendTo(
        this.page_form
      );
    }
    add_select(label, options) {
      var field = this.add_field({ label, fieldtype: "Select" });
      return field.$wrapper.find("select").empty().add_options(options);
    }
    add_data(label) {
      var field = this.add_field({ label, fieldtype: "Data" });
      return field.$wrapper.find("input").attr("placeholder", label);
    }
    add_date(label, date2) {
      var field = this.add_field({ label, fieldtype: "Date", default: date2 });
      return field.$wrapper.find("input").attr("placeholder", label);
    }
    add_check(label) {
      return $("<div class='checkbox'><label><input type='checkbox'>" + label + "</label></div>").appendTo(this.page_form).find("input");
    }
    add_break() {
      this.page_form.append('<div class="clearfix invisible-xs"></div>');
    }
    add_field(df, parent) {
      this.show_form();
      if (!df.placeholder) {
        df.placeholder = df.label;
      }
      df.input_class = "input-xs";
      var f = frappe.ui.form.make_control({
        df,
        parent: parent || this.page_form,
        only_input: df.fieldtype == "Check" ? false : true
      });
      f.refresh();
      $(f.wrapper).addClass("col-md-2").attr("title", __(df.label, null, df.parent)).tooltip({
        delay: { show: 600, hide: 100 },
        trigger: "hover"
      });
      if (df.fieldtype == "HTML") {
        return;
      }
      if (!f.$input)
        f.make_input();
      f.$input.attr("placeholder", __(df.label, null, df.parent));
      if (df.fieldtype === "Check") {
        $(f.wrapper).find(":first-child").removeClass("col-md-offset-4 col-md-8");
      }
      if (df.fieldtype == "Button") {
        $(f.wrapper).find(".page-control-label").html("&nbsp;");
        f.$input.addClass("btn-xs").css({ width: "100%", "margin-top": "-1px" });
      }
      if (df["default"])
        f.set_input(df["default"]);
      this.fields_dict[df.fieldname || df.label] = f;
      return f;
    }
    clear_fields() {
      this.page_form.empty();
    }
    show_form() {
      this.page_form.removeClass("hide");
    }
    hide_form() {
      this.page_form.addClass("hide");
    }
    get_form_values() {
      var values = {};
      for (let fieldname in this.fields_dict) {
        let field = this.fields_dict[fieldname];
        values[fieldname] = field.get_value();
      }
      return values;
    }
    add_view(name, html) {
      let element = html;
      if (typeof html === "string") {
        element = $(html);
      }
      this.views[name] = element.appendTo($(this.wrapper).find(".page-content"));
      if (!this.current_view) {
        this.current_view = this.views[name];
      } else {
        this.views[name].toggle(false);
      }
      return this.views[name];
    }
    set_view(name) {
      if (this.current_view_name === name)
        return;
      this.current_view && this.current_view.toggle(false);
      this.current_view = this.views[name];
      this.previous_view_name = this.current_view_name;
      this.current_view_name = name;
      this.views[name].toggle(true);
      this.wrapper.trigger("view-change");
    }
  };

  // frappe-html:/home/liban/frappe-bench/apps/easy_ui/easy_ui/public/js/frappe/ui/toolbar/search.html
  frappe.templates["search"] = `<div class="search-results flex">
	<div class="col-md-3 col-sm-3 hidden-xs layout-nav-type-vertical layout-vertical-nav">
		<ul class="overlay-sidebar list-unstyled search-sidebar"></ul>
	</div>
	<div class="col-md-9 col-sm-9 layout-main-section results-area">

	</div>
</div>
`;

  // ../easy_ui/easy_ui/public/js/frappe/ui/toolbar/workspace.js
  var import_editorjs = __toESM(require_editor());
  var import_editorjs_undo = __toESM(require_bundle());
  frappe.standard_pages["Workspaces"] = function() {
    var wrapper = frappe.container.add_page("Workspaces");
    frappe.ui.make_app_page({
      parent: wrapper,
      name: "Workspaces",
      title: __("Workspace")
    });
    frappe.workspace = new frappe.views.Workspace(wrapper);
    $(wrapper).bind("show", function() {
      frappe.workspace.show();
    });
  };
  frappe.views.Workspace = class Workspace {
    constructor(wrapper) {
      this.wrapper = $(wrapper);
      this.page = wrapper.page;
      this.blocks = frappe.workspace_block.blocks;
      this.is_read_only = true;
      this.pages = {};
      this.sorted_public_items = [];
      this.sorted_private_items = [];
      this.current_page = {};
      this.sidebar_items = {
        public: {},
        private: {}
      };
      this.sidebar_categories = ["My Workspaces", "Public"];
      this.indicator_colors = [
        "green",
        "cyan",
        "blue",
        "orange",
        "yellow",
        "gray",
        "grey",
        "red",
        "pink",
        "darkgrey",
        "purple",
        "light-blue"
      ];
      this.prepare_container();
      this.setup_pages();
      this.register_awesomebar_shortcut();
    }
    prepare_container() {
      let list_sidebar = $(`
			<div class="list-sidebar overlay-sidebar hidden-xs hidden-sm">
				<div class="desk-sidebar list-unstyled sidebar-menu"></div>
			</div>
		`).appendTo(this.wrapper.find(".layout-side-section"));
      this.sidebar = list_sidebar.find(".desk-sidebar");
      this.body = this.wrapper.find(".layout-main-section");
    }
    async setup_pages(reload) {
      !this.discard && this.create_page_skeleton();
      !this.discard && this.create_sidebar_skeleton();
      this.sidebar_pages = !this.discard ? await this.get_pages() : this.sidebar_pages;
      this.cached_pages = $.extend(true, {}, this.sidebar_pages);
      this.all_pages = this.sidebar_pages.pages;
      this.has_access = this.sidebar_pages.has_access;
      this.all_pages.forEach((page) => {
        page.is_editable = !page.public || this.has_access;
      });
      this.public_pages = this.all_pages.filter((page) => page.public);
      this.private_pages = this.all_pages.filter((page) => !page.public);
      if (this.all_pages) {
        frappe.workspaces = {};
        for (let page of this.all_pages) {
          frappe.workspaces[frappe.router.slug(page.name)] = {
            title: page.title,
            public: page.public
          };
        }
        this.make_sidebar();
        reload && this.show();
      }
    }
    get_pages() {
      return frappe.xcall("frappe.desk.desktop.get_workspace_sidebar_items");
    }
    sidebar_item_container(item) {
      item.indicator_color = item.indicator_color || this.indicator_colors[Math.floor(Math.random() * 12)];
      return $(`
			<div
				class="sidebar-item-container ${item.is_editable ? "is-draggable" : ""}"
				item-parent="${item.parent_page}"
				item-name="${item.title}"
				item-public="${item.public || 0}"
				item-is-hidden="${item.is_hidden || 0}"
			>
				<div class="desk-sidebar-item standard-sidebar-item ${item.selected ? "selected" : ""}">
					<a
						href="/app/${item.public ? frappe.router.slug(item.title) : "private/" + frappe.router.slug(item.title)}"
						class="item-anchor ${item.is_editable ? "" : "block-click"}" title="${__(item.title)}"
					>
						<span class="sidebar-item-icon" item-icon=${item.icon || "folder-normal"}>
							${item.public ? frappe.utils.icon(item.icon || "folder-normal", "md") : `<span class="indicator ${item.indicator_color}"></span>`}
						</span>
						<span class="sidebar-item-label">${__(item.title)}<span>
					</a>
					<div class="sidebar-item-control"></div>
				</div>
				<div class="sidebar-child-item nested-container"></div>
			</div>
		`);
    }
    make_sidebar() {
      if (this.sidebar.find(".standard-sidebar-section")[0]) {
        this.sidebar.find(".standard-sidebar-section").remove();
      }
      this.sidebar_categories.forEach((category) => {
        let root_pages = this.public_pages.filter(
          (page) => page.parent_page == "" || page.parent_page == null
        );
        if (category != "Public") {
          root_pages = this.private_pages.filter(
            (page) => page.parent_page == "" || page.parent_page == null
          );
        }
        root_pages = root_pages.uniqBy((d) => d.title);
        this.build_sidebar_section(category, root_pages);
      });
      this.sidebar.find(".selected").length && !frappe.dom.is_element_in_viewport(this.sidebar.find(".selected")) && this.sidebar.find(".selected")[0].scrollIntoView();
      this.remove_sidebar_skeleton();
    }
    build_sidebar_section(title, root_pages) {
      let sidebar_section = $(
        `<div class="standard-sidebar-section nested-container" data-title="${title}"></div>`
      );
      let $title = $(`<button class="btn-reset standard-sidebar-label">
			<span>${frappe.utils.icon("es-line-down", "xs")}</span>
			<span class="section-title">${__(title)}<span>
		</div>`).appendTo(sidebar_section);
      $title.attr({
        "aria-label": __("{0}: {1}", [__("Toggle Section"), __(title)]),
        "aria-expanded": "true"
      });
      this.prepare_sidebar(root_pages, sidebar_section, this.sidebar);
      $title.on("click", (e) => {
        const $e = $(e.target);
        const href = $e.find("span use").attr("href");
        const isCollapsed = href === "#es-line-down";
        let icon = isCollapsed ? "#es-line-right-chevron" : "#es-line-down";
        $e.find("span use").attr("href", icon);
        $e.parent().find(".sidebar-item-container").toggleClass("hidden");
        $e.attr("aria-expanded", String(!isCollapsed));
      });
      if (Object.keys(root_pages).length === 0) {
        sidebar_section.addClass("hidden");
      }
      $(".item-anchor").on("click", () => {
        $(".list-sidebar.hidden-xs.hidden-sm").removeClass("opened");
        $(".close-sidebar").css("display", "none");
        $("body").css("overflow", "auto");
      });
      if (sidebar_section.find(".sidebar-item-container").length && sidebar_section.find("> [item-is-hidden='0']").length == 0) {
        sidebar_section.addClass("hidden show-in-edit-mode");
      }
    }
    prepare_sidebar(items, child_container, item_container) {
      items.forEach((item) => this.append_item(item, child_container));
      child_container.appendTo(item_container);
    }
    append_item(item, container) {
      let is_current_page = frappe.router.slug(item.title) == frappe.router.slug(this.get_page_to_show().name) && item.public == this.get_page_to_show().public;
      item.selected = is_current_page;
      if (is_current_page) {
        this.current_page = { name: item.title, public: item.public };
      }
      let $item_container = this.sidebar_item_container(item);
      let sidebar_control = $item_container.find(".sidebar-item-control");
      this.add_sidebar_actions(item, sidebar_control);
      let pages = item.public ? this.public_pages : this.private_pages;
      let child_items = pages.filter((page) => page.parent_page == item.title);
      if (child_items.length > 0) {
        let child_container = $item_container.find(".sidebar-child-item");
        child_container.addClass("hidden");
        this.prepare_sidebar(child_items, child_container, $item_container);
      }
      $item_container.appendTo(container);
      this.sidebar_items[item.public ? "public" : "private"][item.title] = $item_container;
      if ($item_container.parent().hasClass("hidden") && is_current_page) {
        $item_container.parent().toggleClass("hidden");
      }
      this.add_drop_icon(item, sidebar_control, $item_container);
      if (child_items.length > 0) {
        $item_container.find(".drop-icon").first().addClass("show-in-edit-mode");
      }
    }
    add_drop_icon(item, sidebar_control, item_container) {
      let drop_icon = "es-line-down";
      if (item_container.find(`[item-name="${this.current_page.name}"]`).length) {
        drop_icon = "small-up";
      }
      let $child_item_section = item_container.find(".sidebar-child-item");
      let $drop_icon = $(`<button class="btn-reset drop-icon hidden">`).html(frappe.utils.icon(drop_icon, "sm")).appendTo(sidebar_control);
      let pages = item.public ? this.public_pages : this.private_pages;
      if (pages.some(
        (e) => e.parent_page == item.title && (e.is_hidden == 0 || !this.is_read_only)
      )) {
        $drop_icon.removeClass("hidden");
      }
      $drop_icon.on("click", () => {
        let icon = $drop_icon.find("use").attr("href") === "#es-line-down" ? "#es-line-up" : "#es-line-down";
        $drop_icon.find("use").attr("href", icon);
        $child_item_section.toggleClass("hidden");
      });
    }
    show() {
      if (!this.all_pages) {
        setTimeout(() => this.show(), 100);
        return;
      }
      let page = this.get_page_to_show();
      if (!frappe.router.current_route[0]) {
        frappe.route_flags.replace_route = true;
        frappe.set_route(frappe.router.slug(page.public ? page.name : "private/" + page.name));
        return;
      }
      this.page.set_title(__(page.name));
      this.update_selected_sidebar(this.current_page, false);
      this.update_selected_sidebar(page, true);
      this.show_page(page);
    }
    update_selected_sidebar(page, add) {
      let section = page.public ? "public" : "private";
      if (this.sidebar && this.sidebar_items[section] && this.sidebar_items[section][page.name]) {
        let $sidebar = this.sidebar_items[section][page.name];
        let pages = page.public ? this.public_pages : this.private_pages;
        let sidebar_page = pages.find((p) => p.title == page.name);
        if (add) {
          $sidebar[0].firstElementChild.classList.add("selected");
          if (sidebar_page)
            sidebar_page.selected = true;
          $sidebar.parent().hasClass("sidebar-child-item") && $sidebar.parent().hasClass("hidden") && $sidebar.parent().removeClass("hidden");
          this.current_page = { name: page.name, public: page.public };
          localStorage.current_page = page.name;
          localStorage.is_current_page_public = page.public;
        } else {
          $sidebar[0].firstElementChild.classList.remove("selected");
          if (sidebar_page)
            sidebar_page.selected = false;
        }
      }
    }
    get_data(page) {
      return frappe.call("frappe.desk.desktop.get_desktop_page", {
        page
      }).then((data) => {
        this.page_data = data.message;
        this.pages[page.name] && delete this.pages[page.name];
        this.pages[page.name] = data.message;
        if (!this.page_data || Object.keys(this.page_data).length === 0)
          return;
        if (this.page_data.charts && this.page_data.charts.items.length === 0)
          return;
        return frappe.dashboard_utils.get_dashboard_settings().then((settings) => {
          if (settings) {
            let chart_config = settings.chart_config ? JSON.parse(settings.chart_config) : {};
            this.page_data.charts.items.map((chart) => {
              chart.chart_settings = chart_config[chart.chart_name] || {};
            });
            this.pages[page.name] = this.page_data;
          }
        });
      });
    }
    get_page_to_show() {
      let default_page;
      if (frappe.boot.user.default_workspace) {
        default_page = {
          name: frappe.boot.user.default_workspace.title,
          public: frappe.boot.user.default_workspace.public
        };
      } else if (localStorage.current_page && this.all_pages.filter((page2) => page2.title == localStorage.current_page).length != 0) {
        default_page = {
          name: localStorage.current_page,
          public: localStorage.is_current_page_public != "false"
        };
      } else if (Object.keys(this.all_pages).length !== 0) {
        default_page = { name: this.all_pages[0].title, public: this.all_pages[0].public };
      } else {
        default_page = { name: "Build", public: true };
      }
      const route = frappe.get_route();
      const page = (route[1] == "private" ? route[2] : route[1]) || default_page.name;
      const is_public = route[1] ? route[1] != "private" : default_page.public;
      return { name: page, public: is_public };
    }
    async show_page(page) {
      if (!this.body.find("#editorjs")[0]) {
        this.$page = $(`
				<div id="editorjs" class="desk-page page-main-content"></div>
			`).appendTo(this.body);
      }
      if (this.all_pages.length) {
        this.create_page_skeleton();
        let pages = page.public && this.public_pages.length ? this.public_pages : this.private_pages;
        let current_page = pages.filter((p) => p.title == page.name)[0];
        this.content = current_page && JSON.parse(current_page.content);
        this.content && this.add_custom_cards_in_content();
        $(".item-anchor").addClass("disable-click");
        if (this.pages && this.pages[current_page.name]) {
          this.page_data = this.pages[current_page.name];
        } else {
          await frappe.after_ajax(() => this.get_data(current_page));
        }
        this.setup_actions(page);
        this.prepare_editorjs();
        $(".item-anchor").removeClass("disable-click");
        this.remove_page_skeleton();
      }
    }
    add_custom_cards_in_content() {
      let index = -1;
      this.content.find((item, i) => {
        if (item.type == "card")
          index = i;
      });
      if (index !== -1) {
        this.content.splice(index + 1, 0, {
          type: "card",
          data: { card_name: "Custom Documents", col: 4 }
        });
        this.content.splice(index + 2, 0, {
          type: "card",
          data: { card_name: "Custom Reports", col: 4 }
        });
      }
    }
    prepare_editorjs() {
      if (this.editor) {
        this.editor.isReady.then(() => {
          this.editor.configuration.tools.chart.config.page_data = this.page_data;
          this.editor.configuration.tools.shortcut.config.page_data = this.page_data;
          this.editor.configuration.tools.card.config.page_data = this.page_data;
          this.editor.configuration.tools.onboarding.config.page_data = this.page_data;
          this.editor.configuration.tools.quick_list.config.page_data = this.page_data;
          this.editor.configuration.tools.number_card.config.page_data = this.page_data;
          this.editor.configuration.tools.custom_block.config.page_data = this.page_data;
          this.editor.render({ blocks: this.content || [] });
        });
      } else {
        this.initialize_editorjs(this.content);
      }
    }
    setup_actions(page) {
      let pages = page.public ? this.public_pages : this.private_pages;
      let current_page = pages.filter((p) => p.title == page.name)[0];
      if (!this.is_read_only) {
        this.setup_customization_buttons(current_page);
        return;
      }
      this.clear_page_actions();
      this.page.set_secondary_action(
        __("Edit"),
        async () => {
          if (!this.editor || !this.editor.readOnly)
            return;
          this.is_read_only = false;
          this.toggle_hidden_workspaces(true);
          await this.editor.readOnly.toggle();
          this.editor.isReady.then(() => {
            this.body.addClass("edit-mode");
            this.initialize_editorjs_undo();
            this.setup_customization_buttons(current_page);
            this.show_sidebar_actions();
            this.make_blocks_sortable();
          });
        },
        "es-line-edit"
      );
      this.page.add_inner_button(__("Create Workspace"), () => {
        this.initialize_new_page();
      });
    }
    initialize_editorjs_undo() {
      this.undo = new import_editorjs_undo.default({ editor: this.editor });
      this.undo.initialize({ blocks: this.content || [] });
      this.undo.readOnly = false;
    }
    clear_page_actions() {
      this.page.clear_primary_action();
      this.page.clear_secondary_action();
      this.page.clear_inner_toolbar();
    }
    setup_customization_buttons(page) {
      this.clear_page_actions();
      page.is_editable && this.page.set_primary_action(
        __("Save"),
        () => {
          this.clear_page_actions();
          this.body.removeClass("edit-mode");
          this.save_page(page).then((saved) => {
            if (!saved)
              return;
            this.undo.readOnly = true;
            this.editor.readOnly.toggle();
            this.is_read_only = true;
          });
        },
        null,
        __("Saving")
      );
      this.page.set_secondary_action(__("Discard"), async () => {
        this.body.removeClass("edit-mode");
        this.discard = true;
        this.clear_page_actions();
        this.toggle_hidden_workspaces(false);
        await this.editor.readOnly.toggle();
        this.is_read_only = true;
        this.sidebar_pages = this.cached_pages;
        this.reload();
        frappe.show_alert({ message: __("Customizations Discarded"), indicator: "info" });
      });
      if (page.name && this.has_access) {
        this.page.add_inner_button(__("Settings"), () => {
          frappe.set_route(`workspace/${page.name}`);
        });
      }
    }
    toggle_hidden_workspaces(show) {
      $(".desk-sidebar").toggleClass("show-hidden-workspaces", show);
    }
    show_sidebar_actions() {
      this.sidebar.find(".standard-sidebar-section").addClass("show-control");
      this.make_sidebar_sortable();
    }
    add_sidebar_actions(item, sidebar_control, is_new) {
      if (!item.is_editable) {
        sidebar_control.parent().click(() => {
          !this.is_read_only && frappe.show_alert(
            {
              message: __("Only Workspace Manager can sort or edit this page"),
              indicator: "info"
            },
            5
          );
        });
        frappe.utils.add_custom_button(
          frappe.utils.icon("es-line-duplicate", "sm"),
          () => this.duplicate_page(item),
          "duplicate-page",
          __("Duplicate Workspace"),
          null,
          sidebar_control
        );
      } else if (item.is_hidden) {
        frappe.utils.add_custom_button(
          frappe.utils.icon("es-line-preview", "sm"),
          (e) => this.unhide_workspace(item, e),
          "unhide-workspace-btn",
          __("Unhide Workspace"),
          null,
          sidebar_control
        );
      } else {
        frappe.utils.add_custom_button(
          frappe.utils.icon("es-line-drag", "xs"),
          null,
          "drag-handle",
          __("Drag"),
          null,
          sidebar_control
        );
        !is_new && this.add_settings_button(item, sidebar_control);
      }
    }
    get_parent_pages(page) {
      this.public_parent_pages = [
        "",
        ...this.public_pages.filter((p) => !p.parent_page).map((p) => p.title)
      ];
      this.private_parent_pages = [
        "",
        ...this.private_pages.filter((p) => !p.parent_page).map((p) => p.title)
      ];
      if (page) {
        return page.public ? this.public_parent_pages : this.private_parent_pages;
      }
    }
    edit_page(item) {
      var me = this;
      let old_item = item;
      let parent_pages = this.get_parent_pages(item);
      let idx = parent_pages.findIndex((x) => x == item.title);
      if (idx !== -1)
        parent_pages.splice(idx, 1);
      const d = new frappe.ui.Dialog({
        title: __("Update Details"),
        fields: [
          {
            label: __("Title"),
            fieldtype: "Data",
            fieldname: "title",
            reqd: 1,
            default: item.title
          },
          {
            label: __("Parent"),
            fieldtype: "Select",
            fieldname: "parent",
            options: parent_pages,
            default: item.parent_page
          },
          {
            label: __("Public"),
            fieldtype: "Check",
            fieldname: "is_public",
            depends_on: `eval:${this.has_access}`,
            default: item.public,
            onchange: function() {
              d.set_df_property(
                "parent",
                "options",
                this.get_value() ? me.public_parent_pages : me.private_parent_pages
              );
              d.set_df_property("icon", "hidden", this.get_value() ? 0 : 1);
              d.set_df_property("indicator_color", "hidden", this.get_value() ? 1 : 0);
            }
          },
          {
            fieldtype: "Column Break"
          },
          {
            label: __("Icon"),
            fieldtype: "Icon",
            fieldname: "icon",
            default: item.public && item.icon,
            hidden: !item.public
          },
          {
            label: __("Indicator color"),
            fieldtype: "Select",
            fieldname: "indicator_color",
            options: this.indicator_colors,
            default: !item.public && item.indicator_color,
            hidden: item.public
          }
        ],
        primary_action_label: __("Update"),
        primary_action: (values) => {
          values.title = strip_html(values.title);
          let is_title_changed = values.title != old_item.title;
          let is_section_changed = Boolean(values.is_public) != Boolean(old_item.public);
          if ((is_title_changed || is_section_changed) && !this.validate_page(values, old_item))
            return;
          d.hide();
          frappe.call({
            method: "frappe.desk.doctype.workspace.workspace.update_page",
            args: {
              name: old_item.name,
              title: values.title,
              icon: values.icon || "",
              indicator_color: values.indicator_color || "",
              parent: values.parent || "",
              public: values.is_public || 0
            },
            callback: function(res) {
              if (res.message) {
                let message = __("Workspace {0} Edited Successfully", [
                  old_item.title.bold()
                ]);
                frappe.show_alert({ message, indicator: "green" });
              }
            }
          });
          this.update_sidebar(old_item, values);
          if (this.make_page_selected) {
            let pre_url = values.is_public ? "" : "private/";
            let route = pre_url + frappe.router.slug(values.title);
            frappe.set_route(route);
            this.make_page_selected = false;
          }
          this.make_sidebar();
          this.show_sidebar_actions();
        }
      });
      d.show();
    }
    update_sidebar(old_item, new_item) {
      let is_section_changed = old_item.public != (new_item.is_public || 0);
      let is_title_changed = old_item.title != new_item.title;
      let new_updated_item = __spreadValues({}, old_item);
      let pages = old_item.public ? this.public_pages : this.private_pages;
      let child_items = pages.filter((page) => page.parent_page == old_item.title);
      this.make_page_selected = old_item.selected;
      new_updated_item.title = new_item.title;
      new_updated_item.icon = new_item.icon;
      new_updated_item.indicator_color = new_item.indicator_color;
      new_updated_item.parent_page = new_item.parent || "";
      new_updated_item.public = new_item.is_public;
      if (is_title_changed || is_section_changed) {
        if (new_item.is_public) {
          new_updated_item.name = new_item.title;
          new_updated_item.label = new_item.title;
          new_updated_item.for_user = "";
        } else {
          let user = frappe.session.user;
          new_updated_item.name = `${new_item.title}-${user}`;
          new_updated_item.label = `${new_item.title}-${user}`;
          new_updated_item.for_user = user;
        }
      }
      this.update_cached_values(old_item, new_updated_item);
      if (child_items.length) {
        child_items.forEach((child) => {
          child.parent_page = new_item.title;
          is_section_changed && this.update_child_sidebar(child, new_item);
        });
      }
    }
    update_child_sidebar(child, new_item) {
      let old_child = __spreadValues({}, child);
      this.make_page_selected = child.selected;
      child.public = new_item.is_public;
      if (new_item.is_public) {
        child.name = child.title;
        child.label = child.title;
        child.for_user = "";
      } else {
        let user = frappe.session.user;
        child.name = `${child.title}-${user}`;
        child.label = `${child.title}-${user}`;
        child.for_user = user;
      }
      this.update_cached_values(old_child, child);
    }
    update_cached_values(old_item, new_item, duplicate, new_page) {
      let [from_pages, to_pages] = old_item.public ? [this.public_pages, this.private_pages] : [this.private_pages, this.public_pages];
      let old_item_index = from_pages.findIndex((page) => page.title == old_item.title);
      duplicate && old_item_index++;
      if (frappe.workspaces[frappe.router.slug(old_item.name)] || new_page) {
        !duplicate && delete frappe.workspaces[frappe.router.slug(old_item.name)];
        if (new_item) {
          frappe.workspaces[frappe.router.slug(new_item.name)] = { title: new_item.title };
        }
      }
      if (this.pages && this.pages[old_item.name] || new_page) {
        if (new_item) {
          this.pages[new_item.name] = this.pages[old_item.name] || {};
        }
        !duplicate && delete this.pages[old_item.name];
      }
      if (new_item) {
        let is_section_changed = old_item.public != (new_item.is_public || new_item.public || 0);
        if (is_section_changed) {
          !duplicate && from_pages.splice(old_item_index, 1);
          to_pages.push(new_item);
        } else if (new_page) {
          from_pages.push(new_item);
        } else {
          from_pages.splice(old_item_index, duplicate ? 0 : 1, new_item);
        }
      } else {
        from_pages.splice(old_item_index, 1);
      }
      this.sidebar_pages.pages = [...this.public_pages, ...this.private_pages];
      this.cached_pages = this.sidebar_pages;
    }
    add_settings_button(item, sidebar_control) {
      this.dropdown_list = [
        {
          label: __("Edit"),
          title: __("Edit Workspace"),
          icon: frappe.utils.icon("es-line-edit", "sm"),
          action: () => this.edit_page(item)
        },
        {
          label: __("Duplicate"),
          title: __("Duplicate Workspace"),
          icon: frappe.utils.icon("es-line-duplicate", "sm"),
          action: () => this.duplicate_page(item)
        },
        {
          label: __("Hide"),
          title: __("Hide Workspace"),
          icon: frappe.utils.icon("es-line-hide", "sm"),
          action: (e) => this.hide_workspace(item, e)
        }
      ];
      if (this.is_item_deletable(item)) {
        this.dropdown_list.push({
          label: __("Delete"),
          title: __("Delete Workspace"),
          icon: frappe.utils.icon("delete-active", "sm"),
          action: () => this.delete_page(item)
        });
      }
      let $button = $(`
			<div class="btn btn-xs setting-btn dropdown-btn" title="${__("Setting")}">
				${frappe.utils.icon("es-line-dot-horizontal", "xs")}
			</div>
			<div class="dropdown-list hidden"></div>
		`);
      let dropdown_item = function(label, title, icon, action) {
        let html = $(`
				<div class="dropdown-item" title="${title}">
					<span class="dropdown-item-icon">${icon}</span>
					<span class="dropdown-item-label">${label}</span>
				</div>
			`);
        html.click((event) => {
          event.stopPropagation();
          action && action(event);
        });
        return html;
      };
      $button.filter(".dropdown-btn").click((event) => {
        event.stopPropagation();
        if ($button.filter(".dropdown-list.hidden").length) {
          $(".dropdown-list:not(.hidden)").addClass("hidden");
        }
        $button.filter(".dropdown-list").toggleClass("hidden");
      });
      sidebar_control.append($button);
      this.dropdown_list.forEach((i) => {
        $button.filter(".dropdown-list").append(dropdown_item(i.label, i.title, i.icon, i.action));
      });
    }
    is_item_deletable(item) {
      if (!item.public || item.public && (!item.module || item.module && frappe.boot.developer_mode))
        return true;
      return false;
    }
    delete_page(page) {
      frappe.confirm(
        __("Are you sure you want to delete page {0}?", [page.title.bold()]),
        () => {
          frappe.call({
            method: "frappe.desk.doctype.workspace.workspace.delete_page",
            args: { page },
            callback: function(res) {
              if (res.message) {
                let page2 = res.message;
                let message = __("Workspace {0} Deleted Successfully", [
                  page2.title.bold()
                ]);
                frappe.show_alert({ message, indicator: "green" });
              }
            }
          });
          this.page.clear_primary_action();
          this.update_cached_values(page);
          if (this.current_page.name == page.title && this.current_page.public == page.public) {
            frappe.set_route("/");
          }
          this.make_sidebar();
          this.show_sidebar_actions();
        }
      );
    }
    duplicate_page(page) {
      var me = this;
      let new_page = __spreadValues({}, page);
      if (!this.has_access && new_page.public) {
        new_page.public = 0;
      }
      let parent_pages = this.get_parent_pages({ public: new_page.public });
      const d = new frappe.ui.Dialog({
        title: __("Create Duplicate"),
        fields: [
          {
            label: __("Title"),
            fieldtype: "Data",
            fieldname: "title",
            reqd: 1
          },
          {
            label: __("Parent"),
            fieldtype: "Select",
            fieldname: "parent",
            options: parent_pages,
            default: new_page.parent_page
          },
          {
            label: __("Public"),
            fieldtype: "Check",
            fieldname: "is_public",
            depends_on: `eval:${this.has_access}`,
            default: new_page.public,
            onchange: function() {
              d.set_df_property(
                "parent",
                "options",
                this.get_value() ? me.public_parent_pages : me.private_parent_pages
              );
              d.set_df_property("icon", "hidden", this.get_value() ? 0 : 1);
              d.set_df_property("indicator_color", "hidden", this.get_value() ? 1 : 0);
            }
          },
          {
            fieldtype: "Column Break"
          },
          {
            label: __("Icon"),
            fieldtype: "Icon",
            fieldname: "icon",
            default: new_page.public && new_page.icon,
            hidden: !new_page.public
          },
          {
            label: __("Indicator color"),
            fieldtype: "Select",
            fieldname: "indicator_color",
            options: this.indicator_colors,
            hidden: new_page.public,
            default: !new_page.public && new_page.indicator_color
          }
        ],
        primary_action_label: __("Duplicate"),
        primary_action: (values) => {
          if (!this.validate_page(values))
            return;
          d.hide();
          frappe.call({
            method: "frappe.desk.doctype.workspace.workspace.duplicate_page",
            args: {
              page_name: page.name,
              new_page: values
            },
            callback: function(res) {
              if (res.message) {
                let new_page2 = res.message;
                let message = __(
                  "Duplicate of {0} named as {1} is created successfully",
                  [page.title.bold(), new_page2.title.bold()]
                );
                frappe.show_alert({ message, indicator: "green" });
              }
            }
          });
          new_page.title = values.title;
          new_page.public = values.is_public || 0;
          new_page.name = values.title + (new_page.public ? "" : "-" + frappe.session.user);
          new_page.label = new_page.name;
          new_page.icon = values.icon;
          new_page.indicator_color = values.indicator_color;
          new_page.parent_page = values.parent || "";
          new_page.for_user = new_page.public ? "" : frappe.session.user;
          new_page.is_editable = !new_page.public;
          new_page.selected = true;
          this.update_cached_values(page, new_page, true);
          let pre_url = values.is_public ? "" : "private/";
          let route = pre_url + frappe.router.slug(values.title);
          frappe.set_route(route);
          me.make_sidebar();
          me.show_sidebar_actions();
        }
      });
      d.show();
    }
    hide_unhide_workspace(page, event, hide) {
      page.is_hidden = hide;
      let sidebar_control = event.target.closest(".sidebar-item-control");
      let sidebar_item_container = sidebar_control.closest(".sidebar-item-container");
      $(sidebar_item_container).attr("item-is-hidden", hide);
      $(sidebar_control).empty();
      this.add_sidebar_actions(page, $(sidebar_control));
      this.add_drop_icon(page, $(sidebar_control), $(sidebar_item_container));
      let cached_page = this.cached_pages.pages.findIndex((p) => p.name === page.name);
      if (cached_page !== -1) {
        this.cached_pages.pages[cached_page].is_hidden = hide;
      }
      let method = hide ? "hide_page" : "unhide_page";
      frappe.call({
        method: "frappe.desk.doctype.workspace.workspace." + method,
        args: {
          page_name: page.name
        },
        callback: (r) => {
          if (!r.message)
            return;
          let message = hide ? "{0} is hidden successfully" : "{0} is unhidden successfully";
          message = __(message, [page.title.bold()]);
          frappe.show_alert({ message, indicator: "green" });
        }
      });
    }
    hide_workspace(page, event) {
      this.hide_unhide_workspace(page, event, 1);
    }
    unhide_workspace(page, event) {
      this.hide_unhide_workspace(page, event, 0);
    }
    make_sidebar_sortable() {
      let me = this;
      $(".nested-container").each(function() {
        new Sortable(this, {
          handle: ".drag-handle",
          draggable: ".sidebar-item-container.is-draggable",
          group: "nested",
          animation: 150,
          fallbackOnBody: true,
          swapThreshold: 0.65,
          onEnd: function(evt) {
            let is_public = $(evt.item).attr("item-public") == "1";
            me.prepare_sorted_sidebar(is_public);
            me.update_sorted_sidebar();
          }
        });
      });
    }
    prepare_sorted_sidebar(is_public) {
      let pages = is_public ? this.public_pages : this.private_pages;
      if (is_public) {
        this.sorted_public_items = this.sort_sidebar(
          this.sidebar.find(".standard-sidebar-section").last(),
          pages
        );
      } else {
        this.sorted_private_items = this.sort_sidebar(
          this.sidebar.find(".standard-sidebar-section").first(),
          pages
        );
      }
      this.sidebar_pages.pages = [...this.public_pages, ...this.private_pages];
      this.cached_pages = this.sidebar_pages;
    }
    sort_sidebar($sidebar_section, pages) {
      let sorted_items = [];
      Array.from($sidebar_section.find(".sidebar-item-container")).forEach((page, i) => {
        let parent_page = "";
        if (page.closest(".nested-container").classList.contains("sidebar-child-item")) {
          parent_page = page.parentElement.parentElement.attributes["item-name"].value;
        }
        sorted_items.push({
          title: page.attributes["item-name"].value,
          parent_page,
          public: page.attributes["item-public"].value
        });
        let $drop_icon = $(page).find(".sidebar-item-control .drop-icon").first();
        if ($(page).find(".sidebar-child-item > *").length != 0) {
          $drop_icon.removeClass("hidden");
        } else {
          $drop_icon.addClass("hidden");
        }
        let from_index = pages.findIndex((p) => p.title == page.attributes["item-name"].value);
        let element = pages[from_index];
        element.parent_page = parent_page;
        if (from_index != i) {
          pages.splice(from_index, 1);
          pages.splice(i, 0, element);
        }
      });
      return sorted_items;
    }
    update_sorted_sidebar() {
      if (this.sorted_public_items || this.sorted_private_items) {
        frappe.call({
          method: "frappe.desk.doctype.workspace.workspace.sort_pages",
          args: {
            sb_public_items: this.sorted_public_items,
            sb_private_items: this.sorted_private_items
          },
          callback: function(res) {
            if (res.message) {
              let message = `Sidebar Updated Successfully`;
              frappe.show_alert({ message: __(message), indicator: "green" });
            }
          }
        });
      }
    }
    make_blocks_sortable() {
      let me = this;
      this.page_sortable = Sortable.create(
        this.page.main.find(".codex-editor__redactor").get(0),
        {
          handle: ".drag-handle",
          draggable: ".ce-block",
          animation: 150,
          onEnd: function(evt) {
            me.editor.blocks.move(evt.newIndex, evt.oldIndex);
          },
          setData: function() {
          }
        }
      );
    }
    initialize_new_page() {
      var me = this;
      this.get_parent_pages();
      const d = new frappe.ui.Dialog({
        title: __("New Workspace"),
        fields: [
          {
            label: __("Title"),
            fieldtype: "Data",
            fieldname: "title",
            reqd: 1
          },
          {
            label: __("Parent"),
            fieldtype: "Select",
            fieldname: "parent",
            options: this.private_parent_pages
          },
          {
            label: __("Public"),
            fieldtype: "Check",
            fieldname: "is_public",
            depends_on: `eval:${this.has_access}`,
            onchange: function() {
              d.set_df_property(
                "parent",
                "options",
                this.get_value() ? me.public_parent_pages : me.private_parent_pages
              );
              d.set_df_property("icon", "hidden", this.get_value() ? 0 : 1);
              d.set_df_property("indicator_color", "hidden", this.get_value() ? 1 : 0);
            }
          },
          {
            fieldtype: "Column Break"
          },
          {
            label: __("Icon"),
            fieldtype: "Icon",
            fieldname: "icon",
            hidden: 1
          },
          {
            label: __("Indicator color"),
            fieldtype: "Select",
            fieldname: "indicator_color",
            options: this.indicator_colors
          }
        ],
        primary_action_label: __("Create"),
        primary_action: (values) => {
          values.title = strip_html(values.title);
          if (!this.validate_page(values))
            return;
          d.hide();
          this.initialize_editorjs_undo();
          this.setup_customization_buttons({ is_editable: true });
          let name = values.title + (values.is_public ? "" : "-" + frappe.session.user);
          let blocks = [
            {
              type: "header",
              data: { text: values.title }
            }
          ];
          let new_page = {
            content: JSON.stringify(blocks),
            name,
            label: name,
            title: values.title,
            public: values.is_public || 0,
            for_user: values.is_public ? "" : frappe.session.user,
            icon: values.icon,
            indicator_color: values.indicator_color,
            parent_page: values.parent || "",
            is_editable: true,
            selected: true
          };
          this.editor.render({
            blocks
          }).then(async () => {
            if (this.editor.configuration.readOnly) {
              this.is_read_only = false;
              await this.editor.readOnly.toggle();
            }
            frappe.call({
              method: "frappe.desk.doctype.workspace.workspace.new_page",
              args: {
                new_page
              },
              callback: function(res) {
                if (res.message) {
                  let message = __("Workspace {0} Created Successfully", [
                    new_page.title.bold()
                  ]);
                  frappe.show_alert({
                    message,
                    indicator: "green"
                  });
                }
              }
            });
            this.update_cached_values(new_page, new_page, true, true);
            let pre_url = new_page.public ? "" : "private/";
            let route = pre_url + frappe.router.slug(new_page.title);
            frappe.set_route(route);
            this.make_sidebar();
            this.show_sidebar_actions();
            localStorage.setItem("new_workspace", JSON.stringify(new_page));
          });
        }
      });
      d.show();
    }
    validate_page(new_page, old_page) {
      let message = "";
      let [from_pages, to_pages] = new_page.is_public ? [this.private_pages, this.public_pages] : [this.public_pages, this.private_pages];
      let section = this.sidebar_categories[new_page.is_public];
      if (to_pages && to_pages.filter((p) => p.title == new_page.title)[0]) {
        message = __("Page with title {0} already exist.", [new_page.title.bold()]);
      }
      if (frappe.router.doctype_route_exist(frappe.router.slug(new_page.title))) {
        message = __("Doctype with same route already exist. Please choose different title.");
      }
      let child_pages = old_page && from_pages.filter((p) => p.parent_page == old_page.title);
      if (child_pages) {
        child_pages.every((child_page) => {
          if (to_pages && to_pages.find((p) => p.title == child_page.title)) {
            message = __(
              "One of the child page with name {0} already exist in {1} Section. Please update the name of the child page first before moving",
              [child_page.title.bold(), section.bold()]
            );
            cur_dialog.hide();
            return false;
          }
          return true;
        });
      }
      if (message) {
        frappe.throw(__(message));
        return false;
      }
      return true;
    }
    add_page_to_sidebar(page) {
      let $sidebar = $(".standard-sidebar-section");
      let item = __spreadValues({}, page);
      item.selected = true;
      item.is_editable = true;
      let $sidebar_item = this.sidebar_item_container(item);
      this.add_sidebar_actions(item, $sidebar_item.find(".sidebar-item-control"), true);
      $sidebar_item.find(".sidebar-item-control .drag-handle").css("margin-right", "8px");
      let sidebar_section = item.is_public ? $sidebar[1] : $sidebar[0];
      if (!item.parent) {
        !item.is_public && $sidebar.first().removeClass("hidden");
        $sidebar_item.appendTo(sidebar_section);
      } else {
        let $item_container = $(sidebar_section).find(`[item-name="${item.parent}"]`);
        let $child_section = $item_container.find(".sidebar-child-item");
        let $drop_icon = $item_container.find(".drop-icon");
        if (!$child_section[0]) {
          $child_section = $(
            `<div class="sidebar-child-item hidden nested-container"></div>`
          ).appendTo($item_container);
          $drop_icon.toggleClass("hidden");
        }
        $sidebar_item.appendTo($child_section);
        $child_section.removeClass("hidden");
        $item_container.find(".drop-icon.hidden").removeClass("hidden");
        $item_container.find(".drop-icon use").attr("href", "#es-line-up");
      }
      let section = item.is_public ? "public" : "private";
      if (this.sidebar_items && this.sidebar_items[section] && !this.sidebar_items[section][item.title]) {
        this.sidebar_items[section][item.title] = $sidebar_item;
      }
    }
    initialize_editorjs(blocks) {
      this.tools = {
        header: {
          class: this.blocks["header"],
          inlineToolbar: ["HeaderSize", "bold", "italic", "link"],
          config: {
            default_size: 4
          }
        },
        paragraph: {
          class: this.blocks["paragraph"],
          inlineToolbar: ["HeaderSize", "bold", "italic", "link"],
          config: {
            placeholder: __("Choose a block or continue typing")
          }
        },
        chart: {
          class: this.blocks["chart"],
          config: {
            page_data: this.page_data || []
          }
        },
        card: {
          class: this.blocks["card"],
          config: {
            page_data: this.page_data || []
          }
        },
        shortcut: {
          class: this.blocks["shortcut"],
          config: {
            page_data: this.page_data || []
          }
        },
        onboarding: {
          class: this.blocks["onboarding"],
          config: {
            page_data: this.page_data || []
          }
        },
        quick_list: {
          class: this.blocks["quick_list"],
          config: {
            page_data: this.page_data || []
          }
        },
        number_card: {
          class: this.blocks["number_card"],
          config: {
            page_data: this.page_data || []
          }
        },
        custom_block: {
          class: this.blocks["custom_block"],
          config: {
            page_data: this.page_data || []
          }
        },
        spacer: this.blocks["spacer"],
        HeaderSize: frappe.workspace_block.tunes["header_size"]
      };
      this.editor = new import_editorjs.default({
        data: {
          blocks: blocks || []
        },
        tools: this.tools,
        autofocus: false,
        readOnly: true,
        logLevel: "ERROR"
      });
    }
    save_page(page) {
      let me = this;
      this.current_page = { name: page.title, public: page.public };
      return this.editor.save().then((outputData) => {
        let new_widgets = {};
        outputData.blocks.forEach((item) => {
          if (item.data.new) {
            if (!new_widgets[item.type]) {
              new_widgets[item.type] = [];
            }
            new_widgets[item.type].push(item.data.new);
            delete item.data["new"];
          }
        });
        let blocks = outputData.blocks.filter(
          (item) => item.type != "card" || item.data.card_name !== "Custom Documents" && item.data.card_name !== "Custom Reports"
        );
        if (page.content == JSON.stringify(blocks) && Object.keys(new_widgets).length === 0) {
          this.setup_customization_buttons(page);
          frappe.show_alert({
            message: __("No changes made on the page"),
            indicator: "warning"
          });
          return false;
        }
        this.create_page_skeleton();
        page.content = JSON.stringify(blocks);
        frappe.call({
          method: "frappe.desk.doctype.workspace.workspace.save_page",
          args: {
            title: page.title,
            public: page.public || 0,
            new_widgets,
            blocks: JSON.stringify(blocks)
          },
          callback: function(res) {
            if (res.message) {
              me.discard = true;
              me.update_cached_values(page, page);
              me.reload();
              frappe.show_alert({
                message: __("Page Saved Successfully"),
                indicator: "green"
              });
            }
          }
        });
        return true;
      }).catch((error) => {
        error;
      });
    }
    reload() {
      this.sorted_public_items = [];
      this.sorted_private_items = [];
      this.setup_pages(true);
      this.discard = false;
      this.undo.readOnly = true;
    }
    create_page_skeleton() {
      if (this.body.find(".workspace-skeleton").length)
        return;
      this.body.prepend(frappe.render_template("workspace_loading_skeleton"));
      this.body.find(".codex-editor").addClass("hidden");
    }
    remove_page_skeleton() {
      this.body.find(".codex-editor").removeClass("hidden");
      this.body.find(".workspace-skeleton").remove();
    }
    create_sidebar_skeleton() {
      if ($(".workspace-sidebar-skeleton").length)
        return;
      $(frappe.render_template("workspace_sidebar_loading_skeleton")).insertBefore(this.sidebar);
      this.sidebar.addClass("hidden");
    }
    remove_sidebar_skeleton() {
      this.sidebar.removeClass("hidden");
      $(".workspace-sidebar-skeleton").remove();
    }
    register_awesomebar_shortcut() {
      "abcdefghijklmnopqrstuvwxyz".split("").forEach((letter) => {
        const default_shortcut = {
          action: (e) => {
            $("#navbar-search").focus();
            return false;
          },
          page: this.page
        };
        frappe.ui.keys.add_shortcut(__spreadValues({ shortcut: letter }, default_shortcut));
        frappe.ui.keys.add_shortcut(__spreadValues({ shortcut: `shift+${letter}` }, default_shortcut));
      });
    }
  };

  // ../easy_ui/easy_ui/public/js/frappe/ui/toolbar/container.js
  frappe.provide("frappe.pages");
  frappe.provide("frappe.views");
  window.cur_page = null;
  frappe.views.Container = class Container {
    constructor() {
      this.container = $("#body").get(0);
      this.page = null;
      this.pagewidth = $(this.container).width();
      this.pagemargin = 50;
      var me = this;
      $(document).on("page-change", function() {
        var route_str = frappe.get_route_str();
        $("body").attr("data-route", route_str);
        $("body").attr("data-sidebar", me.has_sidebar() ? 1 : 0);
      });
      $(document).bind("rename", function(event, dt, old_name, new_name) {
        frappe.breadcrumbs.rename(dt, old_name, new_name);
      });
    }
    add_page(label) {
      var page = $('<div style="background-color: #F6F5F2;" class="content page-container layout-content-wrapper d-flex  {"></div>').attr("id", "page-" + label).attr("data-page-route", label).hide().appendTo(this.container).get(0);
      page.label = label;
      frappe.pages[label] = page;
      return page;
    }
    change_to(label) {
      cur_page = this;
      let page;
      if (label.tagName) {
        page = label;
      } else {
        page = frappe.pages[label];
      }
      if (!page) {
        console.log(__("Page not found") + ": " + label);
        return;
      }
      if (window.cur_dialog && cur_dialog.display && !cur_dialog.keep_open) {
        if (!cur_dialog.minimizable) {
          cur_dialog.hide();
        } else if (!cur_dialog.is_minimized) {
          cur_dialog.toggle_minimize();
        }
      }
      if (this.page && this.page != page) {
        $(this.page).hide();
        $(this.page).trigger("hide");
      }
      if (!this.page || this.page != page) {
        this.page = page;
        $(this.page).show();
      }
      $(document).trigger("page-change");
      this.page._route = frappe.router.get_sub_path();
      $(this.page).trigger("show");
      !this.page.disable_scroll_to_top && frappe.utils.scroll_to(0);
      frappe.breadcrumbs.update();
      return this.page;
    }
    has_sidebar() {
      var flag = 0;
      var route_str = frappe.get_route_str();
      flag = frappe.ui.pages[route_str] && !frappe.ui.pages[route_str].single_column;
      if (!flag) {
        var page_route = route_str.split("/").slice(0, 2).join("/");
        flag = $(`.page-container[data-page-route="${page_route}"] .layout-side-section`).length ? 1 : 0;
      }
      return flag;
    }
  };

  // ../easy_ui/easy_ui/public/js/frappe/js/app-academy-course-details.js
  (function() {
    const videoPlayer = new Plyr("#plyr-video-player");
    document.getElementsByClassName("plyr")[0].style.borderRadius = "7px";
    const htmlElement = document.getElementsByTagName("html")[0];
    const stick = document.querySelector(".stick-top");
    function TopSticky() {
      if (htmlElement.classList.contains("layout-navbar-fixed")) {
        stick.classList.add("course-content-fixed");
      } else {
        stick.classList.remove("course-content-fixed");
      }
    }
    TopSticky();
    window.onscroll = function() {
      TopSticky();
    };
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-academy-course.js
  $(function() {
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          dropdownParent: $this.parent(),
          placeholder: $this.data("placeholder"),
          dropdownCss: {
            minWidth: "150px"
          }
        });
      });
      $(".select2-selection__rendered").addClass("w-px-150");
    }
  });
  (function() {
    const videoPlayer = new Plyr("#guitar-video-player");
    const videoPlayer2 = new Plyr("#guitar-video-player-2");
    document.getElementsByClassName("plyr")[0].style.borderRadius = "4px";
    document.getElementsByClassName("plyr")[1].style.borderRadius = "4px";
    document.getElementsByClassName("plyr__poster")[0].style.display = "none";
    document.getElementsByClassName("plyr__poster")[1].style.display = "none";
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-academy-dashboard.js
  (function() {
    let labelColor, headingColor, borderColor;
    if (isDarkStyle) {
      labelColor = config.colors_dark.textMuted;
      headingColor = config.colors_dark.headingColor;
      borderColor = config.colors_dark.borderColor;
    } else {
      labelColor = config.colors.textMuted;
      headingColor = config.colors.headingColor;
      borderColor = config.colors.borderColor;
    }
    const chartColors = {
      donut: {
        series1: "#22A95E",
        series2: "#24B364",
        series3: config.colors.success,
        series4: "#53D28C",
        series5: "#7EDDA9",
        series6: "#A9E9C5"
      }
    };
    const leadsReportChartEl = document.querySelector("#leadsReportChart"), leadsReportChartConfig = {
      chart: {
        height: 157,
        width: 130,
        parentHeightOffset: 0,
        type: "donut"
      },
      labels: ["36h", "56h", "16h", "32h", "56h", "16h"],
      series: [23, 35, 10, 20, 35, 23],
      colors: [
        chartColors.donut.series1,
        chartColors.donut.series2,
        chartColors.donut.series3,
        chartColors.donut.series4,
        chartColors.donut.series5,
        chartColors.donut.series6
      ],
      stroke: {
        width: 0
      },
      dataLabels: {
        enabled: false,
        formatter: function(val, opt) {
          return parseInt(val) + "%";
        }
      },
      legend: {
        show: false
      },
      tooltip: {
        theme: false
      },
      grid: {
        padding: {
          top: 0
        }
      },
      plotOptions: {
        pie: {
          donut: {
            size: "75%",
            labels: {
              show: true,
              value: {
                fontSize: "1.5rem",
                fontFamily: "Public Sans",
                color: headingColor,
                fontWeight: 500,
                offsetY: -15,
                formatter: function(val) {
                  return parseInt(val) + "%";
                }
              },
              name: {
                offsetY: 20,
                fontFamily: "Public Sans"
              },
              total: {
                show: true,
                fontSize: ".7rem",
                label: "Total",
                color: labelColor,
                formatter: function(w) {
                  return "231h";
                }
              }
            }
          }
        }
      }
    };
    if (typeof leadsReportChartEl !== void 0 && leadsReportChartEl !== null) {
      const leadsReportChart = new ApexCharts(leadsReportChartEl, leadsReportChartConfig);
      leadsReportChart.render();
    }
    const horizontalBarChartEl = document.querySelector("#horizontalBarChart"), horizontalBarChartConfig = {
      chart: {
        height: 270,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          horizontal: true,
          barHeight: "70%",
          distributed: true,
          startingShape: "rounded",
          borderRadius: 7
        }
      },
      grid: {
        strokeDashArray: 10,
        borderColor,
        xaxis: {
          lines: {
            show: true
          }
        },
        yaxis: {
          lines: {
            show: false
          }
        },
        padding: {
          top: -35,
          bottom: -12
        }
      },
      colors: [
        config.colors.primary,
        config.colors.info,
        config.colors.success,
        config.colors.secondary,
        config.colors.danger,
        config.colors.warning
      ],
      dataLabels: {
        enabled: true,
        style: {
          colors: ["#fff"],
          fontWeight: 200,
          fontSize: "13px",
          fontFamily: "Public Sans"
        },
        formatter: function(val, opts) {
          return horizontalBarChartConfig.labels[opts.dataPointIndex];
        },
        offsetX: 0,
        dropShadow: {
          enabled: false
        }
      },
      labels: ["UI Design", "UX Design", "Music", "Animation", "React", "SEO"],
      series: [
        {
          data: [35, 20, 14, 12, 10, 9]
        }
      ],
      xaxis: {
        categories: ["6", "5", "4", "3", "2", "1"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          },
          formatter: function(val) {
            return `${val}%`;
          }
        }
      },
      yaxis: {
        max: 35,
        labels: {
          style: {
            colors: [labelColor],
            fontFamily: "Public Sans",
            fontSize: "13px"
          }
        }
      },
      tooltip: {
        enabled: true,
        style: {
          fontSize: "12px"
        },
        onDatasetHover: {
          highlightDataSeries: false
        },
        custom: function({ series, seriesIndex, dataPointIndex, w }) {
          return '<div class="px-3 py-2"><span>' + series[seriesIndex][dataPointIndex] + "%</span></div>";
        }
      },
      legend: {
        show: false
      }
    };
    if (typeof horizontalBarChartEl !== void 0 && horizontalBarChartEl !== null) {
      const horizontalBarChart = new ApexCharts(horizontalBarChartEl, horizontalBarChartConfig);
      horizontalBarChart.render();
    }
    function radialBarChart(color, value, show) {
      const radialBarChartOpt = {
        chart: {
          height: show == "true" ? 58 : 53,
          width: show == "true" ? 58 : 43,
          type: "radialBar"
        },
        plotOptions: {
          radialBar: {
            hollow: {
              size: show == "true" ? "45%" : "33%"
            },
            dataLabels: {
              show: show == "true" ? true : false,
              value: {
                offsetY: -10,
                fontSize: "15px",
                fontWeight: 500,
                fontFamily: "Public Sans",
                color: headingColor
              }
            },
            track: {
              background: config.colors_label.secondary
            }
          }
        },
        stroke: {
          lineCap: "round"
        },
        colors: [color],
        grid: {
          padding: {
            top: show == "true" ? -12 : -15,
            bottom: show == "true" ? -17 : -15,
            left: show == "true" ? -17 : -5,
            right: -15
          }
        },
        series: [value],
        labels: show == "true" ? [""] : ["Progress"]
      };
      return radialBarChartOpt;
    }
    const chartProgressList = document.querySelectorAll(".chart-progress");
    if (chartProgressList) {
      chartProgressList.forEach(function(chartProgressEl) {
        const color = config.colors[chartProgressEl.dataset.color], series = chartProgressEl.dataset.series;
        const progress_variant = chartProgressEl.dataset.progress_variant;
        const optionsBundle = radialBarChart(color, series, progress_variant);
        const chart = new ApexCharts(chartProgressEl, optionsBundle);
        chart.render();
      });
    }
    var dt_academy_course = $(".datatables-academy-course"), logoObj = {
      angular: '<span class="badge bg-label-danger p-2"><i class="ti ti-brand-angular ti-md"></i></span>',
      figma: '<span class="badge bg-label-warning p-2"><i class="ti ti-brand-figma ti-md"></i></span>',
      react: '<span class="badge bg-label-info p-2"><i class="ti ti-brand-react-native ti-md"></i></span>',
      art: '<span class="badge bg-label-success p-2"><i class="ti ti-color-swatch ti-md"></i></span>',
      fundamentals: '<span class="badge bg-label-primary p-2"><i class="ti ti-diamond ti-md"></i></span>'
    };
    if (dt_academy_course.length) {
      var dt_course = dt_academy_course.DataTable({
        ajax: assetsPath + "json/app-academy-dashboard.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "course name" },
          { data: "time" },
          { data: "progress" },
          { data: "status" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 2,
            render: function(data, type, full, meta) {
              var $logo = full["logo"];
              var $course = full["course"];
              var $user = full["user"];
              var $image = full["image"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $image + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["user"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex align-items-center"><span class="me-3">' + logoObj[$logo] + '</span><div><a class="text-body text-truncate fw-medium mb-2 text-wrap" href="app-academy-course-details.html">' + $course + '</a><div class="d-flex align-items-center mt-1"><div class="avatar-wrapper me-2"><div class="avatar avatar-xs">' + $output + '</div></div><span class="text-nowrap">' + $user + "</span></div></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            responsivePriority: 3,
            render: function(data, type, full, meta) {
              var duration = moment.duration(data);
              var Hs = Math.floor(duration.asHours());
              var minutes = Math.floor(duration.asMinutes()) - Hs * 60;
              var formattedTime = Hs + "h " + minutes + "m";
              return '<span class="h6 mb-0 text-nowrap">' + formattedTime + "</span>";
            }
          },
          {
            targets: 4,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $average_number = full["number"];
              return '<div class="d-flex align-items-center gap-3"><p class="h6 mb-0">' + $status_number + '</p><div class="progress w-100" style="height: 8px;"><div class="progress-bar" style="width: ' + $status_number + '" aria-valuenow="' + $status_number + '" aria-valuemin="0" aria-valuemax="100"></div></div><small class="text-muted">' + $average_number + "</small></div>";
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $user_number = full["user_number"];
              var $note = full["note"];
              var $view = full["view"];
              return '<div class="d-flex align-items-center justify-content-between"><div class="w-px-50 d-flex align-items-center"><i class="ti ti-users ti-sm me-2 text-primary"></i>' + $user_number + '</div><div class="w-px-50 d-flex align-items-center"><i class="ti ti-book ti-sm me-2 text-info"></i>' + $note + '</div><div class="w-px-50 d-flex align-items-center"><i class="ti ti-video ti-sm me-2 text-danger" ></i>' + $view + "</div></div>";
            }
          }
        ],
        order: [[2, "desc"]],
        dom: '<"card-header py-sm-0"<"head-label text-center">f>t<"row mx-4"<"col-sm-6 col-12 text-center text-xl-start pb-2 pb-xl-0 px-0"i><"col-sm-6 col-12 d-flex justify-content-center justify-content-xl-end px-0"p>>',
        lengthMenu: [5],
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Course Name"
        },
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["order"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $("div.head-label").html('<h5 class="card-title mb-0 text-nowrap">Course you are taking</h5>');
    }
    $(".datatables-orders tbody").on("click", ".delete-record", function() {
      dt_course.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-access-permission.js
  $(function() {
    var dataTablePermissions = $(".datatables-permissions"), dt_permission, userList = "app-user-list.html";
    if (dataTablePermissions.length) {
      dt_permission = dataTablePermissions.DataTable({
        ajax: assetsPath + "json/permissions-list.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "name" },
          { data: "assigned_to" },
          { data: "created_date" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            searchable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            searchable: false,
            visible: false
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $name = full["name"];
              return '<span class="text-nowrap">' + $name + "</span>";
            }
          },
          {
            targets: 3,
            orderable: false,
            render: function(data, type, full, meta) {
              var $assignedTo = full["assigned_to"], $output = "";
              var roleBadgeObj = {
                Admin: '<a href="' + userList + '"><span class="badge bg-label-primary m-1">Administrator</span></a>',
                Manager: '<a href="' + userList + '"><span class="badge bg-label-warning m-1">Manager</span></a>',
                Users: '<a href="' + userList + '"><span class="badge bg-label-success m-1">Users</span></a>',
                Support: '<a href="' + userList + '"><span class="badge bg-label-info m-1">Support</span></a>',
                Restricted: '<a href="' + userList + '"><span class="badge bg-label-danger m-1">Restricted User</span></a>'
              };
              for (var i = 0; i < $assignedTo.length; i++) {
                var val = $assignedTo[i];
                $output += roleBadgeObj[val];
              }
              return '<span class="text-nowrap">' + $output + "</span>";
            }
          },
          {
            targets: 4,
            orderable: false,
            render: function(data, type, full, meta) {
              var $date = full["created_date"];
              return '<span class="text-nowrap">' + $date + "</span>";
            }
          },
          {
            targets: -1,
            searchable: false,
            title: "Actions",
            orderable: false,
            render: function(data, type, full, meta) {
              return '<span class="text-nowrap"><button class="btn btn-sm btn-icon me-2" data-bs-target="#editPermissionModal" data-bs-toggle="modal" data-bs-dismiss="modal"><i class="ti ti-edit"></i></button><button class="btn btn-sm btn-icon delete-record"><i class="ti ti-trash"></i></button></span>';
            }
          }
        ],
        order: [[1, "asc"]],
        dom: '<"row mx-1"<"col-sm-12 col-md-3" l><"col-sm-12 col-md-9"<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-md-end justify-content-center flex-wrap me-1"<"me-3"f>B>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        language: {
          sLengthMenu: "Show _MENU_",
          search: "Search",
          searchPlaceholder: "Search.."
        },
        buttons: [
          {
            text: "Add Permission",
            className: "add-new btn btn-primary mb-3 mb-md-0",
            attr: {
              "data-bs-toggle": "modal",
              "data-bs-target": "#addPermissionModal"
            },
            init: function(api, node, config2) {
              $(node).removeClass("btn-secondary");
            }
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        },
        initComplete: function() {
          this.api().columns(3).every(function() {
            var column = this;
            var select = $(
              '<select id="UserRole" class="form-select text-capitalize"><option value=""> Select Role </option></select>'
            ).appendTo(".user_role").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + d + '" class="text-capitalize">' + d + "</option>");
            });
          });
        }
      });
    }
    $(".datatables-permissions tbody").on("click", ".delete-record", function() {
      dt_permission.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-access-roles.js
  $(function() {
    var dtUserTable = $(".datatables-users"), statusObj = {
      1: { title: "Pending", class: "bg-label-warning" },
      2: { title: "Active", class: "bg-label-success" },
      3: { title: "Inactive", class: "bg-label-secondary" }
    };
    var userView = "app-user-view-account.html";
    if (dtUserTable.length) {
      var dtUser = dtUserTable.DataTable({
        ajax: assetsPath + "json/user-list.json",
        columns: [
          { data: "" },
          { data: "full_name" },
          { data: "role" },
          { data: "current_plan" },
          { data: "billing" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            searchable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $name = full["full_name"], $email = full["email"], $image = full["avatar"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $image + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "primary", "secondary"];
                var $state = states[stateNum], $name = full["full_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-left align-items-center"><div class="avatar-wrapper"><div class="avatar me-3">' + $output + '</div></div><div class="d-flex flex-column"><a href="' + userView + '" class="text-body text-truncate"><span class="fw-medium">' + $name + '</span></a><small class="text-muted">@' + $email + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $role = full["role"];
              var roleBadgeObj = {
                Subscriber: '<span class="badge badge-center rounded-pill bg-label-warning me-3 w-px-30 h-px-30"><i class="ti ti-user ti-sm"></i></span>',
                Author: '<span class="badge badge-center rounded-pill bg-label-success me-3 w-px-30 h-px-30"><i class="ti ti-settings ti-sm"></i></span>',
                Maintainer: '<span class="badge badge-center rounded-pill bg-label-primary me-3 w-px-30 h-px-30"><i class="ti ti-chart-pie-2 ti-sm"></i></span>',
                Editor: '<span class="badge badge-center rounded-pill bg-label-info me-3 w-px-30 h-px-30"><i class="ti ti-edit ti-sm"></i></span>',
                Admin: '<span class="badge badge-center rounded-pill bg-label-secondary me-3 w-px-30 h-px-30"><i class="ti ti-device-laptop ti-sm"></i></span>'
              };
              return "<span class='text-truncate d-flex align-items-center'>" + roleBadgeObj[$role] + $role + "</span>";
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $plan = full["current_plan"];
              return '<span class="fw-medium">' + $plan + "</span>";
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $status = full["status"];
              return '<span class="badge ' + statusObj[$status].class + '" text-capitalized>' + statusObj[$status].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-flex align-items-center"><a href="' + userView + '" class="btn btn-sm btn-icon"><i class="ti ti-eye"></i></a><a href="javascript:;" class="text-body delete-record"><i class="ti ti-trash ti-sm mx-2"></i></a><a href="javascript:;" class="text-body dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical ti-sm mx-1"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;"" class="dropdown-item">Edit</a><a href="javascript:;" class="dropdown-item">Suspend</a></div></div>';
            }
          }
        ],
        order: [[1, "desc"]],
        dom: '<"row mx-2"<"col-sm-12 col-md-4 col-lg-6" l><"col-sm-12 col-md-8 col-lg-6"<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-md-end justify-content-center align-items-center flex-sm-nowrap flex-wrap me-1"<"me-3"f><"user_role w-px-200 pb-3 pb-sm-0">>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        language: {
          sLengthMenu: "Show _MENU_",
          search: "Search",
          searchPlaceholder: "Search.."
        },
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        },
        initComplete: function() {
          this.api().columns(2).every(function() {
            var column = this;
            var select = $(
              '<select id="UserRole" class="form-select text-capitalize"><option value=""> Select Role </option></select>'
            ).appendTo(".user_role").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + d + '" class="text-capitalize">' + d + "</option>");
            });
          });
        }
      });
    }
    $(".datatables-users tbody").on("click", ".delete-record", function() {
      dtUser.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });
  (function() {
    var roleEditList = document.querySelectorAll(".role-edit-modal"), roleAdd = document.querySelector(".add-new-role"), roleTitle = document.querySelector(".role-title");
    roleAdd.onclick = function() {
      roleTitle.innerHTML = "Add New Role";
    };
    if (roleEditList) {
      roleEditList.forEach(function(roleEditEl) {
        roleEditEl.onclick = function() {
          roleTitle.innerHTML = "Edit Role";
        };
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-calendar-events.js
  var date = new Date();
  var nextDay = new Date(new Date().getTime() + 24 * 60 * 60 * 1e3);
  var nextMonth = date.getMonth() === 11 ? new Date(date.getFullYear() + 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() + 1, 1);
  var prevMonth = date.getMonth() === 11 ? new Date(date.getFullYear() - 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() - 1, 1);
  var events2 = [
    {
      id: 1,
      url: "",
      title: "Design Review",
      start: date,
      end: nextDay,
      allDay: false,
      extendedProps: {
        calendar: "Business"
      }
    },
    {
      id: 2,
      url: "",
      title: "Meeting With Client",
      start: new Date(date.getFullYear(), date.getMonth() + 1, -11),
      end: new Date(date.getFullYear(), date.getMonth() + 1, -10),
      allDay: true,
      extendedProps: {
        calendar: "Business"
      }
    },
    {
      id: 3,
      url: "",
      title: "Family Trip",
      allDay: true,
      start: new Date(date.getFullYear(), date.getMonth() + 1, -9),
      end: new Date(date.getFullYear(), date.getMonth() + 1, -7),
      extendedProps: {
        calendar: "Holiday"
      }
    },
    {
      id: 4,
      url: "",
      title: "Doctor's Appointment",
      start: new Date(date.getFullYear(), date.getMonth() + 1, -11),
      end: new Date(date.getFullYear(), date.getMonth() + 1, -10),
      extendedProps: {
        calendar: "Personal"
      }
    },
    {
      id: 5,
      url: "",
      title: "Dart Game?",
      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),
      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),
      allDay: true,
      extendedProps: {
        calendar: "ETC"
      }
    },
    {
      id: 6,
      url: "",
      title: "Meditation",
      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),
      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),
      allDay: true,
      extendedProps: {
        calendar: "Personal"
      }
    },
    {
      id: 7,
      url: "",
      title: "Dinner",
      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),
      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),
      extendedProps: {
        calendar: "Family"
      }
    },
    {
      id: 8,
      url: "",
      title: "Product Review",
      start: new Date(date.getFullYear(), date.getMonth() + 1, -13),
      end: new Date(date.getFullYear(), date.getMonth() + 1, -12),
      allDay: true,
      extendedProps: {
        calendar: "Business"
      }
    },
    {
      id: 9,
      url: "",
      title: "Monthly Meeting",
      start: nextMonth,
      end: nextMonth,
      allDay: true,
      extendedProps: {
        calendar: "Business"
      }
    },
    {
      id: 10,
      url: "",
      title: "Monthly Checkup",
      start: prevMonth,
      end: prevMonth,
      allDay: true,
      extendedProps: {
        calendar: "Personal"
      }
    }
  ];

  // ../easy_ui/easy_ui/public/js/frappe/js/app-calendar.js
  var direction = "ltr";
  if (isRtl) {
    direction = "rtl";
  }
  document.addEventListener("DOMContentLoaded", function() {
    (function() {
      const calendarEl = document.getElementById("calendar"), appCalendarSidebar = document.querySelector(".app-calendar-sidebar"), addEventSidebar = document.getElementById("addEventSidebar"), appOverlay = document.querySelector(".app-overlay"), calendarsColor = {
        Business: "primary",
        Holiday: "success",
        Personal: "danger",
        Family: "warning",
        ETC: "info"
      }, offcanvasTitle = document.querySelector(".offcanvas-title"), btnToggleSidebar = document.querySelector(".btn-toggle-sidebar"), btnSubmit = document.querySelector('button[type="submit"]'), btnDeleteEvent = document.querySelector(".btn-delete-event"), btnCancel = document.querySelector(".btn-cancel"), eventTitle = document.querySelector("#eventTitle"), eventStartDate = document.querySelector("#eventStartDate"), eventEndDate = document.querySelector("#eventEndDate"), eventUrl = document.querySelector("#eventURL"), eventLabel = $("#eventLabel"), eventGuests = $("#eventGuests"), eventLocation = document.querySelector("#eventLocation"), eventDescription = document.querySelector("#eventDescription"), allDaySwitch = document.querySelector(".allDay-switch"), selectAll = document.querySelector(".select-all"), filterInput = [].slice.call(document.querySelectorAll(".input-filter")), inlineCalendar = document.querySelector(".inline-calendar");
      let eventToUpdate, currentEvents = events, isFormValid = false, inlineCalInstance;
      const bsAddEventSidebar = new bootstrap.Offcanvas(addEventSidebar);
      if (eventLabel.length) {
        let renderBadges = function(option) {
          if (!option.id) {
            return option.text;
          }
          var $badge = "<span class='badge badge-dot bg-" + $(option.element).data("label") + " me-2'> </span>" + option.text;
          return $badge;
        };
        eventLabel.wrap('<div class="position-relative"></div>').select2({
          placeholder: "Select value",
          dropdownParent: eventLabel.parent(),
          templateResult: renderBadges,
          templateSelection: renderBadges,
          minimumResultsForSearch: -1,
          escapeMarkup: function(es) {
            return es;
          }
        });
      }
      if (eventGuests.length) {
        let renderGuestAvatar = function(option) {
          if (!option.id) {
            return option.text;
          }
          var $avatar = "<div class='d-flex flex-wrap align-items-center'><div class='avatar avatar-xs me-2'><img src='" + assetsPath + "img/avatars/" + $(option.element).data("avatar") + "' alt='avatar' class='rounded-circle' /></div>" + option.text + "</div>";
          return $avatar;
        };
        eventGuests.wrap('<div class="position-relative"></div>').select2({
          placeholder: "Select value",
          dropdownParent: eventGuests.parent(),
          closeOnSelect: false,
          templateResult: renderGuestAvatar,
          templateSelection: renderGuestAvatar,
          escapeMarkup: function(es) {
            return es;
          }
        });
      }
      if (eventStartDate) {
        var start = eventStartDate.flatpickr({
          enableTime: true,
          altFormat: "Y-m-dTH:i:S",
          onReady: function(selectedDates, dateStr, instance) {
            if (instance.isMobile) {
              instance.mobileInput.setAttribute("step", null);
            }
          }
        });
      }
      if (eventEndDate) {
        var end = eventEndDate.flatpickr({
          enableTime: true,
          altFormat: "Y-m-dTH:i:S",
          onReady: function(selectedDates, dateStr, instance) {
            if (instance.isMobile) {
              instance.mobileInput.setAttribute("step", null);
            }
          }
        });
      }
      if (inlineCalendar) {
        inlineCalInstance = inlineCalendar.flatpickr({
          monthSelectorType: "static",
          inline: true
        });
      }
      function eventClick(info) {
        eventToUpdate = info.event;
        if (eventToUpdate.url) {
          info.jsEvent.preventDefault();
          window.open(eventToUpdate.url, "_blank");
        }
        bsAddEventSidebar.show();
        if (offcanvasTitle) {
          offcanvasTitle.innerHTML = "Update Event";
        }
        btnSubmit.innerHTML = "Update";
        btnSubmit.classList.add("btn-update-event");
        btnSubmit.classList.remove("btn-add-event");
        btnDeleteEvent.classList.remove("d-none");
        eventTitle.value = eventToUpdate.title;
        start.setDate(eventToUpdate.start, true, "Y-m-d");
        eventToUpdate.allDay === true ? allDaySwitch.checked = true : allDaySwitch.checked = false;
        eventToUpdate.end !== null ? end.setDate(eventToUpdate.end, true, "Y-m-d") : end.setDate(eventToUpdate.start, true, "Y-m-d");
        eventLabel.val(eventToUpdate.extendedProps.calendar).trigger("change");
        eventToUpdate.extendedProps.location !== void 0 ? eventLocation.value = eventToUpdate.extendedProps.location : null;
        eventToUpdate.extendedProps.guests !== void 0 ? eventGuests.val(eventToUpdate.extendedProps.guests).trigger("change") : null;
        eventToUpdate.extendedProps.description !== void 0 ? eventDescription.value = eventToUpdate.extendedProps.description : null;
      }
      function modifyToggler() {
        const fcSidebarToggleButton = document.querySelector(".fc-sidebarToggle-button");
        fcSidebarToggleButton.classList.remove("fc-button-primary");
        fcSidebarToggleButton.classList.add("d-lg-none", "d-inline-block", "ps-0");
        while (fcSidebarToggleButton.firstChild) {
          fcSidebarToggleButton.firstChild.remove();
        }
        fcSidebarToggleButton.setAttribute("data-bs-toggle", "sidebar");
        fcSidebarToggleButton.setAttribute("data-overlay", "");
        fcSidebarToggleButton.setAttribute("data-target", "#app-calendar-sidebar");
        fcSidebarToggleButton.insertAdjacentHTML("beforeend", '<i class="ti ti-menu-2 ti-sm text-heading"></i>');
      }
      function selectedCalendars() {
        let selected = [], filterInputChecked = [].slice.call(document.querySelectorAll(".input-filter:checked"));
        filterInputChecked.forEach((item) => {
          selected.push(item.getAttribute("data-value"));
        });
        return selected;
      }
      function fetchEvents(info, successCallback) {
        let calendars = selectedCalendars();
        let selectedEvents = currentEvents.filter(function(event) {
          return calendars.includes(event.extendedProps.calendar.toLowerCase());
        });
        successCallback(selectedEvents);
      }
      let calendar = new Calendar(calendarEl, {
        initialView: "dayGridMonth",
        events: fetchEvents,
        plugins: [dayGridPlugin, interactionPlugin, listPlugin, timegridPlugin],
        editable: true,
        dragScroll: true,
        dayMaxEvents: 2,
        eventResizableFromStart: true,
        customButtons: {
          sidebarToggle: {
            text: "Sidebar"
          }
        },
        headerToolbar: {
          start: "sidebarToggle, prev,next, title",
          end: "dayGridMonth,timeGridWeek,timeGridDay,listMonth"
        },
        direction,
        initialDate: new Date(),
        navLinks: true,
        eventClassNames: function({ event: calendarEvent }) {
          const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar];
          return ["fc-event-" + colorName];
        },
        dateClick: function(info) {
          let date2 = moment(info.date).format("YYYY-MM-DD");
          resetValues();
          bsAddEventSidebar.show();
          if (offcanvasTitle) {
            offcanvasTitle.innerHTML = "Add Event";
          }
          btnSubmit.innerHTML = "Add";
          btnSubmit.classList.remove("btn-update-event");
          btnSubmit.classList.add("btn-add-event");
          btnDeleteEvent.classList.add("d-none");
          eventStartDate.value = date2;
          eventEndDate.value = date2;
        },
        eventClick: function(info) {
          eventClick(info);
        },
        datesSet: function() {
          modifyToggler();
        },
        viewDidMount: function() {
          modifyToggler();
        }
      });
      calendar.render();
      modifyToggler();
      const eventForm = document.getElementById("eventForm");
      const fv2 = FormValidation.formValidation(eventForm, {
        fields: {
          eventTitle: {
            validators: {
              notEmpty: {
                message: "Please enter event title "
              }
            }
          },
          eventStartDate: {
            validators: {
              notEmpty: {
                message: "Please enter start date "
              }
            }
          },
          eventEndDate: {
            validators: {
              notEmpty: {
                message: "Please enter end date "
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: function(field, ele) {
              return ".mb-3";
            }
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        }
      }).on("core.form.valid", function() {
        isFormValid = true;
      }).on("core.form.invalid", function() {
        isFormValid = false;
      });
      if (btnToggleSidebar) {
        btnToggleSidebar.addEventListener("click", (e) => {
          btnCancel.classList.remove("d-none");
        });
      }
      function addEvent(eventData) {
        currentEvents.push(eventData);
        calendar.refetchEvents();
      }
      function updateEvent(eventData) {
        eventData.id = parseInt(eventData.id);
        currentEvents[currentEvents.findIndex((el) => el.id === eventData.id)] = eventData;
        calendar.refetchEvents();
      }
      function removeEvent(eventId) {
        currentEvents = currentEvents.filter(function(event) {
          return event.id != eventId;
        });
        calendar.refetchEvents();
      }
      const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {
        const existingEvent = calendar.getEventById(updatedEventData.id);
        for (var index = 0; index < propsToUpdate.length; index++) {
          var propName = propsToUpdate[index];
          existingEvent.setProp(propName, updatedEventData[propName]);
        }
        existingEvent.setDates(updatedEventData.start, updatedEventData.end, {
          allDay: updatedEventData.allDay
        });
        for (var index = 0; index < extendedPropsToUpdate.length; index++) {
          var propName = extendedPropsToUpdate[index];
          existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName]);
        }
      };
      function removeEventInCalendar(eventId) {
        calendar.getEventById(eventId).remove();
      }
      btnSubmit.addEventListener("click", (e) => {
        if (btnSubmit.classList.contains("btn-add-event")) {
          if (isFormValid) {
            let newEvent = {
              id: calendar.getEvents().length + 1,
              title: eventTitle.value,
              start: eventStartDate.value,
              end: eventEndDate.value,
              startStr: eventStartDate.value,
              endStr: eventEndDate.value,
              display: "block",
              extendedProps: {
                location: eventLocation.value,
                guests: eventGuests.val(),
                calendar: eventLabel.val(),
                description: eventDescription.value
              }
            };
            if (eventUrl.value) {
              newEvent.url = eventUrl.value;
            }
            if (allDaySwitch.checked) {
              newEvent.allDay = true;
            }
            addEvent(newEvent);
            bsAddEventSidebar.hide();
          }
        } else {
          if (isFormValid) {
            let eventData = {
              id: eventToUpdate.id,
              title: eventTitle.value,
              start: eventStartDate.value,
              end: eventEndDate.value,
              url: eventUrl.value,
              extendedProps: {
                location: eventLocation.value,
                guests: eventGuests.val(),
                calendar: eventLabel.val(),
                description: eventDescription.value
              },
              display: "block",
              allDay: allDaySwitch.checked ? true : false
            };
            updateEvent(eventData);
            bsAddEventSidebar.hide();
          }
        }
      });
      btnDeleteEvent.addEventListener("click", (e) => {
        removeEvent(parseInt(eventToUpdate.id));
        bsAddEventSidebar.hide();
      });
      function resetValues() {
        eventEndDate.value = "";
        eventUrl.value = "";
        eventStartDate.value = "";
        eventTitle.value = "";
        eventLocation.value = "";
        allDaySwitch.checked = false;
        eventGuests.val("").trigger("change");
        eventDescription.value = "";
      }
      addEventSidebar.addEventListener("hidden.bs.offcanvas", function() {
        resetValues();
      });
      btnToggleSidebar.addEventListener("click", (e) => {
        if (offcanvasTitle) {
          offcanvasTitle.innerHTML = "Add Event";
        }
        btnSubmit.innerHTML = "Add";
        btnSubmit.classList.remove("btn-update-event");
        btnSubmit.classList.add("btn-add-event");
        btnDeleteEvent.classList.add("d-none");
        appCalendarSidebar.classList.remove("show");
        appOverlay.classList.remove("show");
      });
      if (selectAll) {
        selectAll.addEventListener("click", (e) => {
          if (e.currentTarget.checked) {
            document.querySelectorAll(".input-filter").forEach((c) => c.checked = 1);
          } else {
            document.querySelectorAll(".input-filter").forEach((c) => c.checked = 0);
          }
          calendar.refetchEvents();
        });
      }
      if (filterInput) {
        filterInput.forEach((item) => {
          item.addEventListener("click", () => {
            document.querySelectorAll(".input-filter:checked").length < document.querySelectorAll(".input-filter").length ? selectAll.checked = false : selectAll.checked = true;
            calendar.refetchEvents();
          });
        });
      }
      inlineCalInstance.config.onChange.push(function(date2) {
        calendar.changeView(calendar.view.type, moment(date2[0]).format("YYYY-MM-DD"));
        modifyToggler();
        appCalendarSidebar.classList.remove("show");
        appOverlay.classList.remove("show");
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-chat.js
  document.addEventListener("DOMContentLoaded", function() {
    (function() {
      const chatContactsBody = document.querySelector(".app-chat-contacts .sidebar-body"), chatContactListItems = [].slice.call(
        document.querySelectorAll(".chat-contact-list-item:not(.chat-contact-list-item-title)")
      ), chatHistoryBody = document.querySelector(".chat-history-body"), chatSidebarLeftBody = document.querySelector(".app-chat-sidebar-left .sidebar-body"), chatSidebarRightBody = document.querySelector(".app-chat-sidebar-right .sidebar-body"), chatUserStatus = [].slice.call(document.querySelectorAll(".form-check-input[name='chat-user-status']")), chatSidebarLeftUserAbout = $(".chat-sidebar-left-user-about"), formSendMessage = document.querySelector(".form-send-message"), messageInput = document.querySelector(".message-input"), searchInput = document.querySelector(".chat-search-input"), speechToText = $(".speech-to-text"), userStatusObj = {
        active: "avatar-online",
        offline: "avatar-offline",
        away: "avatar-away",
        busy: "avatar-busy"
      };
      if (chatContactsBody) {
        new PerfectScrollbar(chatContactsBody, {
          wheelPropagation: false,
          suppressScrollX: true
        });
      }
      if (chatHistoryBody) {
        new PerfectScrollbar(chatHistoryBody, {
          wheelPropagation: false,
          suppressScrollX: true
        });
      }
      if (chatSidebarLeftBody) {
        new PerfectScrollbar(chatSidebarLeftBody, {
          wheelPropagation: false,
          suppressScrollX: true
        });
      }
      if (chatSidebarRightBody) {
        new PerfectScrollbar(chatSidebarRightBody, {
          wheelPropagation: false,
          suppressScrollX: true
        });
      }
      function scrollToBottom() {
        chatHistoryBody.scrollTo(0, chatHistoryBody.scrollHeight);
      }
      scrollToBottom();
      if (chatSidebarLeftUserAbout.length) {
        chatSidebarLeftUserAbout.maxlength({
          alwaysShow: true,
          warningClass: "label label-success bg-success text-white",
          limitReachedClass: "label label-danger",
          separator: "/",
          validate: true,
          threshold: 120
        });
      }
      chatUserStatus.forEach((el) => {
        el.addEventListener("click", (e) => {
          let chatLeftSidebarUserAvatar = document.querySelector(".chat-sidebar-left-user .avatar"), value = e.currentTarget.value;
          chatLeftSidebarUserAvatar.removeAttribute("class");
          Helpers._addClass("avatar avatar-xl " + userStatusObj[value], chatLeftSidebarUserAvatar);
          let chatContactsUserAvatar = document.querySelector(".app-chat-contacts .avatar");
          chatContactsUserAvatar.removeAttribute("class");
          Helpers._addClass("flex-shrink-0 avatar " + userStatusObj[value] + " me-3", chatContactsUserAvatar);
        });
      });
      chatContactListItems.forEach((chatContactListItem) => {
        chatContactListItem.addEventListener("click", (e) => {
          chatContactListItems.forEach((chatContactListItem2) => {
            chatContactListItem2.classList.remove("active");
          });
          e.currentTarget.classList.add("active");
        });
      });
      if (searchInput) {
        searchInput.addEventListener("keyup", (e) => {
          let searchValue = e.currentTarget.value.toLowerCase(), searchChatListItemsCount = 0, searchContactListItemsCount = 0, chatListItem0 = document.querySelector(".chat-list-item-0"), contactListItem0 = document.querySelector(".contact-list-item-0"), searchChatListItems = [].slice.call(
            document.querySelectorAll("#chat-list li:not(.chat-contact-list-item-title)")
          ), searchContactListItems = [].slice.call(
            document.querySelectorAll("#contact-list li:not(.chat-contact-list-item-title)")
          );
          searchChatContacts(searchChatListItems, searchChatListItemsCount, searchValue, chatListItem0);
          searchChatContacts(searchContactListItems, searchContactListItemsCount, searchValue, contactListItem0);
        });
      }
      function searchChatContacts(searchListItems, searchListItemsCount, searchValue, listItem0) {
        searchListItems.forEach((searchListItem) => {
          let searchListItemText = searchListItem.textContent.toLowerCase();
          if (searchValue) {
            if (-1 < searchListItemText.indexOf(searchValue)) {
              searchListItem.classList.add("d-flex");
              searchListItem.classList.remove("d-none");
              searchListItemsCount++;
            } else {
              searchListItem.classList.add("d-none");
            }
          } else {
            searchListItem.classList.add("d-flex");
            searchListItem.classList.remove("d-none");
            searchListItemsCount++;
          }
        });
        if (searchListItemsCount == 0) {
          listItem0.classList.remove("d-none");
        } else {
          listItem0.classList.add("d-none");
        }
      }
      formSendMessage.addEventListener("submit", (e) => {
        e.preventDefault();
        if (messageInput.value) {
          let renderMsg = document.createElement("div");
          renderMsg.className = "chat-message-text mt-2";
          renderMsg.innerHTML = '<p class="mb-0 text-break">' + messageInput.value + "</p>";
          document.querySelector("li:last-child .chat-message-wrapper").appendChild(renderMsg);
          messageInput.value = "";
          scrollToBottom();
        }
      });
      let chatHistoryHeaderMenu = document.querySelector(".chat-history-header [data-target='#app-chat-contacts']"), chatSidebarLeftClose = document.querySelector(".app-chat-sidebar-left .close-sidebar");
      chatHistoryHeaderMenu.addEventListener("click", (e) => {
        chatSidebarLeftClose.removeAttribute("data-overlay");
      });
      if (speechToText.length) {
        var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;
        if (SpeechRecognition !== void 0 && SpeechRecognition !== null) {
          var recognition = new SpeechRecognition(), listening = false;
          speechToText.on("click", function() {
            const $this = $(this);
            recognition.onspeechstart = function() {
              listening = true;
            };
            if (listening === false) {
              recognition.start();
            }
            recognition.onerror = function(event) {
              listening = false;
            };
            recognition.onresult = function(event) {
              $this.closest(".form-send-message").find(".message-input").val(event.results[0][0].transcript);
            };
            recognition.onspeechend = function(event) {
              listening = false;
              recognition.stop();
            };
          });
        }
      }
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-category-list.js
  var commentEditor = document.querySelector(".comment-editor");
  if (commentEditor) {
    new Quill(commentEditor, {
      modules: {
        toolbar: ".comment-toolbar"
      },
      placeholder: "Enter category description...",
      theme: "snow"
    });
  }
  $(function() {
    let borderColor, bodyBg, headingColor;
    if (isDarkStyle) {
      borderColor = config.colors_dark.borderColor;
      bodyBg = config.colors_dark.bodyBg;
      headingColor = config.colors_dark.headingColor;
    } else {
      borderColor = config.colors.borderColor;
      bodyBg = config.colors.bodyBg;
      headingColor = config.colors.headingColor;
    }
    var dt_category_list_table = $(".datatables-category-list");
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          dropdownParent: $this.parent(),
          placeholder: $this.data("placeholder")
        });
      });
    }
    if (dt_category_list_table.length) {
      var dt_category = dt_category_list_table.DataTable({
        ajax: assetsPath + "json/ecommerce-category-list.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "categories" },
          { data: "total_products" },
          { data: "total_earnings" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 1,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 4,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 2,
            render: function(data, type, full, meta) {
              var $name = full["categories"], $category_detail = full["category_detail"], $image = full["cat_image"], $id = full["id"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/ecommerce-images/" + $image + '" alt="Product-' + $id + '" class="rounded-2">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["category_detail"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-2 bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex align-items-center"><div class="avatar-wrapper me-2 rounded-2 bg-label-secondary"><div class="avatar">' + $output + '</div></div><div class="d-flex flex-column justify-content-center"><span class="text-body text-wrap fw-medium">' + $name + '</span><span class="text-muted text-truncate mb-0 d-none d-sm-block"><small>' + $category_detail + "</small></span></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            responsivePriority: 3,
            render: function(data, type, full, meta) {
              var $total_products = full["total_products"];
              return '<div class="text-sm-end">' + $total_products + "</div>";
            }
          },
          {
            targets: 4,
            orderable: false,
            render: function(data, type, full, meta) {
              var $total_earnings = full["total_earnings"];
              return "<div class='h6 mb-0 text-sm-end'>" + $total_earnings + "</div";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-flex align-items-sm-center justify-content-sm-center"><button class="btn btn-sm btn-icon delete-record me-2"><i class="ti ti-trash"></i></button><button class="btn btn-sm btn-icon"><i class="ti ti-edit"></i></button></div>';
            }
          }
        ],
        order: [2, "desc"],
        dom: '<"card-header d-flex flex-wrap pb-2"<f><"d-flex justify-content-center justify-content-md-end align-items-baseline"<"dt-action-buttons d-flex justify-content-center flex-md-row mb-3 mb-md-0 ps-1 ms-1 align-items-baseline"lB>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        lengthMenu: [7, 10, 20, 50, 70, 100],
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search Category"
        },
        buttons: [
          {
            text: '<i class="ti ti-plus ti-xs me-0 me-sm-2"></i><span class="d-none d-sm-inline-block">Add Category</span>',
            className: "add-new btn btn-primary ms-2",
            attr: {
              "data-bs-toggle": "offcanvas",
              "data-bs-target": "#offcanvasEcommerceCategoryList"
            }
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["categories"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td> ' + col.title + ':</td> <td class="ps-0">' + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $(".dt-action-buttons").addClass("pt-0");
      $(".dataTables_filter").addClass("me-3 ps-0");
    }
    $(".datatables-category-list tbody").on("click", ".delete-record", function() {
      dt_category.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });
  (function() {
    const eCommerceCategoryListForm = document.getElementById("eCommerceCategoryListForm");
    const fv2 = FormValidation.formValidation(eCommerceCategoryListForm, {
      fields: {
        categoryTitle: {
          validators: {
            notEmpty: {
              message: "Please enter category title"
            }
          }
        },
        slug: {
          validators: {
            notEmpty: {
              message: "Please enter slug"
            }
          }
        }
      },
      plugins: {
        trigger: new FormValidation.plugins.Trigger(),
        bootstrap5: new FormValidation.plugins.Bootstrap5({
          eleValidClass: "is-valid",
          rowSelector: function(field, ele) {
            return ".mb-3";
          }
        }),
        submitButton: new FormValidation.plugins.SubmitButton(),
        autoFocus: new FormValidation.plugins.AutoFocus()
      }
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-customer-all.js
  $(function() {
    let borderColor, bodyBg, headingColor;
    if (isDarkStyle) {
      borderColor = config.colors_dark.borderColor;
      bodyBg = config.colors_dark.bodyBg;
      headingColor = config.colors_dark.headingColor;
    } else {
      borderColor = config.colors.borderColor;
      bodyBg = config.colors.bodyBg;
      headingColor = config.colors.headingColor;
    }
    var dt_customer_table = $(".datatables-customers"), select2 = $(".select2"), customerView = "app-ecommerce-customer-details-overview.html";
    if (select2.length) {
      var $this = select2;
      $this.wrap('<div class="position-relative"></div>').select2({
        placeholder: "United States ",
        dropdownParent: $this.parent()
      });
    }
    if (dt_customer_table.length) {
      var dt_customer = dt_customer_table.DataTable({
        ajax: assetsPath + "json/ecommerce-customer-all.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "customer" },
          { data: "customer_id" },
          { data: "country" },
          { data: "order" },
          { data: "total_spent" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 1,
            render: function(data, type, full, meta) {
              var $name = full["customer"], $email = full["email"], $image = full["image"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $image + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["customer"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center customer-name"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><a href="' + customerView + '" ><span class="fw-medium">' + $name + '</span></a><small class="text-muted">' + $email + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $id = full["customer_id"];
              return "<span class='h6 mb-0'>#" + $id + "</span>";
            }
          },
          {
            targets: 4,
            render: function(data, type, full, meta) {
              var $plan = full["country"];
              var $code = full["country_code"];
              if ($code) {
                var $output_code = `<i class ="fis fi fi-${$code} rounded-circle me-2 fs-3"></i>`;
              } else {
                var $output_code = `<i class ="fis fi fi-xx rounded-circle me-2 fs-3"></i>`;
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center customer-country"><div>' + $output_code + "</div><div><span>" + $plan + "</span></div></div>";
              return $row_output;
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $status = full["order"];
              return "<span>" + $status + "</span>";
            }
          },
          {
            targets: 6,
            render: function(data, type, full, meta) {
              var $spent = full["total_spent"];
              return '<span class="h6 mb-0">' + $spent + "</span>";
            }
          }
        ],
        order: [[2, "desc"]],
        dom: '<"card-header d-flex flex-wrap pb-md-2"<"d-flex align-items-center me-5"f><"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-md-end gap-3 gap-sm-0 flex-wrap flex-sm-nowrap"lB>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search Order"
        },
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-secondary dropdown-toggle me-3",
            text: '<i class="ti ti-download me-1"></i>Export',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-2" ></i>Print',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                },
                customize: function(win) {
                  $(win.document.body).css("color", headingColor).css("border-color", borderColor).css("background-color", bodyBg);
                  $(win.document.body).find("table").addClass("compact").css("color", "inherit").css("border-color", "inherit").css("background-color", "inherit");
                }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file me-2" ></i>Csv',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-export me-2"></i>Excel',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-text me-2"></i>Pdf',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-2" ></i>Copy',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              }
            ]
          },
          {
            text: '<i class="ti ti-plus me-0 me-sm-1 mb-1 ti-xs"></i><span class="d-none d-sm-inline-block">Add Customer</span>',
            className: "add-new btn btn-primary py-2",
            attr: {
              "data-bs-toggle": "offcanvas",
              "data-bs-target": "#offcanvasEcommerceCustomerAdd"
            }
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["customer"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $(".dataTables_length").addClass("ms-n2 mt-0 mt-md-3 me-2");
      $(".dt-action-buttons").addClass("pt-0");
      $(".dataTables_filter").addClass("ms-n3");
      $(".dt-buttons").addClass("d-flex flex-wrap");
    }
    $(".datatables-customers tbody").on("click", ".delete-record", function() {
      dt_customer.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });
  (function() {
    const phoneMaskList = document.querySelectorAll(".phone-mask"), eCommerceCustomerAddForm = document.getElementById("eCommerceCustomerAddForm");
    if (phoneMaskList) {
      phoneMaskList.forEach(function(phoneMask) {
        new Cleave(phoneMask, {
          phone: true,
          phoneRegionCode: "US"
        });
      });
    }
    const fv2 = FormValidation.formValidation(eCommerceCustomerAddForm, {
      fields: {
        customerName: {
          validators: {
            notEmpty: {
              message: "Please enter fullname "
            }
          }
        },
        customerEmail: {
          validators: {
            notEmpty: {
              message: "Please enter your email"
            },
            emailAddress: {
              message: "The value is not a valid email address"
            }
          }
        }
      },
      plugins: {
        trigger: new FormValidation.plugins.Trigger(),
        bootstrap5: new FormValidation.plugins.Bootstrap5({
          eleValidClass: "",
          rowSelector: function(field, ele) {
            return ".mb-3";
          }
        }),
        submitButton: new FormValidation.plugins.SubmitButton(),
        autoFocus: new FormValidation.plugins.AutoFocus()
      }
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-customer-detail-overview.js
  $(function() {
    var dt_customer_order = $(".datatables-customer-order"), order_details = "app-ecommerce-order-details.html", statusObj = {
      1: { title: "Ready to  Pickup", class: "bg-label-info" },
      2: { title: "Dispatched", class: "bg-label-warning" },
      3: { title: "Delivered", class: "bg-label-success" },
      4: { title: "Out for delivery", class: "bg-label-primary" }
    };
    if (dt_customer_order.length) {
      var dt_order = dt_customer_order.DataTable({
        ajax: assetsPath + "json/ecommerce-customer-order.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "order" },
          { data: "date" },
          { data: "status" },
          { data: "spent" },
          { data: " " }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $id = full["order"];
              return "<a href='" + order_details + "' class='fw-medium'><span>#" + $id + "</span></a>";
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var date2 = new Date(full.date);
              var formattedDate = date2.toLocaleDateString("en-US", { month: "short", day: "numeric", year: "numeric" });
              return '<span class="text-nowrap">' + formattedDate + "</span > ";
            }
          },
          {
            targets: 4,
            render: function(data, type, full, meta) {
              var $status = full["status"];
              return '<span class="badge ' + statusObj[$status].class + '" text-capitalized>' + statusObj[$status].title + "</span>";
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $spent = full["spent"];
              return "<span >" + $spent + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="text-xxl-center"><button class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></button><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">View</a><a href="javascript:;" class="dropdown-item  delete-record">Delete</a></div></div>';
            }
          }
        ],
        order: [[2, "desc"]],
        dom: '<"card-header flex-column flex-md-row py-2"<"head-label text-center pt-2 pt-md-0">f>t<"row mx-4"<"col-md-12 col-xl-6 text-center text-xl-start pb-2 pb-lg-0 pe-0"i><"col-md-12 col-xl-6 d-flex justify-content-center justify-content-xl-end"p>>',
        lengthMenu: [6, 30, 50, 70, 100],
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search order"
        },
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["order"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $("div.head-label").html('<h5 class="card-title mb-0 text-nowrap">Orders placed</h5>');
    }
    $(".datatables-orders tbody").on("click", ".delete-record", function() {
      dt_order.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-customer-detail.js
  (function() {
    const deleteCustomer = document.querySelector(".delete-customer");
    if (deleteCustomer) {
      deleteCustomer.onclick = function() {
        Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert customer!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, Delete customer!",
          customClass: {
            confirmButton: "btn btn-primary me-2",
            cancelButton: "btn btn-label-secondary"
          },
          buttonsStyling: false
        }).then(function(result) {
          if (result.value) {
            Swal.fire({
              icon: "success",
              title: "Deleted!",
              text: "Customer has been removed.",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          } else if (result.dismiss === Swal.DismissReason.cancel) {
            Swal.fire({
              title: "Cancelled",
              text: "Cancelled Delete :)",
              icon: "error",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          }
        });
      };
    }
    const cancelSubscription = document.querySelectorAll(".cancel-subscription");
    if (cancelSubscription) {
      cancelSubscription.forEach((btnCancle) => {
        btnCancle.onclick = function() {
          Swal.fire({
            text: "Are you sure you would like to cancel your subscription?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes",
            customClass: {
              confirmButton: "btn btn-primary me-2",
              cancelButton: "btn btn-label-secondary"
            },
            buttonsStyling: false
          }).then(function(result) {
            if (result.value) {
              Swal.fire({
                icon: "success",
                title: "Unsubscribed!",
                text: "Your subscription cancelled successfully.",
                customClass: {
                  confirmButton: "btn btn-success"
                }
              });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              Swal.fire({
                title: "Cancelled",
                text: "Unsubscription Cancelled!!",
                icon: "error",
                customClass: {
                  confirmButton: "btn btn-success"
                }
              });
            }
          });
        };
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-dashboard.js
  (function() {
    let cardColor, labelColor, headingColor, borderColor, legendColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      labelColor = config.colors_dark.textMuted;
      legendColor = config.colors_dark.bodyColor;
      headingColor = config.colors_dark.headingColor;
      borderColor = config.colors_dark.borderColor;
    } else {
      cardColor = config.colors.cardColor;
      labelColor = config.colors.textMuted;
      legendColor = config.colors.bodyColor;
      headingColor = config.colors.headingColor;
      borderColor = config.colors.borderColor;
    }
    const chartColors = {
      donut: {
        series1: config.colors.success,
        series2: "#28c76fb3",
        series3: "#28c76f80",
        series4: config.colors_label.success
      }
    };
    const expensesRadialChartEl = document.querySelector("#expensesChart"), expensesRadialChartConfig = {
      chart: {
        height: 145,
        sparkline: {
          enabled: true
        },
        parentHeightOffset: 0,
        type: "radialBar"
      },
      colors: [config.colors.warning],
      series: [78],
      plotOptions: {
        radialBar: {
          offsetY: 0,
          startAngle: -90,
          endAngle: 90,
          hollow: {
            size: "65%"
          },
          track: {
            strokeWidth: "45%",
            background: borderColor
          },
          dataLabels: {
            name: {
              show: false
            },
            value: {
              fontSize: "22px",
              color: headingColor,
              fontWeight: 500,
              offsetY: -5
            }
          }
        }
      },
      grid: {
        show: false,
        padding: {
          bottom: 5
        }
      },
      stroke: {
        lineCap: "round"
      },
      labels: ["Progress"],
      responsive: [
        {
          breakpoint: 1442,
          options: {
            chart: {
              height: 120
            },
            plotOptions: {
              radialBar: {
                dataLabels: {
                  value: {
                    fontSize: "18px"
                  }
                },
                hollow: {
                  size: "60%"
                }
              }
            }
          }
        },
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 136
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "65%"
                },
                dataLabels: {
                  value: {
                    fontSize: "18px"
                  }
                }
              }
            }
          }
        },
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 120
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "55%"
                }
              }
            }
          }
        },
        {
          breakpoint: 426,
          options: {
            chart: {
              height: 145
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "65%"
                }
              }
            },
            dataLabels: {
              value: {
                offsetY: 0
              }
            }
          }
        },
        {
          breakpoint: 376,
          options: {
            chart: {
              height: 105
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "60%"
                }
              }
            }
          }
        }
      ]
    };
    if (typeof expensesRadialChartEl !== void 0 && expensesRadialChartEl !== null) {
      const expensesRadialChart = new ApexCharts(expensesRadialChartEl, expensesRadialChartConfig);
      expensesRadialChart.render();
    }
    const profitLastMonthEl = document.querySelector("#profitLastMonth"), profitLastMonthConfig = {
      chart: {
        height: 90,
        type: "line",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      grid: {
        borderColor,
        strokeDashArray: 6,
        xaxis: {
          lines: {
            show: true,
            colors: "#000"
          }
        },
        yaxis: {
          lines: {
            show: false
          }
        },
        padding: {
          top: -18,
          left: -4,
          right: 7,
          bottom: -10
        }
      },
      colors: [config.colors.info],
      stroke: {
        width: 2
      },
      series: [
        {
          data: [0, 25, 10, 40, 25, 55]
        }
      ],
      tooltip: {
        shared: false,
        intersect: true,
        x: {
          show: false
        }
      },
      xaxis: {
        labels: {
          show: false
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      markers: {
        size: 3.5,
        fillColor: config.colors.info,
        strokeColors: "transparent",
        strokeWidth: 3.2,
        discrete: [
          {
            seriesIndex: 0,
            dataPointIndex: 5,
            fillColor: cardColor,
            strokeColor: config.colors.info,
            size: 5,
            shape: "circle"
          }
        ],
        hover: {
          size: 5.5
        }
      },
      responsive: [
        {
          breakpoint: 1442,
          options: {
            chart: {
              height: 100
            }
          }
        },
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 86
            }
          }
        },
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 93
            }
          }
        }
      ]
    };
    if (typeof profitLastMonthEl !== void 0 && profitLastMonthEl !== null) {
      const profitLastMonth = new ApexCharts(profitLastMonthEl, profitLastMonthConfig);
      profitLastMonth.render();
    }
    const generatedLeadsChartEl = document.querySelector("#generatedLeadsChart"), generatedLeadsChartConfig = {
      chart: {
        height: 147,
        width: 130,
        parentHeightOffset: 0,
        type: "donut"
      },
      labels: ["Electronic", "Sports", "Decor", "Fashion"],
      series: [45, 58, 30, 50],
      colors: [
        chartColors.donut.series1,
        chartColors.donut.series2,
        chartColors.donut.series3,
        chartColors.donut.series4
      ],
      stroke: {
        width: 0
      },
      dataLabels: {
        enabled: false,
        formatter: function(val, opt) {
          return parseInt(val) + "%";
        }
      },
      legend: {
        show: false
      },
      tooltip: {
        theme: false
      },
      grid: {
        padding: {
          top: 15,
          right: -20,
          left: -20
        }
      },
      states: {
        hover: {
          filter: {
            type: "none"
          }
        }
      },
      plotOptions: {
        pie: {
          donut: {
            size: "70%",
            labels: {
              show: true,
              value: {
                fontSize: "1.375rem",
                fontFamily: "Public Sans",
                color: headingColor,
                fontWeight: 500,
                offsetY: -15,
                formatter: function(val) {
                  return parseInt(val) + "%";
                }
              },
              name: {
                offsetY: 20,
                fontFamily: "Public Sans"
              },
              total: {
                show: true,
                showAlways: true,
                color: config.colors.success,
                fontSize: ".8125rem",
                label: "Total",
                fontFamily: "Public Sans",
                formatter: function(w) {
                  return "184";
                }
              }
            }
          }
        }
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 172,
              width: 160
            }
          }
        },
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 178
            }
          }
        },
        {
          breakpoint: 426,
          options: {
            chart: {
              height: 147
            }
          }
        }
      ]
    };
    if (typeof generatedLeadsChartEl !== void 0 && generatedLeadsChartEl !== null) {
      const generatedLeadsChart = new ApexCharts(generatedLeadsChartEl, generatedLeadsChartConfig);
      generatedLeadsChart.render();
    }
    const totalRevenueChartEl = document.querySelector("#totalRevenueChart"), totalRevenueChartOptions = {
      series: [
        {
          name: "Earning",
          data: [270, 210, 180, 200, 250, 280, 250, 270, 150]
        },
        {
          name: "Expense",
          data: [-140, -160, -180, -150, -100, -60, -80, -100, -180]
        }
      ],
      chart: {
        height: 413,
        parentHeightOffset: 0,
        stacked: true,
        type: "bar",
        toolbar: { show: false }
      },
      tooltip: {
        enabled: false
      },
      plotOptions: {
        bar: {
          horizontal: false,
          columnWidth: "40%",
          borderRadius: 9,
          startingShape: "rounded",
          endingShape: "rounded"
        }
      },
      colors: [config.colors.primary, config.colors.warning],
      dataLabels: {
        enabled: false
      },
      stroke: {
        curve: "smooth",
        width: 6,
        lineCap: "round",
        colors: [cardColor]
      },
      legend: {
        show: true,
        horizontalAlign: "right",
        position: "top",
        fontFamily: "Public Sans",
        markers: {
          height: 12,
          width: 12,
          radius: 12,
          offsetX: -3,
          offsetY: 2
        },
        labels: {
          colors: legendColor
        },
        itemMargin: {
          horizontal: 10,
          vertical: 2
        }
      },
      grid: {
        show: false,
        padding: {
          bottom: -8,
          top: 20
        }
      },
      xaxis: {
        categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"],
        labels: {
          style: {
            fontSize: "13px",
            colors: labelColor,
            fontFamily: "Public Sans"
          }
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        labels: {
          offsetX: -16,
          style: {
            fontSize: "13px",
            colors: labelColor,
            fontFamily: "Public Sans"
          }
        },
        min: -200,
        max: 300,
        tickAmount: 5
      },
      responsive: [
        {
          breakpoint: 1700,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "43%"
              }
            }
          }
        },
        {
          breakpoint: 1441,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            },
            chart: {
              height: 422
            }
          }
        },
        {
          breakpoint: 1300,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 1025,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            },
            chart: {
              height: 390
            }
          }
        },
        {
          breakpoint: 991,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "38%"
              }
            }
          }
        },
        {
          breakpoint: 850,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 449,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "73%"
              }
            },
            chart: {
              height: 360
            },
            xaxis: {
              labels: {
                offsetY: -5
              }
            },
            legend: {
              show: true,
              horizontalAlign: "right",
              position: "top",
              itemMargin: {
                horizontal: 10,
                vertical: 0
              }
            }
          }
        },
        {
          breakpoint: 394,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "88%"
              }
            },
            legend: {
              show: true,
              horizontalAlign: "center",
              position: "bottom",
              markers: {
                offsetX: -3,
                offsetY: 0
              },
              itemMargin: {
                horizontal: 10,
                vertical: 5
              }
            }
          }
        }
      ],
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      }
    };
    if (typeof totalRevenueChartEl !== void 0 && totalRevenueChartEl !== null) {
      const totalRevenueChart = new ApexCharts(totalRevenueChartEl, totalRevenueChartOptions);
      totalRevenueChart.render();
    }
    const budgetChartEl = document.querySelector("#budgetChart"), budgetChartOptions = {
      chart: {
        height: 100,
        toolbar: { show: false },
        zoom: { enabled: false },
        type: "line"
      },
      series: [
        {
          name: "Last Month",
          data: [20, 10, 30, 16, 24, 5, 40, 23, 28, 5, 30]
        },
        {
          name: "This Month",
          data: [50, 40, 60, 46, 54, 35, 70, 53, 58, 35, 60]
        }
      ],
      stroke: {
        curve: "smooth",
        dashArray: [5, 0],
        width: [1, 2]
      },
      legend: {
        show: false
      },
      colors: [borderColor, config.colors.primary],
      grid: {
        show: false,
        borderColor,
        padding: {
          top: -30,
          bottom: -15,
          left: 25
        }
      },
      markers: {
        size: 0
      },
      xaxis: {
        labels: {
          show: false
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof budgetChartEl !== void 0 && budgetChartEl !== null) {
      const budgetChart = new ApexCharts(budgetChartEl, budgetChartOptions);
      budgetChart.render();
    }
    const reportBarChartEl = document.querySelector("#reportBarChart"), reportBarChartConfig = {
      chart: {
        height: 230,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "60%",
          columnWidth: "60%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 4,
          distributed: true
        }
      },
      grid: {
        show: false,
        padding: {
          top: -20,
          bottom: 0,
          left: -10,
          right: -10
        }
      },
      colors: [
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors.primary,
        config.colors_label.primary,
        config.colors_label.primary
      ],
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [40, 95, 60, 45, 90, 50, 75]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 190
            }
          }
        },
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 250
            }
          }
        }
      ]
    };
    if (typeof reportBarChartEl !== void 0 && reportBarChartEl !== null) {
      const barChart = new ApexCharts(reportBarChartEl, reportBarChartConfig);
      barChart.render();
    }
    var dt_invoice_table = $(".datatable-invoice");
    if (dt_invoice_table.length) {
      var dt_invoice = dt_invoice_table.DataTable({
        ajax: assetsPath + "json/invoice-list.json",
        columns: [
          { data: "" },
          { data: "invoice_id" },
          { data: "invoice_status" },
          { data: "total" },
          { data: "issued_date" },
          { data: "invoice_status" },
          { data: "action" }
        ],
        columnDefs: [
          {
            className: "control",
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            render: function(data, type, full, meta) {
              var $invoice_id = full["invoice_id"];
              var $row_output = '<a href="app-invoice-preview.html"><span>#' + $invoice_id + "</span></a>";
              return $row_output;
            }
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $invoice_status = full["invoice_status"], $due_date = full["due_date"], $balance = full["balance"];
              var roleBadgeObj = {
                Sent: '<span class="badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30"><i class="ti ti-circle-check ti-sm"></i></span>',
                Draft: '<span class="badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30"><i class="ti ti-device-floppy ti-sm"></i></span>',
                "Past Due": '<span class="badge badge-center rounded-pill bg-label-danger w-px-30 h-px-30"><i class="ti ti-info-circle ti-sm"></i></span>',
                "Partial Payment": '<span class="badge badge-center rounded-pill bg-label-success w-px-30 h-px-30"><i class="ti ti-circle-half-2 ti-sm"></i></span>',
                Paid: '<span class="badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30"><i class="ti ti-chart-pie ti-sm"></i></span>',
                Downloaded: '<span class="badge badge-center rounded-pill bg-label-info w-px-30 h-px-30"><i class="ti ti-arrow-down-circle ti-sm"></i></span>'
              };
              return "<span data-bs-toggle='tooltip' data-bs-html='true' title='<span>" + $invoice_status + '<br> <span class="fw-medium">Balance:</span> ' + $balance + '<br> <span class="fw-medium">Due Date:</span> ' + $due_date + "</span>'>" + roleBadgeObj[$invoice_status] + "</span>";
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $total = full["total"];
              return "$" + $total;
            }
          },
          {
            targets: -1,
            title: "Actions",
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-flex align-items-center"><a href="javascript:;" class="text-body" data-bs-toggle="tooltip" title="Send Mail"><i class="ti ti-mail me-2 ti-sm"></i></a><a href="app-invoice-preview.html" class="text-body" data-bs-toggle="tooltip" title="Preview"><i class="ti ti-eye mx-2 ti-sm"></i></a><div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical ti-sm lh-1"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div></div>';
            }
          },
          {
            targets: -2,
            visible: false
          }
        ],
        order: [[1, "asc"]],
        dom: '<"row ms-2 me-3"<"col-12 col-md-6 d-flex align-items-center justify-content-center justify-content-md-start gap-2"l<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start mt-md-0 mt-3"B>><"col-12 col-md-6 d-flex align-items-center justify-content-end flex-column flex-md-row pe-3 gap-md-2"f<"invoice_status mb-3 mb-md-0">>>t<"row d-flex align-items-center mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6 mt-1"p>>',
        displayLength: 7,
        lengthMenu: [7, 10, 25, 50, 75, 100],
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search Invoice"
        },
        buttons: [
          {
            text: '<i class="ti ti-plus me-md-2"></i><span class="d-md-inline-block d-none">Create Invoice</span>',
            className: "btn btn-primary",
            action: function(e, dt, button, config2) {
              window.location = "app-invoice-add.html";
            }
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        },
        initComplete: function() {
          this.api().columns(5).every(function() {
            var column = this;
            var select = $(
              '<select id="UserRole" class="form-select"><option value=""> Select Status </option></select>'
            ).appendTo(".invoice_status").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + d + '" class="text-capitalize">' + d + "</option>");
            });
          });
        }
      });
    }
    dt_invoice_table.on("draw.dt", function() {
      var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl, {
          boundary: document.body
        });
      });
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-order-details.js
  $(function() {
    var dt_details_table = $(".datatables-order-details");
    if (dt_details_table.length) {
      var dt_products = dt_details_table.DataTable({
        ajax: assetsPath + "json/ecommerce-order-details.json",
        columns: [
          { data: "id" },
          { data: "id" },
          { data: "product_name" },
          { data: "price" },
          { data: "qty" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            },
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input" >';
            },
            searchable: false
          },
          {
            targets: 2,
            responsivePriority: 1,
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              var $name = full["product_name"], $product_brand = full["product_info"], $image = full["image"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/products/" + $image + '" alt="product-' + $name + '" class="rounded-2">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["product_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-2 bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center text-nowrap"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><h6 class="text-body mb-0">' + $name + '</h6><small class="text-muted">' + $product_brand + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              var $price = full["price"];
              var $output = "<span>$" + $price + "</span>";
              return $output;
            }
          },
          {
            targets: 4,
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              var $qty = full["qty"];
              var $output = '<span class="text-body">' + $qty + "</span>";
              return $output;
            }
          },
          {
            targets: 5,
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              var $total = full["qty"] * full["price"];
              var $output = '<h6 class="mb-0">$' + $total + "</h6>";
              return $output;
            }
          }
        ],
        order: [2, ""],
        dom: "t",
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
    }
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });
  (function() {
    const deleteOrder = document.querySelector(".delete-order");
    if (deleteOrder) {
      deleteOrder.onclick = function() {
        Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert order!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, Delete order!",
          customClass: {
            confirmButton: "btn btn-primary me-2",
            cancelButton: "btn btn-label-secondary"
          },
          buttonsStyling: false
        }).then(function(result) {
          if (result.value) {
            Swal.fire({
              icon: "success",
              title: "Deleted!",
              text: "Order has been removed.",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          } else if (result.dismiss === Swal.DismissReason.cancel) {
            Swal.fire({
              title: "Cancelled",
              text: "Cancelled Delete :)",
              icon: "error",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          }
        });
      };
    }
    function getCurrentYear() {
      var currentYear = new Date().getFullYear();
      return currentYear;
    }
    var year = getCurrentYear();
    document.getElementById("orderYear").innerHTML = year;
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-order-list.js
  $(function() {
    let borderColor, bodyBg, headingColor;
    if (isDarkStyle) {
      borderColor = config.colors_dark.borderColor;
      bodyBg = config.colors_dark.bodyBg;
      headingColor = config.colors_dark.headingColor;
    } else {
      borderColor = config.colors.borderColor;
      bodyBg = config.colors.bodyBg;
      headingColor = config.colors.headingColor;
    }
    var dt_order_table = $(".datatables-order"), statusObj = {
      1: { title: "Dispatched", class: "bg-label-warning" },
      2: { title: "Delivered", class: "bg-label-success" },
      3: { title: "Out for Delivery", class: "bg-label-primary" },
      4: { title: "Ready to Pickup", class: "bg-label-info" }
    }, paymentObj = {
      1: { title: "Paid", class: "text-success" },
      2: { title: "Pending", class: "text-warning" },
      3: { title: "Failed", class: "text-danger" },
      4: { title: "Cancelled", class: "text-secondary" }
    };
    if (dt_order_table.length) {
      var dt_products = dt_order_table.DataTable({
        ajax: assetsPath + "json/ecommerce-customer-order.json",
        columns: [
          { data: "id" },
          { data: "id" },
          { data: "order" },
          { data: "date" },
          { data: "customer" },
          { data: "payment" },
          { data: "status" },
          { data: "method" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            },
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input" >';
            },
            searchable: false
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $order_id = full["order"];
              var $row_output = '<a href="app-ecommerce-order-details.html"><span>#' + $order_id + "</span></a>";
              return $row_output;
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var date2 = new Date(full.date);
              var timeX = full["time"].substring(0, 5);
              var formattedDate = date2.toLocaleDateString("en-US", {
                month: "short",
                day: "numeric",
                year: "numeric",
                time: "numeric"
              });
              return '<span class="text-nowrap">' + formattedDate + ", " + timeX + "</span>";
            }
          },
          {
            targets: 4,
            responsivePriority: 1,
            render: function(data, type, full, meta) {
              var $name = full["customer"], $email = full["email"], $avatar = full["avatar"];
              if ($avatar) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $avatar + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["customer"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center order-name text-nowrap"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><h6 class="m-0"><a href="pages-profile-user.html" class="text-body">' + $name + '</a></h6><small class="text-muted">' + $email + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $payment = full["payment"], $paymentObj = paymentObj[$payment];
              if ($paymentObj) {
                return '<h6 class="mb-0 align-items-center d-flex w-px-100 ' + $paymentObj.class + '"><i class="ti ti-circle-filled fs-tiny me-2"></i>' + $paymentObj.title + "</h6>";
              }
              return data;
            }
          },
          {
            targets: -3,
            render: function(data, type, full, meta) {
              var $status = full["status"];
              return '<span class="badge px-2 ' + statusObj[$status].class + '" text-capitalized>' + statusObj[$status].title + "</span>";
            }
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $method = full["method"];
              var $method_number = full["method_number"];
              if ($method == "paypal_logo") {
                $method_number = "@gmail.com";
              }
              return '<div class="d-flex align-items-center text-nowrap"><img src="' + assetsPath + "img/icons/payments/" + $method + '.png" alt="' + $method + '"class="me-2" width="16"><span><i class="ti ti-dots me-1 mt-n1"></i>' + $method_number + "</span></div>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-flex justify-content-sm-center align-items-sm-center"><button class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></button><div class="dropdown-menu dropdown-menu-end m-0"><a href="app-ecommerce-order-details.html" class="dropdown-item">View</a><a href="javascript:0;" class="dropdown-item delete-record">Delete</a></div></div>';
            }
          }
        ],
        order: [3, "asc"],
        dom: '<"card-header pb-md-2 d-flex flex-column flex-md-row align-items-start align-items-md-center"<f><"d-flex align-items-md-center justify-content-md-end mt-2 mt-md-0 gap-2"l<"dt-action-buttons"B>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        lengthMenu: [10, 40, 60, 80, 100],
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search Order",
          info: "Displaying _START_ to _END_ of _TOTAL_ entries"
        },
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-secondary dropdown-toggle",
            text: '<i class="ti ti-download me-1"></i>Export',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-2"></i>Print',
                className: "dropdown-item",
                exportOptions: {
                  columns: [2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("order-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                },
                customize: function(win) {
                  $(win.document.body).css("color", headingColor).css("border-color", borderColor).css("background-color", bodyBg);
                  $(win.document.body).find("table").addClass("compact").css("color", "inherit").css("border-color", "inherit").css("background-color", "inherit");
                }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file me-2"></i>Csv',
                className: "dropdown-item",
                exportOptions: {
                  columns: [2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("order-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-export me-2"></i>Excel',
                className: "dropdown-item",
                exportOptions: {
                  columns: [2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("order-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-text me-2"></i>Pdf',
                className: "dropdown-item",
                exportOptions: {
                  columns: [2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("order-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-2"></i>Copy',
                className: "dropdown-item",
                exportOptions: {
                  columns: [2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("order-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              }
            ]
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["customer"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $(".dataTables_length").addClass("mt-0 mt-md-3 ms-n2");
      $(".dt-action-buttons").addClass("pt-0");
      $(".dataTables_filter").addClass("ms-n3");
    }
    $(".datatables-order tbody").on("click", ".delete-record", function() {
      dt_products.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-product-add.js
  (function() {
    const commentEditor2 = document.querySelector(".comment-editor");
    if (commentEditor2) {
      new Quill(commentEditor2, {
        modules: {
          toolbar: ".comment-toolbar"
        },
        placeholder: "Product Description",
        theme: "snow"
      });
    }
    const previewTemplate = `<div class="dz-preview dz-file-preview">
<div class="dz-details">
  <div class="dz-thumbnail">
    <img data-dz-thumbnail>
    <span class="dz-nopreview">No preview</span>
    <div class="dz-success-mark"></div>
    <div class="dz-error-mark"></div>
    <div class="dz-error-message"><span data-dz-errormessage></span></div>
    <div class="progress">
      <div class="progress-bar progress-bar-primary" role="progressbar" aria-valuemin="0" aria-valuemax="100" data-dz-uploadprogress></div>
    </div>
  </div>
  <div class="dz-filename" data-dz-name></div>
  <div class="dz-size" data-dz-size></div>
</div>
</div>`;
    const dropzoneBasic = document.querySelector("#dropzone-basic");
    if (dropzoneBasic) {
      const myDropzone = new Dropzone(dropzoneBasic, {
        previewTemplate,
        parallelUploads: 1,
        maxFilesize: 5,
        acceptedFiles: ".jpg,.jpeg,.png,.gif",
        addRemoveLinks: true,
        maxFiles: 1
      });
    }
    const tagifyBasicEl = document.querySelector("#ecommerce-product-tags");
    const TagifyBasic = new Tagify(tagifyBasicEl);
    const date2 = new Date();
    const productDate = document.querySelector(".product-date");
    if (productDate) {
      productDate.flatpickr({
        monthSelectorType: "static",
        defaultDate: date2
      });
    }
  })();
  $(function() {
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          dropdownParent: $this.parent(),
          placeholder: $this.data("placeholder")
        });
      });
    }
    var formRepeater = $(".form-repeater");
    if (formRepeater.length) {
      var row = 2;
      var col = 1;
      formRepeater.on("submit", function(e) {
        e.preventDefault();
      });
      formRepeater.repeater({
        show: function() {
          var fromControl = $(this).find(".form-control, .form-select");
          var formLabel = $(this).find(".form-label");
          fromControl.each(function(i) {
            var id = "form-repeater-" + row + "-" + col;
            $(fromControl[i]).attr("id", id);
            $(formLabel[i]).attr("for", id);
            col++;
          });
          row++;
          $(this).slideDown();
          $(".select2-container").remove();
          $(".select2.form-select").select2({
            placeholder: "Placeholder text"
          });
          $(".select2-container").css("width", "100%");
          $(".form-repeater:first .form-select").select2({
            dropdownParent: $(this).parent(),
            placeholder: "Placeholder text"
          });
          $(".ecommerce-select2-dropdown .form-select").select2({
            dropdownParent: $(".ecommerce-select2-dropdown").parent()
          });
        }
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-product-list.js
  $(function() {
    let borderColor, bodyBg, headingColor;
    if (isDarkStyle) {
      borderColor = config.colors_dark.borderColor;
      bodyBg = config.colors_dark.bodyBg;
      headingColor = config.colors_dark.headingColor;
    } else {
      borderColor = config.colors.borderColor;
      bodyBg = config.colors.bodyBg;
      headingColor = config.colors.headingColor;
    }
    var dt_product_table = $(".datatables-products"), productAdd = "app-ecommerce-product-add.html", statusObj = {
      1: { title: "Scheduled", class: "bg-label-warning" },
      2: { title: "Publish", class: "bg-label-success" },
      3: { title: "Inactive", class: "bg-label-danger" }
    }, categoryObj = {
      0: { title: "Household" },
      1: { title: "Office" },
      2: { title: "Electronics" },
      3: { title: "Shoes" },
      4: { title: "Accessories" },
      5: { title: "Game" }
    }, stockObj = {
      0: { title: "Out_of_Stock" },
      1: { title: "In_Stock" }
    }, stockFilterValObj = {
      0: { title: "Out of Stock" },
      1: { title: "In Stock" }
    };
    if (dt_product_table.length) {
      var dt_products = dt_product_table.DataTable({
        ajax: assetsPath + "json/ecommerce-product-list.json",
        columns: [
          { data: "id" },
          { data: "id" },
          { data: "product_name" },
          { data: "category" },
          { data: "stock" },
          { data: "sku" },
          { data: "price" },
          { data: "quantity" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            },
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input" >';
            },
            searchable: false
          },
          {
            targets: 2,
            responsivePriority: 1,
            render: function(data, type, full, meta) {
              var $name = full["product_name"], $id = full["id"], $product_brand = full["product_brand"], $image = full["image"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/ecommerce-images/" + $image + '" alt="Product-' + $id + '" class="rounded-2">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["product_brand"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-2 bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center product-name"><div class="avatar-wrapper"><div class="avatar avatar me-2 rounded-2 bg-label-secondary">' + $output + '</div></div><div class="d-flex flex-column"><h6 class="text-body text-nowrap mb-0">' + $name + '</h6><small class="text-muted text-truncate d-none d-sm-block">' + $product_brand + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            responsivePriority: 5,
            render: function(data, type, full, meta) {
              var $category = categoryObj[full["category"]].title;
              var categoryBadgeObj = {
                Household: '<span class="avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-warning me-2 p-3"><i class="ti ti-home-2 ti-xs"></i></span>',
                Office: '<span class="avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-info me-2 p-3"><i class="ti ti-briefcase ti-xs"></i></span>',
                Electronics: '<span class="avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-danger me-2 p-3"><i class="ti ti-device-mobile ti-xs"></i></span>',
                Shoes: '<span class="avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-success me-2"><i class="ti ti-shoe ti-xs"></i></span>',
                Accessories: '<span class="avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-secondary me-2"><i class="ti ti-device-watch ti-xs"></i></span>',
                Game: '<span class="avatar-sm rounded-circle d-flex justify-content-center align-items-center bg-label-primary me-2"><i class="ti ti-device-gamepad-2 ti-xs"></i></span>'
              };
              return "<span class='text-truncate d-flex align-items-center'>" + categoryBadgeObj[$category] + $category + "</span>";
            }
          },
          {
            targets: 4,
            orderable: false,
            responsivePriority: 3,
            render: function(data, type, full, meta) {
              var $stock = full["stock"];
              var stockSwitchObj = {
                Out_of_Stock: '<label class="switch switch-primary switch-sm"><input type="checkbox" class="switch-input" id="switch"><span class="switch-toggle-slider"><span class="switch-off"></span></span></label>',
                In_Stock: '<label class="switch switch-primary switch-sm"><input type="checkbox" class="switch-input" checked=""><span class="switch-toggle-slider"><span class="switch-on"></span></span></label>'
              };
              return "<span class='text-truncate'>" + stockSwitchObj[stockObj[$stock].title] + '<span class="d-none">' + stockObj[$stock].title + "</span></span>";
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $sku = full["sku"];
              return "<span>" + $sku + "</span>";
            }
          },
          {
            targets: 6,
            render: function(data, type, full, meta) {
              var $price = full["price"];
              return "<span>" + $price + "</span>";
            }
          },
          {
            targets: 7,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $qty = full["qty"];
              return "<span>" + $qty + "</span>";
            }
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status = full["status"];
              return '<span class="badge ' + statusObj[$status].class + '" text-capitalized>' + statusObj[$status].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block text-nowrap"><button class="btn btn-sm btn-icon"><i class="ti ti-edit"></i></button><button class="btn btn-sm btn-icon delete-record"><i class="ti ti-trash"></i></button><button class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical me-2"></i></button><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:0;" class="dropdown-item">View</a><a href="javascript:0;" class="dropdown-item">Suspend</a></div></div>';
            }
          }
        ],
        order: [2, "asc"],
        dom: '<"card-header d-flex border-top rounded-0 flex-wrap py-2"<"me-5 ms-n2 pe-5"f><"d-flex justify-content-start justify-content-md-end align-items-baseline"<"dt-action-buttons d-flex flex-column align-items-start align-items-md-center justify-content-sm-center mb-3 mb-md-0 pt-0 gap-4 gap-sm-0 flex-sm-row"lB>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        lengthMenu: [7, 10, 20, 50, 70, 100],
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search Product",
          info: "Displaying _START_ to _END_ of _TOTAL_ entries"
        },
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-secondary dropdown-toggle me-3",
            text: '<i class="ti ti-download me-1 ti-xs"></i>Export',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-2" ></i>Print',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("product-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                },
                customize: function(win) {
                  $(win.document.body).css("color", headingColor).css("border-color", borderColor).css("background-color", bodyBg);
                  $(win.document.body).find("table").addClass("compact").css("color", "inherit").css("border-color", "inherit").css("background-color", "inherit");
                }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file me-2" ></i>Csv',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("product-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-export me-2"></i>Excel',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("product-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-text me-2"></i>Pdf',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("product-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-2"></i>Copy',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("product-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              }
            ]
          },
          {
            text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">Add Product</span>',
            className: "add-new btn btn-primary ms-2 ms-sm-0",
            action: function() {
              window.location.href = productAdd;
            }
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["product_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        },
        initComplete: function() {
          this.api().columns(-2).every(function() {
            var column = this;
            var select = $(
              '<select id="ProductStatus" class="form-select text-capitalize"><option value="">Status</option></select>'
            ).appendTo(".product_status").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + statusObj[d].title + '">' + statusObj[d].title + "</option>");
            });
          });
          this.api().columns(3).every(function() {
            var column = this;
            var select = $(
              '<select id="ProductCategory" class="form-select text-capitalize"><option value="">Category</option></select>'
            ).appendTo(".product_category").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + categoryObj[d].title + '">' + categoryObj[d].title + "</option>");
            });
          });
          this.api().columns(4).every(function() {
            var column = this;
            var select = $(
              '<select id="ProductStock" class="form-select text-capitalize"><option value=""> Stock </option></select>'
            ).appendTo(".product_stock").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + stockObj[d].title + '">' + stockFilterValObj[d].title + "</option>");
            });
          });
        }
      });
      $(".dataTables_length").addClass("mt-2 mt-sm-0 mt-md-3 me-2");
      $(".dt-buttons").addClass("d-flex flex-wrap");
    }
    $(".datatables-products tbody").on("click", ".delete-record", function() {
      dt_products.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-referral.js
  $(function() {
    let borderColor, bodyBg, headingColor;
    if (isDarkStyle) {
      borderColor = config.colors_dark.borderColor;
      bodyBg = config.colors_dark.bodyBg;
      headingColor = config.colors_dark.headingColor;
    } else {
      borderColor = config.colors.borderColor;
      bodyBg = config.colors.bodyBg;
      headingColor = config.colors.headingColor;
    }
    var dt_user_table = $(".datatables-referral"), customerView = "app-ecommerce-customer-details-overview.html", statusObj = {
      1: { title: "Paid", class: "bg-label-success" },
      2: { title: "Unpaid", class: "bg-label-warning" },
      3: { title: "Rejected", class: "bg-label-danger" }
    };
    if (dt_user_table.length) {
      var dt_user = dt_user_table.DataTable({
        ajax: assetsPath + "json/ecommerce-referral.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "user" },
          { data: "referred_id" },
          { data: "status" },
          { data: "value" },
          { data: "earning" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 1,
            render: function(data, type, full, meta) {
              var $name = full["user"], $email = full["email"], $image = full["avatar"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $image + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["user"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center customer-name"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><a href="' + customerView + '"><span class="fw-medium">' + $name + '</span></a><small class="text-muted text-nowrap">' + $email + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $role = full["referred_id"];
              return "<span>" + $role + "</span>";
            }
          },
          {
            targets: 4,
            render: function(data, type, full, meta) {
              var $status = full["status"];
              return '<span class="badge ' + statusObj[$status].class + '" text-capitalized>' + statusObj[$status].title + "</span>";
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $plan = full["value"];
              return "<span>" + $plan + "</span>";
            }
          },
          {
            targets: 6,
            render: function(data, type, full, meta) {
              var $earn = full["earning"];
              return '<span class="h6 mb-0">' + $earn + "</span > ";
            }
          }
        ],
        order: [[2, "asc"]],
        dom: '<"card-header d-flex flex-column flex-sm-row pb-md-0 align-items-start align-items-sm-center pt-4 pt-md-2"<"head-label"><"d-flex align-items-sm-center justify-content-end mt-2 mt-sm-0"l<"dt-action-buttons"B>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        language: {
          sLengthMenu: "_MENU_"
        },
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-secondary dropdown-toggle",
            text: '<i class="ti ti-download me-1"></i>Export',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-2"></i>Print',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                },
                customize: function(win) {
                  $(win.document.body).css("color", headingColor).css("border-color", borderColor).css("background-color", bodyBg);
                  $(win.document.body).find("table").addClass("compact").css("color", "inherit").css("border-color", "inherit").css("background-color", "inherit");
                }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file me-2" ></i>Csv',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-export me-2"></i>Excel',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-text me-2"></i>Pdf',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-2" ></i>Copy',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              }
            ]
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["user"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $("div.head-label").html('<h5 class="card-title text-nowrap mb-2 mb-sm-0">Referred users</h5>');
      $(".dataTables_length").addClass("mt-0 mt-md-3 me-2 ms-n2 ms-sm-0");
      $(".dt-action-buttons").addClass("pt-0");
    }
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-reviews.js
  (function() {
    let cardColor, shadeColor, labelColor, headingColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      labelColor = config.colors_dark.textMuted;
      headingColor = config.colors_dark.headingColor;
      shadeColor = "dark";
    } else {
      cardColor = config.colors.cardColor;
      labelColor = config.colors.textMuted;
      headingColor = config.colors.headingColor;
      shadeColor = "";
    }
    const visitorBarChartEl = document.querySelector("#reviewsChart"), visitorBarChartConfig = {
      chart: {
        height: 160,
        width: 190,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "75%",
          columnWidth: "40%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 5,
          distributed: true
        }
      },
      grid: {
        show: false,
        padding: {
          top: -25,
          bottom: -12
        }
      },
      colors: [
        config.colors_label.success,
        config.colors_label.success,
        config.colors_label.success,
        config.colors_label.success,
        config.colors.success,
        config.colors_label.success,
        config.colors_label.success
      ],
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [20, 40, 60, 80, 100, 80, 60]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["M", "T", "W", "T", "F", "S", "S"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      responsive: [
        {
          breakpoint: 0,
          options: {
            chart: {
              width: "100%"
            },
            plotOptions: {
              bar: {
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 1440,
          options: {
            chart: {
              height: 150,
              width: 190,
              toolbar: {
                show: false
              }
            },
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 1400,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 1200,
          options: {
            chart: {
              height: 130,
              width: 190,
              toolbar: {
                show: false
              }
            },
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 992,
          chart: {
            height: 150,
            width: 190,
            toolbar: {
              show: false
            }
          },
          options: {
            plotOptions: {
              bar: {
                borderRadius: 5,
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 883,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 5,
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 768,
          options: {
            chart: {
              height: 150,
              width: 190,
              toolbar: {
                show: false
              }
            },
            plotOptions: {
              bar: {
                borderRadius: 4,
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 576,
          options: {
            chart: {
              width: "100%",
              height: "200",
              type: "bar"
            },
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "30% "
              }
            }
          }
        },
        {
          breakpoint: 420,
          options: {
            plotOptions: {
              chart: {
                width: "100%",
                height: "200",
                type: "bar"
              },
              bar: {
                borderRadius: 3,
                columnWidth: "30%"
              }
            }
          }
        }
      ]
    };
    if (typeof visitorBarChartEl !== void 0 && visitorBarChartEl !== null) {
      const visitorBarChart = new ApexCharts(visitorBarChartEl, visitorBarChartConfig);
      visitorBarChart.render();
    }
  })();
  $(function() {
    let borderColor, bodyBg, headingColor;
    if (isDarkStyle) {
      borderColor = config.colors_dark.borderColor;
      bodyBg = config.colors_dark.bodyBg;
      headingColor = config.colors_dark.headingColor;
    } else {
      borderColor = config.colors.borderColor;
      bodyBg = config.colors.bodyBg;
      headingColor = config.colors.headingColor;
    }
    var dt_customer_review = $(".datatables-review"), customerView = "app-ecommerce-customer-details-overview.html", statusObj = {
      Pending: { title: "Pending", class: "bg-label-warning" },
      Published: { title: "Published", class: "bg-label-success" }
    };
    if (dt_customer_review.length) {
      var dt_review = dt_customer_review.DataTable({
        ajax: assetsPath + "json/app-ecommerce-reviews.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "product" },
          { data: "reviewer" },
          { data: "review" },
          { data: "date" },
          { data: "status" },
          { data: " " }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $product = full["product"], $company_name = full["company_name"], $id = full["id"], $image = full["product_image"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/ecommerce-images/" + $image + '" alt="Product-' + $id + '" class="rounded-2">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $product = full["product"], $initials = $product.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center customer-name"><div class="avatar-wrapper"><div class="avatar me-2 rounded-2 bg-label-secondary">' + $output + '</div></div><div class="d-flex flex-column"><span class="fw-medium text-nowrap">' + $product + '</span></a><small class="text-muted">' + $company_name + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            responsivePriority: 1,
            render: function(data, type, full, meta) {
              var $name = full["reviewer"], $email = full["email"], $avatar = full["avatar"];
              if ($avatar) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $avatar + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["reviewer"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center customer-name"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><a href="' + customerView + '"><span class="fw-medium">' + $name + '</span></a><small class="text-muted text-nowrap">' + $email + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 4,
            responsivePriority: 2,
            sortable: false,
            render: function(data, type, full, meta) {
              var $num = full["review"];
              var $heading = full["head"];
              var $comment = full["para"];
              var $readOnlyRatings = $('<div class="read-only-ratings ps-0 mb-2"></div>');
              function capitalizeFirstLetter(str) {
                if (typeof str !== "string") {
                  return str;
                }
                if (str.length === 0) {
                  return str;
                }
                return str.charAt(0).toUpperCase() + str.slice(1);
              }
              var $firstCap = capitalizeFirstLetter($heading);
              $readOnlyRatings.rateYo({
                rating: $num,
                rtl: isRtl,
                readOnly: true,
                starWidth: "20px",
                spacing: "3px",
                starSvg: '<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-star-filled" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M8.243 7.34l-6.38 .925l-.113 .023a1 1 0 0 0 -.44 1.684l4.622 4.499l-1.09 6.355l-.013 .11a1 1 0 0 0 1.464 .944l5.706 -3l5.693 3l.1 .046a1 1 0 0 0 1.352 -1.1l-1.091 -6.355l4.624 -4.5l.078 -.085a1 1 0 0 0 -.633 -1.62l-6.38 -.926l-2.852 -5.78a1 1 0 0 0 -1.794 0l-2.853 5.78z" stroke-width="0" /></svg>'
              });
              var $review = "<div>" + $readOnlyRatings.prop("outerHTML") + '<p class="h6 mb-1 text-truncate">' + $firstCap + '</p><small class="text-break pe-3">' + $comment + "</small></div>";
              return $review;
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var date2 = new Date(full.date);
              var formattedDate = date2.toLocaleDateString("en-US", { month: "short", day: "numeric", year: "numeric" });
              return '<span class="text-nowrap">' + formattedDate + "</span>";
            }
          },
          {
            targets: 6,
            render: function(data, type, full, meta) {
              var $status = full["status"];
              return '<span class="badge ' + statusObj[$status].class + '" text-capitalize>' + statusObj[$status].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="text-xxl-center"><div class="dropdown"><a href="javascript:;" class="btn dropdown-toggle hide-arrow text-body p-0" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end"><a href="javascript:;" class="dropdown-item">Download</a><a href="javascript:;" class="dropdown-item">Edit</a><a href="javascript:;" class="dropdown-item">Duplicate</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item delete-record text-danger">Delete</a></div></div></div>';
            }
          }
        ],
        order: [[2, "asc"]],
        dom: '<"card-header d-flex align-items-md-center pb-md-2 flex-wrap"<"me-5 ms-n2"f><"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-end align-items-md-center justify-content-md-end pt-0 gap-2 flex-wrap"l<"review_filter"> <"mx-0 me-md-n3 mt-sm-0"B>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search Review"
        },
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-secondary dropdown-toggle ms-2 me-3 mt-2 mt-sm-0",
            text: '<i class="ti ti-download me-1"></i>Export',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-2" ></i>Print',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                },
                customize: function(win) {
                  $(win.document.body).css("color", headingColor).css("border-color", borderColor).css("background-color", bodyBg);
                  $(win.document.body).find("table").addClass("compact").css("color", "inherit").css("border-color", "inherit").css("background-color", "inherit");
                }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file me-2" ></i>Csv',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-export me-2"></i>Excel',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-text me-2"></i>Pdf',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-2"></i>Copy',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5, 6],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("customer-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              }
            ]
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["customer"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        },
        initComplete: function() {
          this.api().columns(6).every(function() {
            var column = this;
            var select = $('<select id="Review" class="form-select"><option value=""> All </option></select>').appendTo(".review_filter").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + d + '" class="text-capitalize">' + d + "</option>");
            });
          });
        }
      });
      $(".dataTables_length").addClass("mt-0 mt-md-3");
    }
    $(".datatables-review tbody").on("click", ".delete-record", function() {
      dt_review.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-ecommerce-settings.js
  $(function() {
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          dropdownParent: $this.parent(),
          placeholder: $this.data("placeholder")
        });
      });
    }
  });
  (function() {
    const phoneMaskList = document.querySelectorAll(".phone-mask");
    if (phoneMaskList) {
      phoneMaskList.forEach(function(phoneMask) {
        new Cleave(phoneMask, {
          phone: true,
          phoneRegionCode: "US"
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-email.js
  document.addEventListener("DOMContentLoaded", function() {
    (function() {
      const emailList = document.querySelector(".email-list"), emailListItems = [].slice.call(document.querySelectorAll(".email-list-item")), emailListItemInputs = [].slice.call(document.querySelectorAll(".email-list-item-input")), emailView = document.querySelector(".app-email-view-content"), emailFilters = document.querySelector(".email-filters"), emailFilterByFolders = [].slice.call(document.querySelectorAll(".email-filter-folders li")), emailEditor = document.querySelector(".email-editor"), appEmailSidebar = document.querySelector(".app-email-sidebar"), appOverlay = document.querySelector(".app-overlay"), emailReplyEditor = document.querySelector(".email-reply-editor"), bookmarkEmail = [].slice.call(document.querySelectorAll(".email-list-item-bookmark")), selectAllEmails = document.getElementById("email-select-all"), emailSearch = document.querySelector(".email-search-input"), toggleCC = document.querySelector(".email-compose-toggle-cc"), toggleBCC = document.querySelector(".email-compose-toggle-bcc"), emailCompose = document.querySelector(".app-email-compose"), emailListDelete = document.querySelector(".email-list-delete"), emailListRead = document.querySelector(".email-list-read"), emailListEmpty = document.querySelector(".email-list-empty"), refreshEmails = document.querySelector(".email-refresh"), emailViewContainer = document.getElementById("app-email-view"), emailFilterFolderLists = [].slice.call(document.querySelectorAll(".email-filter-folders li")), emailListItemActions = [].slice.call(document.querySelectorAll(".email-list-item-actions li"));
      if (emailList) {
        let emailListInstance = new PerfectScrollbar(emailList, {
          wheelPropagation: false,
          suppressScrollX: true
        });
      }
      if (emailFilters) {
        new PerfectScrollbar(emailFilters, {
          wheelPropagation: false,
          suppressScrollX: true
        });
      }
      if (emailView) {
        new PerfectScrollbar(emailView, {
          wheelPropagation: false,
          suppressScrollX: true
        });
      }
      if (emailEditor) {
        new Quill(".email-editor", {
          modules: {
            toolbar: ".email-editor-toolbar"
          },
          placeholder: "Write your message... ",
          theme: "snow"
        });
      }
      if (emailReplyEditor) {
        new Quill(".email-reply-editor", {
          modules: {
            toolbar: ".email-reply-toolbar"
          },
          placeholder: "Write your message... ",
          theme: "snow"
        });
      }
      if (bookmarkEmail) {
        bookmarkEmail.forEach((emailItem) => {
          emailItem.addEventListener("click", (e) => {
            let emailItem2 = e.currentTarget.parentNode.parentNode;
            let starredAttr = emailItem2.getAttribute("data-starred");
            e.stopPropagation();
            if (!starredAttr) {
              emailItem2.setAttribute("data-starred", "true");
            } else {
              emailItem2.removeAttribute("data-starred");
            }
          });
        });
      }
      if (selectAllEmails) {
        selectAllEmails.addEventListener("click", (e) => {
          if (e.currentTarget.checked) {
            emailListItemInputs.forEach((c) => c.checked = 1);
          } else {
            emailListItemInputs.forEach((c) => c.checked = 0);
          }
        });
      }
      if (emailListItemInputs) {
        emailListItemInputs.forEach((emailListItemInput) => {
          emailListItemInput.addEventListener("click", (e) => {
            e.stopPropagation();
            let emailListItemInputCount = 0;
            emailListItemInputs.forEach((emailListItemInput2) => {
              if (emailListItemInput2.checked) {
                emailListItemInputCount++;
              }
            });
            if (emailListItemInputCount < emailListItemInputs.length) {
              if (emailListItemInputCount == 0) {
                selectAllEmails.indeterminate = false;
              } else {
                selectAllEmails.indeterminate = true;
              }
            } else {
              if (emailListItemInputCount == emailListItemInputs.length) {
                selectAllEmails.indeterminate = false;
                selectAllEmails.checked = true;
              } else {
                selectAllEmails.indeterminate = false;
              }
            }
          });
        });
      }
      if (emailSearch) {
        emailSearch.addEventListener("keyup", (e) => {
          let searchValue = e.currentTarget.value.toLowerCase(), searchEmailListItems = {}, selectedFolderFilter = document.querySelector(".email-filter-folders .active").getAttribute("data-target");
          if (selectedFolderFilter != "inbox") {
            searchEmailListItems = [].slice.call(
              document.querySelectorAll(".email-list-item[data-" + selectedFolderFilter + '="true"]')
            );
          } else {
            searchEmailListItems = [].slice.call(document.querySelectorAll(".email-list-item"));
          }
          searchEmailListItems.forEach((searchEmailListItem) => {
            let searchEmailListItemText = searchEmailListItem.textContent.toLowerCase();
            if (searchValue) {
              if (-1 < searchEmailListItemText.indexOf(searchValue)) {
                searchEmailListItem.classList.add("d-block");
              } else {
                searchEmailListItem.classList.add("d-none");
              }
            } else {
              searchEmailListItem.classList.remove("d-none");
            }
          });
        });
      }
      emailFilterByFolders.forEach((emailFilterByFolder) => {
        emailFilterByFolder.addEventListener("click", (e) => {
          let currentTarget = e.currentTarget, currentTargetData = currentTarget.getAttribute("data-target");
          appEmailSidebar.classList.remove("show");
          appOverlay.classList.remove("show");
          Helpers._removeClass("active", emailFilterByFolders);
          currentTarget.classList.add("active");
          emailListItems.forEach((emailListItem) => {
            if (currentTargetData == "inbox") {
              emailListItem.classList.add("d-block");
              emailListItem.classList.remove("d-none");
            } else if (emailListItem.hasAttribute("data-" + currentTargetData)) {
              emailListItem.classList.add("d-block");
              emailListItem.classList.remove("d-none");
            } else {
              emailListItem.classList.add("d-none");
              emailListItem.classList.remove("d-block");
            }
          });
        });
      });
      if (toggleBCC) {
        toggleBCC.addEventListener("click", (e) => {
          Helpers._toggleClass(document.querySelector(".email-compose-bcc"), "d-block", "d-none");
        });
      }
      if (toggleCC) {
        toggleCC.addEventListener("click", (e) => {
          Helpers._toggleClass(document.querySelector(".email-compose-cc"), "d-block", "d-none");
        });
      }
      emailCompose.addEventListener("hidden.bs.modal", (event) => {
        document.querySelector(".email-editor .ql-editor").innerHTML = "";
        $("#emailContacts").val("");
        initSelect2();
      });
      if (emailListDelete) {
        emailListDelete.addEventListener("click", (e) => {
          emailListItemInputs.forEach((emailListItemInput) => {
            if (emailListItemInput.checked) {
              emailListItemInput.parentNode.closest("li.email-list-item").remove();
            }
          });
          selectAllEmails.indeterminate = false;
          selectAllEmails.checked = false;
          var emailListItem = document.querySelectorAll(".email-list-item");
          if (emailListItem.length == 0) {
            emailListEmpty.classList.remove("d-none");
          }
        });
      }
      if (emailListRead) {
        emailListRead.addEventListener("click", (e) => {
          emailListItemInputs.forEach((emailListItemInput) => {
            if (emailListItemInput.checked) {
              emailListItemInput.checked = false;
              emailListItemInput.parentNode.closest("li.email-list-item").classList.add("email-marked-read");
              let emailItemEnvelop = emailListItemInput.parentNode.closest("li.email-list-item").querySelector(".email-list-item-actions li");
              if (Helpers._hasClass("email-read", emailItemEnvelop)) {
                emailItemEnvelop.classList.remove("email-read");
                emailItemEnvelop.classList.add("email-unread");
                emailItemEnvelop.querySelector("i").classList.remove("ti-mail-opened");
                emailItemEnvelop.querySelector("i").classList.add("ti-mail");
              }
            }
          });
          selectAllEmails.indeterminate = false;
          selectAllEmails.checked = false;
        });
      }
      if (refreshEmails && emailList) {
        let emailListJq = $(".email-list"), emailListInstance = new PerfectScrollbar(emailList, {
          wheelPropagation: false,
          suppressScrollX: true
        });
        refreshEmails.addEventListener("click", (e) => {
          emailListJq.block({
            message: '<div class="spinner-border text-primary" role="status"></div>',
            timeout: 1e3,
            css: {
              backgroundColor: "transparent",
              border: "0"
            },
            overlayCSS: {
              backgroundColor: "#000",
              opacity: 0.1
            },
            onBlock: function() {
              emailListInstance.settings.suppressScrollY = true;
            },
            onUnblock: function() {
              emailListInstance.settings.suppressScrollY = false;
            }
          });
        });
      }
      let earlierMsg = $(".email-earlier-msgs");
      if (earlierMsg.length) {
        earlierMsg.on("click", function() {
          let $this = $(this);
          $this.parents().find(".email-card-last").addClass("hide-pseudo");
          $this.next(".email-card-prev").slideToggle();
          $this.remove();
        });
      }
      let emailContacts = $("#emailContacts");
      function initSelect2() {
        if (emailContacts.length) {
          let renderContactsAvatar = function(option) {
            if (!option.id) {
              return option.text;
            }
            let $avatar = "<div class='d-flex flex-wrap align-items-center'><div class='avatar avatar-xs me-2 w-px-20 h-px-20'><img src='" + assetsPath + "img/avatars/" + $(option.element).data("avatar") + "' alt='avatar' class='rounded-circle' /></div>" + option.text + "</div>";
            return $avatar;
          };
          emailContacts.wrap('<div class="position-relative"></div>').select2({
            placeholder: "Select value",
            dropdownParent: emailContacts.parent(),
            closeOnSelect: false,
            templateResult: renderContactsAvatar,
            templateSelection: renderContactsAvatar,
            escapeMarkup: function(es) {
              return es;
            }
          });
        }
      }
      initSelect2();
      let emailViewContent = $(".app-email-view-content");
      emailViewContent.find(".scroll-to-reply").on("click", function() {
        if (emailViewContent[0].scrollTop === 0) {
          emailViewContent.animate(
            {
              scrollTop: emailViewContent[0].scrollHeight
            },
            1500
          );
        }
      });
      if (emailFilterFolderLists) {
        emailFilterFolderLists.forEach((emailFilterFolderList) => {
          emailFilterFolderList.addEventListener("click", (e) => {
            emailViewContainer.classList.remove("show");
          });
        });
      }
      if (emailListItemActions) {
        emailListItemActions.forEach((emailListItemAction) => {
          emailListItemAction.addEventListener("click", (e) => {
            e.stopPropagation();
            let currentTarget = e.currentTarget;
            if (Helpers._hasClass("email-delete", currentTarget)) {
              currentTarget.parentNode.closest("li.email-list-item").remove();
              var emailListItem = document.querySelectorAll(".email-list-item");
              if (emailListItem.length == 0) {
                emailListEmpty.classList.remove("d-none");
              }
            } else if (Helpers._hasClass("email-read", currentTarget)) {
              currentTarget.parentNode.closest("li.email-list-item").classList.add("email-marked-read");
              Helpers._toggleClass(currentTarget, "email-read", "email-unread");
              Helpers._toggleClass(currentTarget.querySelector("i"), "ti-mail-opened", "ti-mail");
            } else if (Helpers._hasClass("email-unread", currentTarget)) {
              currentTarget.parentNode.closest("li.email-list-item").classList.remove("email-marked-read");
              Helpers._toggleClass(currentTarget, "email-read", "email-unread");
              Helpers._toggleClass(currentTarget.querySelector("i"), "ti-mail-opened", "ti-mail");
            }
          });
        });
      }
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-invoice-add.js
  (function() {
    const invoiceItemPriceList = document.querySelectorAll(".invoice-item-price"), invoiceItemQtyList = document.querySelectorAll(".invoice-item-qty"), invoiceDateList = document.querySelectorAll(".date-picker");
    if (invoiceItemPriceList) {
      invoiceItemPriceList.forEach(function(invoiceItemPrice) {
        new Cleave(invoiceItemPrice, {
          delimiter: "",
          numeral: true
        });
      });
    }
    if (invoiceItemQtyList) {
      invoiceItemQtyList.forEach(function(invoiceItemQty) {
        new Cleave(invoiceItemQty, {
          delimiter: "",
          numeral: true
        });
      });
    }
    if (invoiceDateList) {
      invoiceDateList.forEach(function(invoiceDateEl) {
        invoiceDateEl.flatpickr({
          monthSelectorType: "static"
        });
      });
    }
  })();
  $(function() {
    var applyChangesBtn = $(".btn-apply-changes"), discount, tax1, tax2, discountInput, tax1Input, tax2Input, sourceItem = $(".source-item"), adminDetails = {
      "App Design": "Designed UI kit & app pages.",
      "App Customization": "Customization & Bug Fixes.",
      "ABC Template": "Bootstrap 4 admin template.",
      "App Development": "Native App Development."
    };
    $(document).on("click", ".tax-select", function(e) {
      e.stopPropagation();
    });
    function updateValue(listener, el) {
      listener.closest(".repeater-wrapper").find(el).text(listener.val());
    }
    if (applyChangesBtn.length) {
      $(document).on("click", ".btn-apply-changes", function(e) {
        var $this = $(this);
        tax1Input = $this.closest(".dropdown-menu").find("#taxInput1");
        tax2Input = $this.closest(".dropdown-menu").find("#taxInput2");
        discountInput = $this.closest(".dropdown-menu").find("#discountInput");
        tax1 = $this.closest(".repeater-wrapper").find(".tax-1");
        tax2 = $this.closest(".repeater-wrapper").find(".tax-2");
        discount = $(".discount");
        if (tax1Input.val() !== null) {
          updateValue(tax1Input, tax1);
        }
        if (tax2Input.val() !== null) {
          updateValue(tax2Input, tax2);
        }
        if (discountInput.val().length) {
          $this.closest(".repeater-wrapper").find(discount).text(discountInput.val() + "%");
        }
      });
    }
    if (sourceItem.length) {
      sourceItem.on("submit", function(e) {
        e.preventDefault();
      });
      sourceItem.repeater({
        show: function() {
          $(this).slideDown();
          const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
          tooltipTriggerList.map(function(tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
          });
        },
        hide: function(e) {
          $(this).slideUp();
        }
      });
    }
    $(document).on("change", ".item-details", function() {
      var $this = $(this), value = adminDetails[$this.val()];
      if ($this.next("textarea").length) {
        $this.next("textarea").val(value);
      } else {
        $this.after('<textarea class="form-control" rows="2">' + value + "</textarea>");
      }
    });
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-invoice-edit.js
  (function() {
    const invoiceItemPriceList = document.querySelectorAll(".invoice-item-price"), invoiceItemQtyList = document.querySelectorAll(".invoice-item-qty"), date2 = new Date(), invoiceDate = document.querySelector(".invoice-date"), dueDate = document.querySelector(".due-date");
    if (invoiceItemPriceList) {
      invoiceItemPriceList.forEach(function(invoiceItemPrice) {
        new Cleave(invoiceItemPrice, {
          delimiter: "",
          numeral: true
        });
      });
    }
    if (invoiceItemQtyList) {
      invoiceItemQtyList.forEach(function(invoiceItemQty) {
        new Cleave(invoiceItemQty, {
          delimiter: "",
          numeral: true
        });
      });
    }
    if (invoiceDate) {
      invoiceDate.flatpickr({
        monthSelectorType: "static",
        defaultDate: date2
      });
    }
    if (dueDate) {
      dueDate.flatpickr({
        monthSelectorType: "static",
        defaultDate: new Date(date2.getFullYear(), date2.getMonth(), date2.getDate() + 5)
      });
    }
  })();
  $(function() {
    var applyChangesBtn = $(".btn-apply-changes"), discount, tax1, tax2, discountInput, taxInput1, taxInput2, sourceItem = $(".source-item"), adminDetails = {
      "App Design": "Designed UI kit & app pages.",
      "App Customization": "Customization & Bug Fixes.",
      "ABC Template": "Bootstrap 4 admin template.",
      "App Development": "Native App Development."
    };
    $(document).on("click", ".tax-select", function(e) {
      e.stopPropagation();
    });
    function updateValue(listener, el) {
      listener.closest(".repeater-wrapper").find(el).text(listener.val());
    }
    if (applyChangesBtn.length) {
      $(document).on("click", ".btn-apply-changes", function(e) {
        var $this = $(this);
        taxInput1 = $this.closest(".dropdown-menu").find("#taxInput1");
        taxInput2 = $this.closest(".dropdown-menu").find("#taxInput2");
        discountInput = $this.closest(".dropdown-menu").find("#discountInput");
        tax1 = $this.closest(".repeater-wrapper").find(".tax-1");
        tax2 = $this.closest(".repeater-wrapper").find(".tax-2");
        discount = $(".discount");
        if (taxInput1.val() !== null) {
          updateValue(taxInput1, tax1);
        }
        if (taxInput2.val() !== null) {
          updateValue(taxInput2, tax2);
        }
        if (discountInput.val().length) {
          $this.closest(".repeater-wrapper").find(discount).text(discountInput.val() + "%");
        }
      });
    }
    if (sourceItem.length) {
      sourceItem.on("submit", function(e) {
        e.preventDefault();
      });
      sourceItem.repeater({
        show: function() {
          $(this).slideDown();
          const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
          tooltipTriggerList.map(function(tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
          });
        },
        hide: function(e) {
          $(this).slideUp();
        }
      });
    }
    $(document).on("change", ".item-details", function() {
      var $this = $(this), value = adminDetails[$this.val()];
      if ($this.next("textarea").length) {
        $this.next("textarea").val(value);
      } else {
        $this.after('<textarea class="form-control" rows="2">' + value + "</textarea>");
      }
    });
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-invoice-list.js
  $(function() {
    var dt_invoice_table = $(".invoice-list-table");
    if (dt_invoice_table.length) {
      var dt_invoice = dt_invoice_table.DataTable({
        ajax: assetsPath + "json/invoice-list.json",
        columns: [
          { data: "" },
          { data: "invoice_id" },
          { data: "invoice_status" },
          { data: "issued_date" },
          { data: "client_name" },
          { data: "total" },
          { data: "balance" },
          { data: "invoice_status" },
          { data: "action" }
        ],
        columnDefs: [
          {
            className: "control",
            responsivePriority: 2,
            searchable: false,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            render: function(data, type, full, meta) {
              var $invoice_id = full["invoice_id"];
              var $row_output = '<a href="app-invoice-preview.html">#' + $invoice_id + "</a>";
              return $row_output;
            }
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $invoice_status = full["invoice_status"], $due_date = full["due_date"], $balance = full["balance"];
              var roleBadgeObj = {
                Sent: '<span class="badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30"><i class="ti ti-circle-check ti-sm"></i></span>',
                Draft: '<span class="badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30"><i class="ti ti-device-floppy ti-sm"></i></span>',
                "Past Due": '<span class="badge badge-center rounded-pill bg-label-danger w-px-30 h-px-30"><i class="ti ti-info-circle ti-sm"></i></span>',
                "Partial Payment": '<span class="badge badge-center rounded-pill bg-label-success w-px-30 h-px-30"><i class="ti ti-circle-half-2 ti-sm"></i></span>',
                Paid: '<span class="badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30"><i class="ti ti-chart-pie ti-sm"></i></span>',
                Downloaded: '<span class="badge badge-center rounded-pill bg-label-info w-px-30 h-px-30"><i class="ti ti-arrow-down-circle ti-sm"></i></span>'
              };
              return "<span data-bs-toggle='tooltip' data-bs-html='true' title='<span>" + $invoice_status + '<br> <span class="fw-medium">Balance:</span> ' + $balance + '<br> <span class="fw-medium">Due Date:</span> ' + $due_date + "</span>'>" + roleBadgeObj[$invoice_status] + "</span>";
            }
          },
          {
            targets: 3,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $name = full["client_name"], $service = full["service"], $image = full["avatar_image"], $rand_num = Math.floor(Math.random() * 11) + 1, $user_img = $rand_num + ".png";
              if ($image === true) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $user_img + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6), states = ["success", "danger", "warning", "info", "primary", "secondary"], $state = states[stateNum], $name = full["client_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><a href="pages-profile-user.html" class="text-body text-truncate"><span class="fw-medium">' + $name + '</span></a><small class="text-truncate text-muted">' + $service + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 4,
            render: function(data, type, full, meta) {
              var $total = full["total"];
              return '<span class="d-none">' + $total + "</span>$" + $total;
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $due_date = new Date(full["due_date"]);
              var $row_output = '<span class="d-none">' + moment($due_date).format("YYYYMMDD") + "</span>" + moment($due_date).format("DD MMM YYYY");
              $due_date;
              return $row_output;
            }
          },
          {
            targets: 6,
            orderable: false,
            render: function(data, type, full, meta) {
              var $balance = full["balance"];
              if ($balance === 0) {
                var $badge_class = "bg-label-success";
                return '<span class="badge ' + $badge_class + '" text-capitalized> Paid </span>';
              } else {
                return '<span class="d-none">' + $balance + "</span>" + $balance;
              }
            }
          },
          {
            targets: 7,
            visible: false
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-flex align-items-center"><a href="javascript:;" data-bs-toggle="tooltip" class="text-body" data-bs-placement="top" title="Send Mail"><i class="ti ti-mail mx-2 ti-sm"></i></a><a href="app-invoice-preview.html" data-bs-toggle="tooltip" class="text-body" data-bs-placement="top" title="Preview Invoice"><i class="ti ti-eye mx-2 ti-sm"></i></a><div class="dropdown"><a href="javascript:;" class="btn dropdown-toggle hide-arrow text-body p-0" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical ti-sm"></i></a><div class="dropdown-menu dropdown-menu-end"><a href="javascript:;" class="dropdown-item">Download</a><a href="app-invoice-edit.html" class="dropdown-item">Edit</a><a href="javascript:;" class="dropdown-item">Duplicate</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item delete-record text-danger">Delete</a></div></div></div>';
            }
          }
        ],
        order: [[1, "desc"]],
        dom: '<"row mx-1"<"col-12 col-md-6 d-flex align-items-center justify-content-center justify-content-md-start gap-2"l<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start mt-md-0 mt-3"B>><"col-12 col-md-6 d-flex align-items-center justify-content-end flex-column flex-md-row pe-3 gap-md-3"f<"invoice_status mb-3 mb-md-0">>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        language: {
          sLengthMenu: "Show _MENU_",
          search: "",
          searchPlaceholder: "Search Invoice"
        },
        buttons: [
          {
            text: '<i class="ti ti-plus me-md-1"></i><span class="d-md-inline-block d-none">Create Invoice</span>',
            className: "btn btn-primary",
            action: function(e, dt, button, config2) {
              window.location = "app-invoice-add.html";
            }
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        },
        initComplete: function() {
          this.api().columns(7).every(function() {
            var column = this;
            var select = $(
              '<select id="UserRole" class="form-select"><option value=""> Select Status </option></select>'
            ).appendTo(".invoice_status").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + d + '" class="text-capitalize">' + d + "</option>");
            });
          });
        }
      });
    }
    dt_invoice_table.on("draw.dt", function() {
      var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl, {
          boundary: document.body
        });
      });
    });
    $(".invoice-list-table tbody").on("click", ".delete-record", function() {
      dt_invoice.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-invoice-print.js
  (function() {
    window.print();
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-kanban.js
  (async function() {
    let boards;
    const kanbanSidebar = document.querySelector(".kanban-update-item-sidebar"), kanbanWrapper = document.querySelector(".kanban-wrapper"), commentEditor2 = document.querySelector(".comment-editor"), kanbanAddNewBoard = document.querySelector(".kanban-add-new-board"), kanbanAddNewInput = [].slice.call(document.querySelectorAll(".kanban-add-board-input")), kanbanAddBoardBtn = document.querySelector(".kanban-add-board-btn"), datePicker = document.querySelector("#due-date"), select2 = $(".select2"), assetsPath4 = document.querySelector("html").getAttribute("data-assets-path");
    const kanbanOffcanvas = new bootstrap.Offcanvas(kanbanSidebar);
    const kanbanResponse = await fetch(assetsPath4 + "json/kanban.json");
    if (!kanbanResponse.ok) {
      console.error("error", kanbanResponse);
    }
    boards = await kanbanResponse.json();
    if (datePicker) {
      datePicker.flatpickr({
        monthSelectorType: "static",
        altInput: true,
        altFormat: "j F, Y",
        dateFormat: "Y-m-d"
      });
    }
    if (select2.length) {
      let renderLabels = function(option) {
        if (!option.id) {
          return option.text;
        }
        var $badge = "<div class='badge " + $(option.element).data("color") + " rounded-pill'> " + option.text + "</div>";
        return $badge;
      };
      select2.each(function() {
        var $this = $(this);
        $this.wrap("<div class='position-relative'></div>").select2({
          placeholder: "Select Label",
          dropdownParent: $this.parent(),
          templateResult: renderLabels,
          templateSelection: renderLabels,
          escapeMarkup: function(es) {
            return es;
          }
        });
      });
    }
    if (commentEditor2) {
      new Quill(commentEditor2, {
        modules: {
          toolbar: ".comment-toolbar"
        },
        placeholder: "Write a Comment... ",
        theme: "snow"
      });
    }
    function renderBoardDropdown() {
      return "<div class='dropdown'><i class='dropdown-toggle ti ti-dots-vertical cursor-pointer' id='board-dropdown' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i><div class='dropdown-menu dropdown-menu-end' aria-labelledby='board-dropdown'><a class='dropdown-item delete-board' href='javascript:void(0)'> <i class='ti ti-trash ti-xs' me-1></i> <span class='align-middle'>Delete</span></a><a class='dropdown-item' href='javascript:void(0)'><i class='ti ti-edit ti-xs' me-1></i> <span class='align-middle'>Rename</span></a><a class='dropdown-item' href='javascript:void(0)'><i class='ti ti-archive ti-xs' me-1></i> <span class='align-middle'>Archive</span></a></div></div>";
    }
    function renderDropdown() {
      return "<div class='dropdown kanban-tasks-item-dropdown'><i class='dropdown-toggle ti ti-dots-vertical' id='kanban-tasks-item-dropdown' data-bs-toggle='dropdown' aria-haspopup='true' aria-expanded='false'></i><div class='dropdown-menu dropdown-menu-end' aria-labelledby='kanban-tasks-item-dropdown'><a class='dropdown-item' href='javascript:void(0)'>Copy task link</a><a class='dropdown-item' href='javascript:void(0)'>Duplicate task</a><a class='dropdown-item delete-task' href='javascript:void(0)'>Delete</a></div></div>";
    }
    function renderHeader(color, text) {
      return "<div class='d-flex justify-content-between flex-wrap align-items-center mb-2 pb-1'><div class='item-badges'> <div class='badge rounded-pill bg-label-" + color + "'> " + text + "</div></div>" + renderDropdown() + "</div>";
    }
    function renderAvatar(images, pullUp, size, margin, members) {
      var $transition = pullUp ? " pull-up" : "", $size = size ? "avatar-" + size : "", member = members == void 0 ? " " : members.split(",");
      return images == void 0 ? " " : images.split(",").map(function(img, index, arr) {
        var $margin = margin && index !== arr.length - 1 ? " me-" + margin : "";
        return "<div class='avatar " + $size + $margin + "'data-bs-toggle='tooltip' data-bs-placement='top'title='" + member[index] + "'><img src='" + assetsPath4 + "img/avatars/" + img + "' alt='Avatar' class='rounded-circle " + $transition + "'></div>";
      }).join(" ");
    }
    function renderFooter(attachments, comments, assigned, members) {
      return "<div class='d-flex justify-content-between align-items-center flex-wrap mt-2 pt-1'><div class='d-flex'> <span class='d-flex align-items-center me-2'><i class='ti ti-paperclip ti-xs me-1'></i><span class='attachments'>" + attachments + "</span></span> <span class='d-flex align-items-center ms-1'><i class='ti ti-message-dots ti-xs me-1'></i><span> " + comments + " </span></span></div><div class='avatar-group d-flex align-items-center assigned-avatar'>" + renderAvatar(assigned, true, "xs", null, members) + "</div></div>";
    }
    const kanban = new jKanban({
      element: ".kanban-wrapper",
      gutter: "15px",
      widthBoard: "250px",
      dragItems: true,
      boards,
      dragBoards: true,
      addItemButton: true,
      buttonContent: "+ Add Item",
      itemAddOptions: {
        enabled: true,
        content: "+ Add New Item",
        class: "kanban-title-button btn",
        footer: false
      },
      click: function(el) {
        let element = el;
        let title = element.getAttribute("data-eid") ? element.querySelector(".kanban-text").textContent : element.textContent, date2 = element.getAttribute("data-due-date"), dateObj = new Date(), year = dateObj.getFullYear(), dateToUse = date2 ? date2 + ", " + year : dateObj.getDate() + " " + dateObj.toLocaleString("en", { month: "long" }) + ", " + year, label = element.getAttribute("data-badge-text"), avatars = element.getAttribute("data-assigned");
        kanbanOffcanvas.show();
        kanbanSidebar.querySelector("#title").value = title;
        kanbanSidebar.querySelector("#due-date").nextSibling.value = dateToUse;
        $(".kanban-update-item-sidebar").find(select2).val(label).trigger("change");
        kanbanSidebar.querySelector(".assigned").innerHTML = "";
        kanbanSidebar.querySelector(".assigned").insertAdjacentHTML(
          "afterbegin",
          renderAvatar(avatars, false, "xs", "1", el.getAttribute("data-members")) + "<div class='avatar avatar-xs ms-1'><span class='avatar-initial rounded-circle bg-label-secondary'><i class='ti ti-plus ti-xs text-heading'></i></span></div>"
        );
      },
      buttonClick: function(el, boardId) {
        const addNew = document.createElement("form");
        addNew.setAttribute("class", "new-item-form");
        addNew.innerHTML = '<div class="mb-3"><textarea class="form-control add-new-item" rows="2" placeholder="Add Content" autofocus required></textarea></div><div class="mb-3"><button type="submit" class="btn btn-primary btn-sm me-2">Add</button><button type="button" class="btn btn-label-secondary btn-sm cancel-add-item">Cancel</button></div>';
        kanban.addForm(boardId, addNew);
        addNew.addEventListener("submit", function(e) {
          e.preventDefault();
          const currentBoard = [].slice.call(
            document.querySelectorAll(".kanban-board[data-id=" + boardId + "] .kanban-item")
          );
          kanban.addElement(boardId, {
            title: "<span class='kanban-text'>" + e.target[0].value + "</span>",
            id: boardId + "-" + currentBoard.length + 1
          });
          const kanbanText = [].slice.call(
            document.querySelectorAll(".kanban-board[data-id=" + boardId + "] .kanban-text")
          );
          kanbanText.forEach(function(e2) {
            e2.insertAdjacentHTML("beforebegin", renderDropdown());
          });
          const newTaskDropdown = [].slice.call(document.querySelectorAll(".kanban-item .kanban-tasks-item-dropdown"));
          if (newTaskDropdown) {
            newTaskDropdown.forEach(function(e2) {
              e2.addEventListener("click", function(el2) {
                el2.stopPropagation();
              });
            });
          }
          const deleteTask2 = [].slice.call(
            document.querySelectorAll(".kanban-board[data-id=" + boardId + "] .delete-task")
          );
          deleteTask2.forEach(function(e2) {
            e2.addEventListener("click", function() {
              const id = this.closest(".kanban-item").getAttribute("data-eid");
              kanban.removeElement(id);
            });
          });
          addNew.remove();
        });
        addNew.querySelector(".cancel-add-item").addEventListener("click", function(e) {
          addNew.remove();
        });
      }
    });
    if (kanbanWrapper) {
      new PerfectScrollbar(kanbanWrapper);
    }
    const kanbanContainer = document.querySelector(".kanban-container"), kanbanTitleBoard = [].slice.call(document.querySelectorAll(".kanban-title-board")), kanbanItem = [].slice.call(document.querySelectorAll(".kanban-item"));
    if (kanbanItem) {
      kanbanItem.forEach(function(el) {
        const element = "<span class='kanban-text'>" + el.textContent + "</span>";
        let img = "";
        if (el.getAttribute("data-image") !== null) {
          img = "<img class='img-fluid rounded mb-2' src='" + assetsPath4 + "img/elements/" + el.getAttribute("data-image") + "'>";
        }
        el.textContent = "";
        if (el.getAttribute("data-badge") !== void 0 && el.getAttribute("data-badge-text") !== void 0) {
          el.insertAdjacentHTML(
            "afterbegin",
            renderHeader(el.getAttribute("data-badge"), el.getAttribute("data-badge-text")) + img + element
          );
        }
        if (el.getAttribute("data-comments") !== void 0 || el.getAttribute("data-due-date") !== void 0 || el.getAttribute("data-assigned") !== void 0) {
          el.insertAdjacentHTML(
            "beforeend",
            renderFooter(
              el.getAttribute("data-attachments"),
              el.getAttribute("data-comments"),
              el.getAttribute("data-assigned"),
              el.getAttribute("data-members")
            )
          );
        }
      });
    }
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function(tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
    const tasksItemDropdown = [].slice.call(document.querySelectorAll(".kanban-tasks-item-dropdown"));
    if (tasksItemDropdown) {
      tasksItemDropdown.forEach(function(e) {
        e.addEventListener("click", function(el) {
          el.stopPropagation();
        });
      });
    }
    if (kanbanAddBoardBtn) {
      kanbanAddBoardBtn.addEventListener("click", () => {
        kanbanAddNewInput.forEach((el) => {
          el.value = "";
          el.classList.toggle("d-none");
        });
      });
    }
    if (kanbanContainer) {
      kanbanContainer.appendChild(kanbanAddNewBoard);
    }
    if (kanbanTitleBoard) {
      kanbanTitleBoard.forEach(function(elem) {
        elem.addEventListener("mouseenter", function() {
          this.contentEditable = "true";
        });
        elem.insertAdjacentHTML("afterend", renderBoardDropdown());
      });
    }
    const deleteBoards = [].slice.call(document.querySelectorAll(".delete-board"));
    if (deleteBoards) {
      deleteBoards.forEach(function(elem) {
        elem.addEventListener("click", function() {
          const id = this.closest(".kanban-board").getAttribute("data-id");
          kanban.removeBoard(id);
        });
      });
    }
    const deleteTask = [].slice.call(document.querySelectorAll(".delete-task"));
    if (deleteTask) {
      deleteTask.forEach(function(e) {
        e.addEventListener("click", function() {
          const id = this.closest(".kanban-item").getAttribute("data-eid");
          kanban.removeElement(id);
        });
      });
    }
    const cancelAddNew = document.querySelector(".kanban-add-board-cancel-btn");
    if (cancelAddNew) {
      cancelAddNew.addEventListener("click", function() {
        kanbanAddNewInput.forEach((el) => {
          el.classList.toggle("d-none");
        });
      });
    }
    if (kanbanAddNewBoard) {
      kanbanAddNewBoard.addEventListener("submit", function(e) {
        e.preventDefault();
        const thisEle = this, value = thisEle.querySelector(".form-control").value, id = value.replace(/\s+/g, "-").toLowerCase();
        kanban.addBoards([
          {
            id,
            title: value
          }
        ]);
        const kanbanBoardLastChild = document.querySelectorAll(".kanban-board:last-child")[0];
        if (kanbanBoardLastChild) {
          const header = kanbanBoardLastChild.querySelector(".kanban-title-board");
          header.insertAdjacentHTML("afterend", renderBoardDropdown());
          kanbanBoardLastChild.querySelector(".kanban-title-board").addEventListener("mouseenter", function() {
            this.contentEditable = "true";
          });
        }
        const deleteNewBoards = kanbanBoardLastChild.querySelector(".delete-board");
        if (deleteNewBoards) {
          deleteNewBoards.addEventListener("click", function() {
            const id2 = this.closest(".kanban-board").getAttribute("data-id");
            kanban.removeBoard(id2);
          });
        }
        if (kanbanAddNewInput) {
          kanbanAddNewInput.forEach((el) => {
            el.classList.add("d-none");
          });
        }
        if (kanbanContainer) {
          kanbanContainer.appendChild(kanbanAddNewBoard);
        }
      });
    }
    kanbanSidebar.addEventListener("hidden.bs.offcanvas", function() {
      kanbanSidebar.querySelector(".ql-editor").firstElementChild.innerHTML = "";
    });
    if (kanbanSidebar) {
      kanbanSidebar.addEventListener("shown.bs.offcanvas", function() {
        const tooltipTriggerList2 = [].slice.call(kanbanSidebar.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList2.map(function(tooltipTriggerEl) {
          return new bootstrap.Tooltip(tooltipTriggerEl);
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-logistics-dashboard.js
  (function() {
    let labelColor, headingColor;
    if (isDarkStyle) {
      labelColor = config.colors_dark.textMuted;
      headingColor = config.colors_dark.headingColor;
    } else {
      labelColor = config.colors.textMuted;
      headingColor = config.colors.headingColor;
    }
    const chartColors = {
      donut: {
        series1: config.colors.success,
        series2: "#28c76fb3",
        series3: "#28c76f80",
        series4: config.colors_label.success
      },
      line: {
        series1: config.colors.warning,
        series2: config.colors.primary,
        series3: "#7367f029"
      }
    };
    const shipmentEl = document.querySelector("#shipmentStatisticsChart"), shipmentConfig = {
      series: [
        {
          name: "Shipment",
          type: "column",
          data: [38, 45, 33, 38, 32, 50, 48, 40, 42, 37]
        },
        {
          name: "Delivery",
          type: "line",
          data: [23, 28, 23, 32, 28, 44, 32, 38, 26, 34]
        }
      ],
      chart: {
        height: 270,
        type: "line",
        stacked: false,
        parentHeightOffset: 0,
        toolbar: {
          show: false
        },
        zoom: {
          enabled: false
        }
      },
      markers: {
        size: 4,
        colors: [config.colors.white],
        strokeColors: chartColors.line.series2,
        hover: {
          size: 6
        },
        borderRadius: 4
      },
      stroke: {
        curve: "smooth",
        width: [0, 3],
        lineCap: "round"
      },
      legend: {
        show: true,
        position: "bottom",
        markers: {
          width: 8,
          height: 8,
          offsetX: -3
        },
        height: 40,
        offsetY: 10,
        itemMargin: {
          horizontal: 10,
          vertical: 0
        },
        fontSize: "15px",
        fontFamily: "Public Sans",
        fontWeight: 400,
        labels: {
          colors: headingColor,
          useSeriesColors: false
        }
      },
      grid: {
        strokeDashArray: 8
      },
      colors: [chartColors.line.series1, chartColors.line.series2],
      fill: {
        opacity: [1, 1]
      },
      plotOptions: {
        bar: {
          columnWidth: "30%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 4
        }
      },
      dataLabels: {
        enabled: false
      },
      xaxis: {
        tickAmount: 10,
        categories: ["1 Jan", "2 Jan", "3 Jan", "4 Jan", "5 Jan", "6 Jan", "7 Jan", "8 Jan", "9 Jan", "10 Jan"],
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans",
            fontWeight: 400
          }
        },
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        }
      },
      yaxis: {
        tickAmount: 4,
        min: 10,
        max: 50,
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans",
            fontWeight: 400
          },
          formatter: function(val) {
            return val + "%";
          }
        }
      },
      responsive: [
        {
          breakpoint: 1400,
          options: {
            chart: {
              height: 270
            },
            xaxis: {
              labels: {
                style: {
                  fontSize: "10px"
                }
              }
            },
            legend: {
              itemMargin: {
                vertical: 0,
                horizontal: 10
              },
              fontSize: "13px",
              offsetY: 12
            }
          }
        },
        {
          breakpoint: 1399,
          options: {
            chart: {
              height: 415
            },
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 982,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "30%"
              }
            }
          }
        },
        {
          breakpoint: 480,
          options: {
            chart: {
              height: 250
            },
            legend: {
              offsetY: 7
            }
          }
        }
      ]
    };
    if (typeof shipmentEl !== void 0 && shipmentEl !== null) {
      const shipment = new ApexCharts(shipmentEl, shipmentConfig);
      shipment.render();
    }
    const deliveryExceptionsChartE1 = document.querySelector("#deliveryExceptionsChart"), deliveryExceptionsChartConfig = {
      chart: {
        height: 420,
        parentHeightOffset: 0,
        type: "donut"
      },
      labels: ["Incorrect address", "Weather conditions", "Federal Holidays", "Damage during transit"],
      series: [13, 25, 22, 40],
      colors: [
        chartColors.donut.series1,
        chartColors.donut.series2,
        chartColors.donut.series3,
        chartColors.donut.series4
      ],
      stroke: {
        width: 0
      },
      dataLabels: {
        enabled: false,
        formatter: function(val, opt) {
          return parseInt(val) + "%";
        }
      },
      legend: {
        show: true,
        position: "bottom",
        offsetY: 10,
        markers: {
          width: 8,
          height: 8,
          offsetX: -3
        },
        itemMargin: {
          horizontal: 15,
          vertical: 5
        },
        fontSize: "13px",
        fontFamily: "Public Sans",
        fontWeight: 400,
        labels: {
          colors: headingColor,
          useSeriesColors: false
        }
      },
      tooltip: {
        theme: false
      },
      grid: {
        padding: {
          top: 15
        }
      },
      states: {
        hover: {
          filter: {
            type: "none"
          }
        }
      },
      plotOptions: {
        pie: {
          donut: {
            size: "77%",
            labels: {
              show: true,
              value: {
                fontSize: "26px",
                fontFamily: "Public Sans",
                color: headingColor,
                fontWeight: 500,
                offsetY: -30,
                formatter: function(val) {
                  return parseInt(val) + "%";
                }
              },
              name: {
                offsetY: 20,
                fontFamily: "Public Sans"
              },
              total: {
                show: true,
                fontSize: ".75rem",
                label: "AVG. Exceptions",
                color: labelColor,
                formatter: function(w) {
                  return "30%";
                }
              }
            }
          }
        }
      },
      responsive: [
        {
          breakpoint: 420,
          options: {
            chart: {
              height: 360
            }
          }
        }
      ]
    };
    if (typeof deliveryExceptionsChartE1 !== void 0 && deliveryExceptionsChartE1 !== null) {
      const deliveryExceptionsChart = new ApexCharts(deliveryExceptionsChartE1, deliveryExceptionsChartConfig);
      deliveryExceptionsChart.render();
    }
  })();
  $(function() {
    var dt_dashboard_table = $(".dt-route-vehicles");
    if (dt_dashboard_table.length) {
      var dt_dashboard = dt_dashboard_table.DataTable({
        ajax: assetsPath + "json/logistics-dashboard.json",
        columns: [
          { data: "id" },
          { data: "id" },
          { data: "location" },
          { data: "start_city" },
          { data: "end_city" },
          { data: "warnings" },
          { data: "progress" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            searchable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 1,
            render: function(data, type, full, meta) {
              var $location = full["location"];
              var $row_output = '<div class="d-flex justify-content-start align-items-center user-name"><div class="avatar-wrapper"><div class="avatar me-2"><span class="avatar-initial rounded-circle bg-label-secondary text-body"><i class="ti ti-truck"></i></span></div></div><div class="d-flex flex-column"><a class="text-body fw-medium" href="app-logistics-fleet.html">VOL-' + $location + "</a></div></div>";
              return $row_output;
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $start_city = full["start_city"], $start_country = full["start_country"];
              var $row_output = '<div class="text-body">' + $start_city + ", " + $start_country + "</div >";
              return $row_output;
            }
          },
          {
            targets: 4,
            render: function(data, type, full, meta) {
              var $end_city = full["end_city"], $end_country = full["end_country"];
              var $row_output = '<div class="text-body">' + $end_city + ", " + $end_country + "</div >";
              return $row_output;
            }
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["warnings"];
              var $status = {
                1: { title: "No Warnings", class: "bg-label-success" },
                2: {
                  title: "Temperature Not Optimal",
                  class: "bg-label-warning"
                },
                3: { title: "Ecu Not Responding", class: "bg-label-danger" },
                4: { title: "Oil Leakage", class: "bg-label-info" },
                5: { title: "fuel problems", class: "bg-label-primary" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge rounded ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            render: function(data, type, full, meta) {
              var $progress = full["progress"];
              var $progress_output = '<div class="d-flex align-items-center"><div div class="progress w-100" style="height: 8px;"><div class="progress-bar" role="progressbar" style="width:' + $progress + '%;" aria-valuenow="' + $progress + '" aria-valuemin="0" aria-valuemax="100"></div></div><div class="text-body ms-3">' + $progress + "%</div></div>";
              return $progress_output;
            }
          }
        ],
        order: [2, "asc"],
        dom: '<"table-responsive"t><"row d-flex align-items-center"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 5,
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["location"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $(".dataTables_info").addClass("pt-0");
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-logistics-fleet.js
  (function() {
    var sidebarAccordionBody = $(".logistics-fleet-sidebar-body");
    if (sidebarAccordionBody.length) {
      new PerfectScrollbar(sidebarAccordionBody[0], {
        wheelPropagation: false,
        suppressScrollX: true
      });
    }
    mapboxgl.accessToken = "";
    const geojson = {
      type: "FeatureCollection",
      features: [
        {
          type: "Feature",
          properties: {
            iconSize: [20, 42],
            message: "1"
          },
          geometry: {
            type: "Point",
            coordinates: [-73.999024, 40.75249842]
          }
        },
        {
          type: "Feature",
          properties: {
            iconSize: [20, 42],
            message: "2"
          },
          geometry: {
            type: "Point",
            coordinates: [-74.03, 40.75699842]
          }
        },
        {
          type: "Feature",
          properties: {
            iconSize: [20, 42],
            message: "3"
          },
          geometry: {
            type: "Point",
            coordinates: [-73.967524, 40.7599842]
          }
        },
        {
          type: "Feature",
          properties: {
            iconSize: [20, 42],
            message: "4"
          },
          geometry: {
            type: "Point",
            coordinates: [-74.0325, 40.742992]
          }
        }
      ]
    };
    const map = new mapboxgl.Map({
      container: "map",
      style: "mapbox://styles/mapbox/light-v9",
      center: [-73.999024, 40.75249842],
      zoom: 12.25
    });
    for (const marker of geojson.features) {
      const el = document.createElement("div");
      const width = marker.properties.iconSize[0];
      const height = marker.properties.iconSize[1];
      el.className = "marker";
      el.insertAdjacentHTML(
        "afterbegin",
        '<img src="' + assetsPath + 'img/illustrations/fleet-car.png" alt="Fleet Car" width="20" class="rounded-3" id="carFleet-' + marker.properties.message + '">'
      );
      el.style.width = `${width}px`;
      el.style.height = `${height}px`;
      el.style.cursor = "pointer";
      new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);
      const element = document.getElementById("fl-" + marker.properties.message);
      const car = document.getElementById("carFleet-" + marker.properties.message);
      element.addEventListener("click", function() {
        const focusedElement = document.querySelector(".marker-focus");
        if (Helpers._hasClass("active", element)) {
          map.flyTo({
            center: geojson.features[marker.properties.message - 1].geometry.coordinates,
            zoom: 16
          });
          focusedElement && Helpers._removeClass("marker-focus", focusedElement);
          Helpers._addClass("marker-focus", car);
        } else {
          Helpers._removeClass("marker-focus", car);
        }
      });
    }
    const defCar = document.getElementById("carFleet-1");
    Helpers._addClass("marker-focus", defCar);
    document.querySelector(".mapboxgl-control-container").classList.add("d-none");
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-user-list.js
  $(function() {
    let borderColor, bodyBg, headingColor;
    if (isDarkStyle) {
      borderColor = config.colors_dark.borderColor;
      bodyBg = config.colors_dark.bodyBg;
      headingColor = config.colors_dark.headingColor;
    } else {
      borderColor = config.colors.borderColor;
      bodyBg = config.colors.bodyBg;
      headingColor = config.colors.headingColor;
    }
    var dt_user_table = $(".datatables-users"), select2 = $(".select2"), userView = "app-user-view-account.html", statusObj = {
      1: { title: "Pending", class: "bg-label-warning" },
      2: { title: "Active", class: "bg-label-success" },
      3: { title: "Inactive", class: "bg-label-secondary" }
    };
    if (select2.length) {
      var $this = select2;
      $this.wrap('<div class="position-relative"></div>').select2({
        placeholder: "Select Country",
        dropdownParent: $this.parent()
      });
    }
    if (dt_user_table.length) {
      var dt_user = dt_user_table.DataTable({
        ajax: assetsPath + "json/user-list.json",
        columns: [
          { data: "" },
          { data: "full_name" },
          { data: "role" },
          { data: "current_plan" },
          { data: "billing" },
          { data: "status" },
          { data: "action" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $name = full["full_name"], $email = full["email"], $image = full["avatar"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $image + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "primary", "secondary"];
                var $state = states[stateNum], $name = full["full_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center user-name"><div class="avatar-wrapper"><div class="avatar me-3">' + $output + '</div></div><div class="d-flex flex-column"><a href="' + userView + '" class="text-body text-truncate"><span class="fw-medium">' + $name + '</span></a><small class="text-muted">' + $email + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $role = full["role"];
              var roleBadgeObj = {
                Subscriber: '<span class="badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30 me-2"><i class="ti ti-user ti-sm"></i></span>',
                Author: '<span class="badge badge-center rounded-pill bg-label-success w-px-30 h-px-30 me-2"><i class="ti ti-circle-check ti-sm"></i></span>',
                Maintainer: '<span class="badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30 me-2"><i class="ti ti-chart-pie-2 ti-sm"></i></span>',
                Editor: '<span class="badge badge-center rounded-pill bg-label-info w-px-30 h-px-30 me-2"><i class="ti ti-edit ti-sm"></i></span>',
                Admin: '<span class="badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30 me-2"><i class="ti ti-device-laptop ti-sm"></i></span>'
              };
              return "<span class='text-truncate d-flex align-items-center'>" + roleBadgeObj[$role] + $role + "</span>";
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $plan = full["current_plan"];
              return '<span class="fw-medium">' + $plan + "</span>";
            }
          },
          {
            targets: 5,
            render: function(data, type, full, meta) {
              var $status = full["status"];
              return '<span class="badge ' + statusObj[$status].class + '" text-capitalized>' + statusObj[$status].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-flex align-items-center"><a href="javascript:;" class="text-body"><i class="ti ti-edit ti-sm me-2"></i></a><a href="javascript:;" class="text-body delete-record"><i class="ti ti-trash ti-sm mx-2"></i></a><a href="javascript:;" class="text-body dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical ti-sm mx-1"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="' + userView + '" class="dropdown-item">View</a><a href="javascript:;" class="dropdown-item">Suspend</a></div></div>';
            }
          }
        ],
        order: [[1, "desc"]],
        dom: '<"row me-2"<"col-md-2"<"me-3"l>><"col-md-10"<"dt-action-buttons text-xl-end text-lg-start text-md-end text-start d-flex align-items-center justify-content-end flex-md-row flex-column mb-3 mb-md-0"fB>>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        language: {
          sLengthMenu: "_MENU_",
          search: "",
          searchPlaceholder: "Search.."
        },
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-secondary dropdown-toggle mx-3",
            text: '<i class="ti ti-screen-share me-1 ti-xs"></i>Export',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-2" ></i>Print',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                },
                customize: function(win) {
                  $(win.document.body).css("color", headingColor).css("border-color", borderColor).css("background-color", bodyBg);
                  $(win.document.body).find("table").addClass("compact").css("color", "inherit").css("border-color", "inherit").css("background-color", "inherit");
                }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file-text me-2" ></i>Csv',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-spreadsheet me-2"></i>Excel',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-code-2 me-2"></i>Pdf',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-2" ></i>Copy',
                className: "dropdown-item",
                exportOptions: {
                  columns: [1, 2, 3, 4, 5],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              }
            ]
          },
          {
            text: '<i class="ti ti-plus me-0 me-sm-1 ti-xs"></i><span class="d-none d-sm-inline-block">Add New User</span>',
            className: "add-new btn btn-primary",
            attr: {
              "data-bs-toggle": "offcanvas",
              "data-bs-target": "#offcanvasAddUser"
            }
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        },
        initComplete: function() {
          this.api().columns(2).every(function() {
            var column = this;
            var select = $(
              '<select id="UserRole" class="form-select text-capitalize"><option value=""> Select Role </option></select>'
            ).appendTo(".user_role").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + d + '">' + d + "</option>");
            });
          });
          this.api().columns(3).every(function() {
            var column = this;
            var select = $(
              '<select id="UserPlan" class="form-select text-capitalize"><option value=""> Select Plan </option></select>'
            ).appendTo(".user_plan").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append('<option value="' + d + '">' + d + "</option>");
            });
          });
          this.api().columns(5).every(function() {
            var column = this;
            var select = $(
              '<select id="FilterTransaction" class="form-select text-capitalize"><option value=""> Select Status </option></select>'
            ).appendTo(".user_status").on("change", function() {
              var val = $.fn.dataTable.util.escapeRegex($(this).val());
              column.search(val ? "^" + val + "$" : "", true, false).draw();
            });
            column.data().unique().sort().each(function(d, j) {
              select.append(
                '<option value="' + statusObj[d].title + '" class="text-capitalize">' + statusObj[d].title + "</option>"
              );
            });
          });
        }
      });
    }
    $(".datatables-users tbody").on("click", ".delete-record", function() {
      dt_user.row($(this).parents("tr")).remove().draw();
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });
  (function() {
    const phoneMaskList = document.querySelectorAll(".phone-mask"), addNewUserForm = document.getElementById("addNewUserForm");
    if (phoneMaskList) {
      phoneMaskList.forEach(function(phoneMask) {
        new Cleave(phoneMask, {
          phone: true,
          phoneRegionCode: "US"
        });
      });
    }
    const fv2 = FormValidation.formValidation(addNewUserForm, {
      fields: {
        userFullname: {
          validators: {
            notEmpty: {
              message: "Please enter fullname "
            }
          }
        },
        userEmail: {
          validators: {
            notEmpty: {
              message: "Please enter your email"
            },
            emailAddress: {
              message: "The value is not a valid email address"
            }
          }
        }
      },
      plugins: {
        trigger: new FormValidation.plugins.Trigger(),
        bootstrap5: new FormValidation.plugins.Bootstrap5({
          eleValidClass: "",
          rowSelector: function(field, ele) {
            return ".mb-3";
          }
        }),
        submitButton: new FormValidation.plugins.SubmitButton(),
        autoFocus: new FormValidation.plugins.AutoFocus()
      }
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-user-view-account.js
  $(function() {
    "use strict";
    var dt_project_table = $(".datatable-project"), dt_invoice_table = $(".datatable-invoice");
    if (dt_project_table.length) {
      var dt_project = dt_project_table.DataTable({
        ajax: assetsPath + "json/projects-list.json",
        columns: [
          { data: "hours" },
          { data: "project_name" },
          { data: "total_task" },
          { data: "progress" },
          { data: "hours" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            responsivePriority: 1,
            render: function(data, type, full, meta) {
              var $name = full["project_name"], $framework = full["framework"], $image = full["project_image"];
              if ($image) {
                var $output = '<img src="' + assetsPath + "img/icons/brands/" + $image + '" alt="Project Image" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6) + 1;
                var states = ["success", "danger", "warning", "info", "dark", "primary", "secondary"];
                var $state = states[stateNum], $name = full["full_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-left align-items-center"><div class="avatar-wrapper"><div class="avatar avatar-sm me-3">' + $output + '</div></div><div class="d-flex flex-column"><span class="text-truncate fw-medium">' + $name + '</span><small class="text-muted">' + $framework + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 2,
            orderable: false
          },
          {
            targets: 3,
            responsivePriority: 3,
            render: function(data, type, full, meta) {
              var $progress = full["progress"] + "%", $color;
              switch (true) {
                case full["progress"] < 25:
                  $color = "bg-danger";
                  break;
                case full["progress"] < 50:
                  $color = "bg-warning";
                  break;
                case full["progress"] < 75:
                  $color = "bg-info";
                  break;
                case full["progress"] <= 100:
                  $color = "bg-success";
                  break;
              }
              return '<div class="d-flex flex-column"><small class="mb-1">' + $progress + '</small><div class="progress w-100 me-3" style="height: 6px;"><div class="progress-bar ' + $color + '" style="width: ' + $progress + '" aria-valuenow="' + $progress + '" aria-valuemin="0" aria-valuemax="100"></div></div></div>';
            }
          },
          {
            targets: 4,
            orderable: false
          }
        ],
        order: [[1, "desc"]],
        dom: '<"d-flex justify-content-between align-items-center flex-column flex-sm-row mx-4 row"<"col-sm-4 col-12 d-flex align-items-center justify-content-sm-start justify-content-center"l><"col-sm-8 col-12 d-flex align-items-center justify-content-sm-end justify-content-center"f>>t<"d-flex justify-content-between mx-4 row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 7,
        lengthMenu: [7, 10, 25, 50, 75, 100],
        language: {
          sLengthMenu: "Show _MENU_",
          searchPlaceholder: "Search Project"
        },
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
    }
    if (dt_invoice_table.length) {
      var dt_invoice = dt_invoice_table.DataTable({
        ajax: assetsPath + "json/invoice-list.json",
        columns: [
          { data: "" },
          { data: "invoice_id" },
          { data: "invoice_status" },
          { data: "total" },
          { data: "issued_date" },
          { data: "action" }
        ],
        columnDefs: [
          {
            className: "control",
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            render: function(data, type, full, meta) {
              var $invoice_id = full["invoice_id"];
              var $row_output = '<a href="app-invoice-preview.html"><span>#' + $invoice_id + "</span></a>";
              return $row_output;
            }
          },
          {
            targets: 2,
            render: function(data, type, full, meta) {
              var $invoice_status = full["invoice_status"], $due_date = full["due_date"], $balance = full["balance"];
              var roleBadgeObj = {
                Sent: '<span class="badge badge-center rounded-pill bg-label-secondary w-px-30 h-px-30"><i class="ti ti-circle-check ti-sm"></i></span>',
                Draft: '<span class="badge badge-center rounded-pill bg-label-primary w-px-30 h-px-30"><i class="ti ti-device-floppy ti-sm"></i></span>',
                "Past Due": '<span class="badge badge-center rounded-pill bg-label-danger w-px-30 h-px-30"><i class="ti ti-info-circle ti-sm"></i></span>',
                "Partial Payment": '<span class="badge badge-center rounded-pill bg-label-success w-px-30 h-px-30"><i class="ti ti-circle-half-2 ti-sm"></i></span>',
                Paid: '<span class="badge badge-center rounded-pill bg-label-warning w-px-30 h-px-30"><i class="ti ti-chart-pie ti-sm"></i></span>',
                Downloaded: '<span class="badge badge-center rounded-pill bg-label-info w-px-30 h-px-30"><i class="ti ti-arrow-down-circle ti-sm"></i></span>'
              };
              return "<span data-bs-toggle='tooltip' data-bs-html='true' title='<span>" + $invoice_status + '<br> <span class="fw-medium">Balance:</span> ' + $balance + '<br> <span class="fw-medium">Due Date:</span> ' + $due_date + "</span>'>" + roleBadgeObj[$invoice_status] + "</span>";
            }
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $total = full["total"];
              return "$" + $total;
            }
          },
          {
            targets: -1,
            title: "Actions",
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-flex align-items-center"><a href="javascript:;" class="text-body" data-bs-toggle="tooltip" title="Send Mail"><i class="ti ti-mail me-2 ti-sm"></i></a><a href="app-invoice-preview.html" class="text-body" data-bs-toggle="tooltip" title="Preview"><i class="ti ti-eye mx-2 ti-sm"></i></a><div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow text-body" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></a><ul class="dropdown-menu dropdown-menu-end m-0"><li><a href="javascript:;" class="dropdown-item">Details</a></li><li><a href="javascript:;" class="dropdown-item">Archive</a></li><div class="dropdown-divider"></div><li><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></li></ul></div></div>';
            }
          }
        ],
        order: [[1, "desc"]],
        dom: '<"row mx-4"<"col-sm-6 col-12 d-flex align-items-center justify-content-center justify-content-sm-start mb-3 mb-md-0"l><"col-sm-6 col-12 d-flex align-items-center justify-content-center justify-content-sm-end"B>>t<"row mx-4"<"col-md-12 col-lg-6 text-center text-lg-start pb-md-2 pb-lg-0"i><"col-md-12 col-lg-6 d-flex justify-content-center justify-content-lg-end"p>>',
        language: {
          sLengthMenu: "Show _MENU_",
          search: "",
          searchPlaceholder: "Search Invoice"
        },
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-secondary dropdown-toggle float-sm-end mb-3 mb-sm-0",
            text: '<i class="ti ti-screen-share ti-xs me-2"></i>Export',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-2" ></i>Print',
                className: "dropdown-item",
                exportOptions: { columns: [1, 2, 3, 4] }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file-text me-2" ></i>Csv',
                className: "dropdown-item",
                exportOptions: { columns: [1, 2, 3, 4] }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-spreadsheet me-2"></i>Excel',
                className: "dropdown-item",
                exportOptions: { columns: [1, 2, 3, 4] }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-description me-2"></i>Pdf',
                className: "dropdown-item",
                exportOptions: { columns: [1, 2, 3, 4] }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-2" ></i>Copy',
                className: "dropdown-item",
                exportOptions: { columns: [1, 2, 3, 4] }
              }
            ]
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
    }
    dt_invoice_table.on("draw.dt", function() {
      var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
      var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl, {
          boundary: document.body
        });
      });
    });
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/app-user-view-billing.js
  (function() {
    const cancelSubscription = document.querySelector(".cancel-subscription");
    if (cancelSubscription) {
      cancelSubscription.onclick = function() {
        Swal.fire({
          text: "Are you sure you would like to cancel your subscription?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes",
          customClass: {
            confirmButton: "btn btn-primary me-2",
            cancelButton: "btn btn-label-secondary"
          },
          buttonsStyling: false
        }).then(function(result) {
          if (result.value) {
            Swal.fire({
              icon: "success",
              title: "Unsubscribed!",
              text: "Your subscription cancelled successfully.",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          } else if (result.dismiss === Swal.DismissReason.cancel) {
            Swal.fire({
              title: "Cancelled",
              text: "Unsubscription Cancelled!!",
              icon: "error",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          }
        });
      };
    }
    const addressEdit = document.querySelector(".edit-address"), addressTitle = document.querySelector(".address-title"), addressSubTitle = document.querySelector(".address-subtitle");
    addressEdit.onclick = function() {
      addressTitle.innerHTML = "Edit Address";
      addressSubTitle.innerHTML = "Edit your current address";
    };
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-user-view-security.js
  (function() {
    const formChangePass = document.querySelector("#formChangePassword");
    if (formChangePass) {
      const fv2 = FormValidation.formValidation(formChangePass, {
        fields: {
          newPassword: {
            validators: {
              notEmpty: {
                message: "Please enter new password"
              },
              stringLength: {
                min: 8,
                message: "Password must be more than 8 characters"
              }
            }
          },
          confirmPassword: {
            validators: {
              notEmpty: {
                message: "Please confirm new password"
              },
              identical: {
                compare: function() {
                  return formChangePass.querySelector('[name="newPassword"]').value;
                },
                message: "The password and its confirm are not the same"
              },
              stringLength: {
                min: 8,
                message: "Password must be more than 8 characters"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".form-password-toggle"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e) {
            if (e.element.parentElement.classList.contains("input-group")) {
              e.element.parentElement.insertAdjacentElement("afterend", e.messageElement);
            }
          });
        }
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/app-user-view.js
  (function() {
    const suspendUser = document.querySelector(".suspend-user");
    if (suspendUser) {
      suspendUser.onclick = function() {
        Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert user!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, Suspend user!",
          customClass: {
            confirmButton: "btn btn-primary me-2",
            cancelButton: "btn btn-label-secondary"
          },
          buttonsStyling: false
        }).then(function(result) {
          if (result.value) {
            Swal.fire({
              icon: "success",
              title: "Suspended!",
              text: "User has been suspended.",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          } else if (result.dismiss === Swal.DismissReason.cancel) {
            Swal.fire({
              title: "Cancelled",
              text: "Cancelled Suspension :)",
              icon: "error",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          }
        });
      };
    }
    const cancelSubscription = document.querySelectorAll(".cancel-subscription");
    if (cancelSubscription) {
      cancelSubscription.forEach((btnCancle) => {
        btnCancle.onclick = function() {
          Swal.fire({
            text: "Are you sure you would like to cancel your subscription?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes",
            customClass: {
              confirmButton: "btn btn-primary me-2",
              cancelButton: "btn btn-label-secondary"
            },
            buttonsStyling: false
          }).then(function(result) {
            if (result.value) {
              Swal.fire({
                icon: "success",
                title: "Unsubscribed!",
                text: "Your subscription cancelled successfully.",
                customClass: {
                  confirmButton: "btn btn-success"
                }
              });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              Swal.fire({
                title: "Cancelled",
                text: "Unsubscription Cancelled!!",
                icon: "error",
                customClass: {
                  confirmButton: "btn btn-success"
                }
              });
            }
          });
        };
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/cards-actions.js
  (function() {
    const collapseElementList = [].slice.call(document.querySelectorAll(".card-collapsible"));
    const expandElementList = [].slice.call(document.querySelectorAll(".card-expand"));
    const closeElementList = [].slice.call(document.querySelectorAll(".card-close"));
    let cardDnD = document.getElementById("sortable-4");
    if (collapseElementList) {
      collapseElementList.map(function(collapseElement) {
        collapseElement.addEventListener("click", (event) => {
          event.preventDefault();
          new bootstrap.Collapse(collapseElement.closest(".card").querySelector(".collapse"));
          collapseElement.closest(".card-header").classList.toggle("collapsed");
          Helpers._toggleClass(collapseElement.firstElementChild, "ti-chevron-down", "ti-chevron-right");
        });
      });
    }
    if (expandElementList) {
      expandElementList.map(function(expandElement) {
        expandElement.addEventListener("click", (event) => {
          event.preventDefault();
          Helpers._toggleClass(expandElement.firstElementChild, "ti-arrows-maximize", "ti-arrows-minimize");
          expandElement.closest(".card").classList.toggle("card-fullscreen");
        });
      });
    }
    document.addEventListener("keyup", (event) => {
      event.preventDefault();
      if (event.key === "Escape") {
        const cardFullscreen = document.querySelector(".card-fullscreen");
        if (cardFullscreen) {
          Helpers._toggleClass(
            cardFullscreen.querySelector(".card-expand").firstChild,
            "ti-arrows-maximize",
            "ti-arrows-minimize"
          );
          cardFullscreen.classList.toggle("card-fullscreen");
        }
      }
    });
    if (closeElementList) {
      closeElementList.map(function(closeElement) {
        closeElement.addEventListener("click", (event) => {
          event.preventDefault();
          closeElement.closest(".card").classList.add("d-none");
        });
      });
    }
    if (typeof cardDnD !== void 0 && cardDnD !== null) {
      Sortable.create(cardDnD, {
        animation: 500,
        handle: ".card"
      });
    }
  })();
  $(function() {
    const cardReload = $(".card-reload");
    if (cardReload.length) {
      cardReload.on("click", function(e) {
        e.preventDefault();
        var $this = $(this);
        $this.closest(".card").block({
          message: '<div class="sk-fold sk-primary"><div class="sk-fold-cube"></div><div class="sk-fold-cube"></div><div class="sk-fold-cube"></div><div class="sk-fold-cube"></div></div><h5>LOADING...</h5>',
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            backgroundColor: $("html").hasClass("dark-style") ? "#000" : "#fff",
            opacity: 0.55
          }
        });
        setTimeout(function() {
          $this.closest(".card").unblock();
          if ($this.closest(".card").find(".card-alert").length) {
            $this.closest(".card").find(".card-alert").html(
              '<div class="alert alert-danger alert-dismissible fade show" role="alert"><button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button><span class="fw-medium">Holy grail!</span> Your success/error message here.</div>'
            );
          }
        }, 2500);
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/cards-advance.js
  (function() {
    let cardColor, headingColor, legendColor, labelColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      labelColor = config.colors_dark.textMuted;
      legendColor = config.colors_dark.bodyColor;
      headingColor = config.colors_dark.headingColor;
    } else {
      cardColor = config.colors.cardColor;
      labelColor = config.colors.textMuted;
      legendColor = config.colors.bodyColor;
      headingColor = config.colors.headingColor;
    }
    function radialBarChart(color, value, show) {
      const radialBarChartOpt = {
        chart: {
          height: show == "true" ? 58 : 53,
          width: show == "true" ? 58 : 43,
          type: "radialBar"
        },
        plotOptions: {
          radialBar: {
            hollow: {
              size: show == "true" ? "50%" : "33%"
            },
            dataLabels: {
              show: show == "true" ? true : false,
              value: {
                offsetY: -10,
                fontSize: "15px",
                fontWeight: 500,
                fontFamily: "Public Sans",
                color: headingColor
              }
            },
            track: {
              background: config.colors_label.secondary
            }
          }
        },
        stroke: {
          lineCap: "round"
        },
        colors: [color],
        grid: {
          padding: {
            top: show == "true" ? -12 : -15,
            bottom: show == "true" ? -17 : -15,
            left: show == "true" ? -17 : -5,
            right: -15
          }
        },
        series: [value],
        labels: show == "true" ? [""] : ["Progress"]
      };
      return radialBarChartOpt;
    }
    const chartProgressList = document.querySelectorAll(".chart-progress");
    if (chartProgressList) {
      chartProgressList.forEach(function(chartProgressEl) {
        const color = config.colors[chartProgressEl.dataset.color], series = chartProgressEl.dataset.series;
        const progress_variant = chartProgressEl.dataset.progress_variant ? chartProgressEl.dataset.progress_variant : "false";
        const optionsBundle = radialBarChart(color, series, progress_variant);
        const chart = new ApexCharts(chartProgressEl, optionsBundle);
        chart.render();
      });
    }
    const reportBarChartEl = document.querySelector("#reportBarChart"), reportBarChartConfig = {
      chart: {
        height: 200,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "60%",
          columnWidth: "60%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 4,
          distributed: true
        }
      },
      grid: {
        show: false,
        padding: {
          top: -20,
          bottom: 0,
          left: -10,
          right: -10
        }
      },
      colors: [
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors.primary,
        config.colors_label.primary,
        config.colors_label.primary
      ],
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [40, 95, 60, 45, 90, 50, 75]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      }
    };
    if (typeof reportBarChartEl !== void 0 && reportBarChartEl !== null) {
      const barChart = new ApexCharts(reportBarChartEl, reportBarChartConfig);
      barChart.render();
    }
    const swiperWithPagination = document.querySelector("#swiper-with-pagination-cards");
    if (swiperWithPagination) {
      new Swiper(swiperWithPagination, {
        loop: true,
        autoplay: {
          delay: 2500,
          disableOnInteraction: false
        },
        pagination: {
          clickable: true,
          el: ".swiper-pagination"
        }
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/cards-analytics.js
  (function() {
    let cardColor, headingColor, legendColor, labelColor, borderColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      labelColor = config.colors_dark.textMuted;
      legendColor = config.colors_dark.bodyColor;
      headingColor = config.colors_dark.headingColor;
      borderColor = config.colors_dark.borderColor;
    } else {
      cardColor = config.colors.cardColor;
      labelColor = config.colors.textMuted;
      legendColor = config.colors.bodyColor;
      headingColor = config.colors.headingColor;
      borderColor = config.colors.borderColor;
    }
    const chartColors = {
      donut: {
        series1: config.colors.success,
        series2: "#4fddaa",
        series3: "#8ae8c7",
        series4: "#c4f4e3"
      },
      bar: {
        series1: config.colors.primary,
        series2: "#7367F0CC",
        series3: "#7367f099"
      }
    };
    const weeklyEarningReportsEl = document.querySelector("#weeklyEarningReports"), weeklyEarningReportsConfig = {
      chart: {
        height: 202,
        parentHeightOffset: 0,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "60%",
          columnWidth: "38%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 4,
          distributed: true
        }
      },
      grid: {
        show: false,
        padding: {
          top: -30,
          bottom: 0,
          left: -10,
          right: -10
        }
      },
      colors: [
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors.primary,
        config.colors_label.primary,
        config.colors_label.primary
      ],
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [40, 65, 50, 45, 90, 55, 70]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans"
          }
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      tooltip: {
        enabled: false
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 199
            }
          }
        }
      ]
    };
    if (typeof weeklyEarningReportsEl !== void 0 && weeklyEarningReportsEl !== null) {
      const weeklyEarningReports = new ApexCharts(weeklyEarningReportsEl, weeklyEarningReportsConfig);
      weeklyEarningReports.render();
    }
    const supportTrackerEl = document.querySelector("#supportTracker"), supportTrackerOptions = {
      series: [85],
      labels: ["Completed Task"],
      chart: {
        height: 360,
        type: "radialBar"
      },
      plotOptions: {
        radialBar: {
          offsetY: 10,
          startAngle: -140,
          endAngle: 130,
          hollow: {
            size: "65%"
          },
          track: {
            background: cardColor,
            strokeWidth: "100%"
          },
          dataLabels: {
            name: {
              offsetY: -20,
              color: labelColor,
              fontSize: "13px",
              fontWeight: "400",
              fontFamily: "Public Sans"
            },
            value: {
              offsetY: 10,
              color: headingColor,
              fontSize: "38px",
              fontWeight: "500",
              fontFamily: "Public Sans"
            }
          }
        }
      },
      colors: [config.colors.primary],
      fill: {
        type: "gradient",
        gradient: {
          shade: "dark",
          shadeIntensity: 0.5,
          gradientToColors: [config.colors.primary],
          inverseColors: true,
          opacityFrom: 1,
          opacityTo: 0.6,
          stops: [30, 70, 100]
        }
      },
      stroke: {
        dashArray: 10
      },
      grid: {
        padding: {
          top: -20,
          bottom: 5
        }
      },
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 330
            }
          }
        },
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 280
            }
          }
        }
      ]
    };
    if (typeof supportTrackerEl !== void 0 && supportTrackerEl !== null) {
      const supportTracker = new ApexCharts(supportTrackerEl, supportTrackerOptions);
      supportTracker.render();
    }
    const salesLastMonthEl = document.querySelector("#salesLastMonth"), salesLastMonthConfig = {
      series: [
        {
          name: "Sales",
          data: [32, 27, 27, 30, 25, 25]
        },
        {
          name: "Visits",
          data: [25, 35, 20, 20, 20, 20]
        }
      ],
      chart: {
        height: 300,
        type: "radar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        radar: {
          polygons: {
            strokeColors: borderColor,
            connectorColors: borderColor
          }
        }
      },
      stroke: {
        show: false,
        width: 0
      },
      legend: {
        show: true,
        fontSize: "13px",
        position: "bottom",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        },
        markers: {
          height: 10,
          width: 10,
          offsetX: -3
        },
        itemMargin: {
          horizontal: 10
        },
        onItemHover: {
          highlightDataSeries: false
        }
      },
      colors: [config.colors.primary, config.colors.info],
      fill: {
        opacity: [1, 0.85]
      },
      markers: {
        size: 0
      },
      grid: {
        show: false,
        padding: {
          top: 0,
          bottom: -5
        }
      },
      xaxis: {
        categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun"],
        labels: {
          show: true,
          style: {
            colors: [labelColor, labelColor, labelColor, labelColor, labelColor, labelColor],
            fontSize: "13px",
            fontFamily: "Public Sans"
          }
        }
      },
      yaxis: {
        show: false,
        min: 0,
        max: 40,
        tickAmount: 4
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 290
            }
          }
        },
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 390
            }
          }
        }
      ]
    };
    if (typeof salesLastMonthEl !== void 0 && salesLastMonthEl !== null) {
      const salesLastMonth = new ApexCharts(salesLastMonthEl, salesLastMonthConfig);
      salesLastMonth.render();
    }
    const totalRevenueChartEl = document.querySelector("#totalRevenueChart"), totalRevenueChartOptions = {
      series: [
        {
          name: "Earning",
          data: [270, 210, 180, 200, 250, 280, 250, 270, 150]
        },
        {
          name: "Expense",
          data: [-140, -160, -180, -150, -100, -60, -80, -100, -180]
        }
      ],
      chart: {
        height: 390,
        parentHeightOffset: 0,
        stacked: true,
        type: "bar",
        toolbar: { show: false }
      },
      tooltip: {
        enabled: false
      },
      plotOptions: {
        bar: {
          horizontal: false,
          columnWidth: "40%",
          borderRadius: 9,
          startingShape: "rounded",
          endingShape: "rounded"
        }
      },
      colors: [config.colors.primary, config.colors.warning],
      dataLabels: {
        enabled: false
      },
      stroke: {
        curve: "smooth",
        width: 6,
        lineCap: "round",
        colors: [cardColor]
      },
      legend: {
        show: true,
        horizontalAlign: "right",
        position: "top",
        fontFamily: "Public Sans",
        markers: {
          height: 12,
          width: 12,
          radius: 12,
          offsetX: -3,
          offsetY: 2
        },
        labels: {
          colors: legendColor
        },
        itemMargin: {
          horizontal: 10,
          vertical: 2
        }
      },
      grid: {
        show: false,
        padding: {
          bottom: -8,
          top: 20
        }
      },
      xaxis: {
        categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"],
        labels: {
          style: {
            fontSize: "13px",
            colors: labelColor,
            fontFamily: "Public Sans"
          }
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        labels: {
          offsetX: -16,
          style: {
            fontSize: "13px",
            colors: labelColor,
            fontFamily: "Public Sans"
          }
        },
        min: -200,
        max: 300,
        tickAmount: 5
      },
      responsive: [
        {
          breakpoint: 1700,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "43%"
              }
            }
          }
        },
        {
          breakpoint: 1441,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 1300,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "62%"
              }
            }
          }
        },
        {
          breakpoint: 991,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "38%"
              }
            }
          }
        },
        {
          breakpoint: 850,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 449,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "73%"
              }
            },
            xaxis: {
              labels: {
                offsetY: -5
              }
            },
            legend: {
              show: true,
              horizontalAlign: "right",
              position: "top",
              itemMargin: {
                horizontal: 10,
                vertical: 0
              }
            }
          }
        },
        {
          breakpoint: 394,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "88%"
              }
            },
            legend: {
              show: true,
              horizontalAlign: "center",
              position: "bottom",
              markers: {
                offsetX: -3,
                offsetY: 0
              },
              itemMargin: {
                horizontal: 10,
                vertical: 5
              }
            }
          }
        }
      ],
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      }
    };
    if (typeof totalRevenueChartEl !== void 0 && totalRevenueChartEl !== null) {
      const totalRevenueChart = new ApexCharts(totalRevenueChartEl, totalRevenueChartOptions);
      totalRevenueChart.render();
    }
    const budgetChartEl = document.querySelector("#budgetChart"), budgetChartOptions = {
      chart: {
        height: 100,
        toolbar: { show: false },
        zoom: { enabled: false },
        type: "line"
      },
      series: [
        {
          name: "Last Month",
          data: [20, 10, 30, 16, 24, 5, 40, 23, 28, 5, 30]
        },
        {
          name: "This Month",
          data: [50, 40, 60, 46, 54, 35, 70, 53, 58, 35, 60]
        }
      ],
      stroke: {
        curve: "smooth",
        dashArray: [5, 0],
        width: [1, 2]
      },
      legend: {
        show: false
      },
      colors: [borderColor, config.colors.primary],
      grid: {
        show: false,
        borderColor,
        padding: {
          top: -30,
          bottom: -15,
          left: 25
        }
      },
      markers: {
        size: 0
      },
      xaxis: {
        labels: {
          show: false
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof budgetChartEl !== void 0 && budgetChartEl !== null) {
      const budgetChart = new ApexCharts(budgetChartEl, budgetChartOptions);
      budgetChart.render();
    }
    const projectStatusEl = document.querySelector("#projectStatusChart"), projectStatusConfig = {
      chart: {
        height: 252,
        type: "area",
        toolbar: false
      },
      markers: {
        strokeColor: "transparent"
      },
      series: [
        {
          data: [2e3, 2e3, 4e3, 4e3, 3050, 3050, 2e3, 2e3, 3050, 3050, 4700, 4700, 2750, 2750, 5700, 5700]
        }
      ],
      dataLabels: {
        enabled: false
      },
      grid: {
        show: false,
        padding: {
          left: -10,
          right: -5
        }
      },
      stroke: {
        width: 3,
        curve: "straight"
      },
      colors: [config.colors.primary],
      fill: {
        type: "gradient",
        gradient: {
          opacityFrom: 0.6,
          opacityTo: 0.15,
          stops: [0, 95, 100]
        }
      },
      xaxis: {
        labels: {
          show: false
        },
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        lines: {
          show: false
        }
      },
      yaxis: {
        labels: {
          show: false
        },
        min: 1e3,
        max: 6e3,
        tickAmount: 5
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof projectStatusEl !== void 0 && projectStatusEl !== null) {
      const projectStatus = new ApexCharts(projectStatusEl, projectStatusConfig);
      projectStatus.render();
    }
    function EarningReportsBarChart(arrayData, highlightData) {
      const basicColor = config.colors_label.primary, highlightColor = config.colors.primary;
      var colorArr = [];
      for (let i = 0; i < arrayData.length; i++) {
        if (i === highlightData) {
          colorArr.push(highlightColor);
        } else {
          colorArr.push(basicColor);
        }
      }
      const earningReportBarChartOpt = {
        chart: {
          height: 258,
          parentHeightOffset: 0,
          type: "bar",
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bar: {
            columnWidth: "32%",
            startingShape: "rounded",
            borderRadius: 4,
            distributed: true,
            dataLabels: {
              position: "top"
            }
          }
        },
        grid: {
          show: false,
          padding: {
            top: 0,
            bottom: 0,
            left: -10,
            right: -10
          }
        },
        colors: colorArr,
        dataLabels: {
          enabled: true,
          formatter: function(val) {
            return val + "k";
          },
          offsetY: -20,
          style: {
            fontSize: "15px",
            colors: [legendColor],
            fontWeight: "500",
            fontFamily: "Public Sans"
          }
        },
        series: [
          {
            data: arrayData
          }
        ],
        legend: {
          show: false
        },
        tooltip: {
          enabled: false
        },
        xaxis: {
          categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"],
          axisBorder: {
            show: true,
            color: borderColor
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "13px",
              fontFamily: "Public Sans"
            }
          }
        },
        yaxis: {
          labels: {
            offsetX: -15,
            formatter: function(val) {
              return parseInt(val / 1) + "k";
            },
            style: {
              fontSize: "13px",
              colors: labelColor,
              fontFamily: "Public Sans"
            },
            min: 0,
            max: 6e4,
            tickAmount: 6
          }
        },
        responsive: [
          {
            breakpoint: 1441,
            options: {
              plotOptions: {
                bar: {
                  columnWidth: "41%"
                }
              }
            }
          },
          {
            breakpoint: 590,
            options: {
              plotOptions: {
                bar: {
                  columnWidth: "61%",
                  borderRadius: 5
                }
              },
              yaxis: {
                labels: {
                  show: false
                }
              },
              grid: {
                padding: {
                  right: 0,
                  left: -20
                }
              },
              dataLabels: {
                style: {
                  fontSize: "12px",
                  fontWeight: "400"
                }
              }
            }
          }
        ]
      };
      return earningReportBarChartOpt;
    }
    var chartJson = "earning-reports-charts.json";
    var earningReportsChart = $.ajax({
      url: assetsPath + "json/" + chartJson,
      dataType: "json",
      async: false
    }).responseJSON;
    const earningReportsTabsOrdersEl = document.querySelector("#earningReportsTabsOrders"), earningReportsTabsOrdersConfig = EarningReportsBarChart(
      earningReportsChart["data"][0]["chart_data"],
      earningReportsChart["data"][0]["active_option"]
    );
    if (typeof earningReportsTabsOrdersEl !== void 0 && earningReportsTabsOrdersEl !== null) {
      const earningReportsTabsOrders = new ApexCharts(earningReportsTabsOrdersEl, earningReportsTabsOrdersConfig);
      earningReportsTabsOrders.render();
    }
    const earningReportsTabsSalesEl = document.querySelector("#earningReportsTabsSales"), earningReportsTabsSalesConfig = EarningReportsBarChart(
      earningReportsChart["data"][1]["chart_data"],
      earningReportsChart["data"][1]["active_option"]
    );
    if (typeof earningReportsTabsSalesEl !== void 0 && earningReportsTabsSalesEl !== null) {
      const earningReportsTabsSales = new ApexCharts(earningReportsTabsSalesEl, earningReportsTabsSalesConfig);
      earningReportsTabsSales.render();
    }
    const earningReportsTabsProfitEl = document.querySelector("#earningReportsTabsProfit"), earningReportsTabsProfitConfig = EarningReportsBarChart(
      earningReportsChart["data"][2]["chart_data"],
      earningReportsChart["data"][2]["active_option"]
    );
    if (typeof earningReportsTabsProfitEl !== void 0 && earningReportsTabsProfitEl !== null) {
      const earningReportsTabsProfit = new ApexCharts(earningReportsTabsProfitEl, earningReportsTabsProfitConfig);
      earningReportsTabsProfit.render();
    }
    const earningReportsTabsIncomeEl = document.querySelector("#earningReportsTabsIncome"), earningReportsTabsIncomeConfig = EarningReportsBarChart(
      earningReportsChart["data"][3]["chart_data"],
      earningReportsChart["data"][3]["active_option"]
    );
    if (typeof earningReportsTabsIncomeEl !== void 0 && earningReportsTabsIncomeEl !== null) {
      const earningReportsTabsIncome = new ApexCharts(earningReportsTabsIncomeEl, earningReportsTabsIncomeConfig);
      earningReportsTabsIncome.render();
    }
    const totalEarningChartEl = document.querySelector("#totalEarningChart"), totalEarningChartOptions = {
      series: [
        {
          name: "Earning",
          data: [15, 10, 20, 8, 12, 18, 12, 5]
        },
        {
          name: "Expense",
          data: [-7, -10, -7, -12, -6, -9, -5, -8]
        }
      ],
      chart: {
        height: 215,
        parentHeightOffset: 0,
        stacked: true,
        type: "bar",
        toolbar: { show: false }
      },
      tooltip: {
        enabled: false
      },
      legend: {
        show: false
      },
      plotOptions: {
        bar: {
          horizontal: false,
          columnWidth: "15%",
          borderRadius: 4,
          startingShape: "rounded",
          endingShape: "rounded"
        }
      },
      colors: [config.colors.danger, config.colors.primary],
      dataLabels: {
        enabled: false
      },
      grid: {
        show: false,
        padding: {
          top: -40,
          bottom: -20,
          left: -10,
          right: -2
        }
      },
      xaxis: {
        labels: {
          show: false
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      responsive: [
        {
          breakpoint: 1468,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "22%"
              }
            }
          }
        },
        {
          breakpoint: 1197,
          options: {
            chart: {
              height: 212
            },
            plotOptions: {
              bar: {
                borderRadius: 8,
                columnWidth: "26%"
              }
            }
          }
        },
        {
          breakpoint: 783,
          options: {
            chart: {
              height: 210
            },
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "28%"
              }
            }
          }
        },
        {
          breakpoint: 589,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "16%"
              }
            }
          }
        },
        {
          breakpoint: 520,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "18%"
              }
            }
          }
        },
        {
          breakpoint: 426,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 5,
                columnWidth: "20%"
              }
            }
          }
        },
        {
          breakpoint: 381,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "24%"
              }
            }
          }
        }
      ],
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      }
    };
    if (typeof totalEarningChartEl !== void 0 && totalEarningChartEl !== null) {
      const totalEarningChart = new ApexCharts(totalEarningChartEl, totalEarningChartOptions);
      totalEarningChart.render();
    }
    const horizontalBarChartEl = document.querySelector("#horizontalBarChart"), horizontalBarChartConfig = {
      chart: {
        height: 360,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          horizontal: true,
          barHeight: "60%",
          distributed: true,
          startingShape: "rounded",
          borderRadius: 7
        }
      },
      grid: {
        strokeDashArray: 10,
        borderColor,
        xaxis: {
          lines: {
            show: true
          }
        },
        yaxis: {
          lines: {
            show: false
          }
        },
        padding: {
          top: -35,
          bottom: -12
        }
      },
      colors: [
        config.colors.primary,
        config.colors.info,
        config.colors.success,
        config.colors.secondary,
        config.colors.danger,
        config.colors.warning
      ],
      dataLabels: {
        enabled: true,
        style: {
          colors: ["#fff"],
          fontWeight: 200,
          fontSize: "13px",
          fontFamily: "Public Sans"
        },
        formatter: function(val, opts) {
          return horizontalBarChartConfig.labels[opts.dataPointIndex];
        },
        offsetX: 0,
        dropShadow: {
          enabled: false
        }
      },
      labels: ["UI Design", "UX Design", "Music", "Animation", "React", "SEO"],
      series: [
        {
          data: [35, 20, 14, 12, 10, 9]
        }
      ],
      xaxis: {
        categories: ["6", "5", "4", "3", "2", "1"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          },
          formatter: function(val) {
            return `${val}%`;
          }
        }
      },
      yaxis: {
        max: 35,
        labels: {
          style: {
            colors: [labelColor],
            fontFamily: "Public Sans",
            fontSize: "13px"
          }
        }
      },
      tooltip: {
        enabled: true,
        style: {
          fontSize: "12px"
        },
        onDatasetHover: {
          highlightDataSeries: false
        },
        custom: function({ series, seriesIndex, dataPointIndex, w }) {
          return '<div class="px-3 py-2"><span>' + series[seriesIndex][dataPointIndex] + "%</span></div>";
        }
      },
      legend: {
        show: false
      }
    };
    if (typeof horizontalBarChartEl !== void 0 && horizontalBarChartEl !== null) {
      const horizontalBarChart = new ApexCharts(horizontalBarChartEl, horizontalBarChartConfig);
      horizontalBarChart.render();
    }
    const carrierPerformance = document.querySelector("#carrierPerformance"), carrierPerformanceChartConfig = {
      chart: {
        height: 275,
        type: "bar",
        parentHeightOffset: 0,
        stacked: false,
        toolbar: {
          show: false
        },
        zoom: {
          enabled: false
        }
      },
      plotOptions: {
        bar: {
          horizontal: false,
          columnWidth: "50%",
          startingShape: "rounded",
          endingShape: "flat",
          borderRadius: 4
        }
      },
      dataLabels: {
        enabled: false
      },
      series: [
        {
          name: "Delivery rate",
          type: "column",
          data: [5, 4.5, 4, 3]
        },
        {
          name: "Delivery time",
          type: "column",
          data: [4, 3.5, 3, 2.5]
        },
        {
          name: "Delivery exceptions",
          type: "column",
          data: [3.5, 3, 2.5, 2]
        }
      ],
      xaxis: {
        tickAmount: 10,
        categories: ["Carrier A", "Carrier B", "Carrier C", "Carrier D"],
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans",
            fontWeight: 400
          }
        },
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        }
      },
      yaxis: {
        tickAmount: 4,
        min: 1,
        max: 5,
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans",
            fontWeight: 400
          },
          formatter: function(val) {
            return val;
          }
        }
      },
      legend: {
        show: true,
        position: "bottom",
        markers: {
          width: 8,
          height: 8,
          offsetX: -3,
          radius: 12
        },
        height: 40,
        itemMargin: {
          horizontal: 10,
          vertical: 0
        },
        fontSize: "13px",
        fontFamily: "Public Sans",
        fontWeight: 400,
        labels: {
          colors: headingColor,
          useSeriesColors: false
        },
        offsetY: 10
      },
      grid: {
        strokeDashArray: 6,
        padding: {
          bottom: 5
        }
      },
      colors: [chartColors.bar.series1, chartColors.bar.series2, chartColors.bar.series3],
      fill: {
        opacity: 1
      },
      responsive: [
        {
          breakpoint: 1400,
          options: {
            chart: {
              height: 275
            },
            legend: {
              fontSize: "13px",
              offsetY: 10
            }
          }
        },
        {
          breakpoint: 576,
          options: {
            chart: {
              height: 300
            },
            legend: {
              itemMargin: {
                vertical: 5,
                horizontal: 10
              },
              offsetY: 7
            }
          }
        }
      ]
    };
    if (typeof carrierPerformance !== void 0 && carrierPerformance !== null) {
      const carrierPerformanceChart = new ApexCharts(carrierPerformance, carrierPerformanceChartConfig);
      carrierPerformanceChart.render();
    }
    const deliveryExceptionsChartE1 = document.querySelector("#deliveryExceptionsChart"), deliveryExceptionsChartConfig = {
      chart: {
        height: 400,
        parentHeightOffset: 0,
        type: "donut"
      },
      labels: ["Incorrect address", "Weather conditions", "Federal Holidays", "Damage during transit"],
      series: [13, 25, 22, 40],
      colors: [
        chartColors.donut.series1,
        chartColors.donut.series2,
        chartColors.donut.series3,
        chartColors.donut.series4
      ],
      stroke: {
        width: 0
      },
      dataLabels: {
        enabled: false,
        formatter: function(val, opt) {
          return parseInt(val) + "%";
        }
      },
      legend: {
        show: true,
        position: "bottom",
        offsetY: 10,
        markers: {
          width: 8,
          height: 8,
          offsetX: -3
        },
        itemMargin: {
          horizontal: 15,
          vertical: 5
        },
        fontSize: "13px",
        fontFamily: "Public Sans",
        fontWeight: 400,
        labels: {
          colors: headingColor,
          useSeriesColors: false
        }
      },
      tooltip: {
        theme: false
      },
      grid: {
        padding: {
          top: 15
        }
      },
      plotOptions: {
        pie: {
          donut: {
            size: "75%",
            labels: {
              show: true,
              value: {
                fontSize: "26px",
                fontFamily: "Public Sans",
                color: headingColor,
                fontWeight: 500,
                offsetY: -30,
                formatter: function(val) {
                  return parseInt(val) + "%";
                }
              },
              name: {
                offsetY: 20,
                fontFamily: "Public Sans"
              },
              total: {
                show: true,
                fontSize: "0.9rem",
                label: "AVG. Exceptions",
                color: labelColor,
                formatter: function(w) {
                  return "30%";
                }
              }
            }
          }
        }
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 380
            }
          }
        },
        {
          breakpoint: 420,
          options: {
            chart: {
              height: 300
            }
          }
        }
      ]
    };
    if (typeof deliveryExceptionsChartE1 !== void 0 && deliveryExceptionsChartE1 !== null) {
      const deliveryExceptionsChart = new ApexCharts(deliveryExceptionsChartE1, deliveryExceptionsChartConfig);
      deliveryExceptionsChart.render();
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/cards-statistics.js
  (function() {
    let cardColor, shadeColor, labelColor, headingColor, barBgColor, borderColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      labelColor = config.colors_dark.textMuted;
      headingColor = config.colors_dark.headingColor;
      shadeColor = "dark";
      barBgColor = "#8692d014";
      borderColor = config.colors_dark.borderColor;
    } else {
      cardColor = config.colors.cardColor;
      labelColor = config.colors.textMuted;
      headingColor = config.colors.headingColor;
      shadeColor = "";
      barBgColor = "#4b465c14";
      borderColor = config.colors.borderColor;
    }
    const chartColors = {
      donut: {
        series1: config.colors.success,
        series2: "#28c76fb3",
        series3: "#28c76f80",
        series4: config.colors_label.success
      }
    };
    const ordersLastWeekEl = document.querySelector("#ordersLastWeek"), ordersLastWeekConfig = {
      chart: {
        height: 90,
        parentHeightOffset: 0,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      tooltip: {
        enabled: false
      },
      plotOptions: {
        bar: {
          barHeight: "100%",
          columnWidth: "30px",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 4,
          colors: {
            backgroundBarColors: [barBgColor, barBgColor, barBgColor, barBgColor, barBgColor, barBgColor, barBgColor],
            backgroundBarRadius: 4
          }
        }
      },
      colors: [config.colors.primary],
      grid: {
        show: false,
        padding: {
          top: -30,
          left: -16,
          bottom: 0,
          right: -6
        }
      },
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [60, 50, 20, 45, 50, 30, 70]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["M", "T", "W", "T", "F", "S", "S"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          show: false
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      responsive: [
        {
          breakpoint: 1441,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%",
                borderRadius: 4
              }
            }
          }
        },
        {
          breakpoint: 1368,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "48%"
              }
            }
          }
        },
        {
          breakpoint: 1200,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "30%",
                colors: {
                  backgroundBarRadius: 6
                }
              }
            }
          }
        },
        {
          breakpoint: 991,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "35%",
                borderRadius: 6
              }
            }
          }
        },
        {
          breakpoint: 883,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 768,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "25%"
              }
            }
          }
        },
        {
          breakpoint: 576,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 9
              },
              colors: {
                backgroundBarRadius: 9
              }
            }
          }
        },
        {
          breakpoint: 479,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 4,
                columnWidth: "35%"
              },
              colors: {
                backgroundBarRadius: 4
              }
            },
            grid: {
              padding: {
                right: -15,
                left: -15
              }
            }
          }
        },
        {
          breakpoint: 376,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 3
              }
            }
          }
        }
      ]
    };
    if (typeof ordersLastWeekEl !== void 0 && ordersLastWeekEl !== null) {
      const ordersLastWeek = new ApexCharts(ordersLastWeekEl, ordersLastWeekConfig);
      ordersLastWeek.render();
    }
    const salesLastYearEl = document.querySelector("#salesLastYear"), salesLastYearConfig = {
      chart: {
        height: 90,
        type: "area",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.success],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.25
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [200, 55, 400, 250]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof salesLastYearEl !== void 0 && salesLastYearEl !== null) {
      const salesLastYear = new ApexCharts(salesLastYearEl, salesLastYearConfig);
      salesLastYear.render();
    }
    const profitLastMonthEl = document.querySelector("#profitLastMonth"), profitLastMonthConfig = {
      chart: {
        height: 90,
        type: "line",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      grid: {
        borderColor,
        strokeDashArray: 6,
        xaxis: {
          lines: {
            show: true,
            colors: "#000"
          }
        },
        yaxis: {
          lines: {
            show: false
          }
        },
        padding: {
          top: -18,
          left: -4,
          right: 7,
          bottom: -10
        }
      },
      colors: [config.colors.info],
      stroke: {
        width: 2
      },
      series: [
        {
          data: [0, 25, 10, 40, 25, 55]
        }
      ],
      tooltip: {
        shared: false,
        intersect: true,
        x: {
          show: false
        }
      },
      xaxis: {
        labels: {
          show: false
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      markers: {
        size: 3.5,
        fillColor: config.colors.info,
        strokeColors: "transparent",
        strokeWidth: 3.2,
        discrete: [
          {
            seriesIndex: 0,
            dataPointIndex: 5,
            fillColor: cardColor,
            strokeColor: config.colors.info,
            size: 5,
            shape: "circle"
          }
        ],
        hover: {
          size: 5.5
        }
      },
      responsive: [
        {
          breakpoint: 768,
          options: {
            chart: {
              height: 110
            }
          }
        }
      ]
    };
    if (typeof profitLastMonthEl !== void 0 && profitLastMonthEl !== null) {
      const profitLastMonth = new ApexCharts(profitLastMonthEl, profitLastMonthConfig);
      profitLastMonth.render();
    }
    const sessionsLastMonthEl = document.querySelector("#sessionsLastMonth"), sessionsLastMonthConfig = {
      chart: {
        type: "bar",
        height: 90,
        parentHeightOffset: 0,
        stacked: true,
        toolbar: {
          show: false
        }
      },
      series: [
        {
          name: "PRODUCT A",
          data: [4, 3, 6, 4, 3]
        },
        {
          name: "PRODUCT B",
          data: [-3, -4, -3, -2, -3]
        }
      ],
      plotOptions: {
        bar: {
          horizontal: false,
          columnWidth: "30%",
          barHeight: "100%",
          borderRadius: 5,
          startingShape: "rounded",
          endingShape: "rounded"
        }
      },
      dataLabels: {
        enabled: false
      },
      tooltip: {
        enabled: false
      },
      stroke: {
        curve: "smooth",
        width: 1,
        lineCap: "round",
        colors: [cardColor]
      },
      legend: {
        show: false
      },
      colors: [config.colors.primary, config.colors.success],
      grid: {
        show: false,
        padding: {
          top: -41,
          right: -10,
          left: -8,
          bottom: -26
        }
      },
      xaxis: {
        categories: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
        labels: {
          show: false
        },
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        }
      },
      yaxis: {
        show: false
      },
      responsive: [
        {
          breakpoint: 1441,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 1300,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 1200,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "20%"
              }
            }
          }
        },
        {
          breakpoint: 1025,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 7,
                columnWidth: "25%"
              }
            },
            chart: {
              height: 110
            }
          }
        },
        {
          breakpoint: 900,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6
              }
            }
          }
        },
        {
          breakpoint: 782,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "30%"
              }
            }
          }
        },
        {
          breakpoint: 426,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 5
              }
            }
          }
        },
        {
          breakpoint: 376,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "35%"
              }
            }
          }
        }
      ],
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      }
    };
    if (typeof sessionsLastMonthEl !== void 0 && sessionsLastMonthEl !== null) {
      const sessionsLastMonth = new ApexCharts(sessionsLastMonthEl, sessionsLastMonthConfig);
      sessionsLastMonth.render();
    }
    const expensesRadialChartEl = document.querySelector("#expensesChart"), expensesRadialChartConfig = {
      chart: {
        height: 145,
        sparkline: {
          enabled: true
        },
        parentHeightOffset: 0,
        type: "radialBar"
      },
      colors: [config.colors.warning],
      series: [78],
      plotOptions: {
        radialBar: {
          offsetY: 0,
          startAngle: -90,
          endAngle: 90,
          hollow: {
            size: "65%"
          },
          track: {
            strokeWidth: "45%",
            background: borderColor
          },
          dataLabels: {
            name: {
              show: false
            },
            value: {
              fontSize: "22px",
              color: headingColor,
              fontWeight: 500,
              offsetY: -5
            }
          }
        }
      },
      grid: {
        show: false,
        padding: {
          bottom: 5
        }
      },
      stroke: {
        lineCap: "round"
      },
      labels: ["Progress"],
      responsive: [
        {
          breakpoint: 1442,
          options: {
            chart: {
              height: 100
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "55%"
                },
                dataLabels: {
                  value: {
                    fontSize: "16px",
                    offsetY: -1
                  }
                }
              }
            }
          }
        },
        {
          breakpoint: 1200,
          options: {
            chart: {
              height: 228
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "75%"
                },
                track: {
                  strokeWidth: "50%"
                },
                dataLabels: {
                  value: {
                    fontSize: "26px"
                  }
                }
              }
            }
          }
        },
        {
          breakpoint: 890,
          options: {
            chart: {
              height: 180
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "70%"
                }
              }
            }
          }
        },
        {
          breakpoint: 426,
          options: {
            chart: {
              height: 142
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "70%"
                },
                dataLabels: {
                  value: {
                    fontSize: "22px"
                  }
                }
              }
            }
          }
        },
        {
          breakpoint: 376,
          options: {
            chart: {
              height: 105
            },
            plotOptions: {
              radialBar: {
                hollow: {
                  size: "60%"
                },
                dataLabels: {
                  value: {
                    fontSize: "18px"
                  }
                }
              }
            }
          }
        }
      ]
    };
    if (typeof expensesRadialChartEl !== void 0 && expensesRadialChartEl !== null) {
      const expensesRadialChart = new ApexCharts(expensesRadialChartEl, expensesRadialChartConfig);
      expensesRadialChart.render();
    }
    const impressionThisWeekEl = document.querySelector("#impressionThisWeek"), impressionThisWeekConfig = {
      chart: {
        height: 90,
        parentHeightOffset: 0,
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      colors: [config.colors.danger],
      stroke: {
        width: 3
      },
      grid: {
        padding: {
          bottom: -10
        }
      },
      tooltip: {
        enabled: false
      },
      series: [
        {
          data: [200, 200, 500, 500, 300, 300, 100, 100, 450, 450, 650, 650]
        }
      ],
      responsive: [
        {
          breakpoint: 1200,
          options: {
            chart: {
              height: 110
            }
          }
        },
        {
          breakpoint: 768,
          options: {
            chart: {
              height: 90
            }
          }
        },
        {
          breakpoint: 376,
          options: {
            chart: {
              height: 93
            }
          }
        }
      ]
    };
    if (typeof impressionThisWeekEl !== void 0 && impressionThisWeekEl !== null) {
      const impressionThisWeek = new ApexCharts(impressionThisWeekEl, impressionThisWeekConfig);
      impressionThisWeek.render();
    }
    const subscriberGainedEl = document.querySelector("#subscriberGained"), subscriberGainedConfig = {
      chart: {
        height: 90,
        type: "area",
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.primary],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.1
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [200, 60, 300, 140, 230, 120, 400]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof subscriberGainedEl !== void 0 && subscriberGainedEl !== null) {
      const subscriberGained = new ApexCharts(subscriberGainedEl, subscriberGainedConfig);
      subscriberGained.render();
    }
    const quarterlySalesEl = document.querySelector("#quarterlySales"), quarterlySalesConfig = {
      chart: {
        height: 90,
        type: "area",
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.danger],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.1
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [200, 300, 160, 250, 130, 400]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof quarterlySalesEl !== void 0 && quarterlySalesEl !== null) {
      const quarterlySales = new ApexCharts(quarterlySalesEl, quarterlySalesConfig);
      quarterlySales.render();
    }
    const orderReceivedEl = document.querySelector("#orderReceived"), orderReceivedConfig = {
      chart: {
        height: 90,
        type: "area",
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.warning],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.1
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [350, 500, 310, 460, 280, 400, 300]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof orderReceivedEl !== void 0 && orderReceivedEl !== null) {
      const orderReceived = new ApexCharts(orderReceivedEl, orderReceivedConfig);
      orderReceived.render();
    }
    const revenueGeneratedEl = document.querySelector("#revenueGenerated"), revenueGeneratedConfig = {
      chart: {
        height: 90,
        type: "area",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.success],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.1
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [300, 350, 330, 380, 340, 400, 380]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof revenueGeneratedEl !== void 0 && revenueGeneratedEl !== null) {
      const revenueGenerated = new ApexCharts(revenueGeneratedEl, revenueGeneratedConfig);
      revenueGenerated.render();
    }
    const averageDailySalesEl = document.querySelector("#averageDailySales"), averageDailySalesConfig = {
      chart: {
        height: 123,
        type: "area",
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.success],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.1
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [400, 200, 650, 500]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      },
      responsive: [
        {
          breakpoint: 1387,
          options: {
            chart: {
              height: 80
            }
          }
        },
        {
          breakpoint: 1200,
          options: {
            chart: {
              height: 123
            }
          }
        }
      ]
    };
    if (typeof averageDailySalesEl !== void 0 && averageDailySalesEl !== null) {
      const averageDailySales = new ApexCharts(averageDailySalesEl, averageDailySalesConfig);
      averageDailySales.render();
    }
    const averageDailyTrafficEl = document.querySelector("#averageDailyTraffic"), averageDailyTrafficConfig = {
      chart: {
        height: 145,
        parentHeightOffset: 0,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "100%",
          columnWidth: "25px",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 6
        }
      },
      colors: [config.colors.warning],
      grid: {
        show: false,
        padding: {
          top: -30,
          left: -18,
          bottom: -13,
          right: -10
        }
      },
      dataLabels: {
        enabled: false
      },
      tooltip: {
        enabled: false
      },
      series: [
        {
          data: [30, 40, 50, 60, 70, 80, 90]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["01", "02", "03", "04", "05", "06", "07"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans"
          },
          show: true
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      responsive: [
        {
          breakpoint: 1441,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 5
              }
            }
          }
        },
        {
          breakpoint: 1200,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "25%",
                borderRadius: 9
              }
            }
          }
        },
        {
          breakpoint: 992,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 8,
                columnWidth: "25%"
              }
            }
          }
        },
        {
          breakpoint: 836,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "30%"
              }
            }
          }
        },
        {
          breakpoint: 738,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "35%",
                borderRadius: 6
              }
            }
          }
        },
        {
          breakpoint: 576,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "25%",
                borderRadius: 10
              }
            }
          }
        },
        {
          breakpoint: 500,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "24%",
                borderRadius: 8
              }
            }
          }
        },
        {
          breakpoint: 450,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6
              }
            }
          }
        }
      ]
    };
    if (typeof averageDailyTrafficEl !== void 0 && averageDailyTrafficEl !== null) {
      const averageDailyTraffic = new ApexCharts(averageDailyTrafficEl, averageDailyTrafficConfig);
      averageDailyTraffic.render();
    }
    const revenueGrowthEl = document.querySelector("#revenueGrowth"), revenueGrowthConfig = {
      chart: {
        height: 162,
        type: "bar",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "80%",
          columnWidth: "30%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 7,
          distributed: true
        }
      },
      tooltip: {
        enabled: false
      },
      grid: {
        show: false,
        padding: {
          top: -20,
          bottom: -12,
          left: -10,
          right: 0
        }
      },
      colors: [
        config.colors_label.success,
        config.colors_label.success,
        config.colors_label.success,
        config.colors_label.success,
        config.colors.success,
        config.colors_label.success,
        config.colors_label.success
      ],
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [25, 40, 55, 70, 85, 70, 55]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["M", "T", "W", "T", "F", "S", "S"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans"
          }
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      states: {
        hover: {
          filter: {
            type: "none"
          }
        }
      },
      responsive: [
        {
          breakpoint: 1471,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "45%"
              }
            }
          }
        },
        {
          breakpoint: 1350,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "57%"
              }
            }
          }
        },
        {
          breakpoint: 1032,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "60%"
              }
            }
          }
        },
        {
          breakpoint: 992,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%",
                borderRadius: 8
              }
            }
          }
        },
        {
          breakpoint: 855,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%",
                borderRadius: 6
              }
            }
          }
        },
        {
          breakpoint: 440,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 381,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "45%"
              }
            }
          }
        }
      ]
    };
    if (typeof revenueGrowthEl !== void 0 && revenueGrowthEl !== null) {
      const revenueGrowth = new ApexCharts(revenueGrowthEl, revenueGrowthConfig);
      revenueGrowth.render();
    }
    const generatedLeadsChartEl = document.querySelector("#generatedLeadsChart"), generatedLeadsChartConfig = {
      chart: {
        height: 147,
        width: 130,
        parentHeightOffset: 0,
        type: "donut"
      },
      labels: ["Electronic", "Sports", "Decor", "Fashion"],
      series: [45, 58, 30, 50],
      colors: [
        chartColors.donut.series1,
        chartColors.donut.series2,
        chartColors.donut.series3,
        chartColors.donut.series4
      ],
      stroke: {
        width: 0
      },
      dataLabels: {
        enabled: false,
        formatter: function(val, opt) {
          return parseInt(val) + "%";
        }
      },
      legend: {
        show: false
      },
      tooltip: {
        theme: false
      },
      grid: {
        padding: {
          top: 15,
          right: -20,
          left: -20
        }
      },
      states: {
        hover: {
          filter: {
            type: "none"
          }
        }
      },
      plotOptions: {
        pie: {
          donut: {
            size: "70%",
            labels: {
              show: true,
              value: {
                fontSize: "1.375rem",
                fontFamily: "Public Sans",
                color: headingColor,
                fontWeight: 500,
                offsetY: -15,
                formatter: function(val) {
                  return parseInt(val) + "%";
                }
              },
              name: {
                offsetY: 20,
                fontFamily: "Public Sans"
              },
              total: {
                show: true,
                showAlways: true,
                color: config.colors.success,
                fontSize: ".8125rem",
                label: "Total",
                fontFamily: "Public Sans",
                formatter: function(w) {
                  return "184";
                }
              }
            }
          }
        }
      }
    };
    if (typeof generatedLeadsChartEl !== void 0 && generatedLeadsChartEl !== null) {
      const generatedLeadsChart = new ApexCharts(generatedLeadsChartEl, generatedLeadsChartConfig);
      generatedLeadsChart.render();
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/charts-apex.js
  (function() {
    let cardColor, headingColor, labelColor, borderColor, legendColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      headingColor = config.colors_dark.headingColor;
      labelColor = config.colors_dark.textMuted;
      legendColor = config.colors_dark.bodyColor;
      borderColor = config.colors_dark.borderColor;
    } else {
      cardColor = config.colors.cardColor;
      headingColor = config.colors.headingColor;
      labelColor = config.colors.textMuted;
      legendColor = config.colors.bodyColor;
      borderColor = config.colors.borderColor;
    }
    const chartColors = {
      column: {
        series1: "#826af9",
        series2: "#d2b0ff",
        bg: "#f8d3ff"
      },
      donut: {
        series1: "#fee802",
        series2: "#3fd0bd",
        series3: "#826bf8",
        series4: "#2b9bf4"
      },
      area: {
        series1: "#29dac7",
        series2: "#60f2ca",
        series3: "#a5f8cd"
      }
    };
    function generateDataHeat(count, yrange) {
      let i = 0;
      let series = [];
      while (i < count) {
        let x = "w" + (i + 1).toString();
        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;
        series.push({
          x,
          y
        });
        i++;
      }
      return series;
    }
    const areaChartEl = document.querySelector("#lineAreaChart"), areaChartConfig = {
      chart: {
        height: 400,
        type: "area",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        show: false,
        curve: "straight"
      },
      legend: {
        show: true,
        position: "top",
        horizontalAlign: "start",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        }
      },
      grid: {
        borderColor,
        xaxis: {
          lines: {
            show: true
          }
        }
      },
      colors: [chartColors.area.series3, chartColors.area.series2, chartColors.area.series1],
      series: [
        {
          name: "Visits",
          data: [100, 120, 90, 170, 130, 160, 140, 240, 220, 180, 270, 280, 375]
        },
        {
          name: "Clicks",
          data: [60, 80, 70, 110, 80, 100, 90, 180, 160, 140, 200, 220, 275]
        },
        {
          name: "Sales",
          data: [20, 40, 30, 70, 40, 60, 50, 140, 120, 100, 140, 180, 220]
        }
      ],
      xaxis: {
        categories: [
          "7/12",
          "8/12",
          "9/12",
          "10/12",
          "11/12",
          "12/12",
          "13/12",
          "14/12",
          "15/12",
          "16/12",
          "17/12",
          "18/12",
          "19/12",
          "20/12"
        ],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      fill: {
        opacity: 1,
        type: "solid"
      },
      tooltip: {
        shared: false
      }
    };
    if (typeof areaChartEl !== void 0 && areaChartEl !== null) {
      const areaChart = new ApexCharts(areaChartEl, areaChartConfig);
      areaChart.render();
    }
    const barChartEl = document.querySelector("#barChart"), barChartConfig = {
      chart: {
        height: 400,
        type: "bar",
        stacked: true,
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          columnWidth: "15%",
          colors: {
            backgroundBarColors: [
              chartColors.column.bg,
              chartColors.column.bg,
              chartColors.column.bg,
              chartColors.column.bg,
              chartColors.column.bg
            ],
            backgroundBarRadius: 10
          }
        }
      },
      dataLabels: {
        enabled: false
      },
      legend: {
        show: true,
        position: "top",
        horizontalAlign: "start",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        }
      },
      colors: [chartColors.column.series1, chartColors.column.series2],
      stroke: {
        show: true,
        colors: ["transparent"]
      },
      grid: {
        borderColor,
        xaxis: {
          lines: {
            show: true
          }
        }
      },
      series: [
        {
          name: "Apple",
          data: [90, 120, 55, 100, 80, 125, 175, 70, 88, 180]
        },
        {
          name: "Samsung",
          data: [85, 100, 30, 40, 95, 90, 30, 110, 62, 20]
        }
      ],
      xaxis: {
        categories: ["7/12", "8/12", "9/12", "10/12", "11/12", "12/12", "13/12", "14/12", "15/12", "16/12"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      fill: {
        opacity: 1
      }
    };
    if (typeof barChartEl !== void 0 && barChartEl !== null) {
      const barChart = new ApexCharts(barChartEl, barChartConfig);
      barChart.render();
    }
    const scatterChartEl = document.querySelector("#scatterChart"), scatterChartConfig = {
      chart: {
        height: 400,
        type: "scatter",
        zoom: {
          enabled: true,
          type: "xy"
        },
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      grid: {
        borderColor,
        xaxis: {
          lines: {
            show: true
          }
        }
      },
      legend: {
        show: true,
        position: "top",
        horizontalAlign: "start",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        }
      },
      colors: [config.colors.warning, config.colors.primary, config.colors.success],
      series: [
        {
          name: "Angular",
          data: [
            [5.4, 170],
            [5.4, 100],
            [5.7, 110],
            [5.9, 150],
            [6, 200],
            [6.3, 170],
            [5.7, 140],
            [5.9, 130],
            [7, 150],
            [8, 120],
            [9, 170],
            [10, 190],
            [11, 220],
            [12, 170],
            [13, 230]
          ]
        },
        {
          name: "Vue",
          data: [
            [14, 220],
            [15, 280],
            [16, 230],
            [18, 320],
            [17.5, 280],
            [19, 250],
            [20, 350],
            [20.5, 320],
            [20, 320],
            [19, 280],
            [17, 280],
            [22, 300],
            [18, 120]
          ]
        },
        {
          name: "React",
          data: [
            [14, 290],
            [13, 190],
            [20, 220],
            [21, 350],
            [21.5, 290],
            [22, 220],
            [23, 140],
            [19, 400],
            [20, 200],
            [22, 90],
            [20, 120]
          ]
        }
      ],
      xaxis: {
        tickAmount: 10,
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          formatter: function(val) {
            return parseFloat(val).toFixed(1);
          },
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      }
    };
    if (typeof scatterChartEl !== void 0 && scatterChartEl !== null) {
      const scatterChart = new ApexCharts(scatterChartEl, scatterChartConfig);
      scatterChart.render();
    }
    const lineChartEl = document.querySelector("#lineChart"), lineChartConfig = {
      chart: {
        height: 400,
        type: "line",
        parentHeightOffset: 0,
        zoom: {
          enabled: false
        },
        toolbar: {
          show: false
        }
      },
      series: [
        {
          data: [280, 200, 220, 180, 270, 250, 70, 90, 200, 150, 160, 100, 150, 100, 50]
        }
      ],
      markers: {
        strokeWidth: 7,
        strokeOpacity: 1,
        strokeColors: [cardColor],
        colors: [config.colors.warning]
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        curve: "straight"
      },
      colors: [config.colors.warning],
      grid: {
        borderColor,
        xaxis: {
          lines: {
            show: true
          }
        },
        padding: {
          top: -20
        }
      },
      tooltip: {
        custom: function({ series, seriesIndex, dataPointIndex, w }) {
          return '<div class="px-3 py-2"><span>' + series[seriesIndex][dataPointIndex] + "%</span></div>";
        }
      },
      xaxis: {
        categories: [
          "7/12",
          "8/12",
          "9/12",
          "10/12",
          "11/12",
          "12/12",
          "13/12",
          "14/12",
          "15/12",
          "16/12",
          "17/12",
          "18/12",
          "19/12",
          "20/12",
          "21/12"
        ],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      }
    };
    if (typeof lineChartEl !== void 0 && lineChartEl !== null) {
      const lineChart = new ApexCharts(lineChartEl, lineChartConfig);
      lineChart.render();
    }
    const horizontalBarChartEl = document.querySelector("#horizontalBarChart"), horizontalBarChartConfig = {
      chart: {
        height: 400,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          horizontal: true,
          barHeight: "30%",
          startingShape: "rounded",
          borderRadius: 8
        }
      },
      grid: {
        borderColor,
        xaxis: {
          lines: {
            show: false
          }
        },
        padding: {
          top: -20,
          bottom: -12
        }
      },
      colors: config.colors.info,
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [700, 350, 480, 600, 210, 550, 150]
        }
      ],
      xaxis: {
        categories: ["MON, 11", "THU, 14", "FRI, 15", "MON, 18", "WED, 20", "FRI, 21", "MON, 23"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      }
    };
    if (typeof horizontalBarChartEl !== void 0 && horizontalBarChartEl !== null) {
      const horizontalBarChart = new ApexCharts(horizontalBarChartEl, horizontalBarChartConfig);
      horizontalBarChart.render();
    }
    const candlestickEl = document.querySelector("#candleStickChart"), candlestickChartConfig = {
      chart: {
        height: 410,
        type: "candlestick",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      series: [
        {
          data: [
            {
              x: new Date(15387786e5),
              y: [150, 170, 50, 100]
            },
            {
              x: new Date(15387804e5),
              y: [200, 400, 170, 330]
            },
            {
              x: new Date(15387822e5),
              y: [330, 340, 250, 280]
            },
            {
              x: new Date(1538784e6),
              y: [300, 330, 200, 320]
            },
            {
              x: new Date(15387858e5),
              y: [320, 450, 280, 350]
            },
            {
              x: new Date(15387876e5),
              y: [300, 350, 80, 250]
            },
            {
              x: new Date(15387894e5),
              y: [200, 330, 170, 300]
            },
            {
              x: new Date(15387912e5),
              y: [200, 220, 70, 130]
            },
            {
              x: new Date(1538793e6),
              y: [220, 270, 180, 250]
            },
            {
              x: new Date(15387948e5),
              y: [200, 250, 80, 100]
            },
            {
              x: new Date(15387966e5),
              y: [150, 170, 50, 120]
            },
            {
              x: new Date(15387984e5),
              y: [110, 450, 10, 420]
            },
            {
              x: new Date(15388002e5),
              y: [400, 480, 300, 320]
            },
            {
              x: new Date(1538802e6),
              y: [380, 480, 350, 450]
            }
          ]
        }
      ],
      xaxis: {
        type: "datetime",
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      yaxis: {
        tooltip: {
          enabled: true
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      },
      grid: {
        borderColor,
        xaxis: {
          lines: {
            show: true
          }
        },
        padding: {
          top: -20
        }
      },
      plotOptions: {
        candlestick: {
          colors: {
            upward: config.colors.success,
            downward: config.colors.danger
          }
        },
        bar: {
          columnWidth: "40%"
        }
      }
    };
    if (typeof candlestickEl !== void 0 && candlestickEl !== null) {
      const candlestickChart = new ApexCharts(candlestickEl, candlestickChartConfig);
      candlestickChart.render();
    }
    const heatMapEl = document.querySelector("#heatMapChart"), heatMapChartConfig = {
      chart: {
        height: 350,
        type: "heatmap",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        heatmap: {
          enableShades: false,
          colorScale: {
            ranges: [
              {
                from: 0,
                to: 10,
                name: "0-10",
                color: "#90B3F3"
              },
              {
                from: 11,
                to: 20,
                name: "10-20",
                color: "#7EA6F1"
              },
              {
                from: 21,
                to: 30,
                name: "20-30",
                color: "#6B9AEF"
              },
              {
                from: 31,
                to: 40,
                name: "30-40",
                color: "#598DEE"
              },
              {
                from: 41,
                to: 50,
                name: "40-50",
                color: "#4680EC"
              },
              {
                from: 51,
                to: 60,
                name: "50-60",
                color: "#3474EA"
              }
            ]
          }
        }
      },
      dataLabels: {
        enabled: false
      },
      grid: {
        show: false
      },
      legend: {
        show: true,
        position: "top",
        horizontalAlign: "start",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        },
        markers: {
          offsetY: 0,
          offsetX: -3
        },
        itemMargin: {
          vertical: 3,
          horizontal: 10
        }
      },
      stroke: {
        curve: "smooth",
        width: 4,
        lineCap: "round",
        colors: [cardColor]
      },
      series: [
        {
          name: "SUN",
          data: generateDataHeat(24, {
            min: 0,
            max: 60
          })
        },
        {
          name: "MON",
          data: generateDataHeat(24, {
            min: 0,
            max: 60
          })
        },
        {
          name: "TUE",
          data: generateDataHeat(24, {
            min: 0,
            max: 60
          })
        },
        {
          name: "WED",
          data: generateDataHeat(24, {
            min: 0,
            max: 60
          })
        },
        {
          name: "THU",
          data: generateDataHeat(24, {
            min: 0,
            max: 60
          })
        },
        {
          name: "FRI",
          data: generateDataHeat(24, {
            min: 0,
            max: 60
          })
        },
        {
          name: "SAT",
          data: generateDataHeat(24, {
            min: 0,
            max: 60
          })
        }
      ],
      xaxis: {
        labels: {
          show: false,
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        },
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        }
      },
      yaxis: {
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px"
          }
        }
      }
    };
    if (typeof heatMapEl !== void 0 && heatMapEl !== null) {
      const heatMapChart = new ApexCharts(heatMapEl, heatMapChartConfig);
      heatMapChart.render();
    }
    const radialBarChartEl = document.querySelector("#radialBarChart"), radialBarChartConfig = {
      chart: {
        height: 380,
        type: "radialBar"
      },
      colors: [chartColors.donut.series1, chartColors.donut.series2, chartColors.donut.series4],
      plotOptions: {
        radialBar: {
          size: 185,
          hollow: {
            size: "40%"
          },
          track: {
            margin: 10,
            background: config.colors_label.secondary
          },
          dataLabels: {
            name: {
              fontSize: "2rem",
              fontFamily: "Public Sans"
            },
            value: {
              fontSize: "1.2rem",
              color: legendColor,
              fontFamily: "Public Sans"
            },
            total: {
              show: true,
              fontWeight: 400,
              fontSize: "1.3rem",
              color: headingColor,
              label: "Comments",
              formatter: function(w) {
                return "80%";
              }
            }
          }
        }
      },
      grid: {
        borderColor,
        padding: {
          top: -25,
          bottom: -20
        }
      },
      legend: {
        show: true,
        position: "bottom",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        }
      },
      stroke: {
        lineCap: "round"
      },
      series: [80, 50, 35],
      labels: ["Comments", "Replies", "Shares"]
    };
    if (typeof radialBarChartEl !== void 0 && radialBarChartEl !== null) {
      const radialChart = new ApexCharts(radialBarChartEl, radialBarChartConfig);
      radialChart.render();
    }
    const radarChartEl = document.querySelector("#radarChart"), radarChartConfig = {
      chart: {
        height: 350,
        type: "radar",
        toolbar: {
          show: false
        },
        dropShadow: {
          enabled: false,
          blur: 8,
          left: 1,
          top: 1,
          opacity: 0.2
        }
      },
      legend: {
        show: true,
        position: "bottom",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        }
      },
      plotOptions: {
        radar: {
          polygons: {
            strokeColors: borderColor,
            connectorColors: borderColor
          }
        }
      },
      yaxis: {
        show: false
      },
      series: [
        {
          name: "iPhone 12",
          data: [41, 64, 81, 60, 42, 42, 33, 23]
        },
        {
          name: "Samsung s20",
          data: [65, 46, 42, 25, 58, 63, 76, 43]
        }
      ],
      colors: [chartColors.donut.series1, chartColors.donut.series3],
      xaxis: {
        categories: ["Battery", "Brand", "Camera", "Memory", "Storage", "Display", "OS", "Price"],
        labels: {
          show: true,
          style: {
            colors: [labelColor, labelColor, labelColor, labelColor, labelColor, labelColor, labelColor, labelColor],
            fontSize: "13px",
            fontFamily: "Public Sans"
          }
        }
      },
      fill: {
        opacity: [1, 0.8]
      },
      stroke: {
        show: false,
        width: 0
      },
      markers: {
        size: 0
      },
      grid: {
        show: false,
        padding: {
          top: -20,
          bottom: -20
        }
      }
    };
    if (typeof radarChartEl !== void 0 && radarChartEl !== null) {
      const radarChart = new ApexCharts(radarChartEl, radarChartConfig);
      radarChart.render();
    }
    const donutChartEl = document.querySelector("#donutChart"), donutChartConfig = {
      chart: {
        height: 390,
        type: "donut"
      },
      labels: ["Operational", "Networking", "Hiring", "R&D"],
      series: [42, 7, 25, 25],
      colors: [
        chartColors.donut.series1,
        chartColors.donut.series4,
        chartColors.donut.series3,
        chartColors.donut.series2
      ],
      stroke: {
        show: false,
        curve: "straight"
      },
      dataLabels: {
        enabled: true,
        formatter: function(val, opt) {
          return parseInt(val, 10) + "%";
        }
      },
      legend: {
        show: true,
        position: "bottom",
        markers: { offsetX: -3 },
        itemMargin: {
          vertical: 3,
          horizontal: 10
        },
        labels: {
          colors: legendColor,
          useSeriesColors: false
        }
      },
      plotOptions: {
        pie: {
          donut: {
            labels: {
              show: true,
              name: {
                fontSize: "2rem",
                fontFamily: "Public Sans"
              },
              value: {
                fontSize: "1.2rem",
                color: legendColor,
                fontFamily: "Public Sans",
                formatter: function(val) {
                  return parseInt(val, 10) + "%";
                }
              },
              total: {
                show: true,
                fontSize: "1.5rem",
                color: headingColor,
                label: "Operational",
                formatter: function(w) {
                  return "42%";
                }
              }
            }
          }
        }
      },
      responsive: [
        {
          breakpoint: 992,
          options: {
            chart: {
              height: 380
            },
            legend: {
              position: "bottom",
              labels: {
                colors: legendColor,
                useSeriesColors: false
              }
            }
          }
        },
        {
          breakpoint: 576,
          options: {
            chart: {
              height: 320
            },
            plotOptions: {
              pie: {
                donut: {
                  labels: {
                    show: true,
                    name: {
                      fontSize: "1.5rem"
                    },
                    value: {
                      fontSize: "1rem"
                    },
                    total: {
                      fontSize: "1.5rem"
                    }
                  }
                }
              }
            },
            legend: {
              position: "bottom",
              labels: {
                colors: legendColor,
                useSeriesColors: false
              }
            }
          }
        },
        {
          breakpoint: 420,
          options: {
            chart: {
              height: 280
            },
            legend: {
              show: false
            }
          }
        },
        {
          breakpoint: 360,
          options: {
            chart: {
              height: 250
            },
            legend: {
              show: false
            }
          }
        }
      ]
    };
    if (typeof donutChartEl !== void 0 && donutChartEl !== null) {
      const donutChart = new ApexCharts(donutChartEl, donutChartConfig);
      donutChart.render();
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/charts-chartjs.js
  (function() {
    const purpleColor = "#836AF9", yellowColor = "#ffe800", cyanColor = "#28dac6", orangeColor = "#FF8132", orangeLightColor = "#FDAC34", oceanBlueColor = "#299AFF", greyColor = "#4F5D70", greyLightColor = "#EDF1F4", blueColor = "#2B9AFF", blueLightColor = "#84D0FF";
    let cardColor, headingColor, labelColor, borderColor, legendColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      headingColor = config.colors_dark.headingColor;
      labelColor = config.colors_dark.textMuted;
      legendColor = config.colors_dark.bodyColor;
      borderColor = config.colors_dark.borderColor;
    } else {
      cardColor = config.colors.cardColor;
      headingColor = config.colors.headingColor;
      labelColor = config.colors.textMuted;
      legendColor = config.colors.bodyColor;
      borderColor = config.colors.borderColor;
    }
    const chartList = document.querySelectorAll(".chartjs");
    chartList.forEach(function(chartListItem) {
      chartListItem.height = chartListItem.dataset.height;
    });
    const barChart = document.getElementById("barChart");
    if (barChart) {
      const barChartVar = new Chart(barChart, {
        type: "bar",
        data: {
          labels: [
            "7/12",
            "8/12",
            "9/12",
            "10/12",
            "11/12",
            "12/12",
            "13/12",
            "14/12",
            "15/12",
            "16/12",
            "17/12",
            "18/12",
            "19/12"
          ],
          datasets: [
            {
              data: [275, 90, 190, 205, 125, 85, 55, 87, 127, 150, 230, 280, 190],
              backgroundColor: cyanColor,
              borderColor: "transparent",
              maxBarThickness: 15,
              borderRadius: {
                topRight: 15,
                topLeft: 15
              }
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          animation: {
            duration: 500
          },
          plugins: {
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            },
            legend: {
              display: false
            }
          },
          scales: {
            x: {
              grid: {
                color: borderColor,
                drawBorder: false,
                borderColor
              },
              ticks: {
                color: labelColor
              }
            },
            y: {
              min: 0,
              max: 400,
              grid: {
                color: borderColor,
                drawBorder: false,
                borderColor
              },
              ticks: {
                stepSize: 100,
                color: labelColor
              }
            }
          }
        }
      });
    }
    const horizontalBarChart = document.getElementById("horizontalBarChart");
    if (horizontalBarChart) {
      const horizontalBarChartVar = new Chart(horizontalBarChart, {
        type: "bar",
        data: {
          labels: ["MON", "TUE", "WED ", "THU", "FRI", "SAT", "SUN"],
          datasets: [
            {
              data: [710, 350, 470, 580, 230, 460, 120],
              backgroundColor: config.colors.info,
              borderColor: "transparent",
              maxBarThickness: 15
            }
          ]
        },
        options: {
          indexAxis: "y",
          responsive: true,
          maintainAspectRatio: false,
          animation: {
            duration: 500
          },
          elements: {
            bar: {
              borderRadius: {
                topRight: 15,
                bottomRight: 15
              }
            }
          },
          plugins: {
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            },
            legend: {
              display: false
            }
          },
          scales: {
            x: {
              min: 0,
              grid: {
                color: borderColor,
                borderColor
              },
              ticks: {
                color: labelColor
              }
            },
            y: {
              grid: {
                borderColor,
                display: false,
                drawBorder: false
              },
              ticks: {
                color: labelColor
              }
            }
          }
        }
      });
    }
    const lineChart = document.getElementById("lineChart");
    if (lineChart) {
      const lineChartVar = new Chart(lineChart, {
        type: "line",
        data: {
          labels: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140],
          datasets: [
            {
              data: [80, 150, 180, 270, 210, 160, 160, 202, 265, 210, 270, 255, 290, 360, 375],
              label: "Europe",
              borderColor: config.colors.danger,
              tension: 0.5,
              pointStyle: "circle",
              backgroundColor: config.colors.danger,
              fill: false,
              pointRadius: 1,
              pointHoverRadius: 5,
              pointHoverBorderWidth: 5,
              pointBorderColor: "transparent",
              pointHoverBorderColor: cardColor,
              pointHoverBackgroundColor: config.colors.danger
            },
            {
              data: [80, 125, 105, 130, 215, 195, 140, 160, 230, 300, 220, 170, 210, 200, 280],
              label: "Asia",
              borderColor: config.colors.primary,
              tension: 0.5,
              pointStyle: "circle",
              backgroundColor: config.colors.primary,
              fill: false,
              pointRadius: 1,
              pointHoverRadius: 5,
              pointHoverBorderWidth: 5,
              pointBorderColor: "transparent",
              pointHoverBorderColor: cardColor,
              pointHoverBackgroundColor: config.colors.primary
            },
            {
              data: [80, 99, 82, 90, 115, 115, 74, 75, 130, 155, 125, 90, 140, 130, 180],
              label: "Africa",
              borderColor: yellowColor,
              tension: 0.5,
              pointStyle: "circle",
              backgroundColor: yellowColor,
              fill: false,
              pointRadius: 1,
              pointHoverRadius: 5,
              pointHoverBorderWidth: 5,
              pointBorderColor: "transparent",
              pointHoverBorderColor: cardColor,
              pointHoverBackgroundColor: yellowColor
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            x: {
              grid: {
                color: borderColor,
                drawBorder: false,
                borderColor
              },
              ticks: {
                color: labelColor
              }
            },
            y: {
              scaleLabel: {
                display: true
              },
              min: 0,
              max: 400,
              ticks: {
                color: labelColor,
                stepSize: 100
              },
              grid: {
                color: borderColor,
                drawBorder: false,
                borderColor
              }
            }
          },
          plugins: {
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            },
            legend: {
              position: "top",
              align: "start",
              rtl: isRtl,
              labels: {
                usePointStyle: true,
                padding: 35,
                boxWidth: 6,
                boxHeight: 6,
                color: legendColor
              }
            }
          }
        }
      });
    }
    const radarChart = document.getElementById("radarChart");
    if (radarChart) {
      const gradientBlue = radarChart.getContext("2d").createLinearGradient(0, 0, 0, 150);
      gradientBlue.addColorStop(0, "rgba(85, 85, 255, 0.9)");
      gradientBlue.addColorStop(1, "rgba(151, 135, 255, 0.8)");
      const gradientRed = radarChart.getContext("2d").createLinearGradient(0, 0, 0, 150);
      gradientRed.addColorStop(0, "rgba(255, 85, 184, 0.9)");
      gradientRed.addColorStop(1, "rgba(255, 135, 135, 0.8)");
      const radarChartVar = new Chart(radarChart, {
        type: "radar",
        data: {
          labels: ["STA", "STR", "AGI", "VIT", "CHA", "INT"],
          datasets: [
            {
              label: "Dont\xE9 Panlin",
              data: [25, 59, 90, 81, 60, 82],
              fill: true,
              pointStyle: "dash",
              backgroundColor: gradientRed,
              borderColor: "transparent",
              pointBorderColor: "transparent"
            },
            {
              label: "Mireska Sunbreeze",
              data: [40, 100, 40, 90, 40, 90],
              fill: true,
              pointStyle: "dash",
              backgroundColor: gradientBlue,
              borderColor: "transparent",
              pointBorderColor: "transparent"
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          animation: {
            duration: 500
          },
          scales: {
            r: {
              ticks: {
                maxTicksLimit: 1,
                display: false,
                color: labelColor
              },
              grid: {
                color: borderColor
              },
              angleLines: { color: borderColor },
              pointLabels: {
                color: labelColor
              }
            }
          },
          plugins: {
            legend: {
              rtl: isRtl,
              position: "top",
              labels: {
                padding: 25,
                color: legendColor
              }
            },
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            }
          }
        }
      });
    }
    const polarChart = document.getElementById("polarChart");
    if (polarChart) {
      const polarChartVar = new Chart(polarChart, {
        type: "polarArea",
        data: {
          labels: ["Africa", "Asia", "Europe", "America", "Antarctica", "Australia"],
          datasets: [
            {
              label: "Population (millions)",
              backgroundColor: [purpleColor, yellowColor, orangeColor, oceanBlueColor, greyColor, cyanColor],
              data: [19, 17.5, 15, 13.5, 11, 9],
              borderWidth: 0
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          animation: {
            duration: 500
          },
          scales: {
            r: {
              ticks: {
                display: false,
                color: labelColor
              },
              grid: {
                display: false
              }
            }
          },
          plugins: {
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            },
            legend: {
              rtl: isRtl,
              position: "right",
              labels: {
                usePointStyle: true,
                padding: 25,
                boxWidth: 8,
                boxHeight: 8,
                color: legendColor
              }
            }
          }
        }
      });
    }
    const bubbleChart = document.getElementById("bubbleChart");
    if (bubbleChart) {
      const bubbleChartVar = new Chart(bubbleChart, {
        type: "bubble",
        data: {
          animation: {
            duration: 1e4
          },
          datasets: [
            {
              label: "Dataset 1",
              backgroundColor: purpleColor,
              borderColor: purpleColor,
              data: [
                {
                  x: 20,
                  y: 74,
                  r: 10
                },
                {
                  x: 10,
                  y: 110,
                  r: 5
                },
                {
                  x: 30,
                  y: 165,
                  r: 7
                },
                {
                  x: 40,
                  y: 200,
                  r: 20
                },
                {
                  x: 90,
                  y: 185,
                  r: 7
                },
                {
                  x: 50,
                  y: 240,
                  r: 7
                },
                {
                  x: 60,
                  y: 275,
                  r: 10
                },
                {
                  x: 70,
                  y: 305,
                  r: 5
                },
                {
                  x: 80,
                  y: 325,
                  r: 4
                },
                {
                  x: 100,
                  y: 310,
                  r: 5
                },
                {
                  x: 110,
                  y: 240,
                  r: 5
                },
                {
                  x: 120,
                  y: 270,
                  r: 7
                },
                {
                  x: 130,
                  y: 300,
                  r: 6
                }
              ]
            },
            {
              label: "Dataset 2",
              backgroundColor: yellowColor,
              borderColor: yellowColor,
              data: [
                {
                  x: 30,
                  y: 72,
                  r: 5
                },
                {
                  x: 40,
                  y: 110,
                  r: 7
                },
                {
                  x: 20,
                  y: 135,
                  r: 6
                },
                {
                  x: 10,
                  y: 160,
                  r: 12
                },
                {
                  x: 50,
                  y: 285,
                  r: 5
                },
                {
                  x: 60,
                  y: 235,
                  r: 5
                },
                {
                  x: 70,
                  y: 275,
                  r: 7
                },
                {
                  x: 80,
                  y: 290,
                  r: 4
                },
                {
                  x: 90,
                  y: 250,
                  r: 10
                },
                {
                  x: 100,
                  y: 220,
                  r: 7
                },
                {
                  x: 120,
                  y: 230,
                  r: 4
                },
                {
                  x: 110,
                  y: 320,
                  r: 15
                },
                {
                  x: 130,
                  y: 330,
                  r: 7
                }
              ]
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            x: {
              min: 0,
              max: 140,
              grid: {
                color: borderColor,
                drawBorder: false,
                borderColor
              },
              ticks: {
                stepSize: 10,
                color: labelColor
              }
            },
            y: {
              min: 0,
              max: 400,
              grid: {
                color: borderColor,
                drawBorder: false,
                borderColor
              },
              ticks: {
                stepSize: 100,
                color: labelColor
              }
            }
          },
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            }
          }
        }
      });
    }
    const lineAreaChart = document.getElementById("lineAreaChart");
    if (lineAreaChart) {
      const lineAreaChartVar = new Chart(lineAreaChart, {
        type: "line",
        data: {
          labels: [
            "7/12",
            "8/12",
            "9/12",
            "10/12",
            "11/12",
            "12/12",
            "13/12",
            "14/12",
            "15/12",
            "16/12",
            "17/12",
            "18/12",
            "19/12",
            "20/12",
            ""
          ],
          datasets: [
            {
              label: "Africa",
              data: [40, 55, 45, 75, 65, 55, 70, 60, 100, 98, 90, 120, 125, 140, 155],
              tension: 0,
              fill: true,
              backgroundColor: blueColor,
              pointStyle: "circle",
              borderColor: "transparent",
              pointRadius: 0.5,
              pointHoverRadius: 5,
              pointHoverBorderWidth: 5,
              pointBorderColor: "transparent",
              pointHoverBackgroundColor: blueColor,
              pointHoverBorderColor: cardColor
            },
            {
              label: "Asia",
              data: [70, 85, 75, 150, 100, 140, 110, 105, 160, 150, 125, 190, 200, 240, 275],
              tension: 0,
              fill: true,
              backgroundColor: blueLightColor,
              pointStyle: "circle",
              borderColor: "transparent",
              pointRadius: 0.5,
              pointHoverRadius: 5,
              pointHoverBorderWidth: 5,
              pointBorderColor: "transparent",
              pointHoverBackgroundColor: blueLightColor,
              pointHoverBorderColor: cardColor
            },
            {
              label: "Europe",
              data: [240, 195, 160, 215, 185, 215, 185, 200, 250, 210, 195, 250, 235, 300, 315],
              tension: 0,
              fill: true,
              backgroundColor: greyLightColor,
              pointStyle: "circle",
              borderColor: "transparent",
              pointRadius: 0.5,
              pointHoverRadius: 5,
              pointHoverBorderWidth: 5,
              pointBorderColor: "transparent",
              pointHoverBackgroundColor: greyLightColor,
              pointHoverBorderColor: cardColor
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: "top",
              rtl: isRtl,
              align: "start",
              labels: {
                usePointStyle: true,
                padding: 35,
                boxWidth: 6,
                boxHeight: 6,
                color: legendColor
              }
            },
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            }
          },
          scales: {
            x: {
              grid: {
                color: "transparent",
                borderColor
              },
              ticks: {
                color: labelColor
              }
            },
            y: {
              min: 0,
              max: 400,
              grid: {
                color: "transparent",
                borderColor
              },
              ticks: {
                stepSize: 100,
                color: labelColor
              }
            }
          }
        }
      });
    }
    const doughnutChart = document.getElementById("doughnutChart");
    if (doughnutChart) {
      const doughnutChartVar = new Chart(doughnutChart, {
        type: "doughnut",
        data: {
          labels: ["Tablet", "Mobile", "Desktop"],
          datasets: [
            {
              data: [10, 10, 80],
              backgroundColor: [cyanColor, orangeLightColor, config.colors.primary],
              borderWidth: 0,
              pointStyle: "rectRounded"
            }
          ]
        },
        options: {
          responsive: true,
          animation: {
            duration: 500
          },
          cutout: "68%",
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  const label = context.labels || "", value = context.parsed;
                  const output = " " + label + " : " + value + " %";
                  return output;
                }
              },
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            }
          }
        }
      });
    }
    const scatterChart = document.getElementById("scatterChart");
    if (scatterChart) {
      const scatterChartVar = new Chart(scatterChart, {
        type: "scatter",
        data: {
          datasets: [
            {
              label: "iPhone",
              data: [
                {
                  x: 72,
                  y: 225
                },
                {
                  x: 81,
                  y: 270
                },
                {
                  x: 90,
                  y: 230
                },
                {
                  x: 103,
                  y: 305
                },
                {
                  x: 103,
                  y: 245
                },
                {
                  x: 108,
                  y: 275
                },
                {
                  x: 110,
                  y: 290
                },
                {
                  x: 111,
                  y: 315
                },
                {
                  x: 109,
                  y: 350
                },
                {
                  x: 116,
                  y: 340
                },
                {
                  x: 113,
                  y: 260
                },
                {
                  x: 117,
                  y: 275
                },
                {
                  x: 117,
                  y: 295
                },
                {
                  x: 126,
                  y: 280
                },
                {
                  x: 127,
                  y: 340
                },
                {
                  x: 133,
                  y: 330
                }
              ],
              backgroundColor: config.colors.primary,
              borderColor: "transparent",
              pointBorderWidth: 2,
              pointHoverBorderWidth: 2,
              pointRadius: 5
            },
            {
              label: "Samsung Note",
              data: [
                {
                  x: 13,
                  y: 95
                },
                {
                  x: 22,
                  y: 105
                },
                {
                  x: 17,
                  y: 115
                },
                {
                  x: 19,
                  y: 130
                },
                {
                  x: 21,
                  y: 125
                },
                {
                  x: 35,
                  y: 125
                },
                {
                  x: 13,
                  y: 155
                },
                {
                  x: 21,
                  y: 165
                },
                {
                  x: 25,
                  y: 155
                },
                {
                  x: 18,
                  y: 190
                },
                {
                  x: 26,
                  y: 180
                },
                {
                  x: 43,
                  y: 180
                },
                {
                  x: 53,
                  y: 202
                },
                {
                  x: 61,
                  y: 165
                },
                {
                  x: 67,
                  y: 225
                }
              ],
              backgroundColor: yellowColor,
              borderColor: "transparent",
              pointRadius: 5
            },
            {
              label: "OnePlus",
              data: [
                {
                  x: 70,
                  y: 195
                },
                {
                  x: 72,
                  y: 270
                },
                {
                  x: 98,
                  y: 255
                },
                {
                  x: 100,
                  y: 215
                },
                {
                  x: 87,
                  y: 240
                },
                {
                  x: 94,
                  y: 280
                },
                {
                  x: 99,
                  y: 300
                },
                {
                  x: 102,
                  y: 290
                },
                {
                  x: 110,
                  y: 275
                },
                {
                  x: 111,
                  y: 250
                },
                {
                  x: 94,
                  y: 280
                },
                {
                  x: 92,
                  y: 340
                },
                {
                  x: 100,
                  y: 335
                },
                {
                  x: 108,
                  y: 330
                }
              ],
              backgroundColor: cyanColor,
              borderColor: "transparent",
              pointBorderWidth: 2,
              pointHoverBorderWidth: 2,
              pointRadius: 5
            }
          ]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          animation: {
            duration: 800
          },
          plugins: {
            legend: {
              position: "top",
              rtl: isRtl,
              align: "start",
              labels: {
                usePointStyle: true,
                padding: 25,
                boxWidth: 6,
                boxHeight: 6,
                color: legendColor
              }
            },
            tooltip: {
              rtl: isRtl,
              backgroundColor: cardColor,
              titleColor: headingColor,
              bodyColor: legendColor,
              borderWidth: 1,
              borderColor
            }
          },
          scales: {
            x: {
              min: 0,
              max: 140,
              grid: {
                color: borderColor,
                drawTicks: false,
                drawBorder: false,
                borderColor
              },
              ticks: {
                stepSize: 10,
                color: labelColor
              }
            },
            y: {
              min: 0,
              max: 400,
              grid: {
                color: borderColor,
                drawTicks: false,
                drawBorder: false,
                borderColor
              },
              ticks: {
                stepSize: 100,
                color: labelColor
              }
            }
          }
        }
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/config.js
  var assetsPath2 = document.documentElement.getAttribute("data-assets-path");
  var templateName2 = document.documentElement.getAttribute("data-template");
  var rtlSupport = true;
  if (typeof TemplateCustomizer !== "undefined") {
    window.templateCustomizer = new TemplateCustomizer({
      cssPath: assetsPath2 + "vendor/css" + (rtlSupport ? "/rtl" : "") + "/",
      themesPath: assetsPath2 + "vendor/css" + (rtlSupport ? "/rtl" : "") + "/",
      displayCustomizer: true,
      controls: ["rtl", "style", "headerType", "contentLayout", "layoutCollapsed", "layoutNavbarOptions", "themes"]
    });
  }

  // ../easy_ui/easy_ui/public/js/frappe/js/dashboards-analytics.js
  (function() {
    let cardColor, headingColor, labelColor, shadeColor, grayColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      labelColor = config.colors_dark.textMuted;
      headingColor = config.colors_dark.headingColor;
      shadeColor = "dark";
      grayColor = "#5E6692";
    } else {
      cardColor = config.colors.cardColor;
      labelColor = config.colors.textMuted;
      headingColor = config.colors.headingColor;
      shadeColor = "";
      grayColor = "#817D8D";
    }
    const swiperWithPagination = document.querySelector("#swiper-with-pagination-cards");
    if (swiperWithPagination) {
      new Swiper(swiperWithPagination, {
        loop: true,
        autoplay: {
          delay: 2500,
          disableOnInteraction: false
        },
        pagination: {
          clickable: true,
          el: ".swiper-pagination"
        }
      });
    }
    const revenueGeneratedEl = document.querySelector("#revenueGenerated"), revenueGeneratedConfig = {
      chart: {
        height: 130,
        type: "area",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.success],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.1
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [300, 350, 330, 380, 340, 400, 380]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof revenueGeneratedEl !== void 0 && revenueGeneratedEl !== null) {
      const revenueGenerated = new ApexCharts(revenueGeneratedEl, revenueGeneratedConfig);
      revenueGenerated.render();
    }
    const weeklyEarningReportsEl = document.querySelector("#weeklyEarningReports"), weeklyEarningReportsConfig = {
      chart: {
        height: 202,
        parentHeightOffset: 0,
        type: "bar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "60%",
          columnWidth: "38%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 4,
          distributed: true
        }
      },
      grid: {
        show: false,
        padding: {
          top: -30,
          bottom: 0,
          left: -10,
          right: -10
        }
      },
      colors: [
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors_label.primary,
        config.colors.primary,
        config.colors_label.primary,
        config.colors_label.primary
      ],
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [40, 65, 50, 45, 90, 55, 70]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans"
          }
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      tooltip: {
        enabled: false
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 199
            }
          }
        }
      ]
    };
    if (typeof weeklyEarningReportsEl !== void 0 && weeklyEarningReportsEl !== null) {
      const weeklyEarningReports = new ApexCharts(weeklyEarningReportsEl, weeklyEarningReportsConfig);
      weeklyEarningReports.render();
    }
    const supportTrackerEl = document.querySelector("#supportTracker"), supportTrackerOptions = {
      series: [85],
      labels: ["Completed Task"],
      chart: {
        height: 360,
        type: "radialBar"
      },
      plotOptions: {
        radialBar: {
          offsetY: 10,
          startAngle: -140,
          endAngle: 130,
          hollow: {
            size: "65%"
          },
          track: {
            background: cardColor,
            strokeWidth: "100%"
          },
          dataLabels: {
            name: {
              offsetY: -20,
              color: labelColor,
              fontSize: "13px",
              fontWeight: "400",
              fontFamily: "Public Sans"
            },
            value: {
              offsetY: 10,
              color: headingColor,
              fontSize: "38px",
              fontWeight: "500",
              fontFamily: "Public Sans"
            }
          }
        }
      },
      colors: [config.colors.primary],
      fill: {
        type: "gradient",
        gradient: {
          shade: "dark",
          shadeIntensity: 0.5,
          gradientToColors: [config.colors.primary],
          inverseColors: true,
          opacityFrom: 1,
          opacityTo: 0.6,
          stops: [30, 70, 100]
        }
      },
      stroke: {
        dashArray: 10
      },
      grid: {
        padding: {
          top: -20,
          bottom: 5
        }
      },
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      },
      responsive: [
        {
          breakpoint: 1025,
          options: {
            chart: {
              height: 330
            }
          }
        },
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 280
            }
          }
        }
      ]
    };
    if (typeof supportTrackerEl !== void 0 && supportTrackerEl !== null) {
      const supportTracker = new ApexCharts(supportTrackerEl, supportTrackerOptions);
      supportTracker.render();
    }
    const totalEarningChartEl = document.querySelector("#totalEarningChart"), totalEarningChartOptions = {
      series: [
        {
          name: "Earning",
          data: [15, 10, 20, 8, 12, 18, 12, 5]
        },
        {
          name: "Expense",
          data: [-7, -10, -7, -12, -6, -9, -5, -8]
        }
      ],
      chart: {
        height: 230,
        parentHeightOffset: 0,
        stacked: true,
        type: "bar",
        toolbar: { show: false }
      },
      tooltip: {
        enabled: false
      },
      legend: {
        show: false
      },
      plotOptions: {
        bar: {
          horizontal: false,
          columnWidth: "18%",
          borderRadius: 5,
          startingShape: "rounded",
          endingShape: "rounded"
        }
      },
      colors: [config.colors.primary, grayColor],
      dataLabels: {
        enabled: false
      },
      grid: {
        show: false,
        padding: {
          top: -40,
          bottom: -20,
          left: -10,
          right: -2
        }
      },
      xaxis: {
        labels: {
          show: false
        },
        axisTicks: {
          show: false
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      responsive: [
        {
          breakpoint: 1468,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "22%"
              }
            }
          }
        },
        {
          breakpoint: 1197,
          options: {
            chart: {
              height: 228
            },
            plotOptions: {
              bar: {
                borderRadius: 8,
                columnWidth: "26%"
              }
            }
          }
        },
        {
          breakpoint: 783,
          options: {
            chart: {
              height: 232
            },
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "28%"
              }
            }
          }
        },
        {
          breakpoint: 589,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "16%"
              }
            }
          }
        },
        {
          breakpoint: 520,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "18%"
              }
            }
          }
        },
        {
          breakpoint: 426,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 5,
                columnWidth: "20%"
              }
            }
          }
        },
        {
          breakpoint: 381,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "24%"
              }
            }
          }
        }
      ],
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      }
    };
    if (typeof totalEarningChartEl !== void 0 && totalEarningChartEl !== null) {
      const totalEarningChart = new ApexCharts(totalEarningChartEl, totalEarningChartOptions);
      totalEarningChart.render();
    }
    var dt_projects_table = $(".datatables-projects");
    if (dt_projects_table.length) {
      var dt_project = dt_projects_table.DataTable({
        ajax: assetsPath + "json/user-profile.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "project_name" },
          { data: "project_leader" },
          { data: "" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $user_img = full["project_img"], $name = full["project_name"], $date = full["date"];
              if ($user_img) {
                var $output = '<img src="' + assetsPath + "img/icons/brands/" + $user_img + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "primary", "secondary"];
                var $state = states[stateNum], $name = full["project_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-left align-items-center"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><span class="text-truncate fw-medium">' + $name + '</span><small class="text-truncate text-muted">' + $date + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 4,
            orderable: false,
            searchable: false,
            render: function(data, type, full, meta) {
              var $team = full["team"], $output;
              $output = '<div class="d-flex align-items-center avatar-group">';
              for (var i = 0; i < $team.length; i++) {
                $output += '<div class="avatar avatar-sm"><img src="' + assetsPath + "img/avatars/" + $team[i] + '" alt="Avatar" class="rounded-circle pull-up"></div>';
              }
              $output += "</div>";
              return $output;
            }
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              return '<div class="d-flex align-items-center"><div class="progress w-100 me-3" style="height: 6px;"><div class="progress-bar" style="width: ' + $status_number + '" aria-valuenow="' + $status_number + '" aria-valuemin="0" aria-valuemax="100"></div></div><span>' + $status_number + "</span></div>";
            }
          },
          {
            targets: -1,
            searchable: false,
            title: "Actions",
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div>';
            }
          }
        ],
        order: [[2, "desc"]],
        dom: '<"card-header pb-0 pt-sm-0"<"head-label text-center"><"d-flex justify-content-center justify-content-md-end"f>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 5,
        lengthMenu: [5, 10, 25, 50, 75, 100],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return 'Details of "' + data["project_name"] + '" Project';
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $("div.head-label").html('<h5 class="card-title mb-0">Projects</h5>');
    }
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/dashboards-crm.js
  (function() {
    let cardColor, labelColor, shadeColor, legendColor, borderColor;
    if (isDarkStyle) {
      cardColor = config.colors_dark.cardColor;
      labelColor = config.colors_dark.textMuted;
      legendColor = config.colors_dark.bodyColor;
      borderColor = config.colors_dark.borderColor;
      shadeColor = "dark";
    } else {
      cardColor = config.colors.cardColor;
      labelColor = config.colors.textMuted;
      legendColor = config.colors.bodyColor;
      borderColor = config.colors.borderColor;
      shadeColor = "";
    }
    const salesLastYearEl = document.querySelector("#salesLastYear"), salesLastYearConfig = {
      chart: {
        height: 78,
        type: "area",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        },
        sparkline: {
          enabled: true
        }
      },
      markers: {
        colors: "transparent",
        strokeColors: "transparent"
      },
      grid: {
        show: false
      },
      colors: [config.colors.success],
      fill: {
        type: "gradient",
        gradient: {
          shade: shadeColor,
          shadeIntensity: 0.8,
          opacityFrom: 0.6,
          opacityTo: 0.25
        }
      },
      dataLabels: {
        enabled: false
      },
      stroke: {
        width: 2,
        curve: "smooth"
      },
      series: [
        {
          data: [200, 55, 400, 250]
        }
      ],
      xaxis: {
        show: true,
        lines: {
          show: false
        },
        labels: {
          show: false
        },
        stroke: {
          width: 0
        },
        axisBorder: {
          show: false
        }
      },
      yaxis: {
        stroke: {
          width: 0
        },
        show: false
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof salesLastYearEl !== void 0 && salesLastYearEl !== null) {
      const salesLastYear = new ApexCharts(salesLastYearEl, salesLastYearConfig);
      salesLastYear.render();
    }
    const sessionsLastMonthEl = document.querySelector("#sessionsLastMonth"), sessionsLastMonthConfig = {
      chart: {
        type: "bar",
        height: 78,
        parentHeightOffset: 0,
        stacked: true,
        toolbar: {
          show: false
        }
      },
      series: [
        {
          name: "PRODUCT A",
          data: [4, 3, 6, 4, 3]
        },
        {
          name: "PRODUCT B",
          data: [-3, -4, -3, -2, -3]
        }
      ],
      plotOptions: {
        bar: {
          horizontal: false,
          columnWidth: "30%",
          barHeight: "100%",
          borderRadius: 5,
          startingShape: "rounded",
          endingShape: "rounded"
        }
      },
      dataLabels: {
        enabled: false
      },
      tooltip: {
        enabled: false
      },
      stroke: {
        curve: "smooth",
        width: 1,
        lineCap: "round",
        colors: [cardColor]
      },
      legend: {
        show: false
      },
      colors: [config.colors.primary, config.colors.success],
      grid: {
        show: false,
        padding: {
          top: -41,
          right: -10,
          left: -8,
          bottom: -22
        }
      },
      xaxis: {
        categories: ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
        labels: {
          show: false
        },
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        }
      },
      yaxis: {
        show: false
      },
      responsive: [
        {
          breakpoint: 1441,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 1300,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 1200,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "20%"
              }
            }
          }
        },
        {
          breakpoint: 1025,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6,
                columnWidth: "20%"
              }
            },
            chart: {
              height: 80
            }
          }
        },
        {
          breakpoint: 900,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6
              }
            }
          }
        },
        {
          breakpoint: 782,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "30%"
              }
            }
          }
        },
        {
          breakpoint: 426,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 5,
                columnWidth: "35%"
              }
            },
            chart: {
              height: 78
            }
          }
        },
        {
          breakpoint: 376,
          options: {
            plotOptions: {
              bar: {
                borderRadius: 6
              }
            }
          }
        }
      ],
      states: {
        hover: {
          filter: {
            type: "none"
          }
        },
        active: {
          filter: {
            type: "none"
          }
        }
      }
    };
    if (typeof sessionsLastMonthEl !== void 0 && sessionsLastMonthEl !== null) {
      const sessionsLastMonth = new ApexCharts(sessionsLastMonthEl, sessionsLastMonthConfig);
      sessionsLastMonth.render();
    }
    const revenueGrowthEl = document.querySelector("#revenueGrowth"), revenueGrowthConfig = {
      chart: {
        height: 170,
        type: "bar",
        parentHeightOffset: 0,
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        bar: {
          barHeight: "80%",
          columnWidth: "30%",
          startingShape: "rounded",
          endingShape: "rounded",
          borderRadius: 6,
          distributed: true
        }
      },
      tooltip: {
        enabled: false
      },
      grid: {
        show: false,
        padding: {
          top: -20,
          bottom: -12,
          left: -10,
          right: 0
        }
      },
      colors: [
        config.colors_label.success,
        config.colors_label.success,
        config.colors_label.success,
        config.colors_label.success,
        config.colors.success,
        config.colors_label.success,
        config.colors_label.success
      ],
      dataLabels: {
        enabled: false
      },
      series: [
        {
          data: [25, 40, 55, 70, 85, 70, 55]
        }
      ],
      legend: {
        show: false
      },
      xaxis: {
        categories: ["M", "T", "W", "T", "F", "S", "S"],
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        labels: {
          style: {
            colors: labelColor,
            fontSize: "13px",
            fontFamily: "Public Sans"
          }
        }
      },
      yaxis: {
        labels: {
          show: false
        }
      },
      states: {
        hover: {
          filter: {
            type: "none"
          }
        }
      },
      responsive: [
        {
          breakpoint: 1471,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%"
              }
            }
          }
        },
        {
          breakpoint: 1350,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "57%"
              }
            }
          }
        },
        {
          breakpoint: 1032,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "60%"
              }
            }
          }
        },
        {
          breakpoint: 992,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%",
                borderRadius: 8
              }
            }
          }
        },
        {
          breakpoint: 855,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "50%",
                borderRadius: 6
              }
            }
          }
        },
        {
          breakpoint: 440,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "40%"
              }
            }
          }
        },
        {
          breakpoint: 381,
          options: {
            plotOptions: {
              bar: {
                columnWidth: "45%"
              }
            }
          }
        }
      ]
    };
    if (typeof revenueGrowthEl !== void 0 && revenueGrowthEl !== null) {
      const revenueGrowth = new ApexCharts(revenueGrowthEl, revenueGrowthConfig);
      revenueGrowth.render();
    }
    function EarningReportsBarChart(arrayData, highlightData) {
      const basicColor = config.colors_label.primary, highlightColor = config.colors.primary;
      var colorArr = [];
      for (let i = 0; i < arrayData.length; i++) {
        if (i === highlightData) {
          colorArr.push(highlightColor);
        } else {
          colorArr.push(basicColor);
        }
      }
      const earningReportBarChartOpt = {
        chart: {
          height: 258,
          parentHeightOffset: 0,
          type: "bar",
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          bar: {
            columnWidth: "32%",
            startingShape: "rounded",
            borderRadius: 7,
            distributed: true,
            dataLabels: {
              position: "top"
            }
          }
        },
        grid: {
          show: false,
          padding: {
            top: 0,
            bottom: 0,
            left: -10,
            right: -10
          }
        },
        colors: colorArr,
        dataLabels: {
          enabled: true,
          formatter: function(val) {
            return val + "k";
          },
          offsetY: -20,
          style: {
            fontSize: "15px",
            colors: [legendColor],
            fontWeight: "500",
            fontFamily: "Public Sans"
          }
        },
        series: [
          {
            data: arrayData
          }
        ],
        legend: {
          show: false
        },
        tooltip: {
          enabled: false
        },
        xaxis: {
          categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep"],
          axisBorder: {
            show: true,
            color: borderColor
          },
          axisTicks: {
            show: false
          },
          labels: {
            style: {
              colors: labelColor,
              fontSize: "13px",
              fontFamily: "Public Sans"
            }
          }
        },
        yaxis: {
          labels: {
            offsetX: -15,
            formatter: function(val) {
              return parseInt(val / 1) + "k";
            },
            style: {
              fontSize: "13px",
              colors: labelColor,
              fontFamily: "Public Sans"
            },
            min: 0,
            max: 6e4,
            tickAmount: 6
          }
        },
        responsive: [
          {
            breakpoint: 1441,
            options: {
              plotOptions: {
                bar: {
                  columnWidth: "41%"
                }
              }
            }
          },
          {
            breakpoint: 590,
            options: {
              plotOptions: {
                bar: {
                  columnWidth: "61%",
                  borderRadius: 5
                }
              },
              yaxis: {
                labels: {
                  show: false
                }
              },
              grid: {
                padding: {
                  right: 0,
                  left: -20
                }
              },
              dataLabels: {
                style: {
                  fontSize: "12px",
                  fontWeight: "400"
                }
              }
            }
          }
        ]
      };
      return earningReportBarChartOpt;
    }
    var chartJson = "earning-reports-charts.json";
    var earningReportsChart = $.ajax({
      url: assetsPath + "json/" + chartJson,
      dataType: "json",
      async: false
    }).responseJSON;
    const earningReportsTabsOrdersEl = document.querySelector("#earningReportsTabsOrders"), earningReportsTabsOrdersConfig = EarningReportsBarChart(
      earningReportsChart["data"][0]["chart_data"],
      earningReportsChart["data"][0]["active_option"]
    );
    if (typeof earningReportsTabsOrdersEl !== void 0 && earningReportsTabsOrdersEl !== null) {
      const earningReportsTabsOrders = new ApexCharts(earningReportsTabsOrdersEl, earningReportsTabsOrdersConfig);
      earningReportsTabsOrders.render();
    }
    const earningReportsTabsSalesEl = document.querySelector("#earningReportsTabsSales"), earningReportsTabsSalesConfig = EarningReportsBarChart(
      earningReportsChart["data"][1]["chart_data"],
      earningReportsChart["data"][1]["active_option"]
    );
    if (typeof earningReportsTabsSalesEl !== void 0 && earningReportsTabsSalesEl !== null) {
      const earningReportsTabsSales = new ApexCharts(earningReportsTabsSalesEl, earningReportsTabsSalesConfig);
      earningReportsTabsSales.render();
    }
    const earningReportsTabsProfitEl = document.querySelector("#earningReportsTabsProfit"), earningReportsTabsProfitConfig = EarningReportsBarChart(
      earningReportsChart["data"][2]["chart_data"],
      earningReportsChart["data"][2]["active_option"]
    );
    if (typeof earningReportsTabsProfitEl !== void 0 && earningReportsTabsProfitEl !== null) {
      const earningReportsTabsProfit = new ApexCharts(earningReportsTabsProfitEl, earningReportsTabsProfitConfig);
      earningReportsTabsProfit.render();
    }
    const earningReportsTabsIncomeEl = document.querySelector("#earningReportsTabsIncome"), earningReportsTabsIncomeConfig = EarningReportsBarChart(
      earningReportsChart["data"][3]["chart_data"],
      earningReportsChart["data"][3]["active_option"]
    );
    if (typeof earningReportsTabsIncomeEl !== void 0 && earningReportsTabsIncomeEl !== null) {
      const earningReportsTabsIncome = new ApexCharts(earningReportsTabsIncomeEl, earningReportsTabsIncomeConfig);
      earningReportsTabsIncome.render();
    }
    const salesLastMonthEl = document.querySelector("#salesLastMonth"), salesLastMonthConfig = {
      series: [
        {
          name: "Sales",
          data: [32, 27, 27, 30, 25, 25]
        },
        {
          name: "Visits",
          data: [25, 35, 20, 20, 20, 20]
        }
      ],
      chart: {
        height: 340,
        type: "radar",
        toolbar: {
          show: false
        }
      },
      plotOptions: {
        radar: {
          polygons: {
            strokeColors: borderColor,
            connectorColors: borderColor
          }
        }
      },
      stroke: {
        show: false,
        width: 0
      },
      legend: {
        show: true,
        fontSize: "13px",
        position: "bottom",
        labels: {
          colors: legendColor,
          useSeriesColors: false
        },
        markers: {
          height: 10,
          width: 10,
          offsetX: -3
        },
        itemMargin: {
          horizontal: 10
        },
        onItemHover: {
          highlightDataSeries: false
        }
      },
      colors: [config.colors.primary, config.colors.info],
      fill: {
        opacity: [1, 0.85]
      },
      markers: {
        size: 0
      },
      grid: {
        show: false,
        padding: {
          top: 0,
          bottom: -5
        }
      },
      xaxis: {
        categories: ["Jan", "Feb", "Mar", "Apr", "May", "Jun"],
        labels: {
          show: true,
          style: {
            colors: [labelColor, labelColor, labelColor, labelColor, labelColor, labelColor],
            fontSize: "13px",
            fontFamily: "Public Sans"
          }
        }
      },
      yaxis: {
        show: false,
        min: 0,
        max: 40,
        tickAmount: 4
      },
      responsive: [
        {
          breakpoint: 769,
          options: {
            chart: {
              height: 400
            }
          }
        }
      ]
    };
    if (typeof salesLastMonthEl !== void 0 && salesLastMonthEl !== null) {
      const salesLastMonth = new ApexCharts(salesLastMonthEl, salesLastMonthConfig);
      salesLastMonth.render();
    }
    function radialBarChart(color, value) {
      const radialBarChartOpt = {
        chart: {
          height: 53,
          width: 43,
          type: "radialBar"
        },
        plotOptions: {
          radialBar: {
            hollow: {
              size: "33%"
            },
            dataLabels: {
              show: false
            },
            track: {
              background: config.colors_label.secondary
            }
          }
        },
        stroke: {
          lineCap: "round"
        },
        colors: [color],
        grid: {
          padding: {
            top: -15,
            bottom: -15,
            left: -5,
            right: -15
          }
        },
        series: [value],
        labels: ["Progress"]
      };
      return radialBarChartOpt;
    }
    const chartProgressList = document.querySelectorAll(".chart-progress");
    if (chartProgressList) {
      chartProgressList.forEach(function(chartProgressEl) {
        const color = config.colors[chartProgressEl.dataset.color], series = chartProgressEl.dataset.series;
        const optionsBundle = radialBarChart(color, series);
        const chart = new ApexCharts(chartProgressEl, optionsBundle);
        chart.render();
      });
    }
    const projectStatusEl = document.querySelector("#projectStatusChart"), projectStatusConfig = {
      chart: {
        height: 240,
        type: "area",
        toolbar: false
      },
      markers: {
        strokeColor: "transparent"
      },
      series: [
        {
          data: [2e3, 2e3, 4e3, 4e3, 3050, 3050, 2e3, 2e3, 3050, 3050, 4700, 4700, 2750, 2750, 5700, 5700]
        }
      ],
      dataLabels: {
        enabled: false
      },
      grid: {
        show: false,
        padding: {
          left: -10,
          right: -5
        }
      },
      stroke: {
        width: 3,
        curve: "straight"
      },
      colors: [config.colors.warning],
      fill: {
        type: "gradient",
        gradient: {
          opacityFrom: 0.6,
          opacityTo: 0.15,
          stops: [0, 95, 100]
        }
      },
      xaxis: {
        labels: {
          show: false
        },
        axisBorder: {
          show: false
        },
        axisTicks: {
          show: false
        },
        lines: {
          show: false
        }
      },
      yaxis: {
        labels: {
          show: false
        },
        min: 1e3,
        max: 6e3,
        tickAmount: 5
      },
      tooltip: {
        enabled: false
      }
    };
    if (typeof projectStatusEl !== void 0 && projectStatusEl !== null) {
      const projectStatus = new ApexCharts(projectStatusEl, projectStatusConfig);
      projectStatus.render();
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-blockui.js
  $(function() {
    var section = $("#section-block"), sectionBlock = $(".btn-section-block"), sectionBlockOverlay = $(".btn-section-block-overlay"), sectionBlockSpinner = $(".btn-section-block-spinner"), sectionBlockCustom = $(".btn-section-block-custom"), sectionBlockMultiple = $(".btn-section-block-multiple"), cardSection = $("#card-block"), cardBlock = $(".btn-card-block"), cardBlockOverlay = $(".btn-card-block-overlay"), cardBlockSpinner = $(".btn-card-block-spinner"), cardBlockCustom = $(".btn-card-block-custom"), cardBlockMultiple = $(".btn-card-block-multiple"), pageBlock = $(".btn-page-block"), pageBlockOverlay = $(".btn-page-block-overlay"), pageBlockSpinner = $(".btn-page-block-spinner"), pageBlockCustom = $(".btn-page-block-custom"), pageBlockMultiple = $(".btn-page-block-multiple"), formSection = $(".form-block"), formBlock = $(".btn-form-block"), formBlockOverlay = $(".btn-form-block-overlay"), formBlockSpinner = $(".btn-form-block-spinner"), formBlockCustom = $(".btn-form-block-custom"), formBlockMultiple = $(".btn-form-block-multiple");
    if (sectionBlock.length && section.length) {
      sectionBlock.on("click", function() {
        $("#section-block").block({
          message: '<div class="spinner-border text-white" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (sectionBlockOverlay.length && section.length) {
      sectionBlockOverlay.on("click", function() {
        $("#section-block").block({
          message: '<div class="spinner-border text-primary" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            backgroundColor: "#fff",
            opacity: 0.8
          }
        });
      });
    }
    if (sectionBlockSpinner.length && section.length) {
      sectionBlockSpinner.on("click", function() {
        $("#section-block").block({
          message: '<div class="sk-wave mx-auto"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (sectionBlockCustom.length && section.length) {
      sectionBlockCustom.on("click", function() {
        $("#section-block").block({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (sectionBlockMultiple.length && section.length) {
      sectionBlockMultiple.on("click", function() {
        $("#section-block").block({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          },
          timeout: 1e3,
          onUnblock: function() {
            $("#section-block").block({
              message: '<p class="mb-0">Almost Done...</p>',
              timeout: 1e3,
              css: {
                backgroundColor: "transparent",
                color: "#fff",
                border: "0"
              },
              overlayCSS: {
                opacity: 0.25
              },
              onUnblock: function() {
                $("#section-block").block({
                  message: '<div class="p-3 bg-success">Success</div>',
                  timeout: 500,
                  css: {
                    backgroundColor: "transparent",
                    color: "#fff",
                    border: "0"
                  },
                  overlayCSS: {
                    opacity: 0.25
                  }
                });
              }
            });
          }
        });
      });
    }
    if (cardBlock.length && cardSection.length) {
      cardBlock.on("click", function() {
        $("#card-block").block({
          message: '<div class="spinner-border text-white" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (cardBlockOverlay.length && cardSection.length) {
      cardBlockOverlay.on("click", function() {
        $("#card-block").block({
          message: '<div class="spinner-border text-primary" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            backgroundColor: "#fff",
            opacity: 0.8
          }
        });
      });
    }
    if (cardBlockSpinner.length && cardSection.length) {
      cardBlockSpinner.on("click", function() {
        $("#card-block").block({
          message: '<div class="sk-wave mx-auto"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (cardBlockCustom.length && cardSection.length) {
      cardBlockCustom.on("click", function() {
        $("#card-block").block({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (cardBlockMultiple.length && cardSection.length) {
      cardBlockMultiple.on("click", function() {
        $("#card-block").block({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          },
          timeout: 1e3,
          onUnblock: function() {
            $("#card-block").block({
              message: '<p class="mb-0">Almost Done...</p>',
              timeout: 1e3,
              css: {
                backgroundColor: "transparent",
                color: "#fff",
                border: "0"
              },
              overlayCSS: {
                opacity: 0.25
              },
              onUnblock: function() {
                $("#card-block").block({
                  message: '<div class="p-3 bg-success">Success</div>',
                  timeout: 500,
                  css: {
                    backgroundColor: "transparent",
                    color: "#fff",
                    border: "0"
                  },
                  overlayCSS: {
                    opacity: 0.25
                  }
                });
              }
            });
          }
        });
      });
    }
    if (pageBlock.length) {
      pageBlock.on("click", function() {
        $.blockUI({
          message: '<div class="spinner-border text-white" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (pageBlockOverlay.length) {
      pageBlockOverlay.on("click", function() {
        $.blockUI({
          message: '<div class="spinner-border text-primary" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            backgroundColor: "#fff",
            opacity: 0.8
          }
        });
      });
    }
    if (pageBlockSpinner.length) {
      pageBlockSpinner.on("click", function() {
        $.blockUI({
          message: '<div class="sk-wave mx-auto"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (pageBlockCustom.length) {
      pageBlockCustom.on("click", function() {
        $.blockUI({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (pageBlockMultiple.length) {
      pageBlockMultiple.on("click", function() {
        $.blockUI({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          },
          timeout: 1e3,
          onUnblock: function() {
            $.blockUI({
              message: '<p class="mb-0">Almost Done...</p>',
              timeout: 1e3,
              css: {
                backgroundColor: "transparent",
                color: "#fff",
                border: "0"
              },
              overlayCSS: {
                opacity: 0.5
              },
              onUnblock: function() {
                $.blockUI({
                  message: '<div class="p-3 bg-success">Success</div>',
                  timeout: 500,
                  css: {
                    backgroundColor: "transparent",
                    color: "#fff",
                    border: "0"
                  },
                  overlayCSS: {
                    opacity: 0.5
                  }
                });
              }
            });
          }
        });
      });
    }
    if (formBlock.length && formSection.length) {
      formBlock.on("click", function() {
        formSection.block({
          message: '<div class="spinner-border text-white" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (formBlockOverlay.length && formSection.length) {
      formBlockOverlay.on("click", function() {
        formSection.block({
          message: '<div class="spinner-border text-primary" role="status"></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            border: "0"
          },
          overlayCSS: {
            backgroundColor: "#fff",
            opacity: 0.8
          }
        });
      });
    }
    if (formBlockSpinner.length && formSection.length) {
      formBlockSpinner.on("click", function() {
        formSection.block({
          message: '<div class="sk-wave mx-auto"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (formBlockCustom.length && formSection.length) {
      formBlockCustom.on("click", function() {
        formSection.block({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          timeout: 1e3,
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          }
        });
      });
    }
    if (formBlockMultiple.length && formSection.length) {
      formBlockMultiple.on("click", function() {
        formSection.block({
          message: '<div class="d-flex justify-content-center"><p class="mb-0">Please wait...</p> <div class="sk-wave m-0"><div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div> <div class="sk-rect sk-wave-rect"></div></div> </div>',
          css: {
            backgroundColor: "transparent",
            color: "#fff",
            border: "0"
          },
          overlayCSS: {
            opacity: 0.5
          },
          timeout: 1e3,
          onUnblock: function() {
            formSection.block({
              message: '<p class="mb-0">Almost Done...</p>',
              timeout: 1e3,
              css: {
                backgroundColor: "transparent",
                border: "0"
              },
              overlayCSS: {
                opacity: 0.25
              },
              onUnblock: function() {
                formSection.block({
                  message: '<div class="p-3 bg-success">Success</div>',
                  timeout: 500,
                  css: {
                    backgroundColor: "transparent",
                    border: "0"
                  },
                  overlayCSS: {
                    opacity: 0.25
                  }
                });
              }
            });
          }
        });
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-drag-and-drop.js
  (function() {
    const cardEl = document.getElementById("sortable-cards"), pendingTasks = document.getElementById("pending-tasks"), completedTasks = document.getElementById("completed-tasks"), cloneSource1 = document.getElementById("clone-source-1"), cloneSource2 = document.getElementById("clone-source-2"), handleList1 = document.getElementById("handle-list-1"), handleList2 = document.getElementById("handle-list-2"), imageList1 = document.getElementById("image-list-1"), imageList2 = document.getElementById("image-list-2");
    if (cardEl) {
      Sortable.create(cardEl);
    }
    if (imageList1) {
      Sortable.create(imageList1, {
        animation: 150,
        group: "imgList"
      });
    }
    if (imageList2) {
      Sortable.create(imageList2, {
        animation: 150,
        group: "imgList"
      });
    }
    if (cloneSource1) {
      Sortable.create(cloneSource1, {
        animation: 150,
        group: {
          name: "cloneList",
          pull: "clone",
          revertClone: true
        }
      });
    }
    if (cloneSource2) {
      Sortable.create(cloneSource2, {
        animation: 150,
        group: {
          name: "cloneList",
          pull: "clone",
          revertClone: true
        }
      });
    }
    if (pendingTasks) {
      Sortable.create(pendingTasks, {
        animation: 150,
        group: "taskList"
      });
    }
    if (completedTasks) {
      Sortable.create(completedTasks, {
        animation: 150,
        group: "taskList"
      });
    }
    if (handleList1) {
      Sortable.create(handleList1, {
        animation: 150,
        group: "handleList",
        handle: ".drag-handle"
      });
    }
    if (handleList2) {
      Sortable.create(handleList2, {
        animation: 150,
        group: "handleList",
        handle: ".drag-handle"
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-media-player.js
  (function() {
    const videoPlayer = new Plyr("#plyr-video-player");
    const audioPlayer = new Plyr("#plyr-audio-player");
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-misc-clipboardjs.js
  (function() {
    const clipboardList = [].slice.call(document.querySelectorAll(".clipboard-btn"));
    if (ClipboardJS) {
      clipboardList.map(function(clipboardEl) {
        const clipboard = new ClipboardJS(clipboardEl);
        clipboard.on("success", function(e) {
          if (e.action == "copy") {
            toastr["success"]("", "Copied to Clipboard!!");
          }
        });
      });
    } else {
      clipboardList.map(function(clipboardEl) {
        clipboardEl.setAttribute("disabled", true);
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-misc-idle-timer.js
  $(function() {
    var timerDoc = $("#document-Status"), btnPause = $("#document-Pause"), btnResume = $("#document-Resume"), btnElapsed = $("#document-Elapsed"), btnDestroy = $("#document-Destroy"), btnInit = $("#document-Init");
    if (timerDoc.length) {
      var docTimeout = 5e3;
      $(document).on("idle.idleTimer", function(event, elem, obj) {
        timerDoc.val(function(i, value) {
          return value + "Idle @ " + moment().format() + " \n";
        }).removeClass("alert-success").addClass("alert-warning");
      });
      $(document).on("active.idleTimer", function(event, elem, obj, e) {
        timerDoc.val(function(i, value) {
          return value + "Active [" + e.type + "] [" + e.target.nodeName + "] @ " + moment().format() + " \n";
        }).addClass("alert-success").removeClass("alert-warning");
      });
      btnPause.on("click", function() {
        $(document).idleTimer("pause");
        timerDoc.val(function(i, value) {
          return value + "Paused @ " + moment().format() + " \n";
        });
        $(this).blur();
        return false;
      });
      btnResume.on("click", function() {
        $(document).idleTimer("resume");
        timerDoc.val(function(i, value) {
          return value + "Resumed @ " + moment().format() + " \n";
        });
        $(this).blur();
        return false;
      });
      btnElapsed.on("click", function() {
        timerDoc.val(function(i, value) {
          return value + "Elapsed (since becoming active): " + $(document).idleTimer("getElapsedTime") + " \n";
        });
        $(this).blur();
        return false;
      });
      btnDestroy.on("click", function() {
        $(document).idleTimer("destroy");
        timerDoc.val(function(i, value) {
          return value + "Destroyed: @ " + moment().format() + " \n";
        }).removeClass("alert-success").removeClass("alert-warning");
        $(this).blur();
        return false;
      });
      btnInit.on("click", function() {
        $(document).idleTimer({
          timeout: docTimeout
        });
        timerDoc.val(function(i, value) {
          return value + "Init: @ " + moment().format() + " \n";
        });
        if ($(document).idleTimer("isIdle")) {
          timerDoc.removeClass("alert-success").addClass("alert-warning");
        } else {
          timerDoc.addClass("alert-success").removeClass("alert-warning");
        }
        $(this).blur();
        return false;
      });
      timerDoc.val("");
      $(document).idleTimer(docTimeout);
      if ($(document).idleTimer("isIdle")) {
        timerDoc.val(function(i, value) {
          return value + "Initial Idle State @ " + moment().format() + " \n";
        }).removeClass("alert-success").addClass("alert-warning");
      } else {
        timerDoc.val(function(i, value) {
          return value + "Initial Active State @ " + moment().format() + " \n";
        }).addClass("alert-success").removeClass("alert-warning");
      }
    }
    var elementTimer = $("#element-Status"), btnReset = $("#element-Reset"), btnRemaining = $("#element-Remaining"), btnLastActive = $("#element-LastActive"), btnState = $("#element-State");
    if (elementTimer.length) {
      var elTimeout = 3e3;
      elementTimer.on("idle.idleTimer", function(event, elem, obj) {
        event.stopPropagation();
        elementTimer.val(function(i, value) {
          return value + "Idle @ " + moment().format() + " \n";
        }).removeClass("alert-success").addClass("alert-warning");
      });
      elementTimer.on("active.idleTimer", function(event) {
        event.stopPropagation();
        elementTimer.val(function(i, value) {
          return value + "Active @ " + moment().format() + " \n";
        }).addClass("alert-success").removeClass("alert-warning");
      });
      btnReset.on("click", function() {
        elementTimer.idleTimer("reset").val(function(i, value) {
          return value + "Reset @ " + moment().format() + " \n";
        });
        if ($("#element-Status").idleTimer("isIdle")) {
          elementTimer.removeClass("alert-success").addClass("alert-warning");
        } else {
          elementTimer.addClass("alert-success").removeClass("alert-warning");
        }
        $(this).blur();
        return false;
      });
      btnRemaining.on("click", function() {
        elementTimer.val(function(i, value) {
          return value + "Remaining: " + elementTimer.idleTimer("getRemainingTime") + " \n";
        });
        $(this).blur();
        return false;
      });
      btnLastActive.on("click", function() {
        elementTimer.val(function(i, value) {
          return value + "LastActive: " + elementTimer.idleTimer("getLastActiveTime") + " \n";
        });
        $(this).blur();
        return false;
      });
      btnState.on("click", function() {
        elementTimer.val(function(i, value) {
          return value + "State: " + ($("#element-Status").idleTimer("isIdle") ? "idle" : "active") + " \n";
        });
        $(this).blur();
        return false;
      });
      elementTimer.val("").idleTimer(elTimeout);
      if (elementTimer.idleTimer("isIdle")) {
        elementTimer.val(function(i, value) {
          return value + "Initial Idle @ " + moment().format() + " \n";
        }).removeClass("alert-success").addClass("alert-warning");
      } else {
        elementTimer.val(function(i, value) {
          return value + "Initial Active @ " + moment().format() + " \n";
        }).addClass("alert-success").removeClass("alert-warning");
      }
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-misc-numeraljs.js
  (function() {
    const dNum = document.querySelector(".dNum"), fNum = document.querySelector(".fNum"), fCurrency = document.querySelector(".fCurrency"), fBytes = document.querySelector(".fBytes"), fPercent = document.querySelector(".fPercent"), fTime = document.querySelector(".fTime"), fExponential = document.querySelector(".fExponential");
    if (dNum) {
      dNum.innerHTML = numeral(974).value();
    }
    if (fNum) {
      fNum.innerHTML = numeral(1230974).format("0.0a");
    }
    if (fCurrency) {
      fCurrency.innerHTML = numeral(1000.234).format("$0,0.000");
    }
    if (fBytes) {
      fBytes.innerHTML = numeral(3467479682787).format("0.000ib");
    }
    if (fPercent) {
      fPercent.innerHTML = numeral(0.974878234).format("0.000%");
    }
    if (fTime) {
      fTime.innerHTML = numeral(63846).format("00:00:00");
    }
    if (fExponential) {
      fExponential.innerHTML = numeral(1123456789).format("0,0e+0");
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-perfect-scrollbar.js
  document.addEventListener("DOMContentLoaded", function() {
    (function() {
      const verticalExample = document.getElementById("vertical-example"), horizontalExample = document.getElementById("horizontal-example"), horizVertExample = document.getElementById("both-scrollbars-example");
      if (verticalExample) {
        new PerfectScrollbar(verticalExample, {
          wheelPropagation: false
        });
      }
      if (horizontalExample) {
        new PerfectScrollbar(horizontalExample, {
          wheelPropagation: false,
          suppressScrollY: true
        });
      }
      if (horizVertExample) {
        new PerfectScrollbar(horizVertExample, {
          wheelPropagation: false
        });
      }
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-star-ratings.js
  $(function() {
    var basicRatings = $(".basic-ratings"), customSvg = $(".custom-svg-ratings"), multiColor = $(".multi-color-ratings"), halfStar = $(".half-star-ratings"), fullStar = $(".full-star-ratings"), readOnlyRatings = $(".read-only-ratings"), onSetEvents = $(".onset-event-ratings"), onChangeEvents = $(".onChange-event-ratings"), ratingMethods = $(".methods-ratings"), initializeRatings = $(".btn-initialize"), destroyRatings = $(".btn-destroy"), getRatings = $(".btn-get-rating"), setRatings = $(".btn-set-rating");
    if (basicRatings) {
      basicRatings.rateYo({
        rating: 3.6,
        rtl: isRtl,
        spacing: "8px"
      });
    }
    if (customSvg) {
      customSvg.rateYo({
        rating: 3.2,
        starSvg: "<svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'><path d='M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z'-></path>",
        rtl: isRtl,
        spacing: "8px"
      });
    }
    if (multiColor) {
      multiColor.rateYo({
        rtl: isRtl,
        spacing: "8px",
        multiColor: {
          startColor: "#fffca0",
          endColor: "#ffd950"
        }
      });
    }
    if (halfStar) {
      halfStar.rateYo({
        rtl: isRtl,
        spacing: "8px",
        rating: 2
      });
    }
    if (fullStar) {
      fullStar.rateYo({
        rtl: isRtl,
        spacing: "8px",
        rating: 2
      });
    }
    if (readOnlyRatings) {
      readOnlyRatings.rateYo({
        rating: 2,
        rtl: isRtl,
        spacing: "8px"
      });
    }
    if (onSetEvents) {
      onSetEvents.rateYo({
        rtl: isRtl,
        spacing: "8px"
      }).on("rateyo.set", function(e, data) {
        alert("The rating is set to " + data.rating + "!");
      });
    }
    if (onChangeEvents) {
      onChangeEvents.rateYo({
        rtl: isRtl,
        spacing: "8px"
      }).on("rateyo.change", function(e, data) {
        var rating = data.rating;
        $(this).parent().find(".counter").text(rating);
      });
    }
    if (ratingMethods) {
      var $instance = ratingMethods.rateYo({
        rtl: isRtl,
        spacing: "8px"
      });
      if (initializeRatings) {
        initializeRatings.on("click", function() {
          $instance.rateYo({
            rtl: isRtl,
            spacing: "8px"
          });
        });
      }
      if (destroyRatings) {
        destroyRatings.on("click", function() {
          if ($instance.hasClass("jq-ry-container")) {
            $instance.rateYo("destroy");
          } else {
            window.alert("Please Initialize Ratings First");
          }
        });
      }
      if (getRatings) {
        getRatings.on("click", function() {
          if ($instance.hasClass("jq-ry-container")) {
            var rating = $instance.rateYo("rating");
            window.alert("Current Ratings are " + rating);
          } else {
            window.alert("Please Initialize Ratings First");
          }
        });
      }
      if (setRatings) {
        setRatings.on("click", function() {
          if ($instance.hasClass("jq-ry-container")) {
            $instance.rateYo("rating", 1);
          } else {
            window.alert("Please Initialize Ratings First");
          }
        });
      }
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-sweetalert2.js
  (function() {
    const basicAlert = document.querySelector("#basic-alert"), withTitle = document.querySelector("#with-title"), footerAlert = document.querySelector("#footer-alert"), htmlAlert = document.querySelector("#html-alert"), positionTopStart = document.querySelector("#position-top-start"), positionTopEnd = document.querySelector("#position-top-end"), positionBottomStart = document.querySelector("#position-bottom-start"), positionBottomEnd = document.querySelector("#position-bottom-end"), bounceInAnimation = document.querySelector("#bounce-in-animation"), fadeInAnimation = document.querySelector("#fade-in-animation"), flipXAnimation = document.querySelector("#flip-x-animation"), tadaAnimation = document.querySelector("#tada-animation"), shakeAnimation = document.querySelector("#shake-animation"), iconSuccess = document.querySelector("#type-success"), iconInfo = document.querySelector("#type-info"), iconWarning = document.querySelector("#type-warning"), iconError = document.querySelector("#type-error"), iconQuestion = document.querySelector("#type-question"), customImage = document.querySelector("#custom-image"), autoClose = document.querySelector("#auto-close"), outsideClick = document.querySelector("#outside-click"), progressSteps = document.querySelector("#progress-steps"), ajaxRequest = document.querySelector("#ajax-request"), confirmText = document.querySelector("#confirm-text"), confirmColor = document.querySelector("#confirm-color");
    if (basicAlert) {
      basicAlert.onclick = function() {
        Swal.fire({
          title: "Any fool can use a computer",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (withTitle) {
      withTitle.onclick = function() {
        Swal.fire({
          title: "The Internet?,",
          text: "That thing is still around?",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (footerAlert) {
      footerAlert.onclick = function() {
        Swal.fire({
          icon: "error",
          title: "Oops...",
          text: "Something went wrong!",
          footer: "<a href>Why do I have this issue?</a>",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (htmlAlert) {
      htmlAlert.onclick = function() {
        Swal.fire({
          title: '<span class="fw-medium">HTML <u>example</u></span>',
          icon: "info",
          html: 'You can use <b>bold text</b>, <a href="https://pixinvent.com/" target="_blank">links</a> and other HTML tags',
          showCloseButton: true,
          showCancelButton: true,
          focusConfirm: false,
          confirmButtonText: '<i class="ti ti-thumb-up"></i> Great!',
          confirmButtonAriaLabel: "Thumbs up, great!",
          cancelButtonText: '<i class="ti ti-thumb-down"></i>',
          cancelButtonAriaLabel: "Thumbs down",
          customClass: {
            confirmButton: "btn btn-primary me-3",
            cancelButton: "btn btn-label-secondary"
          },
          buttonsStyling: false
        });
      };
    }
    if (positionTopStart) {
      positionTopStart.onclick = function() {
        Swal.fire({
          position: "top-start",
          icon: "success",
          title: "Your work has been saved",
          showConfirmButton: false,
          timer: 1500,
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (positionTopEnd) {
      positionTopEnd.onclick = function() {
        Swal.fire({
          position: "top-end",
          icon: "success",
          title: "Your work has been saved",
          showConfirmButton: false,
          timer: 1500,
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (positionBottomStart) {
      positionBottomStart.onclick = function() {
        Swal.fire({
          position: "bottom-start",
          icon: "success",
          title: "Your work has been saved",
          showConfirmButton: false,
          timer: 1500,
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (positionBottomEnd) {
      positionBottomEnd.onclick = function() {
        Swal.fire({
          position: "bottom-end",
          icon: "success",
          title: "Your work has been saved",
          showConfirmButton: false,
          timer: 1500,
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (bounceInAnimation) {
      bounceInAnimation.onclick = function() {
        Swal.fire({
          title: "Bounce In Animation",
          showClass: {
            popup: "animate__animated animate__bounceIn"
          },
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (fadeInAnimation) {
      fadeInAnimation.onclick = function() {
        Swal.fire({
          title: "Fade In Animation",
          showClass: {
            popup: "animate__animated animate__fadeIn"
          },
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (flipXAnimation) {
      flipXAnimation.onclick = function() {
        Swal.fire({
          title: "Flip In Animation",
          showClass: {
            popup: "animate__animated animate__flipInX"
          },
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (tadaAnimation) {
      tadaAnimation.onclick = function() {
        Swal.fire({
          title: "Tada Animation",
          showClass: {
            popup: "animate__animated animate__tada"
          },
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (shakeAnimation) {
      shakeAnimation.onclick = function() {
        Swal.fire({
          title: "Shake Animation",
          showClass: {
            popup: "animate__animated animate__shakeX"
          },
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (iconSuccess) {
      iconSuccess.onclick = function() {
        Swal.fire({
          title: "Good job!",
          text: "You clicked the button!",
          icon: "success",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (iconInfo) {
      iconInfo.onclick = function() {
        Swal.fire({
          title: "Info!",
          text: "You clicked the button!",
          icon: "info",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (iconWarning) {
      iconWarning.onclick = function() {
        Swal.fire({
          title: "Warning!",
          text: " You clicked the button!",
          icon: "warning",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (iconError) {
      iconError.onclick = function() {
        Swal.fire({
          title: "Error!",
          text: " You clicked the button!",
          icon: "error",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (iconQuestion) {
      iconQuestion.onclick = function() {
        Swal.fire({
          title: "Question!",
          text: " You clicked the button!",
          icon: "question",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (customImage) {
      customImage.onclick = function() {
        Swal.fire({
          title: "Sweet!",
          text: "Modal with a custom image.",
          imageUrl: assetsPath + "img/backgrounds/5.jpg",
          imageWidth: 400,
          imageAlt: "Custom image",
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (autoClose) {
      autoClose.onclick = function() {
        var timerInterval;
        Swal.fire({
          title: "Auto close alert!",
          html: 'I will close in <span class="fw-medium"></span> seconds.',
          timer: 2e3,
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false,
          willOpen: function() {
            Swal.showLoading();
            timerInterval = setInterval(function() {
              Swal.getHtmlContainer().querySelector("strong").textContent = Swal.getTimerLeft();
            }, 100);
          },
          willClose: function() {
            clearInterval(timerInterval);
          }
        }).then(function(result) {
          if (result.dismiss === Swal.DismissReason.timer) {
            console.log("I was closed by the timer");
          }
        });
      };
    }
    if (outsideClick) {
      outsideClick.onclick = function() {
        Swal.fire({
          title: "Click outside to close!",
          text: "This is a cool message!",
          backdrop: true,
          allowOutsideClick: true,
          customClass: {
            confirmButton: "btn btn-primary"
          },
          buttonsStyling: false
        });
      };
    }
    if (progressSteps) {
      progressSteps.onclick = function() {
        const steps = ["1", "2", "3"];
        const swalQueueStep = Swal.mixin({
          confirmButtonText: "Forward",
          cancelButtonText: "Back",
          progressSteps: steps,
          input: "text",
          inputAttributes: {
            required: true
          },
          validationMessage: "This field is required"
        });
        async function backAndForward() {
          const values = [];
          let currentStep;
          for (currentStep = 0; currentStep < steps.length; ) {
            const result = await new swalQueueStep({
              title: "Question " + steps[currentStep],
              showCancelButton: currentStep > 0,
              currentProgressStep: currentStep
            });
            if (result.value) {
              values[currentStep] = result.value;
              currentStep++;
            } else if (result.dismiss === "cancel") {
              currentStep--;
            }
          }
          Swal.fire(JSON.stringify(values));
        }
        backAndForward();
      };
    }
    if (ajaxRequest) {
      ajaxRequest.onclick = function() {
        Swal.fire({
          title: "Submit your Github username",
          input: "text",
          inputAttributes: {
            autocapitalize: "off"
          },
          showCancelButton: true,
          confirmButtonText: "Look up",
          showLoaderOnConfirm: true,
          customClass: {
            confirmButton: "btn btn-primary me-3",
            cancelButton: "btn btn-label-danger"
          },
          preConfirm: (login) => {
            return fetch("//api.github.com/users/" + login).then((response) => {
              if (!response.ok) {
                throw new Error(response.statusText);
              }
              return response.json();
            }).catch((error) => {
              Swal.showValidationMessage("Request failed:" + error);
            });
          },
          backdrop: true,
          allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
          if (result.isConfirmed) {
            Swal.fire({
              title: result.value.login + "'s avatar",
              imageUrl: result.value.avatar_url,
              customClass: {
                confirmButtonText: "Close me!",
                confirmButton: "btn btn-primary"
              }
            });
          }
        });
      };
    }
    if (confirmText) {
      confirmText.onclick = function() {
        Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert this!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, delete it!",
          customClass: {
            confirmButton: "btn btn-primary me-3",
            cancelButton: "btn btn-label-secondary"
          },
          buttonsStyling: false
        }).then(function(result) {
          if (result.value) {
            Swal.fire({
              icon: "success",
              title: "Deleted!",
              text: "Your file has been deleted.",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          }
        });
      };
    }
    if (confirmColor) {
      confirmColor.onclick = function() {
        Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert this!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, delete it!",
          customClass: {
            confirmButton: "btn btn-primary me-3",
            cancelButton: "btn btn-label-secondary"
          },
          buttonsStyling: false
        }).then(function(result) {
          if (result.value) {
            Swal.fire({
              icon: "success",
              title: "Deleted!",
              text: "Your file has been deleted.",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          } else if (result.dismiss === Swal.DismissReason.cancel) {
            Swal.fire({
              title: "Cancelled",
              text: "Your imaginary file is safe :)",
              icon: "error",
              customClass: {
                confirmButton: "btn btn-success"
              }
            });
          }
        });
      };
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-timeline.js
  (function() {
    AOS.init({
      disable: function() {
        const maxWidth = 1024;
        return window.innerWidth < maxWidth;
      },
      once: true
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-tour.js
  (function() {
    const startBtn = document.querySelector("#shepherd-example");
    function setupTour(tour) {
      const backBtnClass = "btn btn-sm btn-label-secondary md-btn-flat", nextBtnClass = "btn btn-sm btn-primary btn-next";
      tour.addStep({
        title: "Navbar",
        text: "This is your navbar",
        attachTo: { element: ".navbar", on: "bottom" },
        buttons: [
          {
            action: tour.cancel,
            classes: backBtnClass,
            text: "Skip"
          },
          {
            text: "Next",
            classes: nextBtnClass,
            action: tour.next
          }
        ]
      });
      tour.addStep({
        title: "Card",
        text: "This is a card",
        attachTo: { element: ".tour-card", on: "top" },
        buttons: [
          {
            text: "Skip",
            classes: backBtnClass,
            action: tour.cancel
          },
          {
            text: "Back",
            classes: backBtnClass,
            action: tour.back
          },
          {
            text: "Next",
            classes: nextBtnClass,
            action: tour.next
          }
        ]
      });
      tour.addStep({
        title: "Footer",
        text: "This is the Footer",
        attachTo: { element: ".footer", on: "top" },
        buttons: [
          {
            text: "Skip",
            classes: backBtnClass,
            action: tour.cancel
          },
          {
            text: "Back",
            classes: backBtnClass,
            action: tour.back
          },
          {
            text: "Next",
            classes: nextBtnClass,
            action: tour.next
          }
        ]
      });
      tour.addStep({
        title: "Upgrade",
        text: "Click here to upgrade plan",
        attachTo: { element: ".footer-link", on: "top" },
        buttons: [
          {
            text: "Back",
            classes: backBtnClass,
            action: tour.back
          },
          {
            text: "Finish",
            classes: nextBtnClass,
            action: tour.cancel
          }
        ]
      });
      return tour;
    }
    if (startBtn) {
      startBtn.onclick = function() {
        const tourVar = new Shepherd.Tour({
          defaultStepOptions: {
            scrollTo: false,
            cancelIcon: {
              enabled: true
            }
          },
          useModalOverlay: true
        });
        setupTour(tourVar).start();
      };
    }
    const startBtnDocs = document.querySelector("#shepherd-docs-example");
    function setupTourDocs(tour) {
      const backBtnClass = "btn btn-sm btn-label-secondary md-btn-flat", nextBtnClass = "btn btn-sm btn-primary btn-next";
      tour.addStep({
        title: "Navbar",
        text: "This is your navbar",
        attachTo: { element: ".navbar", on: "bottom" },
        buttons: [
          {
            action: tour.cancel,
            classes: backBtnClass,
            text: "Skip"
          },
          {
            text: "Next",
            classes: nextBtnClass,
            action: tour.next
          }
        ]
      });
      tour.addStep({
        title: "Footer",
        text: "This is the Footer",
        attachTo: { element: ".footer", on: "top" },
        buttons: [
          {
            text: "Skip",
            classes: backBtnClass,
            action: tour.cancel
          },
          {
            text: "Back",
            classes: backBtnClass,
            action: tour.back
          },
          {
            text: "Next",
            classes: nextBtnClass,
            action: tour.next
          }
        ]
      });
      tour.addStep({
        title: "Social Link",
        text: "Click here share on social media",
        attachTo: { element: ".footer-link", on: "top" },
        buttons: [
          {
            text: "Back",
            classes: backBtnClass,
            action: tour.back
          },
          {
            text: "Finish",
            classes: nextBtnClass,
            action: tour.cancel
          }
        ]
      });
      return tour;
    }
    if (startBtnDocs) {
      startBtnDocs.onclick = function() {
        const tourDocsVar = new Shepherd.Tour({
          defaultStepOptions: {
            scrollTo: false,
            cancelIcon: {
              enabled: true
            }
          },
          useModalOverlay: true
        });
        setupTourDocs(tourDocsVar).start();
      };
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/extended-ui-treeview.js
  $(function() {
    var theme = $("html").hasClass("light-style") ? "default" : "default-dark", basicTree = $("#jstree-basic"), customIconsTree = $("#jstree-custom-icons"), contextMenu = $("#jstree-context-menu"), dragDrop = $("#jstree-drag-drop"), checkboxTree = $("#jstree-checkbox"), ajaxTree = $("#jstree-ajax");
    if (basicTree.length) {
      basicTree.jstree({
        core: {
          themes: {
            name: theme
          }
        }
      });
    }
    if (customIconsTree.length) {
      customIconsTree.jstree({
        core: {
          themes: {
            name: theme
          },
          data: [
            {
              text: "css",
              children: [
                {
                  text: "app.css",
                  type: "css"
                },
                {
                  text: "style.css",
                  type: "css"
                }
              ]
            },
            {
              text: "img",
              state: {
                opened: true
              },
              children: [
                {
                  text: "bg.jpg",
                  type: "img"
                },
                {
                  text: "logo.png",
                  type: "img"
                },
                {
                  text: "avatar.png",
                  type: "img"
                }
              ]
            },
            {
              text: "js",
              state: {
                opened: true
              },
              children: [
                {
                  text: "jquery.js",
                  type: "js"
                },
                {
                  text: "app.js",
                  type: "js"
                }
              ]
            },
            {
              text: "index.html",
              type: "html"
            },
            {
              text: "page-one.html",
              type: "html"
            },
            {
              text: "page-two.html",
              type: "html"
            }
          ]
        },
        plugins: ["types"],
        types: {
          default: {
            icon: "ti ti-folder"
          },
          html: {
            icon: "ti ti-brand-html5 text-danger"
          },
          css: {
            icon: "ti ti-brand-css3 text-info"
          },
          img: {
            icon: "ti ti-photo text-success"
          },
          js: {
            icon: "ti ti-brand-javascript text-warning"
          }
        }
      });
    }
    if (contextMenu.length) {
      contextMenu.jstree({
        core: {
          themes: {
            name: theme
          },
          check_callback: true,
          data: [
            {
              text: "css",
              children: [
                {
                  text: "app.css",
                  type: "css"
                },
                {
                  text: "style.css",
                  type: "css"
                }
              ]
            },
            {
              text: "img",
              state: {
                opened: true
              },
              children: [
                {
                  text: "bg.jpg",
                  type: "img"
                },
                {
                  text: "logo.png",
                  type: "img"
                },
                {
                  text: "avatar.png",
                  type: "img"
                }
              ]
            },
            {
              text: "js",
              state: {
                opened: true
              },
              children: [
                {
                  text: "jquery.js",
                  type: "js"
                },
                {
                  text: "app.js",
                  type: "js"
                }
              ]
            },
            {
              text: "index.html",
              type: "html"
            },
            {
              text: "page-one.html",
              type: "html"
            },
            {
              text: "page-two.html",
              type: "html"
            }
          ]
        },
        plugins: ["types", "contextmenu"],
        types: {
          default: {
            icon: "ti ti-folder"
          },
          html: {
            icon: "ti ti-brand-html5 text-danger"
          },
          css: {
            icon: "ti ti-brand-css3 text-info"
          },
          img: {
            icon: "ti ti-photo text-success"
          },
          js: {
            icon: "ti ti-brand-javascript text-warning"
          }
        }
      });
    }
    if (dragDrop.length) {
      dragDrop.jstree({
        core: {
          themes: {
            name: theme
          },
          check_callback: true,
          data: [
            {
              text: "css",
              children: [
                {
                  text: "app.css",
                  type: "css"
                },
                {
                  text: "style.css",
                  type: "css"
                }
              ]
            },
            {
              text: "img",
              state: {
                opened: true
              },
              children: [
                {
                  text: "bg.jpg",
                  type: "img"
                },
                {
                  text: "logo.png",
                  type: "img"
                },
                {
                  text: "avatar.png",
                  type: "img"
                }
              ]
            },
            {
              text: "js",
              state: {
                opened: true
              },
              children: [
                {
                  text: "jquery.js",
                  type: "js"
                },
                {
                  text: "app.js",
                  type: "js"
                }
              ]
            },
            {
              text: "index.html",
              type: "html"
            },
            {
              text: "page-one.html",
              type: "html"
            },
            {
              text: "page-two.html",
              type: "html"
            }
          ]
        },
        plugins: ["types", "dnd"],
        types: {
          default: {
            icon: "ti ti-folder"
          },
          html: {
            icon: "ti ti-brand-html5 text-danger"
          },
          css: {
            icon: "ti ti-brand-css3 text-info"
          },
          img: {
            icon: "ti ti-photo text-success"
          },
          js: {
            icon: "ti ti-brand-javascript text-warning"
          }
        }
      });
    }
    if (checkboxTree.length) {
      checkboxTree.jstree({
        core: {
          themes: {
            name: theme
          },
          data: [
            {
              text: "css",
              children: [
                {
                  text: "app.css",
                  type: "css"
                },
                {
                  text: "style.css",
                  type: "css"
                }
              ]
            },
            {
              text: "img",
              state: {
                opened: true
              },
              children: [
                {
                  text: "bg.jpg",
                  type: "img"
                },
                {
                  text: "logo.png",
                  type: "img"
                },
                {
                  text: "avatar.png",
                  type: "img"
                }
              ]
            },
            {
              text: "js",
              state: {
                opened: true
              },
              children: [
                {
                  text: "jquery.js",
                  type: "js"
                },
                {
                  text: "app.js",
                  type: "js"
                }
              ]
            },
            {
              text: "index.html",
              type: "html"
            },
            {
              text: "page-one.html",
              type: "html"
            },
            {
              text: "page-two.html",
              type: "html"
            }
          ]
        },
        plugins: ["types", "checkbox", "wholerow"],
        types: {
          default: {
            icon: "ti ti-folder"
          },
          html: {
            icon: "ti ti-brand-html5 text-danger"
          },
          css: {
            icon: "ti ti-brand-css3 text-info"
          },
          img: {
            icon: "ti ti-photo text-success"
          },
          js: {
            icon: "ti ti-brand-javascript text-warning"
          }
        }
      });
    }
    if (ajaxTree.length) {
      ajaxTree.jstree({
        core: {
          themes: {
            name: theme
          },
          data: {
            url: assetsPath + "json/jstree-data.json",
            dataType: "json",
            data: function(node) {
              return {
                id: node.id
              };
            }
          }
        },
        plugins: ["types", "state"],
        types: {
          default: {
            icon: "ti ti-folder"
          },
          html: {
            icon: "ti ti-brand-html5 text-danger"
          },
          css: {
            icon: "ti ti-brand-css3 text-info"
          },
          img: {
            icon: "ti ti-photo text-success"
          },
          js: {
            icon: "ti ti-brand-javascript text-warning"
          }
        }
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/form-basic-inputs.js
  (function() {
    const checkbox = document.getElementById("defaultCheck2");
    checkbox.indeterminate = true;
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/form-layouts.js
  (function() {
    const phoneMaskList = document.querySelectorAll(".phone-mask"), creditCardMask = document.querySelector(".credit-card-mask"), expiryDateMask = document.querySelector(".expiry-date-mask"), cvvMask = document.querySelector(".cvv-code-mask"), datepickerList = document.querySelectorAll(".dob-picker"), formCheckInputPayment = document.querySelectorAll(".form-check-input-payment");
    if (phoneMaskList) {
      phoneMaskList.forEach(function(phoneMask) {
        new Cleave(phoneMask, {
          phone: true,
          phoneRegionCode: "US"
        });
      });
    }
    if (creditCardMask) {
      new Cleave(creditCardMask, {
        creditCard: true,
        onCreditCardTypeChanged: function(type) {
          if (type != "" && type != "unknown") {
            document.querySelector(".card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" height="28"/>';
          } else {
            document.querySelector(".card-type").innerHTML = "";
          }
        }
      });
    }
    if (expiryDateMask) {
      new Cleave(expiryDateMask, {
        date: true,
        delimiter: "/",
        datePattern: ["m", "y"]
      });
    }
    if (cvvMask) {
      new Cleave(cvvMask, {
        numeral: true,
        numeralPositiveOnly: true
      });
    }
    if (datepickerList) {
      datepickerList.forEach(function(datepicker) {
        datepicker.flatpickr({
          monthSelectorType: "static"
        });
      });
    }
    if (formCheckInputPayment) {
      formCheckInputPayment.forEach(function(paymentInput) {
        paymentInput.addEventListener("change", function(e) {
          const paymentInputValue = e.target.value;
          if (paymentInputValue === "credit-card") {
            document.querySelector("#form-credit-card").classList.remove("d-none");
          } else {
            document.querySelector("#form-credit-card").classList.add("d-none");
          }
        });
      });
    }
  })();
  $(function() {
    var topSpacing;
    const stickyEl = $(".sticky-element");
    window.Helpers.initCustomOptionCheck();
    if (Helpers.isNavbarFixed()) {
      topSpacing = $(".layout-navbar").height() + 7;
    } else {
      topSpacing = 0;
    }
    if (stickyEl.length) {
      stickyEl.sticky({
        topSpacing,
        zIndex: 9
      });
    }
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          placeholder: "Select value",
          dropdownParent: $this.parent()
        });
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/form-validation.js
  (function() {
    window.Helpers.initCustomOptionCheck();
    const flatPickrList = [].slice.call(document.querySelectorAll(".flatpickr-validation"));
    if (flatPickrList) {
      flatPickrList.forEach((flatPickr) => {
        flatPickr.flatpickr({
          allowInput: true,
          monthSelectorType: "static"
        });
      });
    }
    const bsValidationForms = document.querySelectorAll(".needs-validation");
    Array.prototype.slice.call(bsValidationForms).forEach(function(form) {
      form.addEventListener(
        "submit",
        function(event) {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          } else {
            alert("Submitted!!!");
          }
          form.classList.add("was-validated");
        },
        false
      );
    });
  })();
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const formValidationExamples = document.getElementById("formValidationExamples"), formValidationSelect2Ele = jQuery(formValidationExamples.querySelector('[name="formValidationSelect2"]')), formValidationTechEle = jQuery(formValidationExamples.querySelector('[name="formValidationTech"]')), formValidationLangEle = formValidationExamples.querySelector('[name="formValidationLang"]'), formValidationHobbiesEle = jQuery(formValidationExamples.querySelector(".selectpicker")), tech = [
        "ReactJS",
        "Angular",
        "VueJS",
        "Html",
        "Css",
        "Sass",
        "Pug",
        "Gulp",
        "Php",
        "Laravel",
        "Python",
        "Bootstrap",
        "Material Design",
        "NodeJS"
      ];
      const fv2 = FormValidation.formValidation(formValidationExamples, {
        fields: {
          formValidationName: {
            validators: {
              notEmpty: {
                message: "Please enter your name"
              },
              stringLength: {
                min: 6,
                max: 30,
                message: "The name must be more than 6 and less than 30 characters long"
              },
              regexp: {
                regexp: /^[a-zA-Z0-9 ]+$/,
                message: "The name can only consist of alphabetical, number and space"
              }
            }
          },
          formValidationEmail: {
            validators: {
              notEmpty: {
                message: "Please enter your email"
              },
              emailAddress: {
                message: "The value is not a valid email address"
              }
            }
          },
          formValidationPass: {
            validators: {
              notEmpty: {
                message: "Please enter your password"
              }
            }
          },
          formValidationConfirmPass: {
            validators: {
              notEmpty: {
                message: "Please confirm password"
              },
              identical: {
                compare: function() {
                  return formValidationExamples.querySelector('[name="formValidationPass"]').value;
                },
                message: "The password and its confirm are not the same"
              }
            }
          },
          formValidationFile: {
            validators: {
              notEmpty: {
                message: "Please select the file"
              }
            }
          },
          formValidationDob: {
            validators: {
              notEmpty: {
                message: "Please select your DOB"
              },
              date: {
                format: "YYYY/MM/DD",
                message: "The value is not a valid date"
              }
            }
          },
          formValidationSelect2: {
            validators: {
              notEmpty: {
                message: "Please select your country"
              }
            }
          },
          formValidationLang: {
            validators: {
              notEmpty: {
                message: "Please add your language"
              }
            }
          },
          formValidationTech: {
            validators: {
              notEmpty: {
                message: "Please select technology"
              }
            }
          },
          formValidationHobbies: {
            validators: {
              notEmpty: {
                message: "Please select your hobbies"
              }
            }
          },
          formValidationBio: {
            validators: {
              notEmpty: {
                message: "Please enter your bio"
              },
              stringLength: {
                min: 100,
                max: 500,
                message: "The bio must be more than 100 and less than 500 characters long"
              }
            }
          },
          formValidationGender: {
            validators: {
              notEmpty: {
                message: "Please select your gender"
              }
            }
          },
          formValidationPlan: {
            validators: {
              notEmpty: {
                message: "Please select your preferred plan"
              }
            }
          },
          formValidationSwitch: {
            validators: {
              notEmpty: {
                message: "Please select your preference"
              }
            }
          },
          formValidationCheckbox: {
            validators: {
              notEmpty: {
                message: "Please confirm our T&C"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: function(field, ele) {
              switch (field) {
                case "formValidationName":
                case "formValidationEmail":
                case "formValidationPass":
                case "formValidationConfirmPass":
                case "formValidationFile":
                case "formValidationDob":
                case "formValidationSelect2":
                case "formValidationLang":
                case "formValidationTech":
                case "formValidationHobbies":
                case "formValidationBio":
                case "formValidationGender":
                  return ".col-md-6";
                case "formValidationPlan":
                  return ".col-xl-3";
                case "formValidationSwitch":
                case "formValidationCheckbox":
                  return ".col-12";
                default:
                  return ".row";
              }
            }
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e2) {
            if (e2.element.parentElement.classList.contains("input-group")) {
              e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
            }
            if (e2.element.parentElement.parentElement.classList.contains("custom-option")) {
              e2.element.closest(".row").insertAdjacentElement("afterend", e2.messageElement);
            }
          });
        }
      });
      flatpickr(formValidationExamples.querySelector('[name="formValidationDob"]'), {
        enableTime: false,
        dateFormat: "Y/m/d",
        onChange: function() {
          fv2.revalidateField("formValidationDob");
        }
      });
      if (formValidationSelect2Ele.length) {
        formValidationSelect2Ele.wrap('<div class="position-relative"></div>');
        formValidationSelect2Ele.select2({
          placeholder: "Select country",
          dropdownParent: formValidationSelect2Ele.parent()
        }).on("change.select2", function() {
          fv2.revalidateField("formValidationSelect2");
        });
      }
      const substringMatcher = function(strs) {
        return function findMatches(q, cb) {
          var matches, substrRegex;
          matches = [];
          substrRegex = new RegExp(q, "i");
          $.each(strs, function(i, str) {
            if (substrRegex.test(str)) {
              matches.push(str);
            }
          });
          cb(matches);
        };
      };
      if (isRtl) {
        const typeaheadList = [].slice.call(document.querySelectorAll(".typeahead"));
        if (typeaheadList) {
          typeaheadList.forEach((typeahead) => {
            typeahead.setAttribute("dir", "rtl");
          });
        }
      }
      formValidationTechEle.typeahead(
        {
          hint: !isRtl,
          highlight: true,
          minLength: 1
        },
        {
          name: "tech",
          source: substringMatcher(tech)
        }
      );
      let formValidationLangTagify = new Tagify(formValidationLangEle);
      formValidationLangEle.addEventListener("change", onChange);
      function onChange() {
        fv2.revalidateField("formValidationLang");
      }
      formValidationHobbiesEle.on("changed.bs.select", function(e2, clickedIndex, isSelected, previousValue) {
        fv2.revalidateField("formValidationHobbies");
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/form-wizard-icons.js
  $(function() {
    const select2 = $(".select2"), selectPicker = $(".selectpicker");
    if (selectPicker.length) {
      selectPicker.selectpicker();
    }
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>');
        $this.select2({
          placeholder: "Select value",
          dropdownParent: $this.parent()
        });
      });
    }
  });
  (function() {
    const wizardIcons = document.querySelector(".wizard-icons-example");
    if (typeof wizardIcons !== void 0 && wizardIcons !== null) {
      const wizardIconsBtnNextList = [].slice.call(wizardIcons.querySelectorAll(".btn-next")), wizardIconsBtnPrevList = [].slice.call(wizardIcons.querySelectorAll(".btn-prev")), wizardIconsBtnSubmit = wizardIcons.querySelector(".btn-submit");
      const iconsStepper = new Stepper(wizardIcons, {
        linear: false
      });
      if (wizardIconsBtnNextList) {
        wizardIconsBtnNextList.forEach((wizardIconsBtnNext) => {
          wizardIconsBtnNext.addEventListener("click", (event) => {
            iconsStepper.next();
          });
        });
      }
      if (wizardIconsBtnPrevList) {
        wizardIconsBtnPrevList.forEach((wizardIconsBtnPrev) => {
          wizardIconsBtnPrev.addEventListener("click", (event) => {
            iconsStepper.previous();
          });
        });
      }
      if (wizardIconsBtnSubmit) {
        wizardIconsBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
    const wizardIconsVertical = document.querySelector(".wizard-vertical-icons-example");
    if (typeof wizardIconsVertical !== void 0 && wizardIconsVertical !== null) {
      const wizardIconsVerticalBtnNextList = [].slice.call(wizardIconsVertical.querySelectorAll(".btn-next")), wizardIconsVerticalBtnPrevList = [].slice.call(wizardIconsVertical.querySelectorAll(".btn-prev")), wizardIconsVerticalBtnSubmit = wizardIconsVertical.querySelector(".btn-submit");
      const verticalIconsStepper = new Stepper(wizardIconsVertical, {
        linear: false
      });
      if (wizardIconsVerticalBtnNextList) {
        wizardIconsVerticalBtnNextList.forEach((wizardIconsVerticalBtnNext) => {
          wizardIconsVerticalBtnNext.addEventListener("click", (event) => {
            verticalIconsStepper.next();
          });
        });
      }
      if (wizardIconsVerticalBtnPrevList) {
        wizardIconsVerticalBtnPrevList.forEach((wizardIconsVerticalBtnPrev) => {
          wizardIconsVerticalBtnPrev.addEventListener("click", (event) => {
            verticalIconsStepper.previous();
          });
        });
      }
      if (wizardIconsVerticalBtnSubmit) {
        wizardIconsVerticalBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
    const wizardIconsModern = document.querySelector(".wizard-modern-icons-example");
    if (typeof wizardIconsModern !== void 0 && wizardIconsModern !== null) {
      const wizardIconsModernBtnNextList = [].slice.call(wizardIconsModern.querySelectorAll(".btn-next")), wizardIconsModernBtnPrevList = [].slice.call(wizardIconsModern.querySelectorAll(".btn-prev")), wizardIconsModernBtnSubmit = wizardIconsModern.querySelector(".btn-submit");
      const modernIconsStepper = new Stepper(wizardIconsModern, {
        linear: false
      });
      if (wizardIconsModernBtnNextList) {
        wizardIconsModernBtnNextList.forEach((wizardIconsModernBtnNext) => {
          wizardIconsModernBtnNext.addEventListener("click", (event) => {
            modernIconsStepper.next();
          });
        });
      }
      if (wizardIconsModernBtnPrevList) {
        wizardIconsModernBtnPrevList.forEach((wizardIconsModernBtnPrev) => {
          wizardIconsModernBtnPrev.addEventListener("click", (event) => {
            modernIconsStepper.previous();
          });
        });
      }
      if (wizardIconsModernBtnSubmit) {
        wizardIconsModernBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
    const wizardIconsModernVertical = document.querySelector(".wizard-modern-vertical-icons-example");
    if (typeof wizardIconsModernVertical !== void 0 && wizardIconsModernVertical !== null) {
      const wizardIconsModernVerticalBtnNextList = [].slice.call(wizardIconsModernVertical.querySelectorAll(".btn-next")), wizardIconsModernVerticalBtnPrevList = [].slice.call(wizardIconsModernVertical.querySelectorAll(".btn-prev")), wizardIconsModernVerticalBtnSubmit = wizardIconsModernVertical.querySelector(".btn-submit");
      const verticalModernIconsStepper = new Stepper(wizardIconsModernVertical, {
        linear: false
      });
      if (wizardIconsModernVerticalBtnNextList) {
        wizardIconsModernVerticalBtnNextList.forEach((wizardIconsModernVerticalBtnNext) => {
          wizardIconsModernVerticalBtnNext.addEventListener("click", (event) => {
            verticalModernIconsStepper.next();
          });
        });
      }
      if (wizardIconsModernVerticalBtnPrevList) {
        wizardIconsModernVerticalBtnPrevList.forEach((wizardIconsModernVerticalBtnPrev) => {
          wizardIconsModernVerticalBtnPrev.addEventListener("click", (event) => {
            verticalModernIconsStepper.previous();
          });
        });
      }
      if (wizardIconsModernVerticalBtnSubmit) {
        wizardIconsModernVerticalBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/form-wizard-validation.js
  (function() {
    const select2 = $(".select2"), selectPicker = $(".selectpicker");
    const wizardValidation = document.querySelector("#wizard-validation");
    if (typeof wizardValidation !== void 0 && wizardValidation !== null) {
      const wizardValidationForm = wizardValidation.querySelector("#wizard-validation-form");
      const wizardValidationFormStep1 = wizardValidationForm.querySelector("#account-details-validation");
      const wizardValidationFormStep2 = wizardValidationForm.querySelector("#personal-info-validation");
      const wizardValidationFormStep3 = wizardValidationForm.querySelector("#social-links-validation");
      const wizardValidationNext = [].slice.call(wizardValidationForm.querySelectorAll(".btn-next"));
      const wizardValidationPrev = [].slice.call(wizardValidationForm.querySelectorAll(".btn-prev"));
      const validationStepper = new Stepper(wizardValidation, {
        linear: true
      });
      const FormValidation1 = FormValidation.formValidation(wizardValidationFormStep1, {
        fields: {
          formValidationUsername: {
            validators: {
              notEmpty: {
                message: "The name is required"
              },
              stringLength: {
                min: 6,
                max: 30,
                message: "The name must be more than 6 and less than 30 characters long"
              },
              regexp: {
                regexp: /^[a-zA-Z0-9 ]+$/,
                message: "The name can only consist of alphabetical, number and space"
              }
            }
          },
          formValidationEmail: {
            validators: {
              notEmpty: {
                message: "The Email is required"
              },
              emailAddress: {
                message: "The value is not a valid email address"
              }
            }
          },
          formValidationPass: {
            validators: {
              notEmpty: {
                message: "The password is required"
              }
            }
          },
          formValidationConfirmPass: {
            validators: {
              notEmpty: {
                message: "The Confirm Password is required"
              },
              identical: {
                compare: function() {
                  return wizardValidationFormStep1.querySelector('[name="formValidationPass"]').value;
                },
                message: "The password and its confirm are not the same"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e) {
            if (e.element.parentElement.classList.contains("input-group")) {
              e.element.parentElement.insertAdjacentElement("afterend", e.messageElement);
            }
          });
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation2 = FormValidation.formValidation(wizardValidationFormStep2, {
        fields: {
          formValidationFirstName: {
            validators: {
              notEmpty: {
                message: "The first name is required"
              }
            }
          },
          formValidationLastName: {
            validators: {
              notEmpty: {
                message: "The last name is required"
              }
            }
          },
          formValidationCountry: {
            validators: {
              notEmpty: {
                message: "The Country is required"
              }
            }
          },
          formValidationLanguage: {
            validators: {
              notEmpty: {
                message: "The Languages is required"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      if (selectPicker.length) {
        selectPicker.each(function() {
          var $this = $(this);
          $this.selectpicker().on("change", function() {
            FormValidation2.revalidateField("formValidationLanguage");
          });
        });
      }
      if (select2.length) {
        select2.each(function() {
          var $this = $(this);
          $this.wrap('<div class="position-relative"></div>');
          $this.select2({
            placeholder: "Select an country",
            dropdownParent: $this.parent()
          }).on("change.select2", function() {
            FormValidation2.revalidateField("formValidationCountry");
          });
        });
      }
      const FormValidation3 = FormValidation.formValidation(wizardValidationFormStep3, {
        fields: {
          formValidationTwitter: {
            validators: {
              notEmpty: {
                message: "The Twitter URL is required"
              },
              uri: {
                message: "The URL is not proper"
              }
            }
          },
          formValidationFacebook: {
            validators: {
              notEmpty: {
                message: "The Facebook URL is required"
              },
              uri: {
                message: "The URL is not proper"
              }
            }
          },
          formValidationGoogle: {
            validators: {
              notEmpty: {
                message: "The Google URL is required"
              },
              uri: {
                message: "The URL is not proper"
              }
            }
          },
          formValidationLinkedIn: {
            validators: {
              notEmpty: {
                message: "The LinkedIn URL is required"
              },
              uri: {
                message: "The URL is not proper"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        alert("Submitted..!!");
      });
      wizardValidationNext.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 0:
              FormValidation1.validate();
              break;
            case 1:
              FormValidation2.validate();
              break;
            case 2:
              FormValidation3.validate();
              break;
            default:
              break;
          }
        });
      });
      wizardValidationPrev.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 2:
              validationStepper.previous();
              break;
            case 1:
              validationStepper.previous();
              break;
            case 0:
            default:
              break;
          }
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/form-wizard-numbered.js
  $(function() {
    const select2 = $(".select2"), selectPicker = $(".selectpicker");
    if (selectPicker.length) {
      selectPicker.selectpicker();
    }
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>');
        $this.select2({
          placeholder: "Select value",
          dropdownParent: $this.parent()
        });
      });
    }
  });
  (function() {
    const wizardNumbered = document.querySelector(".wizard-numbered"), wizardNumberedBtnNextList = [].slice.call(wizardNumbered.querySelectorAll(".btn-next")), wizardNumberedBtnPrevList = [].slice.call(wizardNumbered.querySelectorAll(".btn-prev")), wizardNumberedBtnSubmit = wizardNumbered.querySelector(".btn-submit");
    if (typeof wizardNumbered !== void 0 && wizardNumbered !== null) {
      const numberedStepper = new Stepper(wizardNumbered, {
        linear: false
      });
      if (wizardNumberedBtnNextList) {
        wizardNumberedBtnNextList.forEach((wizardNumberedBtnNext) => {
          wizardNumberedBtnNext.addEventListener("click", (event) => {
            numberedStepper.next();
          });
        });
      }
      if (wizardNumberedBtnPrevList) {
        wizardNumberedBtnPrevList.forEach((wizardNumberedBtnPrev) => {
          wizardNumberedBtnPrev.addEventListener("click", (event) => {
            numberedStepper.previous();
          });
        });
      }
      if (wizardNumberedBtnSubmit) {
        wizardNumberedBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
    const wizardVertical = document.querySelector(".wizard-vertical"), wizardVerticalBtnNextList = [].slice.call(wizardVertical.querySelectorAll(".btn-next")), wizardVerticalBtnPrevList = [].slice.call(wizardVertical.querySelectorAll(".btn-prev")), wizardVerticalBtnSubmit = wizardVertical.querySelector(".btn-submit");
    if (typeof wizardVertical !== void 0 && wizardVertical !== null) {
      const verticalStepper = new Stepper(wizardVertical, {
        linear: false
      });
      if (wizardVerticalBtnNextList) {
        wizardVerticalBtnNextList.forEach((wizardVerticalBtnNext) => {
          wizardVerticalBtnNext.addEventListener("click", (event) => {
            verticalStepper.next();
          });
        });
      }
      if (wizardVerticalBtnPrevList) {
        wizardVerticalBtnPrevList.forEach((wizardVerticalBtnPrev) => {
          wizardVerticalBtnPrev.addEventListener("click", (event) => {
            verticalStepper.previous();
          });
        });
      }
      if (wizardVerticalBtnSubmit) {
        wizardVerticalBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
    const wizardModern = document.querySelector(".wizard-modern-example"), wizardModernBtnNextList = [].slice.call(wizardModern.querySelectorAll(".btn-next")), wizardModernBtnPrevList = [].slice.call(wizardModern.querySelectorAll(".btn-prev")), wizardModernBtnSubmit = wizardModern.querySelector(".btn-submit");
    if (typeof wizardModern !== void 0 && wizardModern !== null) {
      const modernStepper = new Stepper(wizardModern, {
        linear: false
      });
      if (wizardModernBtnNextList) {
        wizardModernBtnNextList.forEach((wizardModernBtnNext) => {
          wizardModernBtnNext.addEventListener("click", (event) => {
            modernStepper.next();
          });
        });
      }
      if (wizardModernBtnPrevList) {
        wizardModernBtnPrevList.forEach((wizardModernBtnPrev) => {
          wizardModernBtnPrev.addEventListener("click", (event) => {
            modernStepper.previous();
          });
        });
      }
      if (wizardModernBtnSubmit) {
        wizardModernBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
    const wizardModernVertical = document.querySelector(".wizard-modern-vertical"), wizardModernVerticalBtnNextList = [].slice.call(wizardModernVertical.querySelectorAll(".btn-next")), wizardModernVerticalBtnPrevList = [].slice.call(wizardModernVertical.querySelectorAll(".btn-prev")), wizardModernVerticalBtnSubmit = wizardModernVertical.querySelector(".btn-submit");
    if (typeof wizardModernVertical !== void 0 && wizardModernVertical !== null) {
      const modernVerticalStepper = new Stepper(wizardModernVertical, {
        linear: false
      });
      if (wizardModernVerticalBtnNextList) {
        wizardModernVerticalBtnNextList.forEach((wizardModernVerticalBtnNext) => {
          wizardModernVerticalBtnNext.addEventListener("click", (event) => {
            modernVerticalStepper.next();
          });
        });
      }
      if (wizardModernVerticalBtnPrevList) {
        wizardModernVerticalBtnPrevList.forEach((wizardModernVerticalBtnPrev) => {
          wizardModernVerticalBtnPrev.addEventListener("click", (event) => {
            modernVerticalStepper.previous();
          });
        });
      }
      if (wizardModernVerticalBtnSubmit) {
        wizardModernVerticalBtnSubmit.addEventListener("click", (event) => {
          alert("Submitted..!!");
        });
      }
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-editors.js
  (function() {
    const snowEditor = new Quill("#snow-editor", {
      bounds: "#snow-editor",
      modules: {
        formula: true,
        toolbar: "#snow-toolbar"
      },
      theme: "snow"
    });
    const bubbleEditor = new Quill("#bubble-editor", {
      modules: {
        toolbar: "#bubble-toolbar"
      },
      theme: "bubble"
    });
    const fullToolbar = [
      [
        {
          font: []
        },
        {
          size: []
        }
      ],
      ["bold", "italic", "underline", "strike"],
      [
        {
          color: []
        },
        {
          background: []
        }
      ],
      [
        {
          script: "super"
        },
        {
          script: "sub"
        }
      ],
      [
        {
          header: "1"
        },
        {
          header: "2"
        },
        "blockquote",
        "code-block"
      ],
      [
        {
          list: "ordered"
        },
        {
          list: "bullet"
        },
        {
          indent: "-1"
        },
        {
          indent: "+1"
        }
      ],
      [{ direction: "rtl" }],
      ["link", "image", "video", "formula"],
      ["clean"]
    ];
    const fullEditor = new Quill("#full-editor", {
      bounds: "#full-editor",
      placeholder: "Type Something...",
      modules: {
        formula: true,
        toolbar: fullToolbar
      },
      theme: "snow"
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-extras.js
  (function() {
    const textarea = document.querySelector("#autosize-demo"), creditCard = document.querySelector(".credit-card-mask"), phoneMask = document.querySelector(".phone-number-mask"), dateMask = document.querySelector(".date-mask"), timeMask = document.querySelector(".time-mask"), numeralMask = document.querySelector(".numeral-mask"), blockMask = document.querySelector(".block-mask"), delimiterMask = document.querySelector(".delimiter-mask"), customDelimiter = document.querySelector(".custom-delimiter-mask"), prefixMask = document.querySelector(".prefix-mask");
    if (textarea) {
      autosize(textarea);
    }
    if (creditCard) {
      new Cleave(creditCard, {
        creditCard: true,
        onCreditCardTypeChanged: function(type) {
          if (type != "" && type != "unknown") {
            document.querySelector(".card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" height="28"/>';
          } else {
            document.querySelector(".card-type").innerHTML = "";
          }
        }
      });
    }
    if (phoneMask) {
      new Cleave(phoneMask, {
        phone: true,
        phoneRegionCode: "US"
      });
    }
    if (dateMask) {
      new Cleave(dateMask, {
        date: true,
        delimiter: "-",
        datePattern: ["Y", "m", "d"]
      });
    }
    if (timeMask) {
      new Cleave(timeMask, {
        time: true,
        timePattern: ["h", "m", "s"]
      });
    }
    if (numeralMask) {
      new Cleave(numeralMask, {
        numeral: true,
        numeralThousandsGroupStyle: "thousand"
      });
    }
    if (blockMask) {
      new Cleave(blockMask, {
        blocks: [4, 3, 3],
        uppercase: true
      });
    }
    if (delimiterMask) {
      new Cleave(delimiterMask, {
        delimiter: "\xB7",
        blocks: [3, 3, 3],
        uppercase: true
      });
    }
    if (customDelimiter) {
      new Cleave(customDelimiter, {
        delimiters: [".", ".", "-"],
        blocks: [3, 3, 3, 2],
        uppercase: true
      });
    }
    if (prefixMask) {
      new Cleave(prefixMask, {
        prefix: "+63",
        blocks: [3, 3, 3, 4],
        uppercase: true
      });
    }
  })();
  $(function() {
    var maxlengthInput = $(".bootstrap-maxlength-example"), formRepeater = $(".form-repeater");
    if (maxlengthInput.length) {
      maxlengthInput.each(function() {
        $(this).maxlength({
          warningClass: "label label-success bg-success text-white",
          limitReachedClass: "label label-danger",
          separator: " out of ",
          preText: "You typed ",
          postText: " chars available.",
          validate: true,
          threshold: +this.getAttribute("maxlength")
        });
      });
    }
    if (formRepeater.length) {
      var row = 2;
      var col = 1;
      formRepeater.on("submit", function(e) {
        e.preventDefault();
      });
      formRepeater.repeater({
        show: function() {
          var fromControl = $(this).find(".form-control, .form-select");
          var formLabel = $(this).find(".form-label");
          fromControl.each(function(i) {
            var id = "form-repeater-" + row + "-" + col;
            $(fromControl[i]).attr("id", id);
            $(formLabel[i]).attr("for", id);
            col++;
          });
          row++;
          $(this).slideDown();
        },
        hide: function(e) {
          confirm("Are you sure you want to delete this element?") && $(this).slideUp(e);
        }
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-file-upload.js
  (function() {
    const previewTemplate = `<div class="dz-preview dz-file-preview">
<div class="dz-details">
  <div class="dz-thumbnail">
    <img data-dz-thumbnail>
    <span class="dz-nopreview">No preview</span>
    <div class="dz-success-mark"></div>
    <div class="dz-error-mark"></div>
    <div class="dz-error-message"><span data-dz-errormessage></span></div>
    <div class="progress">
      <div class="progress-bar progress-bar-primary" role="progressbar" aria-valuemin="0" aria-valuemax="100" data-dz-uploadprogress></div>
    </div>
  </div>
  <div class="dz-filename" data-dz-name></div>
  <div class="dz-size" data-dz-size></div>
</div>
</div>`;
    const dropzoneBasic = document.querySelector("#dropzone-basic");
    if (dropzoneBasic) {
      const myDropzone = new Dropzone(dropzoneBasic, {
        previewTemplate,
        parallelUploads: 1,
        maxFilesize: 5,
        addRemoveLinks: true,
        maxFiles: 1
      });
    }
    const dropzoneMulti = document.querySelector("#dropzone-multi");
    if (dropzoneMulti) {
      const myDropzoneMulti = new Dropzone(dropzoneMulti, {
        previewTemplate,
        parallelUploads: 1,
        maxFilesize: 5,
        addRemoveLinks: true
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-pickers.js
  (function() {
    const flatpickrDate = document.querySelector("#flatpickr-date"), flatpickrTime = document.querySelector("#flatpickr-time"), flatpickrDateTime = document.querySelector("#flatpickr-datetime"), flatpickrMulti = document.querySelector("#flatpickr-multi"), flatpickrRange = document.querySelector("#flatpickr-range"), flatpickrInline = document.querySelector("#flatpickr-inline"), flatpickrFriendly = document.querySelector("#flatpickr-human-friendly"), flatpickrDisabledRange = document.querySelector("#flatpickr-disabled-range");
    if (flatpickrDate) {
      flatpickrDate.flatpickr({
        monthSelectorType: "static"
      });
    }
    if (flatpickrTime) {
      flatpickrTime.flatpickr({
        enableTime: true,
        noCalendar: true
      });
    }
    if (flatpickrDateTime) {
      flatpickrDateTime.flatpickr({
        enableTime: true,
        dateFormat: "Y-m-d H:i"
      });
    }
    if (flatpickrMulti) {
      flatpickrMulti.flatpickr({
        weekNumbers: true,
        enableTime: true,
        mode: "multiple",
        minDate: "today"
      });
    }
    if (typeof flatpickrRange != void 0) {
      flatpickrRange.flatpickr({
        mode: "range"
      });
    }
    if (flatpickrInline) {
      flatpickrInline.flatpickr({
        inline: true,
        allowInput: false,
        monthSelectorType: "static"
      });
    }
    if (flatpickrFriendly) {
      flatpickrFriendly.flatpickr({
        altInput: true,
        altFormat: "F j, Y",
        dateFormat: "Y-m-d"
      });
    }
    if (flatpickrDisabledRange) {
      const fromDate = new Date(Date.now() - 3600 * 1e3 * 48);
      const toDate = new Date(Date.now() + 3600 * 1e3 * 48);
      flatpickrDisabledRange.flatpickr({
        dateFormat: "Y-m-d",
        disable: [
          {
            from: fromDate.toISOString().split("T")[0],
            to: toDate.toISOString().split("T")[0]
          }
        ]
      });
    }
  })();
  $(function() {
    var bsDatepickerBasic = $("#bs-datepicker-basic"), bsDatepickerFormat = $("#bs-datepicker-format"), bsDatepickerRange = $("#bs-datepicker-daterange"), bsDatepickerDisabledDays = $("#bs-datepicker-disabled-days"), bsDatepickerMultidate = $("#bs-datepicker-multidate"), bsDatepickerOptions = $("#bs-datepicker-options"), bsDatepickerAutoclose = $("#bs-datepicker-autoclose"), bsDatepickerInlinedate = $("#bs-datepicker-inline");
    if (bsDatepickerBasic.length) {
      bsDatepickerBasic.datepicker({
        todayHighlight: true,
        orientation: isRtl ? "auto right" : "auto left"
      });
    }
    if (bsDatepickerFormat.length) {
      bsDatepickerFormat.datepicker({
        todayHighlight: true,
        format: "dd/mm/yyyy",
        orientation: isRtl ? "auto right" : "auto left"
      });
    }
    if (bsDatepickerRange.length) {
      bsDatepickerRange.datepicker({
        todayHighlight: true,
        orientation: isRtl ? "auto right" : "auto left"
      });
    }
    if (bsDatepickerDisabledDays.length) {
      bsDatepickerDisabledDays.datepicker({
        todayHighlight: true,
        daysOfWeekDisabled: [0, 6],
        orientation: isRtl ? "auto right" : "auto left"
      });
    }
    if (bsDatepickerMultidate.length) {
      bsDatepickerMultidate.datepicker({
        multidate: true,
        todayHighlight: true,
        orientation: isRtl ? "auto right" : "auto left"
      });
    }
    if (bsDatepickerOptions.length) {
      bsDatepickerOptions.datepicker({
        calendarWeeks: true,
        clearBtn: true,
        todayHighlight: true,
        orientation: isRtl ? "auto left" : "auto right"
      });
    }
    if (bsDatepickerAutoclose.length) {
      bsDatepickerAutoclose.datepicker({
        todayHighlight: true,
        autoclose: true,
        orientation: isRtl ? "auto right" : "auto left"
      });
    }
    if (bsDatepickerInlinedate.length) {
      bsDatepickerInlinedate.datepicker({
        todayHighlight: true
      });
    }
    var bsRangePickerBasic = $("#bs-rangepicker-basic"), bsRangePickerSingle = $("#bs-rangepicker-single"), bsRangePickerTime = $("#bs-rangepicker-time"), bsRangePickerRange = $("#bs-rangepicker-range"), bsRangePickerWeekNum = $("#bs-rangepicker-week-num"), bsRangePickerDropdown = $("#bs-rangepicker-dropdown"), bsRangePickerCancelBtn = document.getElementsByClassName("cancelBtn");
    if (bsRangePickerBasic.length) {
      bsRangePickerBasic.daterangepicker({
        opens: isRtl ? "left" : "right"
      });
    }
    if (bsRangePickerSingle.length) {
      bsRangePickerSingle.daterangepicker({
        singleDatePicker: true,
        opens: isRtl ? "left" : "right"
      });
    }
    if (bsRangePickerTime.length) {
      bsRangePickerTime.daterangepicker({
        timePicker: true,
        timePickerIncrement: 30,
        locale: {
          format: "MM/DD/YYYY h:mm A"
        },
        opens: isRtl ? "left" : "right"
      });
    }
    if (bsRangePickerRange.length) {
      bsRangePickerRange.daterangepicker({
        ranges: {
          Today: [moment(), moment()],
          Yesterday: [moment().subtract(1, "days"), moment().subtract(1, "days")],
          "Last 7 Days": [moment().subtract(6, "days"), moment()],
          "Last 30 Days": [moment().subtract(29, "days"), moment()],
          "This Month": [moment().startOf("month"), moment().endOf("month")],
          "Last Month": [moment().subtract(1, "month").startOf("month"), moment().subtract(1, "month").endOf("month")]
        },
        opens: isRtl ? "left" : "right"
      });
    }
    if (bsRangePickerWeekNum.length) {
      bsRangePickerWeekNum.daterangepicker({
        showWeekNumbers: true,
        opens: isRtl ? "left" : "right"
      });
    }
    if (bsRangePickerDropdown.length) {
      bsRangePickerDropdown.daterangepicker({
        showDropdowns: true,
        opens: isRtl ? "left" : "right"
      });
    }
    for (var i = 0; i < bsRangePickerCancelBtn.length; i++) {
      bsRangePickerCancelBtn[i].classList.remove("btn-default");
      bsRangePickerCancelBtn[i].classList.add("btn-label-primary");
    }
    var basicTimepicker = $("#timepicker-basic"), minMaxTimepicker = $("#timepicker-min-max"), disabledTimepicker = $("#timepicker-disabled-times"), formatTimepicker = $("#timepicker-format"), stepTimepicker = $("#timepicker-step"), altHourTimepicker = $("#timepicker-24hours");
    if (basicTimepicker.length) {
      basicTimepicker.timepicker({
        orientation: isRtl ? "r" : "l"
      });
    }
    if (minMaxTimepicker.length) {
      minMaxTimepicker.timepicker({
        minTime: "2:00pm",
        maxTime: "7:00pm",
        showDuration: true,
        orientation: isRtl ? "r" : "l"
      });
    }
    if (disabledTimepicker.length) {
      disabledTimepicker.timepicker({
        disableTimeRanges: [
          ["12am", "3am"],
          ["4am", "4:30am"]
        ],
        orientation: isRtl ? "r" : "l"
      });
    }
    if (formatTimepicker.length) {
      formatTimepicker.timepicker({
        timeFormat: "H:i:s",
        orientation: isRtl ? "r" : "l"
      });
    }
    if (stepTimepicker.length) {
      stepTimepicker.timepicker({
        step: 15,
        orientation: isRtl ? "r" : "l"
      });
    }
    if (altHourTimepicker.length) {
      altHourTimepicker.timepicker({
        show: "24:00",
        timeFormat: "H:i:s",
        orientation: isRtl ? "r" : "l"
      });
    }
  });
  (function() {
    const classicPicker = document.querySelector("#color-picker-classic"), monolithPicker = document.querySelector("#color-picker-monolith"), nanoPicker = document.querySelector("#color-picker-nano");
    if (classicPicker) {
      pickr.create({
        el: classicPicker,
        theme: "classic",
        default: "rgba(102, 108, 232, 1)",
        swatches: [
          "rgba(102, 108, 232, 1)",
          "rgba(40, 208, 148, 1)",
          "rgba(255, 73, 97, 1)",
          "rgba(255, 145, 73, 1)",
          "rgba(30, 159, 242, 1)"
        ],
        components: {
          preview: true,
          opacity: true,
          hue: true,
          interaction: {
            hex: true,
            rgba: true,
            hsla: true,
            hsva: true,
            cmyk: true,
            input: true,
            clear: true,
            save: true
          }
        }
      });
    }
    if (monolithPicker) {
      pickr.create({
        el: monolithPicker,
        theme: "monolith",
        default: "rgba(40, 208, 148, 1)",
        swatches: [
          "rgba(102, 108, 232, 1)",
          "rgba(40, 208, 148, 1)",
          "rgba(255, 73, 97, 1)",
          "rgba(255, 145, 73, 1)",
          "rgba(30, 159, 242, 1)"
        ],
        components: {
          preview: true,
          opacity: true,
          hue: true,
          interaction: {
            hex: true,
            rgba: true,
            hsla: true,
            hsva: true,
            cmyk: true,
            input: true,
            clear: true,
            save: true
          }
        }
      });
    }
    if (nanoPicker) {
      pickr.create({
        el: nanoPicker,
        theme: "nano",
        default: "rgba(255, 73, 97, 1)",
        swatches: [
          "rgba(102, 108, 232, 1)",
          "rgba(40, 208, 148, 1)",
          "rgba(255, 73, 97, 1)",
          "rgba(255, 145, 73, 1)",
          "rgba(30, 159, 242, 1)"
        ],
        components: {
          preview: true,
          opacity: true,
          hue: true,
          interaction: {
            hex: true,
            rgba: true,
            hsla: true,
            hsva: true,
            cmyk: true,
            input: true,
            clear: true,
            save: true
          }
        }
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-selects.js
  $(function() {
    const selectPicker = $(".selectpicker"), select2 = $(".select2"), select2Icons = $(".select2-icons");
    if (selectPicker.length) {
      selectPicker.selectpicker();
    }
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          placeholder: "Select value",
          dropdownParent: $this.parent()
        });
      });
    }
    if (select2Icons.length) {
      let renderIcons = function(option) {
        if (!option.id) {
          return option.text;
        }
        var $icon = "<i class='" + $(option.element).data("icon") + " me-2'></i>" + option.text;
        return $icon;
      };
      select2Icons.wrap('<div class="position-relative"></div>').select2({
        dropdownParent: select2Icons.parent(),
        templateResult: renderIcons,
        templateSelection: renderIcons,
        escapeMarkup: function(es) {
          return es;
        }
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-sliders.js
  (function() {
    const sliderBasic = document.getElementById("slider-basic"), sliderHandles = document.getElementById("slider-handles"), sliderSteps = document.getElementById("slider-steps"), sliderTap = document.getElementById("slider-tap"), sliderDrag = document.getElementById("slider-drag"), sliderFixedDrag = document.getElementById("slider-fixed-drag"), sliderCombined = document.getElementById("slider-combined-options"), sliderHover = document.getElementById("slider-hover"), sliderPips = document.getElementById("slider-pips");
    if (sliderBasic) {
      noUiSlider.create(sliderBasic, {
        start: [50],
        connect: [true, false],
        direction: isRtl ? "rtl" : "ltr",
        range: {
          min: 0,
          max: 100
        }
      });
    }
    if (sliderHandles) {
      noUiSlider.create(sliderHandles, {
        start: [0, 50],
        direction: isRtl ? "rtl" : "ltr",
        step: 5,
        connect: true,
        range: {
          min: 0,
          max: 100
        },
        pips: {
          mode: "range",
          density: 5,
          stepped: true
        }
      });
    }
    if (sliderSteps) {
      noUiSlider.create(sliderSteps, {
        start: [0, 30],
        snap: true,
        connect: true,
        direction: isRtl ? "rtl" : "ltr",
        range: {
          min: 0,
          "10%": 10,
          "20%": 20,
          "30%": 30,
          "40%": 40,
          "50%": 50,
          max: 100
        }
      });
    }
    if (sliderTap) {
      noUiSlider.create(sliderTap, {
        start: [10, 30],
        behaviour: "tap",
        direction: isRtl ? "rtl" : "ltr",
        connect: true,
        range: {
          min: 10,
          max: 100
        }
      });
    }
    if (sliderDrag) {
      noUiSlider.create(sliderDrag, {
        start: [40, 60],
        limit: 20,
        behaviour: "drag",
        direction: isRtl ? "rtl" : "ltr",
        connect: true,
        range: {
          min: 20,
          max: 80
        }
      });
    }
    if (sliderFixedDrag) {
      noUiSlider.create(sliderFixedDrag, {
        start: [40, 60],
        behaviour: "drag-fixed",
        direction: isRtl ? "rtl" : "ltr",
        connect: true,
        range: {
          min: 20,
          max: 80
        }
      });
    }
    if (sliderCombined) {
      noUiSlider.create(sliderCombined, {
        start: [40, 60],
        behaviour: "drag-tap",
        direction: isRtl ? "rtl" : "ltr",
        connect: true,
        range: {
          min: 20,
          max: 80
        }
      });
    }
    if (sliderHover) {
      noUiSlider.create(sliderHover, {
        start: 20,
        behaviour: "hover-snap-tap",
        direction: isRtl ? "rtl" : "ltr",
        range: {
          min: 0,
          max: 100
        }
      });
      sliderHover.noUiSlider.on("hover", function(value) {
        document.getElementById("slider-val").innerHTML = value;
      });
    }
    if (sliderPips) {
      noUiSlider.create(sliderPips, {
        start: [10],
        behaviour: "tap-drag",
        step: 10,
        tooltips: true,
        range: {
          min: 0,
          max: 100
        },
        pips: {
          mode: "steps",
          stepped: true,
          density: 5
        },
        direction: isRtl ? "rtl" : "ltr"
      });
    }
    const sliderPrimary = document.getElementById("slider-primary"), sliderSuccess = document.getElementById("slider-success"), sliderDanger = document.getElementById("slider-danger"), sliderInfo = document.getElementById("slider-info"), sliderWarning = document.getElementById("slider-warning"), colorOptions = {
      start: [30, 50],
      connect: true,
      behaviour: "tap-drag",
      step: 10,
      tooltips: true,
      range: {
        min: 0,
        max: 100
      },
      pips: {
        mode: "steps",
        stepped: true,
        density: 5
      },
      direction: isRtl ? "rtl" : "ltr"
    };
    if (sliderPrimary) {
      noUiSlider.create(sliderPrimary, colorOptions);
    }
    if (sliderSuccess) {
      noUiSlider.create(sliderSuccess, colorOptions);
    }
    if (sliderDanger) {
      noUiSlider.create(sliderDanger, colorOptions);
    }
    if (sliderInfo) {
      noUiSlider.create(sliderInfo, colorOptions);
    }
    if (sliderWarning) {
      noUiSlider.create(sliderWarning, colorOptions);
    }
    const dynamicSlider = document.getElementById("slider-dynamic"), sliderSelect = document.getElementById("slider-select"), sliderInput = document.getElementById("slider-input");
    if (dynamicSlider) {
      noUiSlider.create(dynamicSlider, {
        start: [10, 30],
        connect: true,
        direction: isRtl ? "rtl" : "ltr",
        range: {
          min: -20,
          max: 40
        }
      });
      dynamicSlider.noUiSlider.on("update", function(values, handle) {
        const value = values[handle];
        if (handle) {
          sliderInput.value = value;
        } else {
          sliderSelect.value = Math.round(value);
        }
      });
    }
    if (sliderSelect) {
      for (let i = -20; i <= 40; i++) {
        let option = document.createElement("option");
        option.text = i;
        option.value = i;
        sliderSelect.appendChild(option);
      }
      sliderSelect.addEventListener("change", function() {
        dynamicSlider.noUiSlider.set([this.value, null]);
      });
    }
    if (sliderInput) {
      sliderInput.addEventListener("change", function() {
        dynamicSlider.noUiSlider.set([null, this.value]);
      });
    }
    const defaultVertical = document.getElementById("slider-vertical"), connectVertical = document.getElementById("slider-connect-upper"), tooltipVertical = document.getElementById("slider-vertical-tooltip"), limitVertical = document.getElementById("slider-vertical-limit");
    if (defaultVertical) {
      defaultVertical.style.height = "200px";
      noUiSlider.create(defaultVertical, {
        start: [40, 60],
        orientation: "vertical",
        behaviour: "drag",
        connect: true,
        range: {
          min: 0,
          max: 100
        }
      });
    }
    if (connectVertical) {
      connectVertical.style.height = "200px";
      noUiSlider.create(connectVertical, {
        start: 40,
        orientation: "vertical",
        behaviour: "drag",
        connect: "upper",
        range: {
          min: 0,
          max: 100
        }
      });
    }
    if (tooltipVertical) {
      tooltipVertical.style.height = "200px";
      noUiSlider.create(tooltipVertical, {
        start: 10,
        orientation: "vertical",
        behaviour: "drag",
        tooltips: true,
        range: {
          min: 0,
          max: 100
        }
      });
    }
    if (limitVertical) {
      limitVertical.style.height = "200px";
      noUiSlider.create(limitVertical, {
        start: [0, 40],
        orientation: "vertical",
        behaviour: "drag",
        limit: 60,
        tooltips: true,
        connect: true,
        range: {
          min: 0,
          max: 100
        }
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-tagify.js
  (function() {
    const tagifyBasicEl = document.querySelector("#TagifyBasic");
    const TagifyBasic = new Tagify(tagifyBasicEl);
    const tagifyReadonlyEl = document.querySelector("#TagifyReadonly");
    const TagifyReadonly = new Tagify(tagifyReadonlyEl);
    const TagifyCustomInlineSuggestionEl = document.querySelector("#TagifyCustomInlineSuggestion");
    const TagifyCustomListSuggestionEl = document.querySelector("#TagifyCustomListSuggestion");
    const whitelist = [
      "A# .NET",
      "A# (Axiom)",
      "A-0 System",
      "A+",
      "A++",
      "ABAP",
      "ABC",
      "ABC ALGOL",
      "ABSET",
      "ABSYS",
      "ACC",
      "Accent",
      "Ace DASL",
      "ACL2",
      "Avicsoft",
      "ACT-III",
      "Action!",
      "ActionScript",
      "Ada",
      "Adenine",
      "Agda",
      "Agilent VEE",
      "Agora",
      "AIMMS",
      "Alef",
      "ALF",
      "ALGOL 58",
      "ALGOL 60",
      "ALGOL 68",
      "ALGOL W",
      "Alice",
      "Alma-0",
      "AmbientTalk",
      "Amiga E",
      "AMOS",
      "AMPL",
      "Apex (Salesforce.com)",
      "APL",
      "AppleScript",
      "Arc",
      "ARexx",
      "Argus",
      "AspectJ",
      "Assembly language",
      "ATS",
      "Ateji PX",
      "AutoHotkey",
      "Autocoder",
      "AutoIt",
      "AutoLISP / Visual LISP",
      "Averest",
      "AWK",
      "Axum",
      "Active Server Pages",
      "ASP.NET"
    ];
    let TagifyCustomInlineSuggestion = new Tagify(TagifyCustomInlineSuggestionEl, {
      whitelist,
      maxTags: 10,
      dropdown: {
        maxItems: 20,
        classname: "tags-inline",
        enabled: 0,
        closeOnSelect: false
      }
    });
    let TagifyCustomListSuggestion = new Tagify(TagifyCustomListSuggestionEl, {
      whitelist,
      maxTags: 10,
      dropdown: {
        maxItems: 20,
        classname: "",
        enabled: 0,
        closeOnSelect: false
      }
    });
    const TagifyUserListEl = document.querySelector("#TagifyUserList");
    const usersList = [
      {
        value: 1,
        name: "Justinian Hattersley",
        avatar: "https://i.pravatar.cc/80?img=1",
        email: "jhattersley0@ucsd.edu"
      },
      {
        value: 2,
        name: "Antons Esson",
        avatar: "https://i.pravatar.cc/80?img=2",
        email: "aesson1@ning.com"
      },
      {
        value: 3,
        name: "Ardeen Batisse",
        avatar: "https://i.pravatar.cc/80?img=3",
        email: "abatisse2@nih.gov"
      },
      {
        value: 4,
        name: "Graeme Yellowley",
        avatar: "https://i.pravatar.cc/80?img=4",
        email: "gyellowley3@behance.net"
      },
      {
        value: 5,
        name: "Dido Wilford",
        avatar: "https://i.pravatar.cc/80?img=5",
        email: "dwilford4@jugem.jp"
      },
      {
        value: 6,
        name: "Celesta Orwin",
        avatar: "https://i.pravatar.cc/80?img=6",
        email: "corwin5@meetup.com"
      },
      {
        value: 7,
        name: "Sally Main",
        avatar: "https://i.pravatar.cc/80?img=7",
        email: "smain6@techcrunch.com"
      },
      {
        value: 8,
        name: "Grethel Haysman",
        avatar: "https://i.pravatar.cc/80?img=8",
        email: "ghaysman7@mashable.com"
      },
      {
        value: 9,
        name: "Marvin Mandrake",
        avatar: "https://i.pravatar.cc/80?img=9",
        email: "mmandrake8@sourceforge.net"
      },
      {
        value: 10,
        name: "Corrie Tidey",
        avatar: "https://i.pravatar.cc/80?img=10",
        email: "ctidey9@youtube.com"
      }
    ];
    function tagTemplate(tagData) {
      return `
    <tag title="${tagData.title || tagData.email}"
      contenteditable='false'
      spellcheck='false'
      tabIndex="-1"
      class="${this.settings.classNames.tag} ${tagData.class ? tagData.class : ""}"
      ${this.getAttributes(tagData)}
    >
      <x title='' class='tagify__tag__removeBtn' role='button' aria-label='remove tag'></x>
      <div>
        <div class='tagify__tag__avatar-wrap'>
          <img onerror="this.style.visibility='hidden'" src="${tagData.avatar}">
        </div>
        <span class='tagify__tag-text'>${tagData.name}</span>
      </div>
    </tag>
  `;
    }
    function suggestionItemTemplate(tagData) {
      return `
    <div ${this.getAttributes(tagData)}
      class='tagify__dropdown__item align-items-center ${tagData.class ? tagData.class : ""}'
      tabindex="0"
      role="option"
    >
      ${tagData.avatar ? `<div class='tagify__dropdown__item__avatar-wrap'>
          <img onerror="this.style.visibility='hidden'" src="${tagData.avatar}">
        </div>` : ""}
      <div class="fw-medium">${tagData.name}</div>
      <span>${tagData.email}</span>
    </div>
  `;
    }
    function dropdownHeaderTemplate(suggestions) {
      return `
        <div class="${this.settings.classNames.dropdownItem} ${this.settings.classNames.dropdownItem}__addAll">
            <strong>${this.value.length ? `Add remaning` : "Add All"}</strong>
            <span>${suggestions.length} members</span>
        </div>
    `;
    }
    let TagifyUserList = new Tagify(TagifyUserListEl, {
      tagTextProp: "name",
      enforceWhitelist: true,
      skipInvalid: true,
      dropdown: {
        closeOnSelect: false,
        enabled: 0,
        classname: "users-list",
        searchKeys: ["name", "email"]
      },
      templates: {
        tag: tagTemplate,
        dropdownItem: suggestionItemTemplate,
        dropdownHeader: dropdownHeaderTemplate
      },
      whitelist: usersList
    });
    TagifyUserList.on("dropdown:select", onSelectSuggestion).on("edit:start", onEditStart);
    function onSelectSuggestion(e) {
      if (e.detail.elm.classList.contains(`${TagifyUserList.settings.classNames.dropdownItem}__addAll`))
        TagifyUserList.dropdown.selectAll();
    }
    function onEditStart({ detail: { tag, data } }) {
      TagifyUserList.setTagTextNode(tag, `${data.name} <${data.email}>`);
    }
    let randomStringsArr = Array.apply(null, Array(100)).map(function() {
      return Array.apply(null, Array(~~(Math.random() * 10 + 3))).map(function() {
        return String.fromCharCode(Math.random() * (123 - 97) + 97);
      }).join("") + "@gmail.com";
    });
    const TagifyEmailListEl = document.querySelector("#TagifyEmailList"), TagifyEmailList = new Tagify(TagifyEmailListEl, {
      pattern: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
      whitelist: randomStringsArr,
      callbacks: {
        invalid: onInvalidTag
      },
      dropdown: {
        position: "text",
        enabled: 1
      }
    }), button = TagifyEmailListEl.nextElementSibling;
    button.addEventListener("click", onAddButtonClick);
    function onAddButtonClick() {
      TagifyEmailList.addEmptyTag();
    }
    function onInvalidTag(e) {
      console.log("invalid", e.detail);
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/forms-typeahead.js
  $(function() {
    var substringMatcher = function(strs) {
      return function findMatches(q, cb) {
        var matches, substrRegex;
        matches = [];
        substrRegex = new RegExp(q, "i");
        $.each(strs, function(i, str) {
          if (substrRegex.test(str)) {
            matches.push(str);
          }
        });
        cb(matches);
      };
    };
    var states = [
      "Alabama",
      "Alaska",
      "Arizona",
      "Arkansas",
      "California",
      "Colorado",
      "Connecticut",
      "Delaware",
      "Florida",
      "Georgia",
      "Hawaii",
      "Idaho",
      "Illinois",
      "Indiana",
      "Iowa",
      "Kansas",
      "Kentucky",
      "Louisiana",
      "Maine",
      "Maryland",
      "Massachusetts",
      "Michigan",
      "Minnesota",
      "Mississippi",
      "Missouri",
      "Montana",
      "Nebraska",
      "Nevada",
      "New Hampshire",
      "New Jersey",
      "New Mexico",
      "New York",
      "North Carolina",
      "North Dakota",
      "Ohio",
      "Oklahoma",
      "Oregon",
      "Pennsylvania",
      "Rhode Island",
      "South Carolina",
      "South Dakota",
      "Tennessee",
      "Texas",
      "Utah",
      "Vermont",
      "Virginia",
      "Washington",
      "West Virginia",
      "Wisconsin",
      "Wyoming"
    ];
    if (isRtl) {
      $(".typeahead").attr("dir", "rtl");
    }
    $(".typeahead").typeahead(
      {
        hint: !isRtl,
        highlight: true,
        minLength: 1
      },
      {
        name: "states",
        source: substringMatcher(states)
      }
    );
    var bloodhoundBasicExample = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.whitespace,
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      local: states
    });
    $(".typeahead-bloodhound").typeahead(
      {
        hint: !isRtl,
        highlight: true,
        minLength: 1
      },
      {
        name: "states",
        source: bloodhoundBasicExample
      }
    );
    var prefetchExample = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.whitespace,
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      prefetch: assetsPath + "json/typeahead.json"
    });
    $(".typeahead-prefetch").typeahead(
      {
        hint: !isRtl,
        highlight: true,
        minLength: 1
      },
      {
        name: "states",
        source: prefetchExample
      }
    );
    function renderDefaults(q, sync) {
      if (q === "") {
        sync(prefetchExample.get("Alaska", "New York", "Washington"));
      } else {
        prefetchExample.search(q, sync);
      }
    }
    $(".typeahead-default-suggestions").typeahead(
      {
        hint: !isRtl,
        highlight: true,
        minLength: 0
      },
      {
        name: "states",
        source: renderDefaults
      }
    );
    var customTemplate = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace("value"),
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      prefetch: assetsPath + "json/typeahead-data-2.json"
    });
    $(".typeahead-custom-template").typeahead(null, {
      name: "best-movies",
      display: "value",
      source: customTemplate,
      highlight: true,
      hint: !isRtl,
      templates: {
        empty: [
          '<div class="empty-message p-2">',
          "unable to find any Best Picture winners that match the current query",
          "</div>"
        ].join("\n"),
        suggestion: function(data) {
          return '<div><span class="fw-medium">' + data.value + "</span> \u2013 " + data.year + "</div>";
        }
      }
    });
    var nbaTeams = [
      { team: "Boston Celtics" },
      { team: "Dallas Mavericks" },
      { team: "Brooklyn Nets" },
      { team: "Houston Rockets" },
      { team: "New York Knicks" },
      { team: "Memphis Grizzlies" },
      { team: "Philadelphia 76ers" },
      { team: "New Orleans Hornets" },
      { team: "Toronto Raptors" },
      { team: "San Antonio Spurs" },
      { team: "Chicago Bulls" },
      { team: "Denver Nuggets" },
      { team: "Cleveland Cavaliers" },
      { team: "Minnesota Timberwolves" },
      { team: "Detroit Pistons" },
      { team: "Portland Trail Blazers" },
      { team: "Indiana Pacers" },
      { team: "Oklahoma City Thunder" },
      { team: "Milwaukee Bucks" },
      { team: "Utah Jazz" },
      { team: "Atlanta Hawks" },
      { team: "Golden State Warriors" },
      { team: "Charlotte Bobcats" },
      { team: "Los Angeles Clippers" },
      { team: "Miami Heat" },
      { team: "Los Angeles Lakers" },
      { team: "Orlando Magic" },
      { team: "Phoenix Suns" },
      { team: "Washington Wizards" },
      { team: "Sacramento Kings" }
    ];
    var nhlTeams = [
      { team: "New Jersey Devils" },
      { team: "New York Islanders" },
      { team: "New York Rangers" },
      { team: "Philadelphia Flyers" },
      { team: "Pittsburgh Penguins" },
      { team: "Chicago Blackhawks" },
      { team: "Columbus Blue Jackets" },
      { team: "Detroit Red Wings" },
      { team: "Nashville Predators" },
      { team: "St. Louis Blues" },
      { team: "Boston Bruins" },
      { team: "Buffalo Sabres" },
      { team: "Montreal Canadiens" },
      { team: "Ottawa Senators" },
      { team: "Toronto Maple Leafs" },
      { team: "Calgary Flames" },
      { team: "Colorado Avalanche" },
      { team: "Edmonton Oilers" },
      { team: "Minnesota Wild" },
      { team: "Vancouver Canucks" },
      { team: "Carolina Hurricanes" },
      { team: "Florida Panthers" },
      { team: "Tampa Bay Lightning" },
      { team: "Washington Capitals" },
      { team: "Winnipeg Jets" },
      { team: "Anaheim Ducks" },
      { team: "Dallas Stars" },
      { team: "Los Angeles Kings" },
      { team: "Phoenix Coyotes" },
      { team: "San Jose Sharks" }
    ];
    var nbaExample = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace("team"),
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      local: nbaTeams
    });
    var nhlExample = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace("team"),
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      local: nhlTeams
    });
    $(".typeahead-multi-datasets").typeahead(
      {
        hint: !isRtl,
        highlight: true,
        minLength: 0
      },
      {
        name: "nba-teams",
        source: nbaExample,
        display: "team",
        templates: {
          header: '<h5 class="league-name border-bottom mb-0 mx-3 mt-3 pb-2">NBA Teams</h5>'
        }
      },
      {
        name: "nhl-teams",
        source: nhlExample,
        display: "team",
        templates: {
          header: '<h5 class="league-name border-bottom mb-0 mx-3 mt-3 pb-2">NHL Teams</h5>'
        }
      }
    );
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/front-main.js
  var isRtl2 = window.Helpers.isRtl();
  var isDarkStyle2 = window.Helpers.isDarkStyle();
  (function() {
    const menu2 = document.getElementById("navbarSupportedContent"), nav = document.querySelector(".layout-navbar"), navItemLink = document.querySelectorAll(".navbar-nav .nav-link");
    setTimeout(function() {
      window.Helpers.initCustomOptionCheck();
    }, 1e3);
    if (typeof Waves !== "undefined") {
      Waves.init();
      Waves.attach(".btn[class*='btn-']:not([class*='btn-outline-']):not([class*='btn-label-'])", ["waves-light"]);
      Waves.attach("[class*='btn-outline-']");
      Waves.attach("[class*='btn-label-']");
      Waves.attach(".pagination .page-item .page-link");
    }
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function(tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
    if (isRtl2) {
      Helpers._addClass("dropdown-menu-end", document.querySelectorAll("#layout-navbar .dropdown-menu"));
    }
    window.addEventListener("scroll", (e) => {
      if (window.scrollY > 10) {
        nav.classList.add("navbar-active");
      } else {
        nav.classList.remove("navbar-active");
      }
    });
    window.addEventListener("load", (e) => {
      if (window.scrollY > 10) {
        nav.classList.add("navbar-active");
      } else {
        nav.classList.remove("navbar-active");
      }
    });
    function closeMenu() {
      menu2.classList.remove("show");
    }
    document.addEventListener("click", function(event) {
      if (!menu2.contains(event.target)) {
        closeMenu();
      }
    });
    navItemLink.forEach((link) => {
      link.addEventListener("click", (event) => {
        if (!link.classList.contains("dropdown-toggle")) {
          closeMenu();
        } else {
          event.preventDefault();
        }
      });
    });
    if (isRtl2) {
      Helpers._addClass("dropdown-menu-end", document.querySelectorAll(".dropdown-menu"));
    }
    const megaDropdown = document.querySelectorAll(".nav-link.mega-dropdown");
    if (megaDropdown) {
      megaDropdown.forEach((e) => {
        new MegaDropdown(e);
      });
    }
    let styleSwitcher = document.querySelector(".dropdown-style-switcher");
    if (window.templateCustomizer && styleSwitcher) {
      let storedStyle = localStorage.getItem("templateCustomizer-" + templateName + "--Style") || window.templateCustomizer.settings.defaultStyle;
      let styleSwitcherItems = [].slice.call(styleSwitcher.children[1].querySelectorAll(".dropdown-item"));
      styleSwitcherItems.forEach(function(item) {
        item.addEventListener("click", function() {
          let currentStyle = this.getAttribute("data-theme");
          if (currentStyle === "light") {
            window.templateCustomizer.setStyle("light");
          } else if (currentStyle === "dark") {
            window.templateCustomizer.setStyle("dark");
          } else {
            window.templateCustomizer.setStyle("system");
          }
        });
      });
      const styleSwitcherIcon = styleSwitcher.querySelector("i");
      if (storedStyle === "light") {
        styleSwitcherIcon.classList.add("ti-sun");
        new bootstrap.Tooltip(styleSwitcherIcon, {
          title: "Light Mode",
          fallbackPlacements: ["bottom"]
        });
      } else if (storedStyle === "dark") {
        styleSwitcherIcon.classList.add("ti-moon");
        new bootstrap.Tooltip(styleSwitcherIcon, {
          title: "Dark Mode",
          fallbackPlacements: ["bottom"]
        });
      } else {
        styleSwitcherIcon.classList.add("ti-device-desktop");
        new bootstrap.Tooltip(styleSwitcherIcon, {
          title: "System Mode",
          fallbackPlacements: ["bottom"]
        });
      }
      switchImage(storedStyle);
    }
    function switchImage(style) {
      if (style === "system") {
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          style = "dark";
        } else {
          style = "light";
        }
      }
      const switchImagesList = [].slice.call(document.querySelectorAll("[data-app-" + style + "-img]"));
      switchImagesList.map(function(imageEl) {
        const setImage = imageEl.getAttribute("data-app-" + style + "-img");
        imageEl.src = assetsPath + "img/" + setImage;
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/front-page-payment.js
  (function() {
    const billingZipCode = document.querySelector(".billings-zip-code"), creditCardMask = document.querySelector(".billing-card-mask"), expiryDateMask = document.querySelector(".billing-expiry-date-mask"), cvvMask = document.querySelector(".billing-cvv-mask"), formCheckInputPayment = document.querySelectorAll(".form-check-input-payment");
    if (billingZipCode) {
      new Cleave(billingZipCode, {
        delimiter: "",
        numeral: true
      });
    }
    if (creditCardMask) {
      new Cleave(creditCardMask, {
        creditCard: true,
        onCreditCardTypeChanged: function(type) {
          if (type != "" && type != "unknown") {
            document.querySelector(".card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" height="28"/>';
          } else {
            document.querySelector(".card-type").innerHTML = "";
          }
        }
      });
    }
    if (expiryDateMask) {
      new Cleave(expiryDateMask, {
        date: true,
        delimiter: "/",
        datePattern: ["m", "y"]
      });
    }
    if (cvvMask) {
      new Cleave(cvvMask, {
        numeral: true,
        numeralPositiveOnly: true
      });
    }
    if (formCheckInputPayment) {
      formCheckInputPayment.forEach(function(paymentInput) {
        paymentInput.addEventListener("change", function(e) {
          const paymentInputValue = e.target.value;
          if (paymentInputValue === "credit-card") {
            document.querySelector("#form-credit-card").classList.remove("d-none");
          } else {
            document.querySelector("#form-credit-card").classList.add("d-none");
          }
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/front-config.js
  var assetsPath3 = document.documentElement.getAttribute("data-assets-path");
  var templateName3 = document.documentElement.getAttribute("data-template");
  var rtlSupport2 = true;
  if (typeof TemplateCustomizer !== "undefined") {
    window.templateCustomizer = new TemplateCustomizer({
      cssPath: assetsPath3 + "vendor/css" + (rtlSupport2 ? "/rtl" : "") + "/",
      themesPath: assetsPath3 + "vendor/css" + (rtlSupport2 ? "/rtl" : "") + "/",
      displayCustomizer: true,
      controls: ["rtl", "style"]
    });
  }

  // ../easy_ui/easy_ui/public/js/frappe/js/front-page-landing.js
  (function() {
    const nav = document.querySelector(".layout-navbar"), heroAnimation = document.getElementById("hero-animation"), animationImg = document.querySelectorAll(".hero-dashboard-img"), animationElements = document.querySelectorAll(".hero-elements-img"), swiperLogos = document.getElementById("swiper-clients-logos"), swiperReviews = document.getElementById("swiper-reviews"), ReviewsPreviousBtn = document.getElementById("reviews-previous-btn"), ReviewsNextBtn = document.getElementById("reviews-next-btn"), ReviewsSliderPrev = document.querySelector(".swiper-button-prev"), ReviewsSliderNext = document.querySelector(".swiper-button-next"), priceDurationToggler = document.querySelector(".price-duration-toggler"), priceMonthlyList = [].slice.call(document.querySelectorAll(".price-monthly")), priceYearlyList = [].slice.call(document.querySelectorAll(".price-yearly"));
    const mediaQueryXL = "1200";
    const width = screen.width;
    if (width >= mediaQueryXL && heroAnimation) {
      heroAnimation.addEventListener("mousemove", function parallax(e) {
        animationElements.forEach((layer) => {
          layer.style.transform = "translateZ(1rem)";
        });
        animationImg.forEach((layer) => {
          let x = (window.innerWidth - e.pageX * 2) / 100;
          let y = (window.innerHeight - e.pageY * 2) / 100;
          layer.style.transform = `perspective(1200px) rotateX(${y}deg) rotateY(${x}deg) scale3d(1, 1, 1)`;
        });
      });
      nav.addEventListener("mousemove", function parallax(e) {
        animationElements.forEach((layer) => {
          layer.style.transform = "translateZ(1rem)";
        });
        animationImg.forEach((layer) => {
          let x = (window.innerWidth - e.pageX * 2) / 100;
          let y = (window.innerHeight - e.pageY * 2) / 100;
          layer.style.transform = `perspective(1200px) rotateX(${y}deg) rotateY(${x}deg) scale3d(1, 1, 1)`;
        });
      });
      heroAnimation.addEventListener("mouseout", function() {
        animationElements.forEach((layer) => {
          layer.style.transform = "translateZ(0)";
        });
        animationImg.forEach((layer) => {
          layer.style.transform = "perspective(1200px) scale(1) rotateX(0) rotateY(0)";
        });
      });
    }
    if (swiperReviews) {
      new Swiper(swiperReviews, {
        slidesPerView: 1,
        spaceBetween: 5,
        grabCursor: true,
        autoplay: {
          delay: 3e3,
          disableOnInteraction: false
        },
        loop: true,
        loopAdditionalSlides: 1,
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev"
        },
        breakpoints: {
          1200: {
            slidesPerView: 3,
            spaceBetween: 26
          },
          992: {
            slidesPerView: 2,
            spaceBetween: 20
          }
        }
      });
    }
    ReviewsNextBtn.addEventListener("click", function() {
      ReviewsSliderNext.click();
    });
    ReviewsPreviousBtn.addEventListener("click", function() {
      ReviewsSliderPrev.click();
    });
    if (swiperLogos) {
      new Swiper(swiperLogos, {
        slidesPerView: 2,
        autoplay: {
          delay: 3e3,
          disableOnInteraction: false
        },
        breakpoints: {
          992: {
            slidesPerView: 5
          },
          768: {
            slidesPerView: 3
          }
        }
      });
    }
    document.addEventListener("DOMContentLoaded", function(event) {
      function togglePrice() {
        if (priceDurationToggler.checked) {
          priceYearlyList.map(function(yearEl) {
            yearEl.classList.remove("d-none");
          });
          priceMonthlyList.map(function(monthEl) {
            monthEl.classList.add("d-none");
          });
        } else {
          priceYearlyList.map(function(yearEl) {
            yearEl.classList.add("d-none");
          });
          priceMonthlyList.map(function(monthEl) {
            monthEl.classList.remove("d-none");
          });
        }
      }
      togglePrice();
      priceDurationToggler.onchange = function() {
        togglePrice();
      };
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/front-page-pricing.js
  document.addEventListener("DOMContentLoaded", function(event) {
    (function() {
      const priceDurationToggler = document.querySelector(".price-duration-toggler"), priceMonthlyList = [].slice.call(document.querySelectorAll(".price-monthly")), priceYearlyList = [].slice.call(document.querySelectorAll(".price-yearly"));
      function togglePrice() {
        if (priceDurationToggler.checked) {
          priceYearlyList.map(function(yearEl) {
            yearEl.classList.remove("d-none");
          });
          priceMonthlyList.map(function(monthEl) {
            monthEl.classList.add("d-none");
          });
        } else {
          priceYearlyList.map(function(yearEl) {
            yearEl.classList.add("d-none");
          });
          priceMonthlyList.map(function(monthEl) {
            monthEl.classList.remove("d-none");
          });
        }
      }
      togglePrice();
      priceDurationToggler.onchange = function() {
        togglePrice();
      };
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/main.js
  var isRtl3 = window.Helpers.isRtl();
  var isDarkStyle3 = window.Helpers.isDarkStyle();
  var menu;
  var animate;
  var isHorizontalLayout = false;
  if (document.getElementById("layout-menu")) {
    isHorizontalLayout = document.getElementById("layout-menu").classList.contains("menu-horizontal");
  }
  (function() {
    var _a, _b, _c;
    setTimeout(function() {
      window.Helpers.initCustomOptionCheck();
    }, 1e3);
    if (typeof Waves !== "undefined") {
      Waves.init();
      Waves.attach(".btn[class*='btn-']:not([class*='btn-outline-']):not([class*='btn-label-'])", ["waves-light"]);
      Waves.attach("[class*='btn-outline-']");
      Waves.attach("[class*='btn-label-']");
      Waves.attach(".pagination .page-item .page-link");
    }
    let layoutMenuEl = document.querySelectorAll("#layout-menu");
    layoutMenuEl.forEach(function(element) {
      menu = new Menu(element, {
        orientation: isHorizontalLayout ? "horizontal" : "vertical",
        closeChildren: isHorizontalLayout ? true : false,
        showDropdownOnHover: localStorage.getItem("templateCustomizer-" + templateName + "--ShowDropdownOnHover") ? localStorage.getItem("templateCustomizer-" + templateName + "--ShowDropdownOnHover") === "true" : window.templateCustomizer !== void 0 ? window.templateCustomizer.settings.defaultShowDropdownOnHover : true
      });
      window.Helpers.scrollToActive(animate = false);
      window.Helpers.mainMenu = menu;
    });
    let menuToggler = document.querySelectorAll(".layout-menu-toggle");
    menuToggler.forEach((item) => {
      item.addEventListener("click", (event) => {
        event.preventDefault();
        window.Helpers.toggleCollapsed();
        if (config.enableMenuLocalStorage && !window.Helpers.isSmallScreen()) {
          try {
            localStorage.setItem(
              "templateCustomizer-" + templateName + "--LayoutCollapsed",
              String(window.Helpers.isCollapsed())
            );
            let layoutCollapsedCustomizerOptions = document.querySelector(".template-customizer-layouts-options");
            if (layoutCollapsedCustomizerOptions) {
              let layoutCollapsedVal = window.Helpers.isCollapsed() ? "collapsed" : "expanded";
              layoutCollapsedCustomizerOptions.querySelector(`input[value="${layoutCollapsedVal}"]`).click();
            }
          } catch (e) {
          }
        }
      });
    });
    window.Helpers.swipeIn(".drag-target", function(e) {
      window.Helpers.setCollapsed(false);
    });
    window.Helpers.swipeOut("#layout-menu", function(e) {
      if (window.Helpers.isSmallScreen())
        window.Helpers.setCollapsed(true);
    });
    let menuInnerContainer = document.getElementsByClassName("menu-inner"), menuInnerShadow = document.getElementsByClassName("menu-inner-shadow")[0];
    if (menuInnerContainer.length > 0 && menuInnerShadow) {
      menuInnerContainer[0].addEventListener("ps-scroll-y", function() {
        if (this.querySelector(".ps__thumb-y").offsetTop) {
          menuInnerShadow.style.display = "block";
        } else {
          menuInnerShadow.style.display = "none";
        }
      });
    }
    function switchImage(style) {
      if (style === "system") {
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          style = "dark";
        } else {
          style = "light";
        }
      }
      const switchImagesList = [].slice.call(document.querySelectorAll("[data-app-" + style + "-img]"));
      switchImagesList.map(function(imageEl) {
        const setImage = imageEl.getAttribute("data-app-" + style + "-img");
        imageEl.src = assetsPath + "img/" + setImage;
      });
    }
    let styleSwitcher = document.querySelector(".dropdown-style-switcher");
    let storedStyle = localStorage.getItem("templateCustomizer-" + templateName + "--Style") || ((_c = (_b = (_a = window.templateCustomizer) == null ? void 0 : _a.settings) == null ? void 0 : _b.defaultStyle) != null ? _c : "light");
    if (window.templateCustomizer && styleSwitcher) {
      let styleSwitcherItems = [].slice.call(styleSwitcher.children[1].querySelectorAll(".dropdown-item"));
      styleSwitcherItems.forEach(function(item) {
        item.addEventListener("click", function() {
          let currentStyle = this.getAttribute("data-theme");
          if (currentStyle === "light") {
            window.templateCustomizer.setStyle("light");
          } else if (currentStyle === "dark") {
            window.templateCustomizer.setStyle("dark");
          } else {
            window.templateCustomizer.setStyle("system");
          }
        });
      });
      const styleSwitcherIcon = styleSwitcher.querySelector("i");
      if (storedStyle === "light") {
        styleSwitcherIcon.classList.add("ti-sun");
        new bootstrap.Tooltip(styleSwitcherIcon, {
          title: "Light Mode",
          fallbackPlacements: ["bottom"]
        });
      } else if (storedStyle === "dark") {
        styleSwitcherIcon.classList.add("ti-moon");
        new bootstrap.Tooltip(styleSwitcherIcon, {
          title: "Dark Mode",
          fallbackPlacements: ["bottom"]
        });
      } else {
        styleSwitcherIcon.classList.add("ti-device-desktop");
        new bootstrap.Tooltip(styleSwitcherIcon, {
          title: "System Mode",
          fallbackPlacements: ["bottom"]
        });
      }
    }
    switchImage(storedStyle);
    if (typeof i18next !== "undefined" && typeof i18NextHttpBackend !== "undefined") {
      i18next.use(i18NextHttpBackend).init({
        lng: "en",
        debug: false,
        fallbackLng: "en",
        backend: {
          loadPath: assetsPath + "json/locales/{{lng}}.json"
        },
        returnObjects: true
      }).then(function(t) {
        localize();
      });
    }
    let languageDropdown = document.getElementsByClassName("dropdown-language");
    if (languageDropdown.length) {
      let dropdownItems = languageDropdown[0].querySelectorAll(".dropdown-item");
      for (let i = 0; i < dropdownItems.length; i++) {
        dropdownItems[i].addEventListener("click", function() {
          let currentLanguage = this.getAttribute("data-language");
          for (let sibling of this.parentNode.children) {
            var siblingEle = sibling.parentElement.parentNode.firstChild;
            while (siblingEle) {
              if (siblingEle.nodeType === 1 && siblingEle !== siblingEle.parentElement) {
                siblingEle.querySelector(".dropdown-item").classList.remove("active");
              }
              siblingEle = siblingEle.nextSibling;
            }
          }
          this.classList.add("active");
          i18next.changeLanguage(currentLanguage, (err, t) => {
            if (err)
              return console.log("something went wrong loading", err);
            localize();
          });
        });
      }
    }
    function localize() {
      let i18nList = document.querySelectorAll("[data-i18n]");
      let currentLanguageEle = document.querySelector('.dropdown-item[data-language="' + i18next.language + '"]');
      if (currentLanguageEle) {
        currentLanguageEle.click();
      }
      i18nList.forEach(function(item) {
        item.innerHTML = i18next.t(item.dataset.i18n);
      });
    }
    const notificationMarkAsReadAll = document.querySelector(".dropdown-notifications-all");
    const notificationMarkAsReadList = document.querySelectorAll(".dropdown-notifications-read");
    if (notificationMarkAsReadAll) {
      notificationMarkAsReadAll.addEventListener("click", (event) => {
        notificationMarkAsReadList.forEach((item) => {
          item.closest(".dropdown-notifications-item").classList.add("marked-as-read");
        });
      });
    }
    if (notificationMarkAsReadList) {
      notificationMarkAsReadList.forEach((item) => {
        item.addEventListener("click", (event) => {
          item.closest(".dropdown-notifications-item").classList.toggle("marked-as-read");
        });
      });
    }
    const notificationArchiveMessageList = document.querySelectorAll(".dropdown-notifications-archive");
    notificationArchiveMessageList.forEach((item) => {
      item.addEventListener("click", (event) => {
        item.closest(".dropdown-notifications-item").remove();
      });
    });
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function(tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl);
    });
    const accordionActiveFunction = function(e) {
      if (e.type == "show.bs.collapse" || e.type == "show.bs.collapse") {
        e.target.closest(".accordion-item").classList.add("active");
      } else {
        e.target.closest(".accordion-item").classList.remove("active");
      }
    };
    const accordionTriggerList = [].slice.call(document.querySelectorAll(".accordion"));
    const accordionList = accordionTriggerList.map(function(accordionTriggerEl) {
      accordionTriggerEl.addEventListener("show.bs.collapse", accordionActiveFunction);
      accordionTriggerEl.addEventListener("hide.bs.collapse", accordionActiveFunction);
    });
    window.Helpers.setAutoUpdate(true);
    window.Helpers.initPasswordToggle();
    window.Helpers.initSpeechToText();
    window.Helpers.initNavbarDropdownScrollbar();
    let horizontalMenuTemplate = document.querySelector("[data-template^='horizontal-menu']");
    if (horizontalMenuTemplate) {
      if (window.innerWidth < window.Helpers.LAYOUT_BREAKPOINT) {
        window.Helpers.setNavbarFixed("fixed");
      } else {
        window.Helpers.setNavbarFixed("");
      }
    }
    window.addEventListener(
      "resize",
      function(event) {
        if (window.innerWidth >= window.Helpers.LAYOUT_BREAKPOINT) {
          if (document.querySelector(".search-input-wrapper")) {
            document.querySelector(".search-input-wrapper").classList.add("d-none");
            document.querySelector(".search-input").value = "";
          }
        }
        if (horizontalMenuTemplate) {
          if (window.innerWidth < window.Helpers.LAYOUT_BREAKPOINT) {
            window.Helpers.setNavbarFixed("fixed");
          } else {
            window.Helpers.setNavbarFixed("");
          }
          setTimeout(function() {
            if (window.innerWidth < window.Helpers.LAYOUT_BREAKPOINT) {
              if (document.getElementById("layout-menu")) {
                if (document.getElementById("layout-menu").classList.contains("menu-horizontal")) {
                  menu.switchMenu("vertical");
                }
              }
            } else {
              if (document.getElementById("layout-menu")) {
                if (document.getElementById("layout-menu").classList.contains("menu-vertical")) {
                  menu.switchMenu("horizontal");
                }
              }
            }
          }, 100);
        }
      },
      true
    );
    if (isHorizontalLayout || window.Helpers.isSmallScreen()) {
      return;
    }
    if (typeof TemplateCustomizer !== "undefined") {
      if (window.templateCustomizer.settings.defaultMenuCollapsed) {
        window.Helpers.setCollapsed(true, false);
      } else {
        window.Helpers.setCollapsed(false, false);
      }
    }
    if (typeof config !== "undefined") {
      if (config.enableMenuLocalStorage) {
        try {
          if (localStorage.getItem("templateCustomizer-" + templateName + "--LayoutCollapsed") !== null)
            window.Helpers.setCollapsed(
              localStorage.getItem("templateCustomizer-" + templateName + "--LayoutCollapsed") === "true",
              false
            );
        } catch (e) {
        }
      }
    }
  })();
  if (typeof $ !== "undefined") {
    $(function() {
      window.Helpers.initSidebarToggle();
      var searchToggler = $(".search-toggler"), searchInputWrapper = $(".search-input-wrapper"), searchInput = $(".search-input"), contentBackdrop = $(".content-backdrop");
      if (searchToggler.length) {
        searchToggler.on("click", function() {
          if (searchInputWrapper.length) {
            searchInputWrapper.toggleClass("d-none");
            searchInput.focus();
          }
        });
      }
      $(document).on("keydown", function(event) {
        let ctrlKey = event.ctrlKey, slashKey = event.which === 191;
        if (ctrlKey && slashKey) {
          if (searchInputWrapper.length) {
            searchInputWrapper.toggleClass("d-none");
            searchInput.focus();
          }
        }
      });
      setTimeout(function() {
        var twitterTypeahead = $(".twitter-typeahead");
        searchInput.on("focus", function() {
          if (searchInputWrapper.hasClass("container-xxl")) {
            searchInputWrapper.find(twitterTypeahead).addClass("container-xxl");
            twitterTypeahead.removeClass("container-fluid");
          } else if (searchInputWrapper.hasClass("container-fluid")) {
            searchInputWrapper.find(twitterTypeahead).addClass("container-fluid");
            twitterTypeahead.removeClass("container-xxl");
          }
        });
      }, 10);
      if (searchInput.length) {
        var filterConfig = function(data) {
          return function findMatches(q, cb) {
            let matches;
            matches = [];
            data.filter(function(i) {
              if (i.name.toLowerCase().startsWith(q.toLowerCase())) {
                matches.push(i);
              } else if (!i.name.toLowerCase().startsWith(q.toLowerCase()) && i.name.toLowerCase().includes(q.toLowerCase())) {
                matches.push(i);
                matches.sort(function(a, b) {
                  return b.name < a.name ? 1 : -1;
                });
              } else {
                return [];
              }
            });
            cb(matches);
          };
        };
        var searchJson = "search-vertical.json";
        if ($("#layout-menu").hasClass("menu-horizontal")) {
          var searchJson = "search-horizontal.json";
        }
        var searchData = $.ajax({
          url: assetsPath + "json/" + searchJson,
          dataType: "json",
          async: false
        }).responseJSON;
        searchInput.each(function() {
          var $this = $(this);
          searchInput.typeahead(
            {
              hint: false,
              classNames: {
                menu: "tt-menu navbar-search-suggestion",
                cursor: "active",
                suggestion: "suggestion d-flex justify-content-between px-3 py-2 w-100"
              }
            },
            {
              name: "pages",
              display: "name",
              limit: 5,
              source: filterConfig(searchData.pages),
              templates: {
                header: '<h6 class="suggestions-header text-primary mb-0 mx-3 mt-3 pb-2">Pages</h6>',
                suggestion: function({ url, icon, name }) {
                  return '<a href="' + url + '"><div><i class="ti ' + icon + ' me-2"></i><span class="align-middle">' + name + "</span></div></a>";
                },
                notFound: '<div class="not-found px-3 py-2"><h6 class="suggestions-header text-primary mb-2">Pages</h6><p class="py-2 mb-0"><i class="ti ti-alert-circle ti-xs me-2"></i> No Results Found</p></div>'
              }
            },
            {
              name: "files",
              display: "name",
              limit: 4,
              source: filterConfig(searchData.files),
              templates: {
                header: '<h6 class="suggestions-header text-primary mb-0 mx-3 mt-3 pb-2">Files</h6>',
                suggestion: function({ src, name, subtitle, meta }) {
                  return '<a href="javascript:;"><div class="d-flex w-50"><img class="me-3" src="' + assetsPath + src + '" alt="' + name + '" height="32"><div class="w-75"><h6 class="mb-0">' + name + '</h6><small class="text-muted">' + subtitle + '</small></div></div><small class="text-muted">' + meta + "</small></a>";
                },
                notFound: '<div class="not-found px-3 py-2"><h6 class="suggestions-header text-primary mb-2">Files</h6><p class="py-2 mb-0"><i class="ti ti-alert-circle ti-xs me-2"></i> No Results Found</p></div>'
              }
            },
            {
              name: "members",
              display: "name",
              limit: 4,
              source: filterConfig(searchData.members),
              templates: {
                header: '<h6 class="suggestions-header text-primary mb-0 mx-3 mt-3 pb-2">Members</h6>',
                suggestion: function({ name, src, subtitle }) {
                  return '<a href="app-user-view-account.html"><div class="d-flex align-items-center"><img class="rounded-circle me-3" src="' + assetsPath + src + '" alt="' + name + '" height="32"><div class="user-info"><h6 class="mb-0">' + name + '</h6><small class="text-muted">' + subtitle + "</small></div></div></a>";
                },
                notFound: '<div class="not-found px-3 py-2"><h6 class="suggestions-header text-primary mb-2">Members</h6><p class="py-2 mb-0"><i class="ti ti-alert-circle ti-xs me-2"></i> No Results Found</p></div>'
              }
            }
          ).bind("typeahead:render", function() {
            contentBackdrop.addClass("show").removeClass("fade");
          }).bind("typeahead:select", function(ev, suggestion) {
            if (suggestion.url) {
              window.location = suggestion.url;
            }
          }).bind("typeahead:close", function() {
            searchInput.val("");
            $this.typeahead("val", "");
            searchInputWrapper.addClass("d-none");
            contentBackdrop.addClass("fade").removeClass("show");
          });
          searchInput.on("keyup", function() {
            if (searchInput.val() == "") {
              contentBackdrop.addClass("fade").removeClass("show");
            }
          });
        });
        var psSearch;
        $(".navbar-search-suggestion").each(function() {
          psSearch = new PerfectScrollbar($(this)[0], {
            wheelPropagation: false,
            suppressScrollX: true
          });
        });
        searchInput.on("keyup", function() {
          psSearch.update();
        });
      }
    });
  }

  // ../easy_ui/easy_ui/public/js/frappe/js/maps-leaflet.js
  (function() {
    const statesData = {
      type: "FeatureCollection",
      features: [
        {
          type: "Feature",
          id: "01",
          properties: { name: "Alabama", density: 94.65 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-87.359296, 35.00118],
                [-85.606675, 34.984749],
                [-85.431413, 34.124869],
                [-85.184951, 32.859696],
                [-85.069935, 32.580372],
                [-84.960397, 32.421541],
                [-85.004212, 32.322956],
                [-84.889196, 32.262709],
                [-85.058981, 32.13674],
                [-85.053504, 32.01077],
                [-85.141136, 31.840985],
                [-85.042551, 31.539753],
                [-85.113751, 31.27686],
                [-85.004212, 31.003013],
                [-85.497137, 30.997536],
                [-87.600282, 30.997536],
                [-87.633143, 30.86609],
                [-87.408589, 30.674397],
                [-87.446927, 30.510088],
                [-87.37025, 30.427934],
                [-87.518128, 30.280057],
                [-87.655051, 30.247195],
                [-87.90699, 30.411504],
                [-87.934375, 30.657966],
                [-88.011052, 30.685351],
                [-88.10416, 30.499135],
                [-88.137022, 30.318396],
                [-88.394438, 30.367688],
                [-88.471115, 31.895754],
                [-88.241084, 33.796253],
                [-88.098683, 34.891641],
                [-88.202745, 34.995703],
                [-87.359296, 35.00118]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "02",
          properties: { name: "Alaska", density: 1.264 },
          geometry: {
            type: "MultiPolygon",
            coordinates: [
              [
                [
                  [-131.602021, 55.117982],
                  [-131.569159, 55.28229],
                  [-131.355558, 55.183705],
                  [-131.38842, 55.01392],
                  [-131.645836, 55.035827],
                  [-131.602021, 55.117982]
                ]
              ],
              [
                [
                  [-131.832052, 55.42469],
                  [-131.645836, 55.304197],
                  [-131.749898, 55.128935],
                  [-131.832052, 55.189182],
                  [-131.832052, 55.42469]
                ]
              ],
              [
                [
                  [-132.976733, 56.437924],
                  [-132.735747, 56.459832],
                  [-132.631685, 56.421493],
                  [-132.664547, 56.273616],
                  [-132.878148, 56.240754],
                  [-133.069841, 56.333862],
                  [-132.976733, 56.437924]
                ]
              ],
              [
                [
                  [-133.595627, 56.350293],
                  [-133.162949, 56.317431],
                  [-133.05341, 56.125739],
                  [-132.620732, 55.912138],
                  [-132.472854, 55.780691],
                  [-132.4619, 55.671152],
                  [-132.357838, 55.649245],
                  [-132.341408, 55.506844],
                  [-132.166146, 55.364444],
                  [-132.144238, 55.238474],
                  [-132.029222, 55.276813],
                  [-131.97993, 55.178228],
                  [-131.958022, 54.789365],
                  [-132.029222, 54.701734],
                  [-132.308546, 54.718165],
                  [-132.385223, 54.915335],
                  [-132.483808, 54.898904],
                  [-132.686455, 55.046781],
                  [-132.746701, 54.997489],
                  [-132.916486, 55.046781],
                  [-132.889102, 54.898904],
                  [-132.73027, 54.937242],
                  [-132.626209, 54.882473],
                  [-132.675501, 54.679826],
                  [-132.867194, 54.701734],
                  [-133.157472, 54.95915],
                  [-133.239626, 55.090597],
                  [-133.223195, 55.22752],
                  [-133.453227, 55.216566],
                  [-133.453227, 55.320628],
                  [-133.277964, 55.331582],
                  [-133.102702, 55.42469],
                  [-133.17938, 55.588998],
                  [-133.387503, 55.62186],
                  [-133.420365, 55.884753],
                  [-133.497042, 56.0162],
                  [-133.639442, 55.923092],
                  [-133.694212, 56.070969],
                  [-133.546335, 56.142169],
                  [-133.666827, 56.311955],
                  [-133.595627, 56.350293]
                ]
              ],
              [
                [
                  [-133.738027, 55.556137],
                  [-133.546335, 55.490413],
                  [-133.414888, 55.572568],
                  [-133.283441, 55.534229],
                  [-133.420365, 55.386352],
                  [-133.633966, 55.430167],
                  [-133.738027, 55.556137]
                ]
              ],
              [
                [
                  [-133.907813, 56.930849],
                  [-134.050213, 57.029434],
                  [-133.885905, 57.095157],
                  [-133.343688, 57.002049],
                  [-133.102702, 57.007526],
                  [-132.932917, 56.82131],
                  [-132.620732, 56.667956],
                  [-132.653593, 56.55294],
                  [-132.817901, 56.492694],
                  [-133.042456, 56.520078],
                  [-133.201287, 56.448878],
                  [-133.420365, 56.492694],
                  [-133.66135, 56.448878],
                  [-133.710643, 56.684386],
                  [-133.688735, 56.837741],
                  [-133.869474, 56.843218],
                  [-133.907813, 56.930849]
                ]
              ],
              [
                [
                  [-134.115936, 56.48174],
                  [-134.25286, 56.558417],
                  [-134.400737, 56.722725],
                  [-134.417168, 56.848695],
                  [-134.296675, 56.908941],
                  [-134.170706, 56.848695],
                  [-134.143321, 56.952757],
                  [-133.748981, 56.772017],
                  [-133.710643, 56.596755],
                  [-133.847566, 56.574848],
                  [-133.935197, 56.377678],
                  [-133.836612, 56.322908],
                  [-133.957105, 56.092877],
                  [-134.110459, 56.142169],
                  [-134.132367, 55.999769],
                  [-134.230952, 56.070969],
                  [-134.291198, 56.350293],
                  [-134.115936, 56.48174]
                ]
              ],
              [
                [
                  [-134.636246, 56.28457],
                  [-134.669107, 56.169554],
                  [-134.806031, 56.235277],
                  [-135.178463, 56.67891],
                  [-135.413971, 56.810356],
                  [-135.331817, 56.914418],
                  [-135.424925, 57.166357],
                  [-135.687818, 57.369004],
                  [-135.419448, 57.566174],
                  [-135.298955, 57.48402],
                  [-135.063447, 57.418296],
                  [-134.849846, 57.407343],
                  [-134.844369, 57.248511],
                  [-134.636246, 56.728202],
                  [-134.636246, 56.28457]
                ]
              ],
              [
                [
                  [-134.712923, 58.223407],
                  [-134.373353, 58.14673],
                  [-134.176183, 58.157683],
                  [-134.187137, 58.081006],
                  [-133.902336, 57.807159],
                  [-134.099505, 57.850975],
                  [-134.148798, 57.757867],
                  [-133.935197, 57.615466],
                  [-133.869474, 57.363527],
                  [-134.083075, 57.297804],
                  [-134.154275, 57.210173],
                  [-134.499322, 57.029434],
                  [-134.603384, 57.034911],
                  [-134.6472, 57.226604],
                  [-134.575999, 57.341619],
                  [-134.608861, 57.511404],
                  [-134.729354, 57.719528],
                  [-134.707446, 57.829067],
                  [-134.784123, 58.097437],
                  [-134.91557, 58.212453],
                  [-134.953908, 58.409623],
                  [-134.712923, 58.223407]
                ]
              ],
              [
                [
                  [-135.857603, 57.330665],
                  [-135.715203, 57.330665],
                  [-135.567326, 57.149926],
                  [-135.633049, 57.023957],
                  [-135.857603, 56.996572],
                  [-135.824742, 57.193742],
                  [-135.857603, 57.330665]
                ]
              ],
              [
                [
                  [-136.279328, 58.206976],
                  [-135.978096, 58.201499],
                  [-135.780926, 58.28913],
                  [-135.496125, 58.168637],
                  [-135.64948, 58.037191],
                  [-135.59471, 57.987898],
                  [-135.45231, 58.135776],
                  [-135.107263, 58.086483],
                  [-134.91557, 57.976944],
                  [-135.025108, 57.779775],
                  [-134.937477, 57.763344],
                  [-134.822462, 57.500451],
                  [-135.085355, 57.462112],
                  [-135.572802, 57.675713],
                  [-135.556372, 57.456635],
                  [-135.709726, 57.369004],
                  [-135.890465, 57.407343],
                  [-136.000004, 57.544266],
                  [-136.208128, 57.637374],
                  [-136.366959, 57.829067],
                  [-136.569606, 57.916698],
                  [-136.558652, 58.075529],
                  [-136.421728, 58.130299],
                  [-136.377913, 58.267222],
                  [-136.279328, 58.206976]
                ]
              ],
              [
                [
                  [-147.079854, 60.200582],
                  [-147.501579, 59.948643],
                  [-147.53444, 59.850058],
                  [-147.874011, 59.784335],
                  [-147.80281, 59.937689],
                  [-147.435855, 60.09652],
                  [-147.205824, 60.271782],
                  [-147.079854, 60.200582]
                ]
              ],
              [
                [
                  [-147.561825, 60.578491],
                  [-147.616594, 60.370367],
                  [-147.758995, 60.156767],
                  [-147.956165, 60.227967],
                  [-147.791856, 60.474429],
                  [-147.561825, 60.578491]
                ]
              ],
              [
                [
                  [-147.786379, 70.245291],
                  [-147.682318, 70.201475],
                  [-147.162008, 70.15766],
                  [-146.888161, 70.185044],
                  [-146.510252, 70.185044],
                  [-146.099482, 70.146706],
                  [-145.858496, 70.168614],
                  [-145.622988, 70.08646],
                  [-145.195787, 69.993352],
                  [-144.620708, 69.971444],
                  [-144.461877, 70.026213],
                  [-144.078491, 70.059075],
                  [-143.914183, 70.130275],
                  [-143.497935, 70.141229],
                  [-143.503412, 70.091936],
                  [-143.25695, 70.119321],
                  [-142.747594, 70.042644],
                  [-142.402547, 69.916674],
                  [-142.079408, 69.856428],
                  [-142.008207, 69.801659],
                  [-141.712453, 69.790705],
                  [-141.433129, 69.697597],
                  [-141.378359, 69.63735],
                  [-141.208574, 69.686643],
                  [-141.00045, 69.648304],
                  [-141.00045, 60.304644],
                  [-140.53491, 60.22249],
                  [-140.474664, 60.310121],
                  [-139.987216, 60.184151],
                  [-139.696939, 60.342983],
                  [-139.088998, 60.359413],
                  [-139.198537, 60.091043],
                  [-139.045183, 59.997935],
                  [-138.700135, 59.910304],
                  [-138.623458, 59.767904],
                  [-137.604747, 59.242118],
                  [-137.445916, 58.908024],
                  [-137.265177, 59.001132],
                  [-136.827022, 59.159963],
                  [-136.580559, 59.16544],
                  [-136.465544, 59.285933],
                  [-136.476498, 59.466672],
                  [-136.301236, 59.466672],
                  [-136.25742, 59.625503],
                  [-135.945234, 59.663842],
                  [-135.479694, 59.800766],
                  [-135.025108, 59.565257],
                  [-135.068924, 59.422857],
                  [-134.959385, 59.280456],
                  [-134.701969, 59.247595],
                  [-134.378829, 59.033994],
                  [-134.400737, 58.973748],
                  [-134.25286, 58.858732],
                  [-133.842089, 58.727285],
                  [-133.173903, 58.152206],
                  [-133.075318, 57.998852],
                  [-132.867194, 57.845498],
                  [-132.560485, 57.505928],
                  [-132.253777, 57.21565],
                  [-132.368792, 57.095157],
                  [-132.05113, 57.051341],
                  [-132.127807, 56.876079],
                  [-131.870391, 56.804879],
                  [-131.837529, 56.602232],
                  [-131.580113, 56.613186],
                  [-131.087188, 56.405062],
                  [-130.78048, 56.366724],
                  [-130.621648, 56.268139],
                  [-130.468294, 56.240754],
                  [-130.424478, 56.142169],
                  [-130.101339, 56.114785],
                  [-130.002754, 55.994292],
                  [-130.150631, 55.769737],
                  [-130.128724, 55.583521],
                  [-129.986323, 55.276813],
                  [-130.095862, 55.200136],
                  [-130.336847, 54.920812],
                  [-130.687372, 54.718165],
                  [-130.785957, 54.822227],
                  [-130.917403, 54.789365],
                  [-131.010511, 54.997489],
                  [-130.983126, 55.08512],
                  [-131.092665, 55.189182],
                  [-130.862634, 55.298721],
                  [-130.928357, 55.337059],
                  [-131.158389, 55.200136],
                  [-131.284358, 55.287767],
                  [-131.426759, 55.238474],
                  [-131.843006, 55.457552],
                  [-131.700606, 55.698537],
                  [-131.963499, 55.616383],
                  [-131.974453, 55.49589],
                  [-132.182576, 55.588998],
                  [-132.226392, 55.704014],
                  [-132.083991, 55.829984],
                  [-132.127807, 55.955953],
                  [-132.324977, 55.851892],
                  [-132.522147, 56.076446],
                  [-132.642639, 56.032631],
                  [-132.719317, 56.218847],
                  [-132.527624, 56.339339],
                  [-132.341408, 56.339339],
                  [-132.396177, 56.487217],
                  [-132.297592, 56.67891],
                  [-132.450946, 56.673433],
                  [-132.768609, 56.837741],
                  [-132.993164, 57.034911],
                  [-133.51895, 57.177311],
                  [-133.507996, 57.577128],
                  [-133.677781, 57.62642],
                  [-133.639442, 57.790728],
                  [-133.814705, 57.834544],
                  [-134.072121, 58.053622],
                  [-134.143321, 58.168637],
                  [-134.586953, 58.206976],
                  [-135.074401, 58.502731],
                  [-135.282525, 59.192825],
                  [-135.38111, 59.033994],
                  [-135.337294, 58.891593],
                  [-135.140124, 58.617746],
                  [-135.189417, 58.573931],
                  [-135.05797, 58.349376],
                  [-135.085355, 58.201499],
                  [-135.277048, 58.234361],
                  [-135.430402, 58.398669],
                  [-135.633049, 58.426053],
                  [-135.91785, 58.382238],
                  [-135.912373, 58.617746],
                  [-136.087635, 58.814916],
                  [-136.246466, 58.75467],
                  [-136.876314, 58.962794],
                  [-136.931084, 58.902547],
                  [-136.586036, 58.836824],
                  [-136.317666, 58.672516],
                  [-136.213604, 58.667039],
                  [-136.180743, 58.535592],
                  [-136.043819, 58.382238],
                  [-136.388867, 58.294607],
                  [-136.591513, 58.349376],
                  [-136.59699, 58.212453],
                  [-136.859883, 58.316515],
                  [-136.947514, 58.393192],
                  [-137.111823, 58.393192],
                  [-137.566409, 58.590362],
                  [-137.900502, 58.765624],
                  [-137.933364, 58.869686],
                  [-138.11958, 59.02304],
                  [-138.634412, 59.132579],
                  [-138.919213, 59.247595],
                  [-139.417615, 59.379041],
                  [-139.746231, 59.505011],
                  [-139.718846, 59.641934],
                  [-139.625738, 59.598119],
                  [-139.5162, 59.68575],
                  [-139.625738, 59.88292],
                  [-139.488815, 59.992458],
                  [-139.554538, 60.041751],
                  [-139.801, 59.833627],
                  [-140.315833, 59.696704],
                  [-140.92925, 59.745996],
                  [-141.444083, 59.871966],
                  [-141.46599, 59.970551],
                  [-141.706976, 59.948643],
                  [-141.964392, 60.019843],
                  [-142.539471, 60.085566],
                  [-142.873564, 60.091043],
                  [-143.623905, 60.036274],
                  [-143.892275, 59.997935],
                  [-144.231845, 60.140336],
                  [-144.65357, 60.206059],
                  [-144.785016, 60.29369],
                  [-144.834309, 60.441568],
                  [-145.124586, 60.430614],
                  [-145.223171, 60.299167],
                  [-145.738004, 60.474429],
                  [-145.820158, 60.551106],
                  [-146.351421, 60.408706],
                  [-146.608837, 60.238921],
                  [-146.718376, 60.397752],
                  [-146.608837, 60.485383],
                  [-146.455483, 60.463475],
                  [-145.951604, 60.578491],
                  [-146.017328, 60.666122],
                  [-146.252836, 60.622307],
                  [-146.345944, 60.737322],
                  [-146.565022, 60.753753],
                  [-146.784099, 61.044031],
                  [-146.866253, 60.972831],
                  [-147.172962, 60.934492],
                  [-147.271547, 60.972831],
                  [-147.375609, 60.879723],
                  [-147.758995, 60.912584],
                  [-147.775426, 60.808523],
                  [-148.032842, 60.781138],
                  [-148.153334, 60.819476],
                  [-148.065703, 61.005692],
                  [-148.175242, 61.000215],
                  [-148.350504, 60.803046],
                  [-148.109519, 60.737322],
                  [-148.087611, 60.594922],
                  [-147.939734, 60.441568],
                  [-148.027365, 60.277259],
                  [-148.219058, 60.332029],
                  [-148.273827, 60.249875],
                  [-148.087611, 60.217013],
                  [-147.983549, 59.997935],
                  [-148.251919, 59.95412],
                  [-148.399797, 59.997935],
                  [-148.635305, 59.937689],
                  [-148.755798, 59.986981],
                  [-149.067984, 59.981505],
                  [-149.05703, 60.063659],
                  [-149.204907, 60.008889],
                  [-149.287061, 59.904827],
                  [-149.418508, 59.997935],
                  [-149.582816, 59.866489],
                  [-149.511616, 59.806242],
                  [-149.741647, 59.729565],
                  [-149.949771, 59.718611],
                  [-150.031925, 59.61455],
                  [-150.25648, 59.521442],
                  [-150.409834, 59.554303],
                  [-150.579619, 59.444764],
                  [-150.716543, 59.450241],
                  [-151.001343, 59.225687],
                  [-151.308052, 59.209256],
                  [-151.406637, 59.280456],
                  [-151.592853, 59.159963],
                  [-151.976239, 59.253071],
                  [-151.888608, 59.422857],
                  [-151.636669, 59.483103],
                  [-151.47236, 59.472149],
                  [-151.423068, 59.537872],
                  [-151.127313, 59.669319],
                  [-151.116359, 59.778858],
                  [-151.505222, 59.63098],
                  [-151.828361, 59.718611],
                  [-151.8667, 59.778858],
                  [-151.702392, 60.030797],
                  [-151.423068, 60.211536],
                  [-151.379252, 60.359413],
                  [-151.297098, 60.386798],
                  [-151.264237, 60.545629],
                  [-151.406637, 60.720892],
                  [-151.06159, 60.786615],
                  [-150.404357, 61.038554],
                  [-150.245526, 60.939969],
                  [-150.042879, 60.912584],
                  [-149.741647, 61.016646],
                  [-150.075741, 61.15357],
                  [-150.207187, 61.257632],
                  [-150.47008, 61.246678],
                  [-150.656296, 61.29597],
                  [-150.711066, 61.252155],
                  [-151.023251, 61.180954],
                  [-151.165652, 61.044031],
                  [-151.477837, 61.011169],
                  [-151.800977, 60.852338],
                  [-151.833838, 60.748276],
                  [-152.080301, 60.693507],
                  [-152.13507, 60.578491],
                  [-152.310332, 60.507291],
                  [-152.392486, 60.304644],
                  [-152.732057, 60.173197],
                  [-152.567748, 60.069136],
                  [-152.704672, 59.915781],
                  [-153.022334, 59.888397],
                  [-153.049719, 59.691227],
                  [-153.345474, 59.620026],
                  [-153.438582, 59.702181],
                  [-153.586459, 59.548826],
                  [-153.761721, 59.543349],
                  [-153.72886, 59.433811],
                  [-154.117723, 59.368087],
                  [-154.1944, 59.066856],
                  [-153.750768, 59.050425],
                  [-153.400243, 58.968271],
                  [-153.301658, 58.869686],
                  [-153.444059, 58.710854],
                  [-153.679567, 58.612269],
                  [-153.898645, 58.606793],
                  [-153.920553, 58.519161],
                  [-154.062953, 58.4863],
                  [-153.99723, 58.376761],
                  [-154.145107, 58.212453],
                  [-154.46277, 58.059098],
                  [-154.643509, 58.059098],
                  [-154.818771, 58.004329],
                  [-154.988556, 58.015283],
                  [-155.120003, 57.955037],
                  [-155.081664, 57.872883],
                  [-155.328126, 57.829067],
                  [-155.377419, 57.708574],
                  [-155.547204, 57.785251],
                  [-155.73342, 57.549743],
                  [-156.045606, 57.566174],
                  [-156.023698, 57.440204],
                  [-156.209914, 57.473066],
                  [-156.34136, 57.418296],
                  [-156.34136, 57.248511],
                  [-156.549484, 56.985618],
                  [-156.883577, 56.952757],
                  [-157.157424, 56.832264],
                  [-157.20124, 56.766541],
                  [-157.376502, 56.859649],
                  [-157.672257, 56.607709],
                  [-157.754411, 56.67891],
                  [-157.918719, 56.657002],
                  [-157.957058, 56.514601],
                  [-158.126843, 56.459832],
                  [-158.32949, 56.48174],
                  [-158.488321, 56.339339],
                  [-158.208997, 56.295524],
                  [-158.510229, 55.977861],
                  [-159.375585, 55.873799],
                  [-159.616571, 55.594475],
                  [-159.676817, 55.654722],
                  [-159.643955, 55.829984],
                  [-159.813741, 55.857368],
                  [-160.027341, 55.791645],
                  [-160.060203, 55.720445],
                  [-160.394296, 55.605429],
                  [-160.536697, 55.473983],
                  [-160.580512, 55.567091],
                  [-160.668143, 55.457552],
                  [-160.865313, 55.528752],
                  [-161.232268, 55.358967],
                  [-161.506115, 55.364444],
                  [-161.467776, 55.49589],
                  [-161.588269, 55.62186],
                  [-161.697808, 55.517798],
                  [-161.686854, 55.408259],
                  [-162.053809, 55.074166],
                  [-162.179779, 55.15632],
                  [-162.218117, 55.03035],
                  [-162.470057, 55.052258],
                  [-162.508395, 55.249428],
                  [-162.661749, 55.293244],
                  [-162.716519, 55.222043],
                  [-162.579595, 55.134412],
                  [-162.645319, 54.997489],
                  [-162.847965, 54.926289],
                  [-163.00132, 55.079643],
                  [-163.187536, 55.090597],
                  [-163.220397, 55.03035],
                  [-163.034181, 54.942719],
                  [-163.373752, 54.800319],
                  [-163.14372, 54.76198],
                  [-163.138243, 54.696257],
                  [-163.329936, 54.74555],
                  [-163.587352, 54.614103],
                  [-164.085754, 54.61958],
                  [-164.332216, 54.531949],
                  [-164.354124, 54.466226],
                  [-164.638925, 54.389548],
                  [-164.847049, 54.416933],
                  [-164.918249, 54.603149],
                  [-164.710125, 54.663395],
                  [-164.551294, 54.88795],
                  [-164.34317, 54.893427],
                  [-163.894061, 55.041304],
                  [-163.532583, 55.046781],
                  [-163.39566, 54.904381],
                  [-163.291598, 55.008443],
                  [-163.313505, 55.128935],
                  [-163.105382, 55.183705],
                  [-162.880827, 55.183705],
                  [-162.579595, 55.446598],
                  [-162.245502, 55.682106],
                  [-161.807347, 55.89023],
                  [-161.292514, 55.983338],
                  [-161.078914, 55.939523],
                  [-160.87079, 55.999769],
                  [-160.816021, 55.912138],
                  [-160.931036, 55.813553],
                  [-160.805067, 55.736876],
                  [-160.766728, 55.857368],
                  [-160.509312, 55.868322],
                  [-160.438112, 55.791645],
                  [-160.27928, 55.76426],
                  [-160.273803, 55.857368],
                  [-160.536697, 55.939523],
                  [-160.558604, 55.994292],
                  [-160.383342, 56.251708],
                  [-160.147834, 56.399586],
                  [-159.830171, 56.541986],
                  [-159.326293, 56.667956],
                  [-158.959338, 56.848695],
                  [-158.784076, 56.782971],
                  [-158.641675, 56.810356],
                  [-158.701922, 56.925372],
                  [-158.658106, 57.034911],
                  [-158.378782, 57.264942],
                  [-157.995396, 57.41282],
                  [-157.688688, 57.609989],
                  [-157.705118, 57.719528],
                  [-157.458656, 58.497254],
                  [-157.07527, 58.705377],
                  [-157.119086, 58.869686],
                  [-158.039212, 58.634177],
                  [-158.32949, 58.661562],
                  [-158.40069, 58.760147],
                  [-158.564998, 58.803962],
                  [-158.619768, 58.913501],
                  [-158.767645, 58.864209],
                  [-158.860753, 58.694424],
                  [-158.701922, 58.480823],
                  [-158.893615, 58.387715],
                  [-159.0634, 58.420577],
                  [-159.392016, 58.760147],
                  [-159.616571, 58.929932],
                  [-159.731586, 58.929932],
                  [-159.808264, 58.803962],
                  [-159.906848, 58.782055],
                  [-160.054726, 58.886116],
                  [-160.235465, 58.902547],
                  [-160.317619, 59.072332],
                  [-160.854359, 58.88064],
                  [-161.33633, 58.743716],
                  [-161.374669, 58.667039],
                  [-161.752577, 58.552023],
                  [-161.938793, 58.656085],
                  [-161.769008, 58.776578],
                  [-161.829255, 59.061379],
                  [-161.955224, 59.36261],
                  [-161.703285, 59.48858],
                  [-161.911409, 59.740519],
                  [-162.092148, 59.88292],
                  [-162.234548, 60.091043],
                  [-162.448149, 60.178674],
                  [-162.502918, 59.997935],
                  [-162.760334, 59.959597],
                  [-163.171105, 59.844581],
                  [-163.66403, 59.795289],
                  [-163.9324, 59.806242],
                  [-164.162431, 59.866489],
                  [-164.189816, 60.02532],
                  [-164.386986, 60.074613],
                  [-164.699171, 60.29369],
                  [-164.962064, 60.337506],
                  [-165.268773, 60.578491],
                  [-165.060649, 60.68803],
                  [-165.016834, 60.890677],
                  [-165.175665, 60.846861],
                  [-165.197573, 60.972831],
                  [-165.120896, 61.076893],
                  [-165.323543, 61.170001],
                  [-165.34545, 61.071416],
                  [-165.591913, 61.109754],
                  [-165.624774, 61.279539],
                  [-165.816467, 61.301447],
                  [-165.920529, 61.416463],
                  [-165.915052, 61.558863],
                  [-166.106745, 61.49314],
                  [-166.139607, 61.630064],
                  [-165.904098, 61.662925],
                  [-166.095791, 61.81628],
                  [-165.756221, 61.827233],
                  [-165.756221, 62.013449],
                  [-165.674067, 62.139419],
                  [-165.044219, 62.539236],
                  [-164.912772, 62.659728],
                  [-164.819664, 62.637821],
                  [-164.874433, 62.807606],
                  [-164.633448, 63.097884],
                  [-164.425324, 63.212899],
                  [-164.036462, 63.262192],
                  [-163.73523, 63.212899],
                  [-163.313505, 63.037637],
                  [-163.039658, 63.059545],
                  [-162.661749, 63.22933],
                  [-162.272887, 63.486746],
                  [-162.075717, 63.514131],
                  [-162.026424, 63.448408],
                  [-161.555408, 63.448408],
                  [-161.13916, 63.503177],
                  [-160.766728, 63.771547],
                  [-160.766728, 63.837271],
                  [-160.952944, 64.08921],
                  [-160.974852, 64.237087],
                  [-161.26513, 64.395918],
                  [-161.374669, 64.532842],
                  [-161.078914, 64.494503],
                  [-160.79959, 64.609519],
                  [-160.783159, 64.719058],
                  [-161.144637, 64.921705],
                  [-161.413007, 64.762873],
                  [-161.664946, 64.790258],
                  [-161.900455, 64.702627],
                  [-162.168825, 64.680719],
                  [-162.234548, 64.620473],
                  [-162.541257, 64.532842],
                  [-162.634365, 64.384965],
                  [-162.787719, 64.324718],
                  [-162.858919, 64.49998],
                  [-163.045135, 64.538319],
                  [-163.176582, 64.401395],
                  [-163.253259, 64.467119],
                  [-163.598306, 64.565704],
                  [-164.304832, 64.560227],
                  [-164.80871, 64.450688],
                  [-165.000403, 64.434257],
                  [-165.411174, 64.49998],
                  [-166.188899, 64.576658],
                  [-166.391546, 64.636904],
                  [-166.484654, 64.735489],
                  [-166.413454, 64.872412],
                  [-166.692778, 64.987428],
                  [-166.638008, 65.113398],
                  [-166.462746, 65.179121],
                  [-166.517516, 65.337952],
                  [-166.796839, 65.337952],
                  [-167.026871, 65.381768],
                  [-167.47598, 65.414629],
                  [-167.711489, 65.496784],
                  [-168.072967, 65.578938],
                  [-168.105828, 65.682999],
                  [-167.541703, 65.819923],
                  [-166.829701, 66.049954],
                  [-166.3313, 66.186878],
                  [-166.046499, 66.110201],
                  [-165.756221, 66.09377],
                  [-165.690498, 66.203309],
                  [-165.86576, 66.21974],
                  [-165.88219, 66.312848],
                  [-165.186619, 66.466202],
                  [-164.403417, 66.581218],
                  [-163.981692, 66.592172],
                  [-163.751661, 66.553833],
                  [-163.872153, 66.389525],
                  [-163.828338, 66.274509],
                  [-163.915969, 66.192355],
                  [-163.768091, 66.060908],
                  [-163.494244, 66.082816],
                  [-163.149197, 66.060908],
                  [-162.749381, 66.088293],
                  [-162.634365, 66.039001],
                  [-162.371472, 66.028047],
                  [-162.14144, 66.077339],
                  [-161.840208, 66.02257],
                  [-161.549931, 66.241647],
                  [-161.341807, 66.252601],
                  [-161.199406, 66.208786],
                  [-161.128206, 66.334755],
                  [-161.528023, 66.395002],
                  [-161.911409, 66.345709],
                  [-161.87307, 66.510017],
                  [-162.174302, 66.68528],
                  [-162.502918, 66.740049],
                  [-162.601503, 66.89888],
                  [-162.344087, 66.937219],
                  [-162.015471, 66.778388],
                  [-162.075717, 66.652418],
                  [-161.916886, 66.553833],
                  [-161.571838, 66.438817],
                  [-161.489684, 66.55931],
                  [-161.884024, 66.718141],
                  [-161.714239, 67.002942],
                  [-161.851162, 67.052235],
                  [-162.240025, 66.991988],
                  [-162.639842, 67.008419],
                  [-162.700088, 67.057712],
                  [-162.902735, 67.008419],
                  [-163.740707, 67.128912],
                  [-163.757138, 67.254881],
                  [-164.009077, 67.534205],
                  [-164.211724, 67.638267],
                  [-164.534863, 67.725898],
                  [-165.192096, 67.966884],
                  [-165.493328, 68.059992],
                  [-165.794559, 68.081899],
                  [-166.243668, 68.246208],
                  [-166.681824, 68.339316],
                  [-166.703731, 68.372177],
                  [-166.375115, 68.42147],
                  [-166.227238, 68.574824],
                  [-166.216284, 68.881533],
                  [-165.329019, 68.859625],
                  [-164.255539, 68.930825],
                  [-163.976215, 68.985595],
                  [-163.532583, 69.138949],
                  [-163.110859, 69.374457],
                  [-163.023228, 69.609966],
                  [-162.842489, 69.812613],
                  [-162.470057, 69.982398],
                  [-162.311225, 70.108367],
                  [-161.851162, 70.311014],
                  [-161.779962, 70.256245],
                  [-161.396576, 70.239814],
                  [-160.837928, 70.343876],
                  [-160.487404, 70.453415],
                  [-159.649432, 70.792985],
                  [-159.33177, 70.809416],
                  [-159.298908, 70.760123],
                  [-158.975769, 70.798462],
                  [-158.658106, 70.787508],
                  [-158.033735, 70.831323],
                  [-157.420318, 70.979201],
                  [-156.812377, 71.285909],
                  [-156.565915, 71.351633],
                  [-156.522099, 71.296863],
                  [-155.585543, 71.170894],
                  [-155.508865, 71.083263],
                  [-155.832005, 70.968247],
                  [-155.979882, 70.96277],
                  [-155.974405, 70.809416],
                  [-155.503388, 70.858708],
                  [-155.476004, 70.940862],
                  [-155.262403, 71.017539],
                  [-155.191203, 70.973724],
                  [-155.032372, 71.148986],
                  [-154.566832, 70.990155],
                  [-154.643509, 70.869662],
                  [-154.353231, 70.8368],
                  [-154.183446, 70.7656],
                  [-153.931507, 70.880616],
                  [-153.487874, 70.886093],
                  [-153.235935, 70.924431],
                  [-152.589656, 70.886093],
                  [-152.26104, 70.842277],
                  [-152.419871, 70.606769],
                  [-151.817408, 70.546523],
                  [-151.773592, 70.486276],
                  [-151.187559, 70.382214],
                  [-151.182082, 70.431507],
                  [-150.760358, 70.49723],
                  [-150.355064, 70.491753],
                  [-150.349588, 70.436984],
                  [-150.114079, 70.431507],
                  [-149.867617, 70.508184],
                  [-149.462323, 70.519138],
                  [-149.177522, 70.486276],
                  [-148.78866, 70.404122],
                  [-148.607921, 70.420553],
                  [-148.350504, 70.305537],
                  [-148.202627, 70.349353],
                  [-147.961642, 70.316491],
                  [-147.786379, 70.245291]
                ]
              ],
              [
                [
                  [-152.94018, 58.026237],
                  [-152.945657, 57.982421],
                  [-153.290705, 58.048145],
                  [-153.044242, 58.305561],
                  [-152.819688, 58.327469],
                  [-152.666333, 58.562977],
                  [-152.496548, 58.354853],
                  [-152.354148, 58.426053],
                  [-152.080301, 58.311038],
                  [-152.080301, 58.152206],
                  [-152.480117, 58.130299],
                  [-152.655379, 58.059098],
                  [-152.94018, 58.026237]
                ]
              ],
              [
                [
                  [-153.958891, 57.538789],
                  [-153.67409, 57.670236],
                  [-153.931507, 57.69762],
                  [-153.936983, 57.812636],
                  [-153.723383, 57.889313],
                  [-153.570028, 57.834544],
                  [-153.548121, 57.719528],
                  [-153.46049, 57.796205],
                  [-153.455013, 57.96599],
                  [-153.268797, 57.889313],
                  [-153.235935, 57.998852],
                  [-153.071627, 57.933129],
                  [-152.874457, 57.933129],
                  [-152.721103, 57.993375],
                  [-152.469163, 57.889313],
                  [-152.469163, 57.599035],
                  [-152.151501, 57.620943],
                  [-152.359625, 57.42925],
                  [-152.74301, 57.505928],
                  [-152.60061, 57.379958],
                  [-152.710149, 57.275896],
                  [-152.907319, 57.325188],
                  [-152.912796, 57.128019],
                  [-153.214027, 57.073249],
                  [-153.312612, 56.991095],
                  [-153.498828, 57.067772],
                  [-153.695998, 56.859649],
                  [-153.849352, 56.837741],
                  [-154.013661, 56.744633],
                  [-154.073907, 56.969187],
                  [-154.303938, 56.848695],
                  [-154.314892, 56.919895],
                  [-154.523016, 56.991095],
                  [-154.539447, 57.193742],
                  [-154.742094, 57.275896],
                  [-154.627078, 57.511404],
                  [-154.227261, 57.659282],
                  [-153.980799, 57.648328],
                  [-153.958891, 57.538789]
                ]
              ],
              [
                [
                  [-154.53397, 56.602232],
                  [-154.742094, 56.399586],
                  [-154.807817, 56.432447],
                  [-154.53397, 56.602232]
                ]
              ],
              [
                [
                  [-155.634835, 55.923092],
                  [-155.476004, 55.912138],
                  [-155.530773, 55.704014],
                  [-155.793666, 55.731399],
                  [-155.837482, 55.802599],
                  [-155.634835, 55.923092]
                ]
              ],
              [
                [
                  [-159.890418, 55.28229],
                  [-159.950664, 55.068689],
                  [-160.257373, 54.893427],
                  [-160.109495, 55.161797],
                  [-160.005433, 55.134412],
                  [-159.890418, 55.28229]
                ]
              ],
              [
                [
                  [-160.520266, 55.358967],
                  [-160.33405, 55.358967],
                  [-160.339527, 55.249428],
                  [-160.525743, 55.128935],
                  [-160.690051, 55.211089],
                  [-160.794113, 55.134412],
                  [-160.854359, 55.320628],
                  [-160.79959, 55.380875],
                  [-160.520266, 55.358967]
                ]
              ],
              [
                [
                  [-162.256456, 54.981058],
                  [-162.234548, 54.893427],
                  [-162.349564, 54.838658],
                  [-162.437195, 54.931766],
                  [-162.256456, 54.981058]
                ]
              ],
              [
                [
                  [-162.415287, 63.634624],
                  [-162.563165, 63.536039],
                  [-162.612457, 63.62367],
                  [-162.415287, 63.634624]
                ]
              ],
              [
                [
                  [-162.80415, 54.488133],
                  [-162.590549, 54.449795],
                  [-162.612457, 54.367641],
                  [-162.782242, 54.373118],
                  [-162.80415, 54.488133]
                ]
              ],
              [
                [
                  [-165.548097, 54.29644],
                  [-165.476897, 54.181425],
                  [-165.630251, 54.132132],
                  [-165.685021, 54.252625],
                  [-165.548097, 54.29644]
                ]
              ],
              [
                [
                  [-165.73979, 54.15404],
                  [-166.046499, 54.044501],
                  [-166.112222, 54.121178],
                  [-165.980775, 54.219763],
                  [-165.73979, 54.15404]
                ]
              ],
              [
                [
                  [-166.364161, 60.359413],
                  [-166.13413, 60.397752],
                  [-166.084837, 60.326552],
                  [-165.88219, 60.342983],
                  [-165.685021, 60.277259],
                  [-165.646682, 59.992458],
                  [-165.750744, 59.89935],
                  [-166.00816, 59.844581],
                  [-166.062929, 59.745996],
                  [-166.440838, 59.855535],
                  [-166.6161, 59.850058],
                  [-166.994009, 59.992458],
                  [-167.125456, 59.992458],
                  [-167.344534, 60.074613],
                  [-167.421211, 60.206059],
                  [-167.311672, 60.238921],
                  [-166.93924, 60.206059],
                  [-166.763978, 60.310121],
                  [-166.577762, 60.321075],
                  [-166.495608, 60.392275],
                  [-166.364161, 60.359413]
                ]
              ],
              [
                [
                  [-166.375115, 54.01164],
                  [-166.210807, 53.934962],
                  [-166.5449, 53.748746],
                  [-166.539423, 53.715885],
                  [-166.117699, 53.852808],
                  [-166.112222, 53.776131],
                  [-166.282007, 53.683023],
                  [-166.555854, 53.622777],
                  [-166.583239, 53.529669],
                  [-166.878994, 53.431084],
                  [-167.13641, 53.425607],
                  [-167.306195, 53.332499],
                  [-167.623857, 53.250345],
                  [-167.793643, 53.337976],
                  [-167.459549, 53.442038],
                  [-167.355487, 53.425607],
                  [-167.103548, 53.513238],
                  [-167.163794, 53.611823],
                  [-167.021394, 53.715885],
                  [-166.807793, 53.666592],
                  [-166.785886, 53.732316],
                  [-167.015917, 53.754223],
                  [-167.141887, 53.825424],
                  [-167.032348, 53.945916],
                  [-166.643485, 54.017116],
                  [-166.561331, 53.880193],
                  [-166.375115, 54.01164]
                ]
              ],
              [
                [
                  [-168.790446, 53.157237],
                  [-168.40706, 53.34893],
                  [-168.385152, 53.431084],
                  [-168.237275, 53.524192],
                  [-168.007243, 53.568007],
                  [-167.886751, 53.518715],
                  [-167.842935, 53.387268],
                  [-168.270136, 53.244868],
                  [-168.500168, 53.036744],
                  [-168.686384, 52.965544],
                  [-168.790446, 53.157237]
                ]
              ],
              [
                [
                  [-169.74891, 52.894344],
                  [-169.705095, 52.795759],
                  [-169.962511, 52.790282],
                  [-169.989896, 52.856005],
                  [-169.74891, 52.894344]
                ]
              ],
              [
                [
                  [-170.148727, 57.221127],
                  [-170.28565, 57.128019],
                  [-170.313035, 57.221127],
                  [-170.148727, 57.221127]
                ]
              ],
              [
                [
                  [-170.669036, 52.697174],
                  [-170.603313, 52.604066],
                  [-170.789529, 52.538343],
                  [-170.816914, 52.636928],
                  [-170.669036, 52.697174]
                ]
              ],
              [
                [
                  [-171.742517, 63.716778],
                  [-170.94836, 63.5689],
                  [-170.488297, 63.69487],
                  [-170.280174, 63.683916],
                  [-170.093958, 63.612716],
                  [-170.044665, 63.492223],
                  [-169.644848, 63.4265],
                  [-169.518879, 63.366254],
                  [-168.99857, 63.338869],
                  [-168.686384, 63.295053],
                  [-168.856169, 63.147176],
                  [-169.108108, 63.180038],
                  [-169.376478, 63.152653],
                  [-169.513402, 63.08693],
                  [-169.639372, 62.939052],
                  [-169.831064, 63.075976],
                  [-170.055619, 63.169084],
                  [-170.263743, 63.180038],
                  [-170.362328, 63.2841],
                  [-170.866206, 63.415546],
                  [-171.101715, 63.421023],
                  [-171.463193, 63.306007],
                  [-171.73704, 63.366254],
                  [-171.852055, 63.486746],
                  [-171.742517, 63.716778]
                ]
              ],
              [
                [
                  [-172.432611, 52.390465],
                  [-172.41618, 52.275449],
                  [-172.607873, 52.253542],
                  [-172.569535, 52.352127],
                  [-172.432611, 52.390465]
                ]
              ],
              [
                [
                  [-173.626584, 52.14948],
                  [-173.495138, 52.105664],
                  [-173.122706, 52.111141],
                  [-173.106275, 52.07828],
                  [-173.549907, 52.028987],
                  [-173.626584, 52.14948]
                ]
              ],
              [
                [
                  [-174.322156, 52.280926],
                  [-174.327632, 52.379511],
                  [-174.185232, 52.41785],
                  [-173.982585, 52.319265],
                  [-174.059262, 52.226157],
                  [-174.179755, 52.231634],
                  [-174.141417, 52.127572],
                  [-174.333109, 52.116618],
                  [-174.738403, 52.007079],
                  [-174.968435, 52.039941],
                  [-174.902711, 52.116618],
                  [-174.656249, 52.105664],
                  [-174.322156, 52.280926]
                ]
              ],
              [
                [
                  [-176.469116, 51.853725],
                  [-176.288377, 51.870156],
                  [-176.288377, 51.744186],
                  [-176.518409, 51.760617],
                  [-176.80321, 51.61274],
                  [-176.912748, 51.80991],
                  [-176.792256, 51.815386],
                  [-176.775825, 51.963264],
                  [-176.627947, 51.968741],
                  [-176.627947, 51.859202],
                  [-176.469116, 51.853725]
                ]
              ],
              [
                [
                  [-177.153734, 51.946833],
                  [-177.044195, 51.897541],
                  [-177.120872, 51.727755],
                  [-177.274226, 51.678463],
                  [-177.279703, 51.782525],
                  [-177.153734, 51.946833]
                ]
              ],
              [
                [
                  [-178.123152, 51.919448],
                  [-177.953367, 51.913971],
                  [-177.800013, 51.793479],
                  [-177.964321, 51.651078],
                  [-178.123152, 51.919448]
                ]
              ],
              [
                [
                  [-187.107557, 52.992929],
                  [-187.293773, 52.927205],
                  [-187.304726, 52.823143],
                  [-188.90491, 52.762897],
                  [-188.642017, 52.927205],
                  [-188.642017, 53.003883],
                  [-187.107557, 52.992929]
                ]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "04",
          properties: { name: "Arizona", density: 57.05 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-109.042503, 37.000263],
                [-109.04798, 31.331629],
                [-111.074448, 31.331629],
                [-112.246513, 31.704061],
                [-114.815198, 32.492741],
                [-114.72209, 32.717295],
                [-114.524921, 32.755634],
                [-114.470151, 32.843265],
                [-114.524921, 33.029481],
                [-114.661844, 33.034958],
                [-114.727567, 33.40739],
                [-114.524921, 33.54979],
                [-114.497536, 33.697668],
                [-114.535874, 33.933176],
                [-114.415382, 34.108438],
                [-114.256551, 34.174162],
                [-114.136058, 34.305608],
                [-114.333228, 34.448009],
                [-114.470151, 34.710902],
                [-114.634459, 34.87521],
                [-114.634459, 35.00118],
                [-114.574213, 35.138103],
                [-114.596121, 35.324319],
                [-114.678275, 35.516012],
                [-114.738521, 36.102045],
                [-114.371566, 36.140383],
                [-114.251074, 36.01989],
                [-114.152489, 36.025367],
                [-114.048427, 36.195153],
                [-114.048427, 37.000263],
                [-110.499369, 37.00574],
                [-109.042503, 37.000263]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "05",
          properties: { name: "Arkansas", density: 56.43 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-94.473842, 36.501861],
                [-90.152536, 36.496384],
                [-90.064905, 36.304691],
                [-90.218259, 36.184199],
                [-90.377091, 35.997983],
                [-89.730812, 35.997983],
                [-89.763673, 35.811767],
                [-89.911551, 35.756997],
                [-89.944412, 35.603643],
                [-90.130628, 35.439335],
                [-90.114197, 35.198349],
                [-90.212782, 35.023087],
                [-90.311367, 34.995703],
                [-90.251121, 34.908072],
                [-90.409952, 34.831394],
                [-90.481152, 34.661609],
                [-90.585214, 34.617794],
                [-90.568783, 34.420624],
                [-90.749522, 34.365854],
                [-90.744046, 34.300131],
                [-90.952169, 34.135823],
                [-90.891923, 34.026284],
                [-91.072662, 33.867453],
                [-91.231493, 33.560744],
                [-91.056231, 33.429298],
                [-91.143862, 33.347144],
                [-91.089093, 33.13902],
                [-91.16577, 33.002096],
                [-93.608485, 33.018527],
                [-94.041164, 33.018527],
                [-94.041164, 33.54979],
                [-94.183564, 33.593606],
                [-94.380734, 33.544313],
                [-94.484796, 33.637421],
                [-94.430026, 35.395519],
                [-94.616242, 36.501861],
                [-94.473842, 36.501861]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "06",
          properties: { name: "California", density: 241.7 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-123.233256, 42.006186],
                [-122.378853, 42.011663],
                [-121.037003, 41.995232],
                [-120.001861, 41.995232],
                [-119.996384, 40.264519],
                [-120.001861, 38.999346],
                [-118.71478, 38.101128],
                [-117.498899, 37.21934],
                [-116.540435, 36.501861],
                [-115.85034, 35.970598],
                [-114.634459, 35.00118],
                [-114.634459, 34.87521],
                [-114.470151, 34.710902],
                [-114.333228, 34.448009],
                [-114.136058, 34.305608],
                [-114.256551, 34.174162],
                [-114.415382, 34.108438],
                [-114.535874, 33.933176],
                [-114.497536, 33.697668],
                [-114.524921, 33.54979],
                [-114.727567, 33.40739],
                [-114.661844, 33.034958],
                [-114.524921, 33.029481],
                [-114.470151, 32.843265],
                [-114.524921, 32.755634],
                [-114.72209, 32.717295],
                [-116.04751, 32.624187],
                [-117.126467, 32.536556],
                [-117.24696, 32.668003],
                [-117.252437, 32.876127],
                [-117.329114, 33.122589],
                [-117.471515, 33.297851],
                [-117.7837, 33.538836],
                [-118.183517, 33.763391],
                [-118.260194, 33.703145],
                [-118.413548, 33.741483],
                [-118.391641, 33.840068],
                [-118.566903, 34.042715],
                [-118.802411, 33.998899],
                [-119.218659, 34.146777],
                [-119.278905, 34.26727],
                [-119.558229, 34.415147],
                [-119.875891, 34.40967],
                [-120.138784, 34.475393],
                [-120.472878, 34.448009],
                [-120.64814, 34.579455],
                [-120.609801, 34.858779],
                [-120.670048, 34.902595],
                [-120.631709, 35.099764],
                [-120.894602, 35.247642],
                [-120.905556, 35.450289],
                [-121.004141, 35.461243],
                [-121.168449, 35.636505],
                [-121.283465, 35.674843],
                [-121.332757, 35.784382],
                [-121.716143, 36.195153],
                [-121.896882, 36.315645],
                [-121.935221, 36.638785],
                [-121.858544, 36.6114],
                [-121.787344, 36.803093],
                [-121.929744, 36.978355],
                [-122.105006, 36.956447],
                [-122.335038, 37.115279],
                [-122.417192, 37.241248],
                [-122.400761, 37.361741],
                [-122.515777, 37.520572],
                [-122.515777, 37.783465],
                [-122.329561, 37.783465],
                [-122.406238, 38.15042],
                [-122.488392, 38.112082],
                [-122.504823, 37.931343],
                [-122.701993, 37.893004],
                [-122.937501, 38.029928],
                [-122.97584, 38.265436],
                [-123.129194, 38.451652],
                [-123.331841, 38.566668],
                [-123.44138, 38.698114],
                [-123.737134, 38.95553],
                [-123.687842, 39.032208],
                [-123.824765, 39.366301],
                [-123.764519, 39.552517],
                [-123.85215, 39.831841],
                [-124.109566, 40.105688],
                [-124.361506, 40.259042],
                [-124.410798, 40.439781],
                [-124.158859, 40.877937],
                [-124.109566, 41.025814],
                [-124.158859, 41.14083],
                [-124.065751, 41.442061],
                [-124.147905, 41.715908],
                [-124.257444, 41.781632],
                [-124.213628, 42.000709],
                [-123.233256, 42.006186]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "08",
          properties: { name: "Colorado", density: 49.33 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-107.919731, 41.003906],
                [-105.728954, 40.998429],
                [-104.053011, 41.003906],
                [-102.053927, 41.003906],
                [-102.053927, 40.001626],
                [-102.042974, 36.994786],
                [-103.001438, 37.000263],
                [-104.337812, 36.994786],
                [-106.868158, 36.994786],
                [-107.421329, 37.000263],
                [-109.042503, 37.000263],
                [-109.042503, 38.166851],
                [-109.058934, 38.27639],
                [-109.053457, 39.125316],
                [-109.04798, 40.998429],
                [-107.919731, 41.003906]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "09",
          properties: { name: "Connecticut", density: 739.1 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-73.053528, 42.039048],
                [-71.799309, 42.022617],
                [-71.799309, 42.006186],
                [-71.799309, 41.414677],
                [-71.859555, 41.321569],
                [-71.947186, 41.338],
                [-72.385341, 41.261322],
                [-72.905651, 41.28323],
                [-73.130205, 41.146307],
                [-73.371191, 41.102491],
                [-73.655992, 40.987475],
                [-73.727192, 41.102491],
                [-73.48073, 41.21203],
                [-73.55193, 41.294184],
                [-73.486206, 42.050002],
                [-73.053528, 42.039048]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "10",
          properties: { name: "Delaware", density: 464.3 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-75.414089, 39.804456],
                [-75.507197, 39.683964],
                [-75.611259, 39.61824],
                [-75.589352, 39.459409],
                [-75.441474, 39.311532],
                [-75.403136, 39.065069],
                [-75.189535, 38.807653],
                [-75.09095, 38.796699],
                [-75.047134, 38.451652],
                [-75.693413, 38.462606],
                [-75.786521, 39.722302],
                [-75.616736, 39.831841],
                [-75.414089, 39.804456]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "11",
          properties: { name: "District of Columbia", density: 10065 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-77.035264, 38.993869],
                [-76.909294, 38.895284],
                [-77.040741, 38.791222],
                [-77.117418, 38.933623],
                [-77.035264, 38.993869]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "12",
          properties: { name: "Florida", density: 353.4 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-85.497137, 30.997536],
                [-85.004212, 31.003013],
                [-84.867289, 30.712735],
                [-83.498053, 30.647012],
                [-82.216449, 30.570335],
                [-82.167157, 30.356734],
                [-82.046664, 30.362211],
                [-82.002849, 30.564858],
                [-82.041187, 30.751074],
                [-81.948079, 30.827751],
                [-81.718048, 30.745597],
                [-81.444201, 30.707258],
                [-81.383954, 30.27458],
                [-81.257985, 29.787132],
                [-80.967707, 29.14633],
                [-80.524075, 28.461713],
                [-80.589798, 28.41242],
                [-80.56789, 28.094758],
                [-80.381674, 27.738757],
                [-80.091397, 27.021277],
                [-80.03115, 26.796723],
                [-80.036627, 26.566691],
                [-80.146166, 25.739673],
                [-80.239274, 25.723243],
                [-80.337859, 25.465826],
                [-80.304997, 25.383672],
                [-80.49669, 25.197456],
                [-80.573367, 25.241272],
                [-80.759583, 25.164595],
                [-81.077246, 25.120779],
                [-81.170354, 25.224841],
                [-81.126538, 25.378195],
                [-81.351093, 25.821827],
                [-81.526355, 25.903982],
                [-81.679709, 25.843735],
                [-81.800202, 26.090198],
                [-81.833064, 26.292844],
                [-82.041187, 26.517399],
                [-82.09048, 26.665276],
                [-82.057618, 26.878877],
                [-82.172634, 26.917216],
                [-82.145249, 26.791246],
                [-82.249311, 26.758384],
                [-82.566974, 27.300601],
                [-82.692943, 27.437525],
                [-82.391711, 27.837342],
                [-82.588881, 27.815434],
                [-82.720328, 27.689464],
                [-82.851774, 27.886634],
                [-82.676512, 28.434328],
                [-82.643651, 28.888914],
                [-82.764143, 28.998453],
                [-82.802482, 29.14633],
                [-82.994175, 29.179192],
                [-83.218729, 29.420177],
                [-83.399469, 29.518762],
                [-83.410422, 29.66664],
                [-83.536392, 29.721409],
                [-83.640454, 29.885717],
                [-84.02384, 30.104795],
                [-84.357933, 30.055502],
                [-84.341502, 29.902148],
                [-84.451041, 29.929533],
                [-84.867289, 29.743317],
                [-85.310921, 29.699501],
                [-85.299967, 29.80904],
                [-85.404029, 29.940487],
                [-85.924338, 30.236241],
                [-86.29677, 30.362211],
                [-86.630863, 30.395073],
                [-86.910187, 30.373165],
                [-87.518128, 30.280057],
                [-87.37025, 30.427934],
                [-87.446927, 30.510088],
                [-87.408589, 30.674397],
                [-87.633143, 30.86609],
                [-87.600282, 30.997536],
                [-85.497137, 30.997536]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "13",
          properties: { name: "Georgia", density: 169.5 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-83.109191, 35.00118],
                [-83.322791, 34.787579],
                [-83.339222, 34.683517],
                [-83.005129, 34.469916],
                [-82.901067, 34.486347],
                [-82.747713, 34.26727],
                [-82.714851, 34.152254],
                [-82.55602, 33.94413],
                [-82.325988, 33.81816],
                [-82.194542, 33.631944],
                [-81.926172, 33.462159],
                [-81.937125, 33.347144],
                [-81.761863, 33.160928],
                [-81.493493, 33.007573],
                [-81.42777, 32.843265],
                [-81.416816, 32.629664],
                [-81.279893, 32.558464],
                [-81.121061, 32.290094],
                [-81.115584, 32.120309],
                [-80.885553, 32.032678],
                [-81.132015, 31.693108],
                [-81.175831, 31.517845],
                [-81.279893, 31.364491],
                [-81.290846, 31.20566],
                [-81.400385, 31.13446],
                [-81.444201, 30.707258],
                [-81.718048, 30.745597],
                [-81.948079, 30.827751],
                [-82.041187, 30.751074],
                [-82.002849, 30.564858],
                [-82.046664, 30.362211],
                [-82.167157, 30.356734],
                [-82.216449, 30.570335],
                [-83.498053, 30.647012],
                [-84.867289, 30.712735],
                [-85.004212, 31.003013],
                [-85.113751, 31.27686],
                [-85.042551, 31.539753],
                [-85.141136, 31.840985],
                [-85.053504, 32.01077],
                [-85.058981, 32.13674],
                [-84.889196, 32.262709],
                [-85.004212, 32.322956],
                [-84.960397, 32.421541],
                [-85.069935, 32.580372],
                [-85.184951, 32.859696],
                [-85.431413, 34.124869],
                [-85.606675, 34.984749],
                [-84.319594, 34.990226],
                [-83.618546, 34.984749],
                [-83.109191, 35.00118]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "15",
          properties: { name: "Hawaii", density: 214.1 },
          geometry: {
            type: "MultiPolygon",
            coordinates: [
              [
                [
                  [-155.634835, 18.948267],
                  [-155.881297, 19.035898],
                  [-155.919636, 19.123529],
                  [-155.886774, 19.348084],
                  [-156.062036, 19.73147],
                  [-155.925113, 19.857439],
                  [-155.826528, 20.032702],
                  [-155.897728, 20.147717],
                  [-155.87582, 20.26821],
                  [-155.596496, 20.12581],
                  [-155.284311, 20.021748],
                  [-155.092618, 19.868393],
                  [-155.092618, 19.736947],
                  [-154.807817, 19.523346],
                  [-154.983079, 19.348084],
                  [-155.295265, 19.26593],
                  [-155.514342, 19.134483],
                  [-155.634835, 18.948267]
                ]
              ],
              [
                [
                  [-156.587823, 21.029505],
                  [-156.472807, 20.892581],
                  [-156.324929, 20.952827],
                  [-156.00179, 20.793996],
                  [-156.051082, 20.651596],
                  [-156.379699, 20.580396],
                  [-156.445422, 20.60778],
                  [-156.461853, 20.783042],
                  [-156.631638, 20.821381],
                  [-156.697361, 20.919966],
                  [-156.587823, 21.029505]
                ]
              ],
              [
                [
                  [-156.982162, 21.210244],
                  [-157.080747, 21.106182],
                  [-157.310779, 21.106182],
                  [-157.239579, 21.221198],
                  [-156.982162, 21.210244]
                ]
              ],
              [
                [
                  [-157.951581, 21.697691],
                  [-157.842042, 21.462183],
                  [-157.896811, 21.325259],
                  [-158.110412, 21.303352],
                  [-158.252813, 21.582676],
                  [-158.126843, 21.588153],
                  [-157.951581, 21.697691]
                ]
              ],
              [
                [
                  [-159.468693, 22.228955],
                  [-159.353678, 22.218001],
                  [-159.298908, 22.113939],
                  [-159.33177, 21.966061],
                  [-159.446786, 21.872953],
                  [-159.764448, 21.987969],
                  [-159.726109, 22.152277],
                  [-159.468693, 22.228955]
                ]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "16",
          properties: { name: "Idaho", density: 19.15 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-116.04751, 49.000239],
                [-116.04751, 47.976051],
                [-115.724371, 47.696727],
                [-115.718894, 47.42288],
                [-115.527201, 47.302388],
                [-115.324554, 47.258572],
                [-115.302646, 47.187372],
                [-114.930214, 46.919002],
                [-114.886399, 46.809463],
                [-114.623506, 46.705401],
                [-114.612552, 46.639678],
                [-114.322274, 46.645155],
                [-114.464674, 46.272723],
                [-114.492059, 46.037214],
                [-114.387997, 45.88386],
                [-114.568736, 45.774321],
                [-114.497536, 45.670259],
                [-114.546828, 45.560721],
                [-114.333228, 45.456659],
                [-114.086765, 45.593582],
                [-113.98818, 45.703121],
                [-113.807441, 45.604536],
                [-113.834826, 45.522382],
                [-113.736241, 45.330689],
                [-113.571933, 45.128042],
                [-113.45144, 45.056842],
                [-113.456917, 44.865149],
                [-113.341901, 44.782995],
                [-113.133778, 44.772041],
                [-113.002331, 44.448902],
                [-112.887315, 44.394132],
                [-112.783254, 44.48724],
                [-112.471068, 44.481763],
                [-112.241036, 44.569394],
                [-112.104113, 44.520102],
                [-111.868605, 44.563917],
                [-111.819312, 44.509148],
                [-111.616665, 44.547487],
                [-111.386634, 44.75561],
                [-111.227803, 44.580348],
                [-111.047063, 44.476286],
                [-111.047063, 42.000709],
                [-112.164359, 41.995232],
                [-114.04295, 41.995232],
                [-117.027882, 42.000709],
                [-117.027882, 43.830007],
                [-116.896436, 44.158624],
                [-116.97859, 44.240778],
                [-117.170283, 44.257209],
                [-117.241483, 44.394132],
                [-117.038836, 44.750133],
                [-116.934774, 44.782995],
                [-116.830713, 44.930872],
                [-116.847143, 45.02398],
                [-116.732128, 45.144473],
                [-116.671881, 45.319735],
                [-116.463758, 45.61549],
                [-116.545912, 45.752413],
                [-116.78142, 45.823614],
                [-116.918344, 45.993399],
                [-116.92382, 46.168661],
                [-117.055267, 46.343923],
                [-117.038836, 46.426077],
                [-117.044313, 47.762451],
                [-117.033359, 49.000239],
                [-116.04751, 49.000239]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "17",
          properties: { name: "Illinois", density: 231.5 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-90.639984, 42.510065],
                [-88.788778, 42.493634],
                [-87.802929, 42.493634],
                [-87.83579, 42.301941],
                [-87.682436, 42.077386],
                [-87.523605, 41.710431],
                [-87.529082, 39.34987],
                [-87.63862, 39.169131],
                [-87.512651, 38.95553],
                [-87.49622, 38.780268],
                [-87.62219, 38.637868],
                [-87.655051, 38.506421],
                [-87.83579, 38.292821],
                [-87.950806, 38.27639],
                [-87.923421, 38.15042],
                [-88.000098, 38.101128],
                [-88.060345, 37.865619],
                [-88.027483, 37.799896],
                [-88.15893, 37.657496],
                [-88.065822, 37.482234],
                [-88.476592, 37.389126],
                [-88.514931, 37.285064],
                [-88.421823, 37.153617],
                [-88.547792, 37.071463],
                [-88.914747, 37.224817],
                [-89.029763, 37.213863],
                [-89.183118, 37.038601],
                [-89.133825, 36.983832],
                [-89.292656, 36.994786],
                [-89.517211, 37.279587],
                [-89.435057, 37.34531],
                [-89.517211, 37.537003],
                [-89.517211, 37.690357],
                [-89.84035, 37.903958],
                [-89.949889, 37.88205],
                [-90.059428, 38.013497],
                [-90.355183, 38.216144],
                [-90.349706, 38.374975],
                [-90.179921, 38.632391],
                [-90.207305, 38.725499],
                [-90.10872, 38.845992],
                [-90.251121, 38.917192],
                [-90.470199, 38.961007],
                [-90.585214, 38.867899],
                [-90.661891, 38.928146],
                [-90.727615, 39.256762],
                [-91.061708, 39.470363],
                [-91.368417, 39.727779],
                [-91.494386, 40.034488],
                [-91.50534, 40.237135],
                [-91.417709, 40.379535],
                [-91.401278, 40.560274],
                [-91.121954, 40.669813],
                [-91.09457, 40.823167],
                [-90.963123, 40.921752],
                [-90.946692, 41.097014],
                [-91.111001, 41.239415],
                [-91.045277, 41.414677],
                [-90.656414, 41.463969],
                [-90.344229, 41.589939],
                [-90.311367, 41.743293],
                [-90.179921, 41.809016],
                [-90.141582, 42.000709],
                [-90.168967, 42.126679],
                [-90.393521, 42.225264],
                [-90.420906, 42.329326],
                [-90.639984, 42.510065]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "18",
          properties: { name: "Indiana", density: 181.7 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-85.990061, 41.759724],
                [-84.807042, 41.759724],
                [-84.807042, 41.694001],
                [-84.801565, 40.500028],
                [-84.817996, 39.103408],
                [-84.894673, 39.059592],
                [-84.812519, 38.785745],
                [-84.987781, 38.780268],
                [-85.173997, 38.68716],
                [-85.431413, 38.730976],
                [-85.42046, 38.533806],
                [-85.590245, 38.451652],
                [-85.655968, 38.325682],
                [-85.83123, 38.27639],
                [-85.924338, 38.024451],
                [-86.039354, 37.958727],
                [-86.263908, 38.051835],
                [-86.302247, 38.166851],
                [-86.521325, 38.040881],
                [-86.504894, 37.931343],
                [-86.729448, 37.893004],
                [-86.795172, 37.991589],
                [-87.047111, 37.893004],
                [-87.129265, 37.788942],
                [-87.381204, 37.93682],
                [-87.512651, 37.903958],
                [-87.600282, 37.975158],
                [-87.682436, 37.903958],
                [-87.934375, 37.893004],
                [-88.027483, 37.799896],
                [-88.060345, 37.865619],
                [-88.000098, 38.101128],
                [-87.923421, 38.15042],
                [-87.950806, 38.27639],
                [-87.83579, 38.292821],
                [-87.655051, 38.506421],
                [-87.62219, 38.637868],
                [-87.49622, 38.780268],
                [-87.512651, 38.95553],
                [-87.63862, 39.169131],
                [-87.529082, 39.34987],
                [-87.523605, 41.710431],
                [-87.42502, 41.644708],
                [-87.118311, 41.644708],
                [-86.822556, 41.759724],
                [-85.990061, 41.759724]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "19",
          properties: { name: "Iowa", density: 54.81 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-91.368417, 43.501391],
                [-91.215062, 43.501391],
                [-91.204109, 43.353514],
                [-91.056231, 43.254929],
                [-91.176724, 43.134436],
                [-91.143862, 42.909881],
                [-91.067185, 42.75105],
                [-90.711184, 42.636034],
                [-90.639984, 42.510065],
                [-90.420906, 42.329326],
                [-90.393521, 42.225264],
                [-90.168967, 42.126679],
                [-90.141582, 42.000709],
                [-90.179921, 41.809016],
                [-90.311367, 41.743293],
                [-90.344229, 41.589939],
                [-90.656414, 41.463969],
                [-91.045277, 41.414677],
                [-91.111001, 41.239415],
                [-90.946692, 41.097014],
                [-90.963123, 40.921752],
                [-91.09457, 40.823167],
                [-91.121954, 40.669813],
                [-91.401278, 40.560274],
                [-91.417709, 40.379535],
                [-91.527248, 40.412397],
                [-91.729895, 40.615043],
                [-91.833957, 40.609566],
                [-93.257961, 40.582182],
                [-94.632673, 40.571228],
                [-95.7664, 40.587659],
                [-95.881416, 40.719105],
                [-95.826646, 40.976521],
                [-95.925231, 41.201076],
                [-95.919754, 41.453015],
                [-96.095016, 41.540646],
                [-96.122401, 41.67757],
                [-96.062155, 41.798063],
                [-96.127878, 41.973325],
                [-96.264801, 42.039048],
                [-96.44554, 42.488157],
                [-96.631756, 42.707235],
                [-96.544125, 42.855112],
                [-96.511264, 43.052282],
                [-96.434587, 43.123482],
                [-96.560556, 43.222067],
                [-96.527695, 43.397329],
                [-96.582464, 43.479483],
                [-96.451017, 43.501391],
                [-91.368417, 43.501391]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "20",
          properties: { name: "Kansas", density: 35.09 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-101.90605, 40.001626],
                [-95.306337, 40.001626],
                [-95.207752, 39.908518],
                [-94.884612, 39.831841],
                [-95.109167, 39.541563],
                [-94.983197, 39.442978],
                [-94.824366, 39.20747],
                [-94.610765, 39.158177],
                [-94.616242, 37.000263],
                [-100.087706, 37.000263],
                [-102.042974, 36.994786],
                [-102.053927, 40.001626],
                [-101.90605, 40.001626]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "21",
          properties: { name: "Kentucky", density: 110 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-83.903347, 38.769315],
                [-83.678792, 38.632391],
                [-83.519961, 38.703591],
                [-83.142052, 38.626914],
                [-83.032514, 38.725499],
                [-82.890113, 38.758361],
                [-82.846298, 38.588575],
                [-82.731282, 38.561191],
                [-82.594358, 38.424267],
                [-82.621743, 38.123036],
                [-82.50125, 37.931343],
                [-82.342419, 37.783465],
                [-82.293127, 37.668449],
                [-82.101434, 37.553434],
                [-81.969987, 37.537003],
                [-82.353373, 37.268633],
                [-82.720328, 37.120755],
                [-82.720328, 37.044078],
                [-82.868205, 36.978355],
                [-82.879159, 36.890724],
                [-83.070852, 36.852385],
                [-83.136575, 36.742847],
                [-83.673316, 36.600446],
                [-83.689746, 36.584015],
                [-84.544149, 36.594969],
                [-85.289013, 36.627831],
                [-85.486183, 36.616877],
                [-86.592525, 36.655216],
                [-87.852221, 36.633308],
                [-88.071299, 36.677123],
                [-88.054868, 36.496384],
                [-89.298133, 36.507338],
                [-89.418626, 36.496384],
                [-89.363857, 36.622354],
                [-89.215979, 36.578538],
                [-89.133825, 36.983832],
                [-89.183118, 37.038601],
                [-89.029763, 37.213863],
                [-88.914747, 37.224817],
                [-88.547792, 37.071463],
                [-88.421823, 37.153617],
                [-88.514931, 37.285064],
                [-88.476592, 37.389126],
                [-88.065822, 37.482234],
                [-88.15893, 37.657496],
                [-88.027483, 37.799896],
                [-87.934375, 37.893004],
                [-87.682436, 37.903958],
                [-87.600282, 37.975158],
                [-87.512651, 37.903958],
                [-87.381204, 37.93682],
                [-87.129265, 37.788942],
                [-87.047111, 37.893004],
                [-86.795172, 37.991589],
                [-86.729448, 37.893004],
                [-86.504894, 37.931343],
                [-86.521325, 38.040881],
                [-86.302247, 38.166851],
                [-86.263908, 38.051835],
                [-86.039354, 37.958727],
                [-85.924338, 38.024451],
                [-85.83123, 38.27639],
                [-85.655968, 38.325682],
                [-85.590245, 38.451652],
                [-85.42046, 38.533806],
                [-85.431413, 38.730976],
                [-85.173997, 38.68716],
                [-84.987781, 38.780268],
                [-84.812519, 38.785745],
                [-84.894673, 39.059592],
                [-84.817996, 39.103408],
                [-84.43461, 39.103408],
                [-84.231963, 38.895284],
                [-84.215533, 38.807653],
                [-83.903347, 38.769315]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "22",
          properties: { name: "Louisiana", density: 105 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-93.608485, 33.018527],
                [-91.16577, 33.002096],
                [-91.072662, 32.887081],
                [-91.143862, 32.843265],
                [-91.154816, 32.640618],
                [-91.006939, 32.514649],
                [-90.985031, 32.218894],
                [-91.105524, 31.988862],
                [-91.341032, 31.846462],
                [-91.401278, 31.621907],
                [-91.499863, 31.643815],
                [-91.516294, 31.27686],
                [-91.636787, 31.265906],
                [-91.565587, 31.068736],
                [-91.636787, 30.997536],
                [-89.747242, 30.997536],
                [-89.845827, 30.66892],
                [-89.681519, 30.449842],
                [-89.643181, 30.285534],
                [-89.522688, 30.181472],
                [-89.818443, 30.044549],
                [-89.84035, 29.945964],
                [-89.599365, 29.88024],
                [-89.495303, 30.039072],
                [-89.287179, 29.88024],
                [-89.30361, 29.754271],
                [-89.424103, 29.699501],
                [-89.648657, 29.748794],
                [-89.621273, 29.655686],
                [-89.69795, 29.513285],
                [-89.506257, 29.387316],
                [-89.199548, 29.348977],
                [-89.09001, 29.2011],
                [-89.002379, 29.179192],
                [-89.16121, 29.009407],
                [-89.336472, 29.042268],
                [-89.484349, 29.217531],
                [-89.851304, 29.310638],
                [-89.851304, 29.480424],
                [-90.032043, 29.425654],
                [-90.021089, 29.283254],
                [-90.103244, 29.151807],
                [-90.23469, 29.129899],
                [-90.333275, 29.277777],
                [-90.563307, 29.283254],
                [-90.645461, 29.129899],
                [-90.798815, 29.086084],
                [-90.963123, 29.179192],
                [-91.09457, 29.190146],
                [-91.220539, 29.436608],
                [-91.445094, 29.546147],
                [-91.532725, 29.529716],
                [-91.620356, 29.73784],
                [-91.883249, 29.710455],
                [-91.888726, 29.836425],
                [-92.146142, 29.715932],
                [-92.113281, 29.622824],
                [-92.31045, 29.535193],
                [-92.617159, 29.579009],
                [-92.97316, 29.715932],
                [-93.2251, 29.776178],
                [-93.767317, 29.726886],
                [-93.838517, 29.688547],
                [-93.926148, 29.787132],
                [-93.690639, 30.143133],
                [-93.767317, 30.334826],
                [-93.696116, 30.438888],
                [-93.728978, 30.575812],
                [-93.630393, 30.679874],
                [-93.526331, 30.93729],
                [-93.542762, 31.15089],
                [-93.816609, 31.556184],
                [-93.822086, 31.775262],
                [-94.041164, 31.994339],
                [-94.041164, 33.018527],
                [-93.608485, 33.018527]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "23",
          properties: { name: "Maine", density: 43.04 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-70.703921, 43.057759],
                [-70.824413, 43.128959],
                [-70.807983, 43.227544],
                [-70.966814, 43.34256],
                [-71.032537, 44.657025],
                [-71.08183, 45.303304],
                [-70.649151, 45.440228],
                [-70.720352, 45.511428],
                [-70.556043, 45.664782],
                [-70.386258, 45.735983],
                [-70.41912, 45.796229],
                [-70.260289, 45.889337],
                [-70.309581, 46.064599],
                [-70.210996, 46.327492],
                [-70.057642, 46.415123],
                [-69.997395, 46.694447],
                [-69.225147, 47.461219],
                [-69.044408, 47.428357],
                [-69.033454, 47.242141],
                [-68.902007, 47.176418],
                [-68.578868, 47.285957],
                [-68.376221, 47.285957],
                [-68.233821, 47.357157],
                [-67.954497, 47.198326],
                [-67.790188, 47.066879],
                [-67.779235, 45.944106],
                [-67.801142, 45.675736],
                [-67.456095, 45.604536],
                [-67.505388, 45.48952],
                [-67.417757, 45.379982],
                [-67.488957, 45.281397],
                [-67.346556, 45.128042],
                [-67.16034, 45.160904],
                [-66.979601, 44.804903],
                [-67.187725, 44.646072],
                [-67.308218, 44.706318],
                [-67.406803, 44.596779],
                [-67.549203, 44.624164],
                [-67.565634, 44.531056],
                [-67.75185, 44.54201],
                [-68.047605, 44.328409],
                [-68.118805, 44.476286],
                [-68.222867, 44.48724],
                [-68.173574, 44.328409],
                [-68.403606, 44.251732],
                [-68.458375, 44.377701],
                [-68.567914, 44.311978],
                [-68.82533, 44.311978],
                [-68.830807, 44.459856],
                [-68.984161, 44.426994],
                [-68.956777, 44.322932],
                [-69.099177, 44.103854],
                [-69.071793, 44.043608],
                [-69.258008, 43.923115],
                [-69.444224, 43.966931],
                [-69.553763, 43.840961],
                [-69.707118, 43.82453],
                [-69.833087, 43.720469],
                [-69.986442, 43.742376],
                [-70.030257, 43.851915],
                [-70.254812, 43.676653],
                [-70.194565, 43.567114],
                [-70.358873, 43.528776],
                [-70.369827, 43.435668],
                [-70.556043, 43.320652],
                [-70.703921, 43.057759]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "24",
          properties: { name: "Maryland", density: 596.3 },
          geometry: {
            type: "MultiPolygon",
            coordinates: [
              [
                [
                  [-75.994645, 37.95325],
                  [-76.016553, 37.95325],
                  [-76.043938, 37.95325],
                  [-75.994645, 37.95325]
                ]
              ],
              [
                [
                  [-79.477979, 39.722302],
                  [-75.786521, 39.722302],
                  [-75.693413, 38.462606],
                  [-75.047134, 38.451652],
                  [-75.244304, 38.029928],
                  [-75.397659, 38.013497],
                  [-75.671506, 37.95325],
                  [-75.885106, 37.909435],
                  [-75.879629, 38.073743],
                  [-75.961783, 38.139466],
                  [-75.846768, 38.210667],
                  [-76.000122, 38.374975],
                  [-76.049415, 38.303775],
                  [-76.257538, 38.320205],
                  [-76.328738, 38.500944],
                  [-76.263015, 38.500944],
                  [-76.257538, 38.736453],
                  [-76.191815, 38.829561],
                  [-76.279446, 39.147223],
                  [-76.169907, 39.333439],
                  [-76.000122, 39.366301],
                  [-75.972737, 39.557994],
                  [-76.098707, 39.536086],
                  [-76.104184, 39.437501],
                  [-76.367077, 39.311532],
                  [-76.443754, 39.196516],
                  [-76.460185, 38.906238],
                  [-76.55877, 38.769315],
                  [-76.514954, 38.539283],
                  [-76.383508, 38.380452],
                  [-76.399939, 38.259959],
                  [-76.317785, 38.139466],
                  [-76.3616, 38.057312],
                  [-76.591632, 38.216144],
                  [-76.920248, 38.292821],
                  [-77.018833, 38.446175],
                  [-77.205049, 38.358544],
                  [-77.276249, 38.479037],
                  [-77.128372, 38.632391],
                  [-77.040741, 38.791222],
                  [-76.909294, 38.895284],
                  [-77.035264, 38.993869],
                  [-77.117418, 38.933623],
                  [-77.248864, 39.026731],
                  [-77.456988, 39.076023],
                  [-77.456988, 39.223901],
                  [-77.566527, 39.306055],
                  [-77.719881, 39.322485],
                  [-77.834897, 39.601809],
                  [-78.004682, 39.601809],
                  [-78.174467, 39.694917],
                  [-78.267575, 39.61824],
                  [-78.431884, 39.623717],
                  [-78.470222, 39.514178],
                  [-78.765977, 39.585379],
                  [-78.963147, 39.437501],
                  [-79.094593, 39.470363],
                  [-79.291763, 39.300578],
                  [-79.488933, 39.20747],
                  [-79.477979, 39.722302]
                ]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "25",
          properties: { name: "Massachusetts", density: 840.2 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-70.917521, 42.887974],
                [-70.818936, 42.871543],
                [-70.780598, 42.696281],
                [-70.824413, 42.55388],
                [-70.983245, 42.422434],
                [-70.988722, 42.269079],
                [-70.769644, 42.247172],
                [-70.638197, 42.08834],
                [-70.660105, 41.962371],
                [-70.550566, 41.929509],
                [-70.539613, 41.814493],
                [-70.260289, 41.715908],
                [-69.937149, 41.809016],
                [-70.008349, 41.672093],
                [-70.484843, 41.5516],
                [-70.660105, 41.546123],
                [-70.764167, 41.639231],
                [-70.928475, 41.611847],
                [-70.933952, 41.540646],
                [-71.120168, 41.496831],
                [-71.196845, 41.67757],
                [-71.22423, 41.710431],
                [-71.328292, 41.781632],
                [-71.383061, 42.01714],
                [-71.530939, 42.01714],
                [-71.799309, 42.006186],
                [-71.799309, 42.022617],
                [-73.053528, 42.039048],
                [-73.486206, 42.050002],
                [-73.508114, 42.08834],
                [-73.267129, 42.745573],
                [-72.456542, 42.729142],
                [-71.29543, 42.696281],
                [-71.185891, 42.789389],
                [-70.917521, 42.887974]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "26",
          properties: { name: "Michigan", density: 173.9 },
          geometry: {
            type: "MultiPolygon",
            coordinates: [
              [
                [
                  [-83.454238, 41.732339],
                  [-84.807042, 41.694001],
                  [-84.807042, 41.759724],
                  [-85.990061, 41.759724],
                  [-86.822556, 41.759724],
                  [-86.619909, 41.891171],
                  [-86.482986, 42.115725],
                  [-86.357016, 42.252649],
                  [-86.263908, 42.444341],
                  [-86.209139, 42.718189],
                  [-86.231047, 43.013943],
                  [-86.526801, 43.594499],
                  [-86.433693, 43.813577],
                  [-86.499417, 44.07647],
                  [-86.269385, 44.34484],
                  [-86.220093, 44.569394],
                  [-86.252954, 44.689887],
                  [-86.088646, 44.73918],
                  [-86.066738, 44.903488],
                  [-85.809322, 44.947303],
                  [-85.612152, 45.128042],
                  [-85.628583, 44.766564],
                  [-85.524521, 44.750133],
                  [-85.393075, 44.930872],
                  [-85.387598, 45.237581],
                  [-85.305444, 45.314258],
                  [-85.031597, 45.363551],
                  [-85.119228, 45.577151],
                  [-84.938489, 45.75789],
                  [-84.713934, 45.768844],
                  [-84.461995, 45.653829],
                  [-84.215533, 45.637398],
                  [-84.09504, 45.494997],
                  [-83.908824, 45.484043],
                  [-83.596638, 45.352597],
                  [-83.4871, 45.358074],
                  [-83.317314, 45.144473],
                  [-83.454238, 45.029457],
                  [-83.322791, 44.88158],
                  [-83.273499, 44.711795],
                  [-83.333745, 44.339363],
                  [-83.536392, 44.246255],
                  [-83.585684, 44.054562],
                  [-83.82667, 43.988839],
                  [-83.958116, 43.758807],
                  [-83.908824, 43.671176],
                  [-83.667839, 43.589022],
                  [-83.481623, 43.714992],
                  [-83.262545, 43.972408],
                  [-82.917498, 44.070993],
                  [-82.747713, 43.994316],
                  [-82.643651, 43.851915],
                  [-82.539589, 43.435668],
                  [-82.523158, 43.227544],
                  [-82.413619, 42.975605],
                  [-82.517681, 42.614127],
                  [-82.681989, 42.559357],
                  [-82.687466, 42.690804],
                  [-82.797005, 42.652465],
                  [-82.922975, 42.351234],
                  [-83.125621, 42.236218],
                  [-83.185868, 42.006186],
                  [-83.437807, 41.814493],
                  [-83.454238, 41.732339]
                ]
              ],
              [
                [
                  [-85.508091, 45.730506],
                  [-85.49166, 45.610013],
                  [-85.623106, 45.588105],
                  [-85.568337, 45.75789],
                  [-85.508091, 45.730506]
                ]
              ],
              [
                [
                  [-87.589328, 45.095181],
                  [-87.742682, 45.199243],
                  [-87.649574, 45.341643],
                  [-87.885083, 45.363551],
                  [-87.791975, 45.500474],
                  [-87.781021, 45.675736],
                  [-87.989145, 45.796229],
                  [-88.10416, 45.922199],
                  [-88.531362, 46.020784],
                  [-88.662808, 45.987922],
                  [-89.09001, 46.135799],
                  [-90.119674, 46.338446],
                  [-90.229213, 46.508231],
                  [-90.415429, 46.568478],
                  [-90.026566, 46.672539],
                  [-89.851304, 46.793032],
                  [-89.413149, 46.842325],
                  [-89.128348, 46.990202],
                  [-88.996902, 46.995679],
                  [-88.887363, 47.099741],
                  [-88.575177, 47.247618],
                  [-88.416346, 47.373588],
                  [-88.180837, 47.455742],
                  [-87.956283, 47.384542],
                  [-88.350623, 47.077833],
                  [-88.443731, 46.973771],
                  [-88.438254, 46.787555],
                  [-88.246561, 46.929956],
                  [-87.901513, 46.908048],
                  [-87.633143, 46.809463],
                  [-87.392158, 46.535616],
                  [-87.260711, 46.486323],
                  [-87.008772, 46.530139],
                  [-86.948526, 46.469893],
                  [-86.696587, 46.437031],
                  [-86.159846, 46.667063],
                  [-85.880522, 46.68897],
                  [-85.508091, 46.678016],
                  [-85.256151, 46.754694],
                  [-85.064458, 46.760171],
                  [-85.02612, 46.480847],
                  [-84.82895, 46.442508],
                  [-84.63178, 46.486323],
                  [-84.549626, 46.4206],
                  [-84.418179, 46.502754],
                  [-84.127902, 46.530139],
                  [-84.122425, 46.179615],
                  [-83.990978, 46.031737],
                  [-83.793808, 45.993399],
                  [-83.7719, 46.091984],
                  [-83.580208, 46.091984],
                  [-83.476146, 45.987922],
                  [-83.563777, 45.911245],
                  [-84.111471, 45.976968],
                  [-84.374364, 45.933153],
                  [-84.659165, 46.053645],
                  [-84.741319, 45.944106],
                  [-84.70298, 45.850998],
                  [-84.82895, 45.872906],
                  [-85.015166, 46.00983],
                  [-85.338305, 46.091984],
                  [-85.502614, 46.097461],
                  [-85.661445, 45.966014],
                  [-85.924338, 45.933153],
                  [-86.209139, 45.960537],
                  [-86.324155, 45.905768],
                  [-86.351539, 45.796229],
                  [-86.663725, 45.703121],
                  [-86.647294, 45.834568],
                  [-86.784218, 45.861952],
                  [-86.838987, 45.725029],
                  [-87.069019, 45.719552],
                  [-87.17308, 45.659305],
                  [-87.326435, 45.423797],
                  [-87.611236, 45.122565],
                  [-87.589328, 45.095181]
                ]
              ],
              [
                [
                  [-88.805209, 47.976051],
                  [-89.057148, 47.850082],
                  [-89.188594, 47.833651],
                  [-89.177641, 47.937713],
                  [-88.547792, 48.173221],
                  [-88.668285, 48.008913],
                  [-88.805209, 47.976051]
                ]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "27",
          properties: { name: "Minnesota", density: 67.14 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-92.014696, 46.705401],
                [-92.091373, 46.749217],
                [-92.29402, 46.667063],
                [-92.29402, 46.075553],
                [-92.354266, 46.015307],
                [-92.639067, 45.933153],
                [-92.869098, 45.719552],
                [-92.885529, 45.577151],
                [-92.770513, 45.566198],
                [-92.644544, 45.440228],
                [-92.75956, 45.286874],
                [-92.737652, 45.117088],
                [-92.808852, 44.750133],
                [-92.545959, 44.569394],
                [-92.337835, 44.552964],
                [-92.233773, 44.443425],
                [-91.927065, 44.333886],
                [-91.877772, 44.202439],
                [-91.592971, 44.032654],
                [-91.43414, 43.994316],
                [-91.242447, 43.775238],
                [-91.269832, 43.616407],
                [-91.215062, 43.501391],
                [-91.368417, 43.501391],
                [-96.451017, 43.501391],
                [-96.451017, 45.297827],
                [-96.681049, 45.412843],
                [-96.856311, 45.604536],
                [-96.582464, 45.818137],
                [-96.560556, 45.933153],
                [-96.598895, 46.332969],
                [-96.719387, 46.437031],
                [-96.801542, 46.656109],
                [-96.785111, 46.924479],
                [-96.823449, 46.968294],
                [-96.856311, 47.609096],
                [-97.053481, 47.948667],
                [-97.130158, 48.140359],
                [-97.16302, 48.545653],
                [-97.097296, 48.682577],
                [-97.228743, 49.000239],
                [-95.152983, 49.000239],
                [-95.152983, 49.383625],
                [-94.955813, 49.372671],
                [-94.824366, 49.295994],
                [-94.69292, 48.775685],
                [-94.588858, 48.715438],
                [-94.260241, 48.699007],
                [-94.221903, 48.649715],
                [-93.838517, 48.627807],
                [-93.794701, 48.518268],
                [-93.466085, 48.545653],
                [-93.466085, 48.589469],
                [-93.208669, 48.644238],
                [-92.984114, 48.62233],
                [-92.726698, 48.540176],
                [-92.655498, 48.436114],
                [-92.50762, 48.447068],
                [-92.370697, 48.222514],
                [-92.304974, 48.315622],
                [-92.053034, 48.359437],
                [-92.009219, 48.266329],
                [-91.713464, 48.200606],
                [-91.713464, 48.112975],
                [-91.565587, 48.041775],
                [-91.264355, 48.080113],
                [-91.083616, 48.178698],
                [-90.837154, 48.238944],
                [-90.749522, 48.091067],
                [-90.579737, 48.123929],
                [-90.377091, 48.091067],
                [-90.141582, 48.112975],
                [-89.873212, 47.987005],
                [-89.615796, 48.008913],
                [-89.637704, 47.954144],
                [-89.971797, 47.828174],
                [-90.437337, 47.729589],
                [-90.738569, 47.625527],
                [-91.171247, 47.368111],
                [-91.357463, 47.20928],
                [-91.642264, 47.028541],
                [-92.091373, 46.787555],
                [-92.014696, 46.705401]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "28",
          properties: { name: "Mississippi", density: 63.5 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-88.471115, 34.995703],
                [-88.202745, 34.995703],
                [-88.098683, 34.891641],
                [-88.241084, 33.796253],
                [-88.471115, 31.895754],
                [-88.394438, 30.367688],
                [-88.503977, 30.323872],
                [-88.744962, 30.34578],
                [-88.843547, 30.411504],
                [-89.084533, 30.367688],
                [-89.418626, 30.252672],
                [-89.522688, 30.181472],
                [-89.643181, 30.285534],
                [-89.681519, 30.449842],
                [-89.845827, 30.66892],
                [-89.747242, 30.997536],
                [-91.636787, 30.997536],
                [-91.565587, 31.068736],
                [-91.636787, 31.265906],
                [-91.516294, 31.27686],
                [-91.499863, 31.643815],
                [-91.401278, 31.621907],
                [-91.341032, 31.846462],
                [-91.105524, 31.988862],
                [-90.985031, 32.218894],
                [-91.006939, 32.514649],
                [-91.154816, 32.640618],
                [-91.143862, 32.843265],
                [-91.072662, 32.887081],
                [-91.16577, 33.002096],
                [-91.089093, 33.13902],
                [-91.143862, 33.347144],
                [-91.056231, 33.429298],
                [-91.231493, 33.560744],
                [-91.072662, 33.867453],
                [-90.891923, 34.026284],
                [-90.952169, 34.135823],
                [-90.744046, 34.300131],
                [-90.749522, 34.365854],
                [-90.568783, 34.420624],
                [-90.585214, 34.617794],
                [-90.481152, 34.661609],
                [-90.409952, 34.831394],
                [-90.251121, 34.908072],
                [-90.311367, 34.995703],
                [-88.471115, 34.995703]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "29",
          properties: { name: "Missouri", density: 87.26 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-91.833957, 40.609566],
                [-91.729895, 40.615043],
                [-91.527248, 40.412397],
                [-91.417709, 40.379535],
                [-91.50534, 40.237135],
                [-91.494386, 40.034488],
                [-91.368417, 39.727779],
                [-91.061708, 39.470363],
                [-90.727615, 39.256762],
                [-90.661891, 38.928146],
                [-90.585214, 38.867899],
                [-90.470199, 38.961007],
                [-90.251121, 38.917192],
                [-90.10872, 38.845992],
                [-90.207305, 38.725499],
                [-90.179921, 38.632391],
                [-90.349706, 38.374975],
                [-90.355183, 38.216144],
                [-90.059428, 38.013497],
                [-89.949889, 37.88205],
                [-89.84035, 37.903958],
                [-89.517211, 37.690357],
                [-89.517211, 37.537003],
                [-89.435057, 37.34531],
                [-89.517211, 37.279587],
                [-89.292656, 36.994786],
                [-89.133825, 36.983832],
                [-89.215979, 36.578538],
                [-89.363857, 36.622354],
                [-89.418626, 36.496384],
                [-89.484349, 36.496384],
                [-89.539119, 36.496384],
                [-89.533642, 36.249922],
                [-89.730812, 35.997983],
                [-90.377091, 35.997983],
                [-90.218259, 36.184199],
                [-90.064905, 36.304691],
                [-90.152536, 36.496384],
                [-94.473842, 36.501861],
                [-94.616242, 36.501861],
                [-94.616242, 37.000263],
                [-94.610765, 39.158177],
                [-94.824366, 39.20747],
                [-94.983197, 39.442978],
                [-95.109167, 39.541563],
                [-94.884612, 39.831841],
                [-95.207752, 39.908518],
                [-95.306337, 40.001626],
                [-95.552799, 40.264519],
                [-95.7664, 40.587659],
                [-94.632673, 40.571228],
                [-93.257961, 40.582182],
                [-91.833957, 40.609566]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "30",
          properties: { name: "Montana", density: 6.858 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-104.047534, 49.000239],
                [-104.042057, 47.861036],
                [-104.047534, 45.944106],
                [-104.042057, 44.996596],
                [-104.058488, 44.996596],
                [-105.91517, 45.002073],
                [-109.080842, 45.002073],
                [-111.05254, 45.002073],
                [-111.047063, 44.476286],
                [-111.227803, 44.580348],
                [-111.386634, 44.75561],
                [-111.616665, 44.547487],
                [-111.819312, 44.509148],
                [-111.868605, 44.563917],
                [-112.104113, 44.520102],
                [-112.241036, 44.569394],
                [-112.471068, 44.481763],
                [-112.783254, 44.48724],
                [-112.887315, 44.394132],
                [-113.002331, 44.448902],
                [-113.133778, 44.772041],
                [-113.341901, 44.782995],
                [-113.456917, 44.865149],
                [-113.45144, 45.056842],
                [-113.571933, 45.128042],
                [-113.736241, 45.330689],
                [-113.834826, 45.522382],
                [-113.807441, 45.604536],
                [-113.98818, 45.703121],
                [-114.086765, 45.593582],
                [-114.333228, 45.456659],
                [-114.546828, 45.560721],
                [-114.497536, 45.670259],
                [-114.568736, 45.774321],
                [-114.387997, 45.88386],
                [-114.492059, 46.037214],
                [-114.464674, 46.272723],
                [-114.322274, 46.645155],
                [-114.612552, 46.639678],
                [-114.623506, 46.705401],
                [-114.886399, 46.809463],
                [-114.930214, 46.919002],
                [-115.302646, 47.187372],
                [-115.324554, 47.258572],
                [-115.527201, 47.302388],
                [-115.718894, 47.42288],
                [-115.724371, 47.696727],
                [-116.04751, 47.976051],
                [-116.04751, 49.000239],
                [-111.50165, 48.994762],
                [-109.453274, 49.000239],
                [-104.047534, 49.000239]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "31",
          properties: { name: "Nebraska", density: 23.97 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-103.324578, 43.002989],
                [-101.626726, 42.997512],
                [-98.499393, 42.997512],
                [-98.466531, 42.94822],
                [-97.951699, 42.767481],
                [-97.831206, 42.866066],
                [-97.688806, 42.844158],
                [-97.217789, 42.844158],
                [-96.692003, 42.657942],
                [-96.626279, 42.515542],
                [-96.44554, 42.488157],
                [-96.264801, 42.039048],
                [-96.127878, 41.973325],
                [-96.062155, 41.798063],
                [-96.122401, 41.67757],
                [-96.095016, 41.540646],
                [-95.919754, 41.453015],
                [-95.925231, 41.201076],
                [-95.826646, 40.976521],
                [-95.881416, 40.719105],
                [-95.7664, 40.587659],
                [-95.552799, 40.264519],
                [-95.306337, 40.001626],
                [-101.90605, 40.001626],
                [-102.053927, 40.001626],
                [-102.053927, 41.003906],
                [-104.053011, 41.003906],
                [-104.053011, 43.002989],
                [-103.324578, 43.002989]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "32",
          properties: { name: "Nevada", density: 24.8 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-117.027882, 42.000709],
                [-114.04295, 41.995232],
                [-114.048427, 37.000263],
                [-114.048427, 36.195153],
                [-114.152489, 36.025367],
                [-114.251074, 36.01989],
                [-114.371566, 36.140383],
                [-114.738521, 36.102045],
                [-114.678275, 35.516012],
                [-114.596121, 35.324319],
                [-114.574213, 35.138103],
                [-114.634459, 35.00118],
                [-115.85034, 35.970598],
                [-116.540435, 36.501861],
                [-117.498899, 37.21934],
                [-118.71478, 38.101128],
                [-120.001861, 38.999346],
                [-119.996384, 40.264519],
                [-120.001861, 41.995232],
                [-118.698349, 41.989755],
                [-117.027882, 42.000709]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "33",
          properties: { name: "New Hampshire", density: 147 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-71.08183, 45.303304],
                [-71.032537, 44.657025],
                [-70.966814, 43.34256],
                [-70.807983, 43.227544],
                [-70.824413, 43.128959],
                [-70.703921, 43.057759],
                [-70.818936, 42.871543],
                [-70.917521, 42.887974],
                [-71.185891, 42.789389],
                [-71.29543, 42.696281],
                [-72.456542, 42.729142],
                [-72.544173, 42.80582],
                [-72.533219, 42.953697],
                [-72.445588, 43.008466],
                [-72.456542, 43.150867],
                [-72.379864, 43.572591],
                [-72.204602, 43.769761],
                [-72.116971, 43.994316],
                [-72.02934, 44.07647],
                [-72.034817, 44.322932],
                [-71.700724, 44.41604],
                [-71.536416, 44.585825],
                [-71.629524, 44.750133],
                [-71.4926, 44.914442],
                [-71.503554, 45.013027],
                [-71.361154, 45.270443],
                [-71.131122, 45.243058],
                [-71.08183, 45.303304]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "34",
          properties: { name: "New Jersey", density: 1189 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-74.236547, 41.14083],
                [-73.902454, 40.998429],
                [-74.022947, 40.708151],
                [-74.187255, 40.642428],
                [-74.274886, 40.489074],
                [-74.001039, 40.412397],
                [-73.979131, 40.297381],
                [-74.099624, 39.760641],
                [-74.411809, 39.360824],
                [-74.614456, 39.245808],
                [-74.795195, 38.993869],
                [-74.888303, 39.158177],
                [-75.178581, 39.240331],
                [-75.534582, 39.459409],
                [-75.55649, 39.607286],
                [-75.561967, 39.629194],
                [-75.507197, 39.683964],
                [-75.414089, 39.804456],
                [-75.145719, 39.88661],
                [-75.129289, 39.963288],
                [-74.82258, 40.127596],
                [-74.773287, 40.215227],
                [-75.058088, 40.417874],
                [-75.069042, 40.543843],
                [-75.195012, 40.576705],
                [-75.205966, 40.691721],
                [-75.052611, 40.866983],
                [-75.134765, 40.971045],
                [-74.882826, 41.179168],
                [-74.828057, 41.288707],
                [-74.69661, 41.359907],
                [-74.236547, 41.14083]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "35",
          properties: { name: "New Mexico", density: 17.16 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-107.421329, 37.000263],
                [-106.868158, 36.994786],
                [-104.337812, 36.994786],
                [-103.001438, 37.000263],
                [-103.001438, 36.501861],
                [-103.039777, 36.501861],
                [-103.045254, 34.01533],
                [-103.067161, 33.002096],
                [-103.067161, 31.999816],
                [-106.616219, 31.999816],
                [-106.643603, 31.901231],
                [-106.528588, 31.786216],
                [-108.210008, 31.786216],
                [-108.210008, 31.331629],
                [-109.04798, 31.331629],
                [-109.042503, 37.000263],
                [-107.421329, 37.000263]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "36",
          properties: { name: "New York", density: 412.3 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-73.343806, 45.013027],
                [-73.332852, 44.804903],
                [-73.387622, 44.618687],
                [-73.294514, 44.437948],
                [-73.321898, 44.246255],
                [-73.436914, 44.043608],
                [-73.349283, 43.769761],
                [-73.404052, 43.687607],
                [-73.245221, 43.523299],
                [-73.278083, 42.833204],
                [-73.267129, 42.745573],
                [-73.508114, 42.08834],
                [-73.486206, 42.050002],
                [-73.55193, 41.294184],
                [-73.48073, 41.21203],
                [-73.727192, 41.102491],
                [-73.655992, 40.987475],
                [-73.22879, 40.905321],
                [-73.141159, 40.965568],
                [-72.774204, 40.965568],
                [-72.587988, 40.998429],
                [-72.28128, 41.157261],
                [-72.259372, 41.042245],
                [-72.100541, 40.992952],
                [-72.467496, 40.845075],
                [-73.239744, 40.625997],
                [-73.562884, 40.582182],
                [-73.776484, 40.593136],
                [-73.935316, 40.543843],
                [-74.022947, 40.708151],
                [-73.902454, 40.998429],
                [-74.236547, 41.14083],
                [-74.69661, 41.359907],
                [-74.740426, 41.431108],
                [-74.89378, 41.436584],
                [-75.074519, 41.60637],
                [-75.052611, 41.754247],
                [-75.173104, 41.869263],
                [-75.249781, 41.863786],
                [-75.35932, 42.000709],
                [-79.76278, 42.000709],
                [-79.76278, 42.252649],
                [-79.76278, 42.269079],
                [-79.149363, 42.55388],
                [-79.050778, 42.690804],
                [-78.853608, 42.783912],
                [-78.930285, 42.953697],
                [-79.012439, 42.986559],
                [-79.072686, 43.260406],
                [-78.486653, 43.375421],
                [-77.966344, 43.369944],
                [-77.75822, 43.34256],
                [-77.533665, 43.233021],
                [-77.391265, 43.276836],
                [-76.958587, 43.271359],
                [-76.695693, 43.34256],
                [-76.41637, 43.523299],
                [-76.235631, 43.528776],
                [-76.230154, 43.802623],
                [-76.137046, 43.961454],
                [-76.3616, 44.070993],
                [-76.312308, 44.196962],
                [-75.912491, 44.366748],
                [-75.764614, 44.514625],
                [-75.282643, 44.848718],
                [-74.828057, 45.018503],
                [-74.148916, 44.991119],
                [-73.343806, 45.013027]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "37",
          properties: { name: "North Carolina", density: 198.2 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-80.978661, 36.562108],
                [-80.294043, 36.545677],
                [-79.510841, 36.5402],
                [-75.868676, 36.551154],
                [-75.75366, 36.151337],
                [-76.032984, 36.189676],
                [-76.071322, 36.140383],
                [-76.410893, 36.080137],
                [-76.460185, 36.025367],
                [-76.68474, 36.008937],
                [-76.673786, 35.937736],
                [-76.399939, 35.987029],
                [-76.3616, 35.943213],
                [-76.060368, 35.992506],
                [-75.961783, 35.899398],
                [-75.781044, 35.937736],
                [-75.715321, 35.696751],
                [-75.775568, 35.581735],
                [-75.89606, 35.570781],
                [-76.147999, 35.324319],
                [-76.482093, 35.313365],
                [-76.536862, 35.14358],
                [-76.394462, 34.973795],
                [-76.279446, 34.940933],
                [-76.493047, 34.661609],
                [-76.673786, 34.694471],
                [-76.991448, 34.667086],
                [-77.210526, 34.60684],
                [-77.555573, 34.415147],
                [-77.82942, 34.163208],
                [-77.971821, 33.845545],
                [-78.179944, 33.916745],
                [-78.541422, 33.851022],
                [-79.675149, 34.80401],
                [-80.797922, 34.820441],
                [-80.781491, 34.935456],
                [-80.934845, 35.105241],
                [-81.038907, 35.044995],
                [-81.044384, 35.149057],
                [-82.276696, 35.198349],
                [-82.550543, 35.160011],
                [-82.764143, 35.066903],
                [-83.109191, 35.00118],
                [-83.618546, 34.984749],
                [-84.319594, 34.990226],
                [-84.29221, 35.225734],
                [-84.09504, 35.247642],
                [-84.018363, 35.41195],
                [-83.7719, 35.559827],
                [-83.498053, 35.565304],
                [-83.251591, 35.718659],
                [-82.994175, 35.773428],
                [-82.775097, 35.997983],
                [-82.638174, 36.063706],
                [-82.610789, 35.965121],
                [-82.216449, 36.156814],
                [-82.03571, 36.118475],
                [-81.909741, 36.304691],
                [-81.723525, 36.353984],
                [-81.679709, 36.589492],
                [-80.978661, 36.562108]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "38",
          properties: { name: "North Dakota", density: 9.916 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-97.228743, 49.000239],
                [-97.097296, 48.682577],
                [-97.16302, 48.545653],
                [-97.130158, 48.140359],
                [-97.053481, 47.948667],
                [-96.856311, 47.609096],
                [-96.823449, 46.968294],
                [-96.785111, 46.924479],
                [-96.801542, 46.656109],
                [-96.719387, 46.437031],
                [-96.598895, 46.332969],
                [-96.560556, 45.933153],
                [-104.047534, 45.944106],
                [-104.042057, 47.861036],
                [-104.047534, 49.000239],
                [-97.228743, 49.000239]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "39",
          properties: { name: "Ohio", density: 281.9 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-80.518598, 41.978802],
                [-80.518598, 40.636951],
                [-80.666475, 40.582182],
                [-80.595275, 40.472643],
                [-80.600752, 40.319289],
                [-80.737675, 40.078303],
                [-80.830783, 39.711348],
                [-81.219646, 39.388209],
                [-81.345616, 39.344393],
                [-81.455155, 39.410117],
                [-81.57017, 39.267716],
                [-81.685186, 39.273193],
                [-81.811156, 39.0815],
                [-81.783771, 38.966484],
                [-81.887833, 38.873376],
                [-82.03571, 39.026731],
                [-82.221926, 38.785745],
                [-82.172634, 38.632391],
                [-82.293127, 38.577622],
                [-82.331465, 38.446175],
                [-82.594358, 38.424267],
                [-82.731282, 38.561191],
                [-82.846298, 38.588575],
                [-82.890113, 38.758361],
                [-83.032514, 38.725499],
                [-83.142052, 38.626914],
                [-83.519961, 38.703591],
                [-83.678792, 38.632391],
                [-83.903347, 38.769315],
                [-84.215533, 38.807653],
                [-84.231963, 38.895284],
                [-84.43461, 39.103408],
                [-84.817996, 39.103408],
                [-84.801565, 40.500028],
                [-84.807042, 41.694001],
                [-83.454238, 41.732339],
                [-83.065375, 41.595416],
                [-82.933929, 41.513262],
                [-82.835344, 41.589939],
                [-82.616266, 41.431108],
                [-82.479343, 41.381815],
                [-82.013803, 41.513262],
                [-81.739956, 41.485877],
                [-81.444201, 41.672093],
                [-81.011523, 41.852832],
                [-80.518598, 41.978802],
                [-80.518598, 41.978802]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "40",
          properties: { name: "Oklahoma", density: 55.22 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-100.087706, 37.000263],
                [-94.616242, 37.000263],
                [-94.616242, 36.501861],
                [-94.430026, 35.395519],
                [-94.484796, 33.637421],
                [-94.868182, 33.74696],
                [-94.966767, 33.861976],
                [-95.224183, 33.960561],
                [-95.289906, 33.87293],
                [-95.547322, 33.878407],
                [-95.602092, 33.933176],
                [-95.8376, 33.834591],
                [-95.936185, 33.889361],
                [-96.149786, 33.840068],
                [-96.346956, 33.686714],
                [-96.423633, 33.774345],
                [-96.631756, 33.845545],
                [-96.850834, 33.845545],
                [-96.922034, 33.960561],
                [-97.173974, 33.736006],
                [-97.256128, 33.861976],
                [-97.371143, 33.823637],
                [-97.458774, 33.905791],
                [-97.694283, 33.982469],
                [-97.869545, 33.851022],
                [-97.946222, 33.987946],
                [-98.088623, 34.004376],
                [-98.170777, 34.113915],
                [-98.36247, 34.157731],
                [-98.488439, 34.064623],
                [-98.570593, 34.146777],
                [-98.767763, 34.135823],
                [-98.986841, 34.223454],
                [-99.189488, 34.2125],
                [-99.260688, 34.404193],
                [-99.57835, 34.415147],
                [-99.698843, 34.382285],
                [-99.923398, 34.573978],
                [-100.000075, 34.563024],
                [-100.000075, 36.501861],
                [-101.812942, 36.501861],
                [-103.001438, 36.501861],
                [-103.001438, 37.000263],
                [-102.042974, 36.994786],
                [-100.087706, 37.000263]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "41",
          properties: { name: "Oregon", density: 40.33 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-123.211348, 46.174138],
                [-123.11824, 46.185092],
                [-122.904639, 46.08103],
                [-122.811531, 45.960537],
                [-122.762239, 45.659305],
                [-122.247407, 45.549767],
                [-121.809251, 45.708598],
                [-121.535404, 45.725029],
                [-121.217742, 45.670259],
                [-121.18488, 45.604536],
                [-120.637186, 45.746937],
                [-120.505739, 45.697644],
                [-120.209985, 45.725029],
                [-119.963522, 45.823614],
                [-119.525367, 45.911245],
                [-119.125551, 45.933153],
                [-118.988627, 45.998876],
                [-116.918344, 45.993399],
                [-116.78142, 45.823614],
                [-116.545912, 45.752413],
                [-116.463758, 45.61549],
                [-116.671881, 45.319735],
                [-116.732128, 45.144473],
                [-116.847143, 45.02398],
                [-116.830713, 44.930872],
                [-116.934774, 44.782995],
                [-117.038836, 44.750133],
                [-117.241483, 44.394132],
                [-117.170283, 44.257209],
                [-116.97859, 44.240778],
                [-116.896436, 44.158624],
                [-117.027882, 43.830007],
                [-117.027882, 42.000709],
                [-118.698349, 41.989755],
                [-120.001861, 41.995232],
                [-121.037003, 41.995232],
                [-122.378853, 42.011663],
                [-123.233256, 42.006186],
                [-124.213628, 42.000709],
                [-124.356029, 42.115725],
                [-124.432706, 42.438865],
                [-124.416275, 42.663419],
                [-124.553198, 42.838681],
                [-124.454613, 43.002989],
                [-124.383413, 43.271359],
                [-124.235536, 43.55616],
                [-124.169813, 43.8081],
                [-124.060274, 44.657025],
                [-124.076705, 44.772041],
                [-123.97812, 45.144473],
                [-123.939781, 45.659305],
                [-123.994551, 45.944106],
                [-123.945258, 46.113892],
                [-123.545441, 46.261769],
                [-123.370179, 46.146753],
                [-123.211348, 46.174138]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "42",
          properties: { name: "Pennsylvania", density: 284.3 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-79.76278, 42.252649],
                [-79.76278, 42.000709],
                [-75.35932, 42.000709],
                [-75.249781, 41.863786],
                [-75.173104, 41.869263],
                [-75.052611, 41.754247],
                [-75.074519, 41.60637],
                [-74.89378, 41.436584],
                [-74.740426, 41.431108],
                [-74.69661, 41.359907],
                [-74.828057, 41.288707],
                [-74.882826, 41.179168],
                [-75.134765, 40.971045],
                [-75.052611, 40.866983],
                [-75.205966, 40.691721],
                [-75.195012, 40.576705],
                [-75.069042, 40.543843],
                [-75.058088, 40.417874],
                [-74.773287, 40.215227],
                [-74.82258, 40.127596],
                [-75.129289, 39.963288],
                [-75.145719, 39.88661],
                [-75.414089, 39.804456],
                [-75.616736, 39.831841],
                [-75.786521, 39.722302],
                [-79.477979, 39.722302],
                [-80.518598, 39.722302],
                [-80.518598, 40.636951],
                [-80.518598, 41.978802],
                [-80.518598, 41.978802],
                [-80.332382, 42.033571],
                [-79.76278, 42.269079],
                [-79.76278, 42.252649]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "44",
          properties: { name: "Rhode Island", density: 1006 },
          geometry: {
            type: "MultiPolygon",
            coordinates: [
              [
                [
                  [-71.196845, 41.67757],
                  [-71.120168, 41.496831],
                  [-71.317338, 41.474923],
                  [-71.196845, 41.67757]
                ]
              ],
              [
                [
                  [-71.530939, 42.01714],
                  [-71.383061, 42.01714],
                  [-71.328292, 41.781632],
                  [-71.22423, 41.710431],
                  [-71.344723, 41.726862],
                  [-71.448785, 41.578985],
                  [-71.481646, 41.370861],
                  [-71.859555, 41.321569],
                  [-71.799309, 41.414677],
                  [-71.799309, 42.006186],
                  [-71.530939, 42.01714]
                ]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "45",
          properties: { name: "South Carolina", density: 155.4 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-82.764143, 35.066903],
                [-82.550543, 35.160011],
                [-82.276696, 35.198349],
                [-81.044384, 35.149057],
                [-81.038907, 35.044995],
                [-80.934845, 35.105241],
                [-80.781491, 34.935456],
                [-80.797922, 34.820441],
                [-79.675149, 34.80401],
                [-78.541422, 33.851022],
                [-78.716684, 33.80173],
                [-78.935762, 33.637421],
                [-79.149363, 33.380005],
                [-79.187701, 33.171881],
                [-79.357487, 33.007573],
                [-79.582041, 33.007573],
                [-79.631334, 32.887081],
                [-79.866842, 32.755634],
                [-79.998289, 32.613234],
                [-80.206412, 32.552987],
                [-80.430967, 32.399633],
                [-80.452875, 32.328433],
                [-80.660998, 32.246279],
                [-80.885553, 32.032678],
                [-81.115584, 32.120309],
                [-81.121061, 32.290094],
                [-81.279893, 32.558464],
                [-81.416816, 32.629664],
                [-81.42777, 32.843265],
                [-81.493493, 33.007573],
                [-81.761863, 33.160928],
                [-81.937125, 33.347144],
                [-81.926172, 33.462159],
                [-82.194542, 33.631944],
                [-82.325988, 33.81816],
                [-82.55602, 33.94413],
                [-82.714851, 34.152254],
                [-82.747713, 34.26727],
                [-82.901067, 34.486347],
                [-83.005129, 34.469916],
                [-83.339222, 34.683517],
                [-83.322791, 34.787579],
                [-83.109191, 35.00118],
                [-82.764143, 35.066903]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "46",
          properties: { name: "South Dakota", density: 98.07 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-104.047534, 45.944106],
                [-96.560556, 45.933153],
                [-96.582464, 45.818137],
                [-96.856311, 45.604536],
                [-96.681049, 45.412843],
                [-96.451017, 45.297827],
                [-96.451017, 43.501391],
                [-96.582464, 43.479483],
                [-96.527695, 43.397329],
                [-96.560556, 43.222067],
                [-96.434587, 43.123482],
                [-96.511264, 43.052282],
                [-96.544125, 42.855112],
                [-96.631756, 42.707235],
                [-96.44554, 42.488157],
                [-96.626279, 42.515542],
                [-96.692003, 42.657942],
                [-97.217789, 42.844158],
                [-97.688806, 42.844158],
                [-97.831206, 42.866066],
                [-97.951699, 42.767481],
                [-98.466531, 42.94822],
                [-98.499393, 42.997512],
                [-101.626726, 42.997512],
                [-103.324578, 43.002989],
                [-104.053011, 43.002989],
                [-104.058488, 44.996596],
                [-104.042057, 44.996596],
                [-104.047534, 45.944106]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "47",
          properties: { name: "Tennessee", density: 88.08 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-88.054868, 36.496384],
                [-88.071299, 36.677123],
                [-87.852221, 36.633308],
                [-86.592525, 36.655216],
                [-85.486183, 36.616877],
                [-85.289013, 36.627831],
                [-84.544149, 36.594969],
                [-83.689746, 36.584015],
                [-83.673316, 36.600446],
                [-81.679709, 36.589492],
                [-81.723525, 36.353984],
                [-81.909741, 36.304691],
                [-82.03571, 36.118475],
                [-82.216449, 36.156814],
                [-82.610789, 35.965121],
                [-82.638174, 36.063706],
                [-82.775097, 35.997983],
                [-82.994175, 35.773428],
                [-83.251591, 35.718659],
                [-83.498053, 35.565304],
                [-83.7719, 35.559827],
                [-84.018363, 35.41195],
                [-84.09504, 35.247642],
                [-84.29221, 35.225734],
                [-84.319594, 34.990226],
                [-85.606675, 34.984749],
                [-87.359296, 35.00118],
                [-88.202745, 34.995703],
                [-88.471115, 34.995703],
                [-90.311367, 34.995703],
                [-90.212782, 35.023087],
                [-90.114197, 35.198349],
                [-90.130628, 35.439335],
                [-89.944412, 35.603643],
                [-89.911551, 35.756997],
                [-89.763673, 35.811767],
                [-89.730812, 35.997983],
                [-89.533642, 36.249922],
                [-89.539119, 36.496384],
                [-89.484349, 36.496384],
                [-89.418626, 36.496384],
                [-89.298133, 36.507338],
                [-88.054868, 36.496384]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "48",
          properties: { name: "Texas", density: 98.07 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-101.812942, 36.501861],
                [-100.000075, 36.501861],
                [-100.000075, 34.563024],
                [-99.923398, 34.573978],
                [-99.698843, 34.382285],
                [-99.57835, 34.415147],
                [-99.260688, 34.404193],
                [-99.189488, 34.2125],
                [-98.986841, 34.223454],
                [-98.767763, 34.135823],
                [-98.570593, 34.146777],
                [-98.488439, 34.064623],
                [-98.36247, 34.157731],
                [-98.170777, 34.113915],
                [-98.088623, 34.004376],
                [-97.946222, 33.987946],
                [-97.869545, 33.851022],
                [-97.694283, 33.982469],
                [-97.458774, 33.905791],
                [-97.371143, 33.823637],
                [-97.256128, 33.861976],
                [-97.173974, 33.736006],
                [-96.922034, 33.960561],
                [-96.850834, 33.845545],
                [-96.631756, 33.845545],
                [-96.423633, 33.774345],
                [-96.346956, 33.686714],
                [-96.149786, 33.840068],
                [-95.936185, 33.889361],
                [-95.8376, 33.834591],
                [-95.602092, 33.933176],
                [-95.547322, 33.878407],
                [-95.289906, 33.87293],
                [-95.224183, 33.960561],
                [-94.966767, 33.861976],
                [-94.868182, 33.74696],
                [-94.484796, 33.637421],
                [-94.380734, 33.544313],
                [-94.183564, 33.593606],
                [-94.041164, 33.54979],
                [-94.041164, 33.018527],
                [-94.041164, 31.994339],
                [-93.822086, 31.775262],
                [-93.816609, 31.556184],
                [-93.542762, 31.15089],
                [-93.526331, 30.93729],
                [-93.630393, 30.679874],
                [-93.728978, 30.575812],
                [-93.696116, 30.438888],
                [-93.767317, 30.334826],
                [-93.690639, 30.143133],
                [-93.926148, 29.787132],
                [-93.838517, 29.688547],
                [-94.002825, 29.68307],
                [-94.523134, 29.546147],
                [-94.70935, 29.622824],
                [-94.742212, 29.787132],
                [-94.873659, 29.672117],
                [-94.966767, 29.699501],
                [-95.016059, 29.557101],
                [-94.911997, 29.496854],
                [-94.895566, 29.310638],
                [-95.081782, 29.113469],
                [-95.383014, 28.867006],
                [-95.985477, 28.604113],
                [-96.045724, 28.647929],
                [-96.226463, 28.582205],
                [-96.23194, 28.642452],
                [-96.478402, 28.598636],
                [-96.593418, 28.724606],
                [-96.664618, 28.697221],
                [-96.401725, 28.439805],
                [-96.593418, 28.357651],
                [-96.774157, 28.406943],
                [-96.801542, 28.226204],
                [-97.026096, 28.039988],
                [-97.256128, 27.694941],
                [-97.404005, 27.333463],
                [-97.513544, 27.360848],
                [-97.540929, 27.229401],
                [-97.425913, 27.262263],
                [-97.480682, 26.99937],
                [-97.557359, 26.988416],
                [-97.562836, 26.840538],
                [-97.469728, 26.758384],
                [-97.442344, 26.457153],
                [-97.332805, 26.353091],
                [-97.30542, 26.161398],
                [-97.217789, 25.991613],
                [-97.524498, 25.887551],
                [-97.650467, 26.018997],
                [-97.885976, 26.06829],
                [-98.198161, 26.057336],
                [-98.466531, 26.221644],
                [-98.669178, 26.238075],
                [-98.822533, 26.369522],
                [-99.030656, 26.413337],
                [-99.173057, 26.539307],
                [-99.266165, 26.840538],
                [-99.446904, 27.021277],
                [-99.424996, 27.174632],
                [-99.50715, 27.33894],
                [-99.479765, 27.48134],
                [-99.605735, 27.640172],
                [-99.709797, 27.656603],
                [-99.879582, 27.799003],
                [-99.934351, 27.979742],
                [-100.082229, 28.14405],
                [-100.29583, 28.280974],
                [-100.399891, 28.582205],
                [-100.498476, 28.66436],
                [-100.629923, 28.905345],
                [-100.673738, 29.102515],
                [-100.799708, 29.244915],
                [-101.013309, 29.370885],
                [-101.062601, 29.458516],
                [-101.259771, 29.535193],
                [-101.413125, 29.754271],
                [-101.851281, 29.803563],
                [-102.114174, 29.792609],
                [-102.338728, 29.869286],
                [-102.388021, 29.765225],
                [-102.629006, 29.732363],
                [-102.809745, 29.524239],
                [-102.919284, 29.190146],
                [-102.97953, 29.184669],
                [-103.116454, 28.987499],
                [-103.280762, 28.982022],
                [-103.527224, 29.135376],
                [-104.146119, 29.381839],
                [-104.266611, 29.513285],
                [-104.507597, 29.639255],
                [-104.677382, 29.924056],
                [-104.688336, 30.181472],
                [-104.858121, 30.389596],
                [-104.896459, 30.570335],
                [-105.005998, 30.685351],
                [-105.394861, 30.855136],
                [-105.602985, 31.085167],
                [-105.77277, 31.167321],
                [-105.953509, 31.364491],
                [-106.205448, 31.468553],
                [-106.38071, 31.731446],
                [-106.528588, 31.786216],
                [-106.643603, 31.901231],
                [-106.616219, 31.999816],
                [-103.067161, 31.999816],
                [-103.067161, 33.002096],
                [-103.045254, 34.01533],
                [-103.039777, 36.501861],
                [-103.001438, 36.501861],
                [-101.812942, 36.501861]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "49",
          properties: { name: "Utah", density: 34.3 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-112.164359, 41.995232],
                [-111.047063, 42.000709],
                [-111.047063, 40.998429],
                [-109.04798, 40.998429],
                [-109.053457, 39.125316],
                [-109.058934, 38.27639],
                [-109.042503, 38.166851],
                [-109.042503, 37.000263],
                [-110.499369, 37.00574],
                [-114.048427, 37.000263],
                [-114.04295, 41.995232],
                [-112.164359, 41.995232]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "50",
          properties: { name: "Vermont", density: 67.73 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-71.503554, 45.013027],
                [-71.4926, 44.914442],
                [-71.629524, 44.750133],
                [-71.536416, 44.585825],
                [-71.700724, 44.41604],
                [-72.034817, 44.322932],
                [-72.02934, 44.07647],
                [-72.116971, 43.994316],
                [-72.204602, 43.769761],
                [-72.379864, 43.572591],
                [-72.456542, 43.150867],
                [-72.445588, 43.008466],
                [-72.533219, 42.953697],
                [-72.544173, 42.80582],
                [-72.456542, 42.729142],
                [-73.267129, 42.745573],
                [-73.278083, 42.833204],
                [-73.245221, 43.523299],
                [-73.404052, 43.687607],
                [-73.349283, 43.769761],
                [-73.436914, 44.043608],
                [-73.321898, 44.246255],
                [-73.294514, 44.437948],
                [-73.387622, 44.618687],
                [-73.332852, 44.804903],
                [-73.343806, 45.013027],
                [-72.308664, 45.002073],
                [-71.503554, 45.013027]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "51",
          properties: { name: "Virginia", density: 204.5 },
          geometry: {
            type: "MultiPolygon",
            coordinates: [
              [
                [
                  [-75.397659, 38.013497],
                  [-75.244304, 38.029928],
                  [-75.375751, 37.860142],
                  [-75.512674, 37.799896],
                  [-75.594828, 37.569865],
                  [-75.802952, 37.197433],
                  [-75.972737, 37.120755],
                  [-76.027507, 37.257679],
                  [-75.939876, 37.564388],
                  [-75.671506, 37.95325],
                  [-75.397659, 38.013497]
                ]
              ],
              [
                [
                  [-76.016553, 37.95325],
                  [-75.994645, 37.95325],
                  [-76.043938, 37.95325],
                  [-76.016553, 37.95325]
                ]
              ],
              [
                [
                  [-78.349729, 39.464886],
                  [-77.82942, 39.130793],
                  [-77.719881, 39.322485],
                  [-77.566527, 39.306055],
                  [-77.456988, 39.223901],
                  [-77.456988, 39.076023],
                  [-77.248864, 39.026731],
                  [-77.117418, 38.933623],
                  [-77.040741, 38.791222],
                  [-77.128372, 38.632391],
                  [-77.248864, 38.588575],
                  [-77.325542, 38.446175],
                  [-77.281726, 38.342113],
                  [-77.013356, 38.374975],
                  [-76.964064, 38.216144],
                  [-76.613539, 38.15042],
                  [-76.514954, 38.024451],
                  [-76.235631, 37.887527],
                  [-76.3616, 37.608203],
                  [-76.246584, 37.389126],
                  [-76.383508, 37.285064],
                  [-76.399939, 37.159094],
                  [-76.273969, 37.082417],
                  [-76.410893, 36.961924],
                  [-76.619016, 37.120755],
                  [-76.668309, 37.065986],
                  [-76.48757, 36.95097],
                  [-75.994645, 36.923586],
                  [-75.868676, 36.551154],
                  [-79.510841, 36.5402],
                  [-80.294043, 36.545677],
                  [-80.978661, 36.562108],
                  [-81.679709, 36.589492],
                  [-83.673316, 36.600446],
                  [-83.136575, 36.742847],
                  [-83.070852, 36.852385],
                  [-82.879159, 36.890724],
                  [-82.868205, 36.978355],
                  [-82.720328, 37.044078],
                  [-82.720328, 37.120755],
                  [-82.353373, 37.268633],
                  [-81.969987, 37.537003],
                  [-81.986418, 37.454849],
                  [-81.849494, 37.285064],
                  [-81.679709, 37.20291],
                  [-81.55374, 37.208387],
                  [-81.362047, 37.339833],
                  [-81.225123, 37.235771],
                  [-80.967707, 37.290541],
                  [-80.513121, 37.482234],
                  [-80.474782, 37.421987],
                  [-80.29952, 37.509618],
                  [-80.294043, 37.690357],
                  [-80.184505, 37.849189],
                  [-79.998289, 37.997066],
                  [-79.921611, 38.177805],
                  [-79.724442, 38.364021],
                  [-79.647764, 38.594052],
                  [-79.477979, 38.457129],
                  [-79.313671, 38.413313],
                  [-79.209609, 38.495467],
                  [-78.996008, 38.851469],
                  [-78.870039, 38.763838],
                  [-78.404499, 39.169131],
                  [-78.349729, 39.464886]
                ]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "53",
          properties: { name: "Washington", density: 102.6 },
          geometry: {
            type: "MultiPolygon",
            coordinates: [
              [
                [
                  [-117.033359, 49.000239],
                  [-117.044313, 47.762451],
                  [-117.038836, 46.426077],
                  [-117.055267, 46.343923],
                  [-116.92382, 46.168661],
                  [-116.918344, 45.993399],
                  [-118.988627, 45.998876],
                  [-119.125551, 45.933153],
                  [-119.525367, 45.911245],
                  [-119.963522, 45.823614],
                  [-120.209985, 45.725029],
                  [-120.505739, 45.697644],
                  [-120.637186, 45.746937],
                  [-121.18488, 45.604536],
                  [-121.217742, 45.670259],
                  [-121.535404, 45.725029],
                  [-121.809251, 45.708598],
                  [-122.247407, 45.549767],
                  [-122.762239, 45.659305],
                  [-122.811531, 45.960537],
                  [-122.904639, 46.08103],
                  [-123.11824, 46.185092],
                  [-123.211348, 46.174138],
                  [-123.370179, 46.146753],
                  [-123.545441, 46.261769],
                  [-123.72618, 46.300108],
                  [-123.874058, 46.239861],
                  [-124.065751, 46.327492],
                  [-124.027412, 46.464416],
                  [-123.895966, 46.535616],
                  [-124.098612, 46.74374],
                  [-124.235536, 47.285957],
                  [-124.31769, 47.357157],
                  [-124.427229, 47.740543],
                  [-124.624399, 47.88842],
                  [-124.706553, 48.184175],
                  [-124.597014, 48.381345],
                  [-124.394367, 48.288237],
                  [-123.983597, 48.162267],
                  [-123.704273, 48.167744],
                  [-123.424949, 48.118452],
                  [-123.162056, 48.167744],
                  [-123.036086, 48.080113],
                  [-122.800578, 48.08559],
                  [-122.636269, 47.866512],
                  [-122.515777, 47.882943],
                  [-122.493869, 47.587189],
                  [-122.422669, 47.318818],
                  [-122.324084, 47.346203],
                  [-122.422669, 47.576235],
                  [-122.395284, 47.800789],
                  [-122.230976, 48.030821],
                  [-122.362422, 48.123929],
                  [-122.373376, 48.288237],
                  [-122.471961, 48.468976],
                  [-122.422669, 48.600422],
                  [-122.488392, 48.753777],
                  [-122.647223, 48.775685],
                  [-122.795101, 48.8907],
                  [-122.756762, 49.000239],
                  [-117.033359, 49.000239]
                ]
              ],
              [
                [
                  [-122.718423, 48.310145],
                  [-122.586977, 48.35396],
                  [-122.608885, 48.151313],
                  [-122.767716, 48.227991],
                  [-122.718423, 48.310145]
                ]
              ],
              [
                [
                  [-123.025132, 48.583992],
                  [-122.915593, 48.715438],
                  [-122.767716, 48.556607],
                  [-122.811531, 48.419683],
                  [-123.041563, 48.458022],
                  [-123.025132, 48.583992]
                ]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "54",
          properties: { name: "West Virginia", density: 77.06 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-80.518598, 40.636951],
                [-80.518598, 39.722302],
                [-79.477979, 39.722302],
                [-79.488933, 39.20747],
                [-79.291763, 39.300578],
                [-79.094593, 39.470363],
                [-78.963147, 39.437501],
                [-78.765977, 39.585379],
                [-78.470222, 39.514178],
                [-78.431884, 39.623717],
                [-78.267575, 39.61824],
                [-78.174467, 39.694917],
                [-78.004682, 39.601809],
                [-77.834897, 39.601809],
                [-77.719881, 39.322485],
                [-77.82942, 39.130793],
                [-78.349729, 39.464886],
                [-78.404499, 39.169131],
                [-78.870039, 38.763838],
                [-78.996008, 38.851469],
                [-79.209609, 38.495467],
                [-79.313671, 38.413313],
                [-79.477979, 38.457129],
                [-79.647764, 38.594052],
                [-79.724442, 38.364021],
                [-79.921611, 38.177805],
                [-79.998289, 37.997066],
                [-80.184505, 37.849189],
                [-80.294043, 37.690357],
                [-80.29952, 37.509618],
                [-80.474782, 37.421987],
                [-80.513121, 37.482234],
                [-80.967707, 37.290541],
                [-81.225123, 37.235771],
                [-81.362047, 37.339833],
                [-81.55374, 37.208387],
                [-81.679709, 37.20291],
                [-81.849494, 37.285064],
                [-81.986418, 37.454849],
                [-81.969987, 37.537003],
                [-82.101434, 37.553434],
                [-82.293127, 37.668449],
                [-82.342419, 37.783465],
                [-82.50125, 37.931343],
                [-82.621743, 38.123036],
                [-82.594358, 38.424267],
                [-82.331465, 38.446175],
                [-82.293127, 38.577622],
                [-82.172634, 38.632391],
                [-82.221926, 38.785745],
                [-82.03571, 39.026731],
                [-81.887833, 38.873376],
                [-81.783771, 38.966484],
                [-81.811156, 39.0815],
                [-81.685186, 39.273193],
                [-81.57017, 39.267716],
                [-81.455155, 39.410117],
                [-81.345616, 39.344393],
                [-81.219646, 39.388209],
                [-80.830783, 39.711348],
                [-80.737675, 40.078303],
                [-80.600752, 40.319289],
                [-80.595275, 40.472643],
                [-80.666475, 40.582182],
                [-80.518598, 40.636951]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "55",
          properties: { name: "Wisconsin", density: 105.2 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-90.415429, 46.568478],
                [-90.229213, 46.508231],
                [-90.119674, 46.338446],
                [-89.09001, 46.135799],
                [-88.662808, 45.987922],
                [-88.531362, 46.020784],
                [-88.10416, 45.922199],
                [-87.989145, 45.796229],
                [-87.781021, 45.675736],
                [-87.791975, 45.500474],
                [-87.885083, 45.363551],
                [-87.649574, 45.341643],
                [-87.742682, 45.199243],
                [-87.589328, 45.095181],
                [-87.627666, 44.974688],
                [-87.819359, 44.95278],
                [-87.983668, 44.722749],
                [-88.043914, 44.563917],
                [-87.928898, 44.536533],
                [-87.775544, 44.640595],
                [-87.611236, 44.837764],
                [-87.403112, 44.914442],
                [-87.238804, 45.166381],
                [-87.03068, 45.22115],
                [-87.047111, 45.089704],
                [-87.189511, 44.969211],
                [-87.468835, 44.552964],
                [-87.545512, 44.322932],
                [-87.540035, 44.158624],
                [-87.644097, 44.103854],
                [-87.737205, 43.8793],
                [-87.704344, 43.687607],
                [-87.791975, 43.561637],
                [-87.912467, 43.249452],
                [-87.885083, 43.002989],
                [-87.76459, 42.783912],
                [-87.802929, 42.493634],
                [-88.788778, 42.493634],
                [-90.639984, 42.510065],
                [-90.711184, 42.636034],
                [-91.067185, 42.75105],
                [-91.143862, 42.909881],
                [-91.176724, 43.134436],
                [-91.056231, 43.254929],
                [-91.204109, 43.353514],
                [-91.215062, 43.501391],
                [-91.269832, 43.616407],
                [-91.242447, 43.775238],
                [-91.43414, 43.994316],
                [-91.592971, 44.032654],
                [-91.877772, 44.202439],
                [-91.927065, 44.333886],
                [-92.233773, 44.443425],
                [-92.337835, 44.552964],
                [-92.545959, 44.569394],
                [-92.808852, 44.750133],
                [-92.737652, 45.117088],
                [-92.75956, 45.286874],
                [-92.644544, 45.440228],
                [-92.770513, 45.566198],
                [-92.885529, 45.577151],
                [-92.869098, 45.719552],
                [-92.639067, 45.933153],
                [-92.354266, 46.015307],
                [-92.29402, 46.075553],
                [-92.29402, 46.667063],
                [-92.091373, 46.749217],
                [-92.014696, 46.705401],
                [-91.790141, 46.694447],
                [-91.09457, 46.864232],
                [-90.837154, 46.95734],
                [-90.749522, 46.88614],
                [-90.886446, 46.754694],
                [-90.55783, 46.584908],
                [-90.415429, 46.568478]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "56",
          properties: { name: "Wyoming", density: 5.851 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-109.080842, 45.002073],
                [-105.91517, 45.002073],
                [-104.058488, 44.996596],
                [-104.053011, 43.002989],
                [-104.053011, 41.003906],
                [-105.728954, 40.998429],
                [-107.919731, 41.003906],
                [-109.04798, 40.998429],
                [-111.047063, 40.998429],
                [-111.047063, 42.000709],
                [-111.047063, 44.476286],
                [-111.05254, 45.002073],
                [-109.080842, 45.002073]
              ]
            ]
          }
        },
        {
          type: "Feature",
          id: "72",
          properties: { name: "Puerto Rico", density: 1082 },
          geometry: {
            type: "Polygon",
            coordinates: [
              [
                [-66.448338, 17.984326],
                [-66.771478, 18.006234],
                [-66.924832, 17.929556],
                [-66.985078, 17.973372],
                [-67.209633, 17.956941],
                [-67.154863, 18.19245],
                [-67.269879, 18.362235],
                [-67.094617, 18.515589],
                [-66.957694, 18.488204],
                [-66.409999, 18.488204],
                [-65.840398, 18.433435],
                [-65.632274, 18.367712],
                [-65.626797, 18.203403],
                [-65.730859, 18.186973],
                [-65.834921, 18.017187],
                [-66.234737, 17.929556],
                [-66.448338, 17.984326]
              ]
            ]
          }
        }
      ]
    };
    const basicMapVar = document.getElementById("basicMap");
    if (basicMapVar) {
      const basicMap = L.map("basicMap").setView([42.35, -71.08], 10);
      L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }).addTo(basicMap);
    }
    const shapeMapVar = document.getElementById("shapeMap");
    if (shapeMapVar) {
      const markerMap = L.map("shapeMap").setView([51.5, -0.09], 12);
      const marker = L.marker([51.5, -0.09]).addTo(markerMap);
      const circle = L.circle([51.508, -0.11], {
        color: "red",
        fillColor: "#f03",
        fillOpacity: 0.5,
        radius: 500
      }).addTo(markerMap);
      const polygon = L.polygon([
        [51.509, -0.08],
        [51.503, -0.06],
        [51.51, -0.047]
      ]).addTo(markerMap);
      L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }).addTo(markerMap);
    }
    const dragMapVar = document.getElementById("dragMap");
    if (dragMapVar) {
      const draggableMap = L.map("dragMap").setView([48.817152, 2.455], 12);
      const markerLocation = L.marker([48.817152, 2.455], {
        draggable: "true"
      }).addTo(draggableMap);
      markerLocation.bindPopup("<b>You're here!</b>").openPopup();
      L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }).addTo(draggableMap);
    }
    const userLocationVar = document.getElementById("userLocation");
    if (userLocationVar) {
      let onLocationFound = function(e) {
        const radius = e.accuracy;
        L.marker(e.latlng).addTo(userLocation).bindPopup("You are somewhere around " + radius + " meters from this point").openPopup();
        L.circle(e.latlng, radius).addTo(userLocation);
      };
      const userLocation = L.map("userLocation").setView([42.35, -71.08], 10);
      userLocation.locate({
        setView: true,
        maxZoom: 16
      });
      userLocation.on("locationfound", onLocationFound);
      L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }).addTo(userLocation);
    }
    const customIconsVar = document.getElementById("customIcons");
    if (customIconsVar) {
      const customIcons = L.map("customIcons").setView([51.5, -0.09], 10);
      const greenLeaf = L.icon({
        iconUrl: assetsPath + "img/icons/misc/leaf-green.png",
        shadowUrl: assetsPath + "img/icons/misc/leaf-shadow.png",
        iconSize: [38, 95],
        shadowSize: [50, 64],
        iconAnchor: [22, 94],
        shadowAnchor: [4, 62],
        popupAnchor: [-3, -76]
      });
      const redLeaf = L.icon({
        iconUrl: assetsPath + "img/icons/misc/leaf-red.png",
        shadowUrl: assetsPath + "img/icons/misc/leaf-shadow.png",
        iconSize: [38, 95],
        shadowSize: [50, 64],
        iconAnchor: [22, 94],
        shadowAnchor: [4, 62],
        popupAnchor: [-3, -76]
      });
      const orangeLeaf = L.icon({
        iconUrl: assetsPath + "img/icons/misc/leaf-orange.png",
        shadowUrl: assetsPath + "img/icons/misc/leaf-shadow.png",
        iconSize: [38, 95],
        shadowSize: [50, 64],
        iconAnchor: [22, 94],
        shadowAnchor: [4, 62],
        popupAnchor: [-3, -76]
      });
      L.marker([51.5, -0.09], {
        icon: redLeaf
      }).addTo(customIcons);
      L.marker([51.4, -0.51], {
        icon: greenLeaf
      }).addTo(customIcons);
      L.marker([51.49, -0.45], {
        icon: orangeLeaf
      }).addTo(customIcons);
      L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }).addTo(customIcons);
    }
    const geoJsonVar = document.getElementById("geoJson");
    if (geoJsonVar) {
      let getColor = function(d) {
        return d > 1e3 ? "#800026" : d > 500 ? "#BD0026" : d > 200 ? "#E31A1C" : d > 100 ? "#FC4E2A" : d > 50 ? "#FD8D3C" : d > 20 ? "#FEB24C" : d > 10 ? "#FED976" : "#FFEDA0";
      }, style = function(feature) {
        return {
          fillColor: getColor(feature.properties.density),
          weight: 2,
          opacity: 1,
          color: "white",
          dashArray: "3",
          fillOpacity: 0.7
        };
      };
      const geoJsonMap = L.map("geoJson").setView([44.2669, -72.576], 3);
      L.geoJson(statesData).addTo(geoJsonMap);
      L.geoJson(statesData, {
        style
      }).addTo(geoJsonMap);
      L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }).addTo(geoJsonMap);
    }
    const layerControlVar = document.getElementById("layerControl");
    if (layerControlVar) {
      const littleton = L.marker([39.61, -105.02]).bindPopup("This is Littleton, CO."), denver = L.marker([39.74, -104.99]).bindPopup("This is Denver, CO."), aurora = L.marker([39.73, -104.8]).bindPopup("This is Aurora, CO."), golden = L.marker([39.77, -105.23]).bindPopup("This is Golden, CO.");
      const cities = L.layerGroup([littleton, denver, aurora, golden]);
      const street = L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }), watercolor = L.tileLayer("http://tile.stamen.com/watercolor/{z}/{x}/{y}.jpg", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      });
      const layerControl = L.map("layerControl", {
        center: [39.73, -104.99],
        zoom: 10,
        layers: [street, cities]
      });
      const baseMaps = {
        Street: street,
        Watercolor: watercolor
      };
      const overlayMaps = {
        Cities: cities
      };
      L.control.layers(baseMaps, overlayMaps).addTo(layerControl);
      L.tileLayer("https://c.tile.osm.org/{z}/{x}/{y}.png", {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a>',
        maxZoom: 18
      }).addTo(layerControl);
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-add-new-address.js
  $(function() {
    const select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          placeholder: "Select value",
          dropdownParent: $this.parent()
        });
      });
    }
  });
  document.addEventListener("DOMContentLoaded", function() {
    (function() {
      let addNewAddress = document.getElementById("addNewAddress");
      addNewAddress.addEventListener("show.bs.modal", function(event) {
        window.Helpers.initCustomOptionCheck();
      });
      FormValidation.formValidation(document.getElementById("addNewAddressForm"), {
        fields: {
          modalAddressFirstName: {
            validators: {
              notEmpty: {
                message: "Please enter your first name"
              },
              regexp: {
                regexp: /^[a-zA-Zs]+$/,
                message: "The first name can only consist of alphabetical"
              }
            }
          },
          modalAddressLastName: {
            validators: {
              notEmpty: {
                message: "Please enter your last name"
              },
              regexp: {
                regexp: /^[a-zA-Zs]+$/,
                message: "The last name can only consist of alphabetical"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        }
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-add-new-cc.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const creditCardMask = document.querySelector(".credit-card-mask"), expiryDateMask = document.querySelector(".expiry-date-mask"), cvvMask = document.querySelector(".cvv-code-mask"), btnReset = document.querySelector(".btn-reset");
      let cleave;
      function initCleave() {
        if (creditCardMask) {
          cleave = new Cleave(creditCardMask, {
            creditCard: true,
            onCreditCardTypeChanged: function(type) {
              if (type != "" && type != "unknown") {
                document.querySelector(".card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" class="cc-icon-image" height="28"/>';
              } else {
                document.querySelector(".card-type").innerHTML = "";
              }
            }
          });
        }
      }
      let addNewCCModal = document.getElementById("addNewCCModal");
      addNewCCModal.addEventListener("show.bs.modal", function(event) {
        initCleave();
      });
      if (expiryDateMask) {
        new Cleave(expiryDateMask, {
          date: true,
          delimiter: "/",
          datePattern: ["m", "y"]
        });
      }
      if (cvvMask) {
        new Cleave(cvvMask, {
          numeral: true,
          numeralPositiveOnly: true
        });
      }
      FormValidation.formValidation(document.getElementById("addNewCCForm"), {
        fields: {
          modalAddCard: {
            validators: {
              notEmpty: {
                message: "Please enter your credit card number"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e2) {
            if (e2.element.parentElement.classList.contains("input-group")) {
              e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
            }
          });
        }
      }).on("plugins.message.displayed", function(e2) {
        if (e2.element.parentElement.classList.contains("input-group")) {
          e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement.parentElement);
        }
      });
      btnReset.addEventListener("click", function(e2) {
        document.querySelector(".card-type").innerHTML = "";
        cleave.destroy();
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-add-permission.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      FormValidation.formValidation(document.getElementById("addPermissionForm"), {
        fields: {
          modalPermissionName: {
            validators: {
              notEmpty: {
                message: "Please enter permission name"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        }
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-add-role.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      FormValidation.formValidation(document.getElementById("addRoleForm"), {
        fields: {
          modalRoleName: {
            validators: {
              notEmpty: {
                message: "Please enter role name"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        }
      });
      const selectAll = document.querySelector("#selectAll"), checkboxList = document.querySelectorAll('[type="checkbox"]');
      selectAll.addEventListener("change", (t) => {
        checkboxList.forEach((e2) => {
          e2.checked = t.target.checked;
        });
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-create-app.js
  $(function() {
    const appModal = document.getElementById("createApp");
    const creditCardMask1 = document.querySelector(".app-credit-card-mask"), expiryDateMask1 = document.querySelector(".app-expiry-date-mask"), cvvMask1 = document.querySelector(".app-cvv-code-mask");
    let cleave;
    function initCleave() {
      if (creditCardMask1) {
        cleave = new Cleave(creditCardMask1, {
          creditCard: true,
          onCreditCardTypeChanged: function(type) {
            if (type != "" && type != "unknown") {
              document.querySelector(".app-card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" class="cc-icon-image" height="28"/>';
            } else {
              document.querySelector(".app-card-type").innerHTML = "";
            }
          }
        });
      }
    }
    if (expiryDateMask1) {
      new Cleave(expiryDateMask1, {
        date: true,
        delimiter: "/",
        datePattern: ["m", "y"]
      });
    }
    if (cvvMask1) {
      new Cleave(cvvMask1, {
        numeral: true,
        numeralPositiveOnly: true
      });
    }
    appModal.addEventListener("show.bs.modal", function(event) {
      const wizardCreateApp = document.querySelector("#wizard-create-app");
      if (typeof wizardCreateApp !== void 0 && wizardCreateApp !== null) {
        const wizardCreateAppNextList = [].slice.call(wizardCreateApp.querySelectorAll(".btn-next"));
        const wizardCreateAppPrevList = [].slice.call(wizardCreateApp.querySelectorAll(".btn-prev"));
        const wizardCreateAppBtnSubmit = wizardCreateApp.querySelector(".btn-submit");
        const createAppStepper = new Stepper(wizardCreateApp, {
          linear: false
        });
        if (wizardCreateAppNextList) {
          wizardCreateAppNextList.forEach((wizardCreateAppNext) => {
            wizardCreateAppNext.addEventListener("click", (event2) => {
              createAppStepper.next();
              initCleave();
            });
          });
        }
        if (wizardCreateAppPrevList) {
          wizardCreateAppPrevList.forEach((wizardCreateAppPrev) => {
            wizardCreateAppPrev.addEventListener("click", (event2) => {
              createAppStepper.previous();
              initCleave();
            });
          });
        }
        if (wizardCreateAppBtnSubmit) {
          wizardCreateAppBtnSubmit.addEventListener("click", (event2) => {
            alert("Submitted..!!");
          });
        }
      }
    });
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-edit-cc.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const editCreditCardMaskEdit = document.querySelector(".credit-card-mask-edit"), editExpiryDateMaskEdit = document.querySelector(".expiry-date-mask-edit"), editCVVMaskEdit = document.querySelector(".cvv-code-mask-edit");
      if (editCreditCardMaskEdit) {
        new Cleave(editCreditCardMaskEdit, {
          creditCard: true,
          onCreditCardTypeChanged: function(type) {
            if (type != "" && type != "unknown") {
              document.querySelector(".card-type-edit").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" height="28"/>';
            } else {
              document.querySelector(".card-type-edit").innerHTML = "";
            }
          }
        });
      }
      if (editExpiryDateMaskEdit) {
        new Cleave(editExpiryDateMaskEdit, {
          date: true,
          delimiter: "/",
          datePattern: ["m", "y"]
        });
      }
      if (editCVVMaskEdit) {
        new Cleave(editCVVMaskEdit, {
          numeral: true,
          numeralPositiveOnly: true
        });
      }
      FormValidation.formValidation(document.getElementById("editCCForm"), {
        fields: {
          modalEditCard: {
            validators: {
              notEmpty: {
                message: "Please enter your credit card number"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e2) {
            if (e2.element.parentElement.classList.contains("input-group")) {
              e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
            }
          });
        }
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-edit-permission.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      FormValidation.formValidation(document.getElementById("editPermissionForm"), {
        fields: {
          editPermissionName: {
            validators: {
              notEmpty: {
                message: "Please enter permission name"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-9"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        }
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-edit-user.js
  $(function() {
    const select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>').select2({
          placeholder: "Select value",
          dropdownParent: $this.parent()
        });
      });
    }
  });
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const modalEditUserTaxID = document.querySelector(".modal-edit-tax-id");
      const modalEditUserPhone = document.querySelector(".phone-number-mask");
      if (modalEditUserTaxID) {
        new Cleave(modalEditUserTaxID, {
          prefix: "TIN",
          blocks: [3, 3, 3, 4],
          uppercase: true
        });
      }
      if (modalEditUserPhone) {
        new Cleave(modalEditUserPhone, {
          phone: true,
          phoneRegionCode: "US"
        });
      }
      FormValidation.formValidation(document.getElementById("editUserForm"), {
        fields: {
          modalEditUserFirstName: {
            validators: {
              notEmpty: {
                message: "Please enter your first name"
              },
              regexp: {
                regexp: /^[a-zA-Zs]+$/,
                message: "The first name can only consist of alphabetical"
              }
            }
          },
          modalEditUserLastName: {
            validators: {
              notEmpty: {
                message: "Please enter your last name"
              },
              regexp: {
                regexp: /^[a-zA-Zs]+$/,
                message: "The last name can only consist of alphabetical"
              }
            }
          },
          modalEditUserName: {
            validators: {
              notEmpty: {
                message: "Please enter your username"
              },
              stringLength: {
                min: 6,
                max: 30,
                message: "The name must be more than 6 and less than 30 characters long"
              },
              regexp: {
                regexp: /^[a-zA-Z0-9 ]+$/,
                message: "The name can only consist of alphabetical, number and space"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        }
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-enable-otp.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const phoneMask = document.querySelector(".phone-number-otp-mask");
      if (phoneMask) {
        new Cleave(phoneMask, {
          phone: true,
          phoneRegionCode: "US"
        });
      }
      FormValidation.formValidation(document.getElementById("enableOTPForm"), {
        fields: {
          modalEnableOTPPhone: {
            validators: {
              notEmpty: {
                message: "Please enter your mobile number"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e2) {
            if (e2.element.parentElement.classList.contains("input-group")) {
              e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
            }
          });
        }
      });
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-share-project.js
  $(function() {
    const select2ShareProject = $(".share-project-select");
    var shareProject = document.getElementById("shareProject");
    shareProject.addEventListener("show.bs.modal", function(event) {
      if (select2ShareProject.length) {
        let renderAvatar = function(option) {
          if (!option.id) {
            return option.text;
          }
          var optionEle = '<div class="d-flex align-items-center"><div class="avatar avatar-xs me-2 d-flex"><img src="' + assetsPath + $(option.element).data("image") + '" class="rounded-circle"></div><div class="name">' + $(option.element).data("name") + "</div></div>";
          return optionEle;
        };
        select2ShareProject.wrap('<div class="position-relative"></div>').select2({
          dropdownParent: shareProject,
          templateResult: renderAvatar,
          templateSelection: renderAvatar,
          placeholder: "Add Project Members",
          escapeMarkup: function(es) {
            return es;
          }
        });
      }
    });
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/modal-two-factor-auth.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const phoneMaskList = document.querySelectorAll("#twoFactorAuthInputSms");
      if (phoneMaskList) {
        phoneMaskList.forEach(function(phoneMask) {
          new Cleave(phoneMask, {
            phone: true,
            phoneRegionCode: "US"
          });
        });
      }
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/offcanvas-add-payment.js
  (function() {
    const paymentAmount = document.querySelector(".invoice-amount");
    if (paymentAmount) {
      new Cleave(paymentAmount, {
        numeral: true
      });
    }
    const date2 = new Date(), invoiceDateList = document.querySelectorAll(".invoice-date");
    if (invoiceDateList) {
      invoiceDateList.forEach(function(invoiceDateEl) {
        invoiceDateEl.flatpickr({
          monthSelectorType: "static",
          defaultDate: date2
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/offcanvas-send-invoice.js
  (function() {
    const invoiceMsg = document.querySelector("#invoice-message");
    const trimMsg = invoiceMsg.textContent.replace(/^\s+|\s+$/gm, "");
    invoiceMsg.value = trimMsg;
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-account-settings-account.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const formAccSettings = document.querySelector("#formAccountSettings"), deactivateAcc = document.querySelector("#formAccountDeactivation"), deactivateButton = deactivateAcc.querySelector(".deactivate-account");
      if (formAccSettings) {
        const fv2 = FormValidation.formValidation(formAccSettings, {
          fields: {
            firstName: {
              validators: {
                notEmpty: {
                  message: "Please enter first name"
                }
              }
            },
            lastName: {
              validators: {
                notEmpty: {
                  message: "Please enter last name"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: ".col-md-6"
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        });
      }
      if (deactivateAcc) {
        const fv2 = FormValidation.formValidation(deactivateAcc, {
          fields: {
            accountActivation: {
              validators: {
                notEmpty: {
                  message: "Please confirm you want to delete account"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: ""
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            fieldStatus: new FormValidation.plugins.FieldStatus({
              onStatusChanged: function(areFieldsValid) {
                areFieldsValid ? deactivateButton.removeAttribute("disabled") : deactivateButton.setAttribute("disabled", "disabled");
              }
            }),
            autoFocus: new FormValidation.plugins.AutoFocus()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        });
      }
      const accountActivation = document.querySelector("#accountActivation");
      if (deactivateButton) {
        deactivateButton.onclick = function() {
          if (accountActivation.checked == true) {
            Swal.fire({
              text: "Are you sure you would like to deactivate your account?",
              icon: "warning",
              showCancelButton: true,
              confirmButtonText: "Yes",
              customClass: {
                confirmButton: "btn btn-primary me-2",
                cancelButton: "btn btn-label-secondary"
              },
              buttonsStyling: false
            }).then(function(result) {
              if (result.value) {
                Swal.fire({
                  icon: "success",
                  title: "Deleted!",
                  text: "Your file has been deleted.",
                  customClass: {
                    confirmButton: "btn btn-success"
                  }
                });
              } else if (result.dismiss === Swal.DismissReason.cancel) {
                Swal.fire({
                  title: "Cancelled",
                  text: "Deactivation Cancelled!!",
                  icon: "error",
                  customClass: {
                    confirmButton: "btn btn-success"
                  }
                });
              }
            });
          }
        };
      }
      const phoneNumber = document.querySelector("#phoneNumber"), zipCode = document.querySelector("#zipCode");
      if (phoneNumber) {
        new Cleave(phoneNumber, {
          phone: true,
          phoneRegionCode: "US"
        });
      }
      if (zipCode) {
        new Cleave(zipCode, {
          delimiter: "",
          numeral: true
        });
      }
      let accountUserImage = document.getElementById("uploadedAvatar");
      const fileInput = document.querySelector(".account-file-input"), resetFileInput = document.querySelector(".account-image-reset");
      if (accountUserImage) {
        const resetImage = accountUserImage.src;
        fileInput.onchange = () => {
          if (fileInput.files[0]) {
            accountUserImage.src = window.URL.createObjectURL(fileInput.files[0]);
          }
        };
        resetFileInput.onclick = () => {
          fileInput.value = "";
          accountUserImage.src = resetImage;
        };
      }
    })();
  });
  $(function() {
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>');
        $this.select2({
          dropdownParent: $this.parent()
        });
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-account-settings-billing.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const creditCardMask = document.querySelector(".credit-card-mask"), expiryDateMask = document.querySelector(".expiry-date-mask"), CVVMask = document.querySelector(".cvv-code-mask");
      if (creditCardMask) {
        new Cleave(creditCardMask, {
          creditCard: true,
          onCreditCardTypeChanged: function(type) {
            if (type != "" && type != "unknown") {
              document.querySelector(".card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" height="28"/>';
            } else {
              document.querySelector(".card-type").innerHTML = "";
            }
          }
        });
      }
      if (expiryDateMask) {
        new Cleave(expiryDateMask, {
          date: true,
          delimiter: "/",
          datePattern: ["m", "y"]
        });
      }
      if (CVVMask) {
        new Cleave(CVVMask, {
          numeral: true,
          numeralPositiveOnly: true
        });
      }
      const formAccSettings = document.getElementById("formAccountSettings"), mobileNumber = document.querySelector(".mobile-number"), zipCode = document.querySelector(".zip-code"), creditCardForm = document.getElementById("creditCardForm");
      if (formAccSettings) {
        const fv2 = FormValidation.formValidation(formAccSettings, {
          fields: {
            companyName: {
              validators: {
                notEmpty: {
                  message: "Please enter company name"
                }
              }
            },
            billingEmail: {
              validators: {
                notEmpty: {
                  message: "Please enter billing email"
                },
                emailAddress: {
                  message: "Please enter valid email address"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: ".col-sm-6"
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          }
        });
      }
      if (creditCardForm) {
        FormValidation.formValidation(creditCardForm, {
          fields: {
            paymentCard: {
              validators: {
                notEmpty: {
                  message: "Please enter your credit card number"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: ""
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        });
      }
      const cancelSubscription = document.querySelector(".cancel-subscription");
      if (cancelSubscription) {
        cancelSubscription.onclick = function() {
          Swal.fire({
            text: "Are you sure you would like to cancel your subscription?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes",
            customClass: {
              confirmButton: "btn btn-primary me-2",
              cancelButton: "btn btn-label-secondary"
            },
            buttonsStyling: false
          }).then(function(result) {
            if (result.value) {
              Swal.fire({
                icon: "success",
                title: "Unsubscribed!",
                text: "Your subscription cancelled successfully.",
                customClass: {
                  confirmButton: "btn btn-success"
                }
              });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              Swal.fire({
                title: "Cancelled",
                text: "Unsubscription Cancelled!!",
                icon: "error",
                customClass: {
                  confirmButton: "btn btn-success"
                }
              });
            }
          });
        };
      }
      if (mobileNumber) {
        new Cleave(mobileNumber, {
          phone: true,
          phoneRegionCode: "US"
        });
      }
      if (zipCode) {
        new Cleave(zipCode, {
          delimiter: "",
          numeral: true
        });
      }
    })();
  });
  $(function() {
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>');
        $this.select2({
          dropdownParent: $this.parent()
        });
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-account-settings-security.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const formChangePass = document.querySelector("#formAccountSettings"), formApiKey = document.querySelector("#formAccountSettingsApiKey");
      if (formChangePass) {
        const fv2 = FormValidation.formValidation(formChangePass, {
          fields: {
            currentPassword: {
              validators: {
                notEmpty: {
                  message: "Please current password"
                },
                stringLength: {
                  min: 8,
                  message: "Password must be more than 8 characters"
                }
              }
            },
            newPassword: {
              validators: {
                notEmpty: {
                  message: "Please enter new password"
                },
                stringLength: {
                  min: 8,
                  message: "Password must be more than 8 characters"
                }
              }
            },
            confirmPassword: {
              validators: {
                notEmpty: {
                  message: "Please confirm new password"
                },
                identical: {
                  compare: function() {
                    return formChangePass.querySelector('[name="newPassword"]').value;
                  },
                  message: "The password and its confirm are not the same"
                },
                stringLength: {
                  min: 8,
                  message: "Password must be more than 8 characters"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: ".col-md-6"
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        });
      }
      if (formApiKey) {
        const fvApi = FormValidation.formValidation(formApiKey, {
          fields: {
            apiKey: {
              validators: {
                notEmpty: {
                  message: "Please enter API key name"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: ""
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        });
      }
    })();
  });
  $(function() {
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>');
        $this.select2({
          dropdownParent: $this.parent()
        });
      });
    }
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-auth-multisteps.js
  $(function() {
    var select2 = $(".select2");
    if (select2.length) {
      select2.each(function() {
        var $this = $(this);
        $this.wrap('<div class="position-relative"></div>');
        $this.select2({
          placeholder: "Select an country",
          dropdownParent: $this.parent()
        });
      });
    }
  });
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const stepsValidation = document.querySelector("#multiStepsValidation");
      if (typeof stepsValidation !== void 0 && stepsValidation !== null) {
        const stepsValidationForm = stepsValidation.querySelector("#multiStepsForm");
        const stepsValidationFormStep1 = stepsValidationForm.querySelector("#accountDetailsValidation");
        const stepsValidationFormStep2 = stepsValidationForm.querySelector("#personalInfoValidation");
        const stepsValidationFormStep3 = stepsValidationForm.querySelector("#billingLinksValidation");
        const stepsValidationNext = [].slice.call(stepsValidationForm.querySelectorAll(".btn-next"));
        const stepsValidationPrev = [].slice.call(stepsValidationForm.querySelectorAll(".btn-prev"));
        const multiStepsExDate = document.querySelector(".multi-steps-exp-date"), multiStepsCvv = document.querySelector(".multi-steps-cvv"), multiStepsMobile = document.querySelector(".multi-steps-mobile"), multiStepsPincode = document.querySelector(".multi-steps-pincode"), multiStepsCard = document.querySelector(".multi-steps-card");
        if (multiStepsExDate) {
          new Cleave(multiStepsExDate, {
            date: true,
            delimiter: "/",
            datePattern: ["m", "y"]
          });
        }
        if (multiStepsCvv) {
          new Cleave(multiStepsCvv, {
            numeral: true,
            numeralPositiveOnly: true
          });
        }
        if (multiStepsMobile) {
          new Cleave(multiStepsMobile, {
            phone: true,
            phoneRegionCode: "US"
          });
        }
        if (multiStepsPincode) {
          new Cleave(multiStepsPincode, {
            delimiter: "",
            numeral: true
          });
        }
        if (multiStepsCard) {
          new Cleave(multiStepsCard, {
            creditCard: true,
            onCreditCardTypeChanged: function(type) {
              if (type != "" && type != "unknown") {
                document.querySelector(".card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" height="28"/>';
              } else {
                document.querySelector(".card-type").innerHTML = "";
              }
            }
          });
        }
        let validationStepper = new Stepper(stepsValidation, {
          linear: true
        });
        const multiSteps1 = FormValidation.formValidation(stepsValidationFormStep1, {
          fields: {
            multiStepsUsername: {
              validators: {
                notEmpty: {
                  message: "Please enter username"
                },
                stringLength: {
                  min: 6,
                  max: 30,
                  message: "The name must be more than 6 and less than 30 characters long"
                },
                regexp: {
                  regexp: /^[a-zA-Z0-9 ]+$/,
                  message: "The name can only consist of alphabetical, number and space"
                }
              }
            },
            multiStepsEmail: {
              validators: {
                notEmpty: {
                  message: "Please enter email address"
                },
                emailAddress: {
                  message: "The value is not a valid email address"
                }
              }
            },
            multiStepsPass: {
              validators: {
                notEmpty: {
                  message: "Please enter password"
                }
              }
            },
            multiStepsConfirmPass: {
              validators: {
                notEmpty: {
                  message: "Confirm Password is required"
                },
                identical: {
                  compare: function() {
                    return stepsValidationFormStep1.querySelector('[name="multiStepsPass"]').value;
                  },
                  message: "The password and its confirm are not the same"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: ".col-sm-6"
            }),
            autoFocus: new FormValidation.plugins.AutoFocus(),
            submitButton: new FormValidation.plugins.SubmitButton()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        }).on("core.form.valid", function() {
          validationStepper.next();
        });
        const multiSteps2 = FormValidation.formValidation(stepsValidationFormStep2, {
          fields: {
            multiStepsFirstName: {
              validators: {
                notEmpty: {
                  message: "Please enter first name"
                }
              }
            },
            multiStepsAddress: {
              validators: {
                notEmpty: {
                  message: "Please enter your address"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: function(field, ele) {
                switch (field) {
                  case "multiStepsFirstName":
                    return ".col-sm-6";
                  case "multiStepsAddress":
                    return ".col-md-12";
                  default:
                    return ".row";
                }
              }
            }),
            autoFocus: new FormValidation.plugins.AutoFocus(),
            submitButton: new FormValidation.plugins.SubmitButton()
          }
        }).on("core.form.valid", function() {
          validationStepper.next();
        });
        const multiSteps3 = FormValidation.formValidation(stepsValidationFormStep3, {
          fields: {
            multiStepsCard: {
              validators: {
                notEmpty: {
                  message: "Please enter card number"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: function(field, ele) {
                switch (field) {
                  case "multiStepsCard":
                    return ".col-md-12";
                  default:
                    return ".col-dm-6";
                }
              }
            }),
            autoFocus: new FormValidation.plugins.AutoFocus(),
            submitButton: new FormValidation.plugins.SubmitButton()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        }).on("core.form.valid", function() {
          alert("Submitted..!!");
        });
        stepsValidationNext.forEach((item) => {
          item.addEventListener("click", (event) => {
            switch (validationStepper._currentIndex) {
              case 0:
                multiSteps1.validate();
                break;
              case 1:
                multiSteps2.validate();
                break;
              case 2:
                multiSteps3.validate();
                break;
              default:
                break;
            }
          });
        });
        stepsValidationPrev.forEach((item) => {
          item.addEventListener("click", (event) => {
            switch (validationStepper._currentIndex) {
              case 2:
                validationStepper.previous();
                break;
              case 1:
                validationStepper.previous();
                break;
              case 0:
              default:
                break;
            }
          });
        });
      }
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-auth-two-steps.js
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      let maskWrapper = document.querySelector(".numeral-mask-wrapper");
      for (let pin of maskWrapper.children) {
        pin.onkeyup = function(e2) {
          if (/^\d$/.test(e2.key)) {
            if (pin.nextElementSibling) {
              if (this.value.length === parseInt(this.attributes["maxlength"].value)) {
                pin.nextElementSibling.focus();
              }
            }
          } else if (e2.key === "Backspace") {
            if (pin.previousElementSibling) {
              pin.previousElementSibling.focus();
            }
          }
        };
        pin.onkeypress = function(e2) {
          if (e2.key === "-") {
            e2.preventDefault();
          }
        };
      }
      const twoStepsForm = document.querySelector("#twoStepsForm");
      if (twoStepsForm) {
        const fv2 = FormValidation.formValidation(twoStepsForm, {
          fields: {
            otp: {
              validators: {
                notEmpty: {
                  message: "Please enter otp"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: ".mb-3"
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          }
        });
        const numeralMaskList = twoStepsForm.querySelectorAll(".numeral-mask");
        const keyupHandler = function() {
          let otpFlag = true, otpVal = "";
          numeralMaskList.forEach((numeralMaskEl) => {
            if (numeralMaskEl.value === "") {
              otpFlag = false;
              twoStepsForm.querySelector('[name="otp"]').value = "";
            }
            otpVal = otpVal + numeralMaskEl.value;
          });
          if (otpFlag) {
            twoStepsForm.querySelector('[name="otp"]').value = otpVal;
          }
        };
        numeralMaskList.forEach((numeralMaskEle) => {
          numeralMaskEle.addEventListener("keyup", keyupHandler);
        });
      }
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-auth.js
  var formAuthentication = document.querySelector("#formAuthentication");
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      if (formAuthentication) {
        const fv2 = FormValidation.formValidation(formAuthentication, {
          fields: {
            username: {
              validators: {
                notEmpty: {
                  message: "Please enter username"
                },
                stringLength: {
                  min: 6,
                  message: "Username must be more than 6 characters"
                }
              }
            },
            email: {
              validators: {
                notEmpty: {
                  message: "Please enter your email"
                },
                emailAddress: {
                  message: "Please enter valid email address"
                }
              }
            },
            "email-username": {
              validators: {
                notEmpty: {
                  message: "Please enter email / username"
                },
                stringLength: {
                  min: 6,
                  message: "Username must be more than 6 characters"
                }
              }
            },
            password: {
              validators: {
                notEmpty: {
                  message: "Please enter your password"
                },
                stringLength: {
                  min: 6,
                  message: "Password must be more than 6 characters"
                }
              }
            },
            "confirm-password": {
              validators: {
                notEmpty: {
                  message: "Please confirm password"
                },
                identical: {
                  compare: function() {
                    return formAuthentication.querySelector('[name="password"]').value;
                  },
                  message: "The password and its confirm are not the same"
                },
                stringLength: {
                  min: 6,
                  message: "Password must be more than 6 characters"
                }
              }
            },
            terms: {
              validators: {
                notEmpty: {
                  message: "Please agree terms & conditions"
                }
              }
            }
          },
          plugins: {
            trigger: new FormValidation.plugins.Trigger(),
            bootstrap5: new FormValidation.plugins.Bootstrap5({
              eleValidClass: "",
              rowSelector: ".mb-3"
            }),
            submitButton: new FormValidation.plugins.SubmitButton(),
            defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
            autoFocus: new FormValidation.plugins.AutoFocus()
          },
          init: (instance) => {
            instance.on("plugins.message.placed", function(e2) {
              if (e2.element.parentElement.classList.contains("input-group")) {
                e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
              }
            });
          }
        });
      }
      const numeralMask = document.querySelectorAll(".numeral-mask");
      if (numeralMask.length) {
        numeralMask.forEach((e2) => {
          new Cleave(e2, {
            numeral: true
          });
        });
      }
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-pricing.js
  document.addEventListener("DOMContentLoaded", function(event) {
    (function() {
      const priceDurationToggler = document.querySelector(".price-duration-toggler"), priceMonthlyList = [].slice.call(document.querySelectorAll(".price-monthly")), priceYearlyList = [].slice.call(document.querySelectorAll(".price-yearly"));
      function togglePrice() {
        if (priceDurationToggler.checked) {
          priceYearlyList.map(function(yearEl) {
            yearEl.classList.remove("d-none");
          });
          priceMonthlyList.map(function(monthEl) {
            monthEl.classList.add("d-none");
          });
        } else {
          priceYearlyList.map(function(yearEl) {
            yearEl.classList.add("d-none");
          });
          priceMonthlyList.map(function(monthEl) {
            monthEl.classList.remove("d-none");
          });
        }
      }
      togglePrice();
      priceDurationToggler.onchange = function() {
        togglePrice();
      };
    })();
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/pages-profile.js
  $(function() {
    var dt_projects_table = $(".datatables-projects");
    if (dt_projects_table.length) {
      var dt_project = dt_projects_table.DataTable({
        ajax: assetsPath + "json/user-profile.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "project_name" },
          { data: "project_leader" },
          { data: "" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            searchable: false,
            orderable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $user_img = full["project_img"], $name = full["project_name"], $date = full["date"];
              if ($user_img) {
                var $output = '<img src="' + assetsPath + "img/icons/brands/" + $user_img + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "primary", "secondary"];
                var $state = states[stateNum], $name = full["project_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-left align-items-center"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><span class="text-truncate fw-medium">' + $name + '</span><small class="text-truncate text-muted">' + $date + "</small></div></div>";
              return $row_output;
            }
          },
          {
            targets: 4,
            orderable: false,
            searchable: false,
            render: function(data, type, full, meta) {
              var $team = full["team"], $output;
              $output = '<div class="d-flex align-items-center avatar-group">';
              for (var i = 0; i < $team.length; i++) {
                $output += '<div class="avatar avatar-sm"><img src="' + assetsPath + "img/avatars/" + $team[i] + '" alt="Avatar" class="rounded-circle pull-up"></div>';
              }
              $output += "</div>";
              return $output;
            }
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              return '<div class="d-flex align-items-center"><div class="progress w-100 me-3" style="height: 6px;"><div class="progress-bar" style="width: ' + $status_number + '" aria-valuenow="' + $status_number + '" aria-valuemin="0" aria-valuemax="100"></div></div><span>' + $status_number + "</span></div>";
            }
          },
          {
            targets: -1,
            searchable: false,
            title: "Actions",
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div>';
            }
          }
        ],
        order: [[2, "desc"]],
        dom: '<"card-header pb-0 pt-sm-0"<"head-label text-center"><"d-flex justify-content-center justify-content-md-end"f>>t<"row mx-2"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 7,
        lengthMenu: [7, 10, 25, 50, 75, 100],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return 'Details of "' + data["project_name"] + '" Project';
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $("div.head-label").html('<h5 class="card-title mb-0">Projects</h5>');
    }
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/tables-datatables-advanced.js
  $(function() {
    var dt_ajax_table = $(".datatables-ajax"), dt_filter_table = $(".dt-column-search"), dt_adv_filter_table = $(".dt-advanced-search"), dt_responsive_table = $(".dt-responsive"), startDateEle = $(".start_date"), endDateEle = $(".end_date");
    var rangePickr = $(".flatpickr-range"), dateFormat = "MM/DD/YYYY";
    if (rangePickr.length) {
      rangePickr.flatpickr({
        mode: "range",
        dateFormat: "m/d/Y",
        orientation: isRtl ? "auto right" : "auto left",
        locale: {
          format: dateFormat
        },
        onClose: function(selectedDates, dateStr, instance) {
          var startDate = "", endDate = new Date();
          if (selectedDates[0] != void 0) {
            startDate = moment(selectedDates[0]).format("MM/DD/YYYY");
            startDateEle.val(startDate);
          }
          if (selectedDates[1] != void 0) {
            endDate = moment(selectedDates[1]).format("MM/DD/YYYY");
            endDateEle.val(endDate);
          }
          $(rangePickr).trigger("change").trigger("keyup");
        }
      });
    }
    function filterColumn(i, val) {
      if (i == 5) {
        var startDate = startDateEle.val(), endDate = endDateEle.val();
        if (startDate !== "" && endDate !== "") {
          $.fn.dataTableExt.afnFiltering.length = 0;
          dt_adv_filter_table.dataTable().fnDraw();
          filterByDate(i, startDate, endDate);
        }
        dt_adv_filter_table.dataTable().fnDraw();
      } else {
        dt_adv_filter_table.DataTable().column(i).search(val, false, true).draw();
      }
    }
    $.fn.dataTableExt.afnFiltering.length = 0;
    var filterByDate = function(column, startDate, endDate) {
      $.fn.dataTableExt.afnFiltering.push(function(oSettings, aData, iDataIndex) {
        var rowDate = normalizeDate(aData[column]), start = normalizeDate(startDate), end = normalizeDate(endDate);
        if (start <= rowDate && rowDate <= end) {
          return true;
        } else if (rowDate >= start && end === "" && start !== "") {
          return true;
        } else if (rowDate <= end && start === "" && end !== "") {
          return true;
        } else {
          return false;
        }
      });
    };
    var normalizeDate = function(dateString) {
      var date2 = new Date(dateString);
      var normalized = date2.getFullYear() + "" + ("0" + (date2.getMonth() + 1)).slice(-2) + ("0" + date2.getDate()).slice(-2);
      return normalized;
    };
    if (dt_ajax_table.length) {
      var dt_ajax = dt_ajax_table.dataTable({
        processing: true,
        ajax: assetsPath + "json/ajax.php",
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>><"table-responsive"t><"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>'
      });
    }
    if (dt_filter_table.length) {
      $(".dt-column-search thead tr").clone(true).appendTo(".dt-column-search thead");
      $(".dt-column-search thead tr:eq(1) th").each(function(i) {
        var title = $(this).text();
        $(this).html('<input type="text" class="form-control" placeholder="Search ' + title + '" />');
        $("input", this).on("keyup change", function() {
          if (dt_filter.column(i).search() !== this.value) {
            dt_filter.column(i).search(this.value).draw();
          }
        });
      });
      var dt_filter = dt_filter_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "full_name" },
          { data: "email" },
          { data: "post" },
          { data: "city" },
          { data: "start_date" },
          { data: "salary" }
        ],
        orderCellsTop: true,
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>><"table-responsive"t><"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>'
      });
    }
    if (dt_adv_filter_table.length) {
      var dt_adv_filter = dt_adv_filter_table.DataTable({
        dom: "<'row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-6'i><'col-sm-12 col-md-6 dataTables_pager'p>>",
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "" },
          { data: "full_name" },
          { data: "email" },
          { data: "post" },
          { data: "city" },
          { data: "start_date" },
          { data: "salary" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          }
        ],
        orderCellsTop: true,
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
    }
    $("input.dt-input").on("keyup", function() {
      filterColumn($(this).attr("data-column"), $(this).val());
    });
    if (dt_responsive_table.length) {
      var dt_responsive = dt_responsive_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "" },
          { data: "full_name" },
          { data: "email" },
          { data: "post" },
          { data: "city" },
          { data: "start_date" },
          { data: "salary" },
          { data: "age" },
          { data: "experience" },
          { data: "status" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            targets: 0,
            searchable: false,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: -1,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          }
        ],
        destroy: true,
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
    }
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 200);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/tables-datatables-basic.js
  var fv;
  var offCanvasEl;
  document.addEventListener("DOMContentLoaded", function(e) {
    (function() {
      const formAddNewRecord = document.getElementById("form-add-new-record");
      setTimeout(() => {
        const newRecord = document.querySelector(".create-new"), offCanvasElement = document.querySelector("#add-new-record");
        if (newRecord) {
          newRecord.addEventListener("click", function() {
            offCanvasEl = new bootstrap.Offcanvas(offCanvasElement);
            offCanvasElement.querySelector(".dt-full-name").value = "", offCanvasElement.querySelector(".dt-post").value = "", offCanvasElement.querySelector(".dt-email").value = "", offCanvasElement.querySelector(".dt-date").value = "", offCanvasElement.querySelector(".dt-salary").value = "";
            offCanvasEl.show();
          });
        }
      }, 200);
      fv = FormValidation.formValidation(formAddNewRecord, {
        fields: {
          basicFullname: {
            validators: {
              notEmpty: {
                message: "The name is required"
              }
            }
          },
          basicPost: {
            validators: {
              notEmpty: {
                message: "Post field is required"
              }
            }
          },
          basicEmail: {
            validators: {
              notEmpty: {
                message: "The Email is required"
              },
              emailAddress: {
                message: "The value is not a valid email address"
              }
            }
          },
          basicDate: {
            validators: {
              notEmpty: {
                message: "Joining Date is required"
              },
              date: {
                format: "MM/DD/YYYY",
                message: "The value is not a valid date"
              }
            }
          },
          basicSalary: {
            validators: {
              notEmpty: {
                message: "Basic Salary is required"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-12"
          }),
          submitButton: new FormValidation.plugins.SubmitButton(),
          autoFocus: new FormValidation.plugins.AutoFocus()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e2) {
            if (e2.element.parentElement.classList.contains("input-group")) {
              e2.element.parentElement.insertAdjacentElement("afterend", e2.messageElement);
            }
          });
        }
      });
      flatpickr(formAddNewRecord.querySelector('[name="basicDate"]'), {
        enableTime: false,
        dateFormat: "m/d/Y",
        onChange: function() {
          fv.revalidateField("basicDate");
        }
      });
    })();
  });
  $(function() {
    var dt_basic_table = $(".datatables-basic"), dt_complex_header_table = $(".dt-complex-header"), dt_row_grouping_table = $(".dt-row-grouping"), dt_multilingual_table = $(".dt-multilingual"), dt_basic;
    if (dt_basic_table.length) {
      dt_basic = dt_basic_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "id" },
          { data: "full_name" },
          { data: "email" },
          { data: "start_date" },
          { data: "salary" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            searchable: false,
            responsivePriority: 2,
            targets: 0,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            searchable: false,
            responsivePriority: 3,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: 2,
            searchable: false,
            visible: false
          },
          {
            targets: 3,
            responsivePriority: 4,
            render: function(data, type, full, meta) {
              var $user_img = full["avatar"], $name = full["full_name"], $post = full["post"];
              if ($user_img) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $user_img + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "primary", "secondary"];
                var $state = states[stateNum], $name = full["full_name"], $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center user-name"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><span class="emp_name text-truncate">' + $name + '</span><small class="emp_post text-truncate text-muted">' + $post + "</small></div></div>";
              return $row_output;
            }
          },
          {
            responsivePriority: 1,
            targets: 4
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            orderable: false,
            searchable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="text-primary ti ti-dots-vertical"></i></a><ul class="dropdown-menu dropdown-menu-end m-0"><li><a href="javascript:;" class="dropdown-item">Details</a></li><li><a href="javascript:;" class="dropdown-item">Archive</a></li><div class="dropdown-divider"></div><li><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></li></ul></div><a href="javascript:;" class="btn btn-sm btn-icon item-edit"><i class="text-primary ti ti-pencil"></i></a>';
            }
          }
        ],
        order: [[2, "desc"]],
        dom: '<"card-header flex-column flex-md-row"<"head-label text-center"><"dt-action-buttons text-end pt-3 pt-md-0"B>><"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 7,
        lengthMenu: [7, 10, 25, 50, 75, 100],
        buttons: [
          {
            extend: "collection",
            className: "btn btn-label-primary dropdown-toggle me-2",
            text: '<i class="ti ti-file-export me-sm-1"></i> <span class="d-none d-sm-inline-block">Export</span>',
            buttons: [
              {
                extend: "print",
                text: '<i class="ti ti-printer me-1" ></i>Print',
                className: "dropdown-item",
                exportOptions: {
                  columns: [3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                },
                customize: function(win) {
                  $(win.document.body).css("color", config.colors.headingColor).css("border-color", config.colors.borderColor).css("background-color", config.colors.bodyBg);
                  $(win.document.body).find("table").addClass("compact").css("color", "inherit").css("border-color", "inherit").css("background-color", "inherit");
                }
              },
              {
                extend: "csv",
                text: '<i class="ti ti-file-text me-1" ></i>Csv',
                className: "dropdown-item",
                exportOptions: {
                  columns: [3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "excel",
                text: '<i class="ti ti-file-spreadsheet me-1"></i>Excel',
                className: "dropdown-item",
                exportOptions: {
                  columns: [3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "pdf",
                text: '<i class="ti ti-file-description me-1"></i>Pdf',
                className: "dropdown-item",
                exportOptions: {
                  columns: [3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              },
              {
                extend: "copy",
                text: '<i class="ti ti-copy me-1" ></i>Copy',
                className: "dropdown-item",
                exportOptions: {
                  columns: [3, 4, 5, 6, 7],
                  format: {
                    body: function(inner, coldex, rowdex) {
                      if (inner.length <= 0)
                        return inner;
                      var el = $.parseHTML(inner);
                      var result = "";
                      $.each(el, function(index, item) {
                        if (item.classList !== void 0 && item.classList.contains("user-name")) {
                          result = result + item.lastChild.firstChild.textContent;
                        } else if (item.innerText === void 0) {
                          result = result + item.textContent;
                        } else
                          result = result + item.innerText;
                      });
                      return result;
                    }
                  }
                }
              }
            ]
          },
          {
            text: '<i class="ti ti-plus me-sm-1"></i> <span class="d-none d-sm-inline-block">Add New Record</span>',
            className: "create-new btn btn-primary"
          }
        ],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $("div.head-label").html('<h5 class="card-title mb-0">DataTable with Buttons</h5>');
    }
    var count = 101;
    fv.on("core.form.valid", function() {
      var $new_name = $(".add-new-record .dt-full-name").val(), $new_post = $(".add-new-record .dt-post").val(), $new_email = $(".add-new-record .dt-email").val(), $new_date = $(".add-new-record .dt-date").val(), $new_salary = $(".add-new-record .dt-salary").val();
      if ($new_name != "") {
        dt_basic.row.add({
          id: count,
          full_name: $new_name,
          post: $new_post,
          email: $new_email,
          start_date: $new_date,
          salary: "$" + $new_salary,
          status: 5
        }).draw();
        count++;
        offCanvasEl.hide();
      }
    });
    $(".datatables-basic tbody").on("click", ".delete-record", function() {
      dt_basic.row($(this).parents("tr")).remove().draw();
    });
    if (dt_complex_header_table.length) {
      var dt_complex = dt_complex_header_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "full_name" },
          { data: "email" },
          { data: "city" },
          { data: "post" },
          { data: "salary" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="text-primary ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div><a href="javascript:;" class="btn btn-sm btn-icon item-edit"><i class="text-primary ti ti-pencil"></i></a>';
            }
          }
        ],
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>><"table-responsive"t><"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 7,
        lengthMenu: [7, 10, 25, 50, 75, 100]
      });
    }
    var groupColumn = 2;
    if (dt_row_grouping_table.length) {
      var groupingTable = dt_row_grouping_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "" },
          { data: "full_name" },
          { data: "post" },
          { data: "email" },
          { data: "city" },
          { data: "start_date" },
          { data: "salary" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            targets: 0,
            searchable: false,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          { visible: false, targets: groupColumn },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            orderable: false,
            searchable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="text-primary ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div><a href="javascript:;" class="btn btn-sm btn-icon item-edit"><i class="text-primary ti ti-pencil"></i></a>';
            }
          }
        ],
        order: [[groupColumn, "asc"]],
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 7,
        lengthMenu: [7, 10, 25, 50, 75, 100],
        drawCallback: function(settings) {
          var api = this.api();
          var rows = api.rows({ page: "current" }).nodes();
          var last = null;
          api.column(groupColumn, { page: "current" }).data().each(function(group, i) {
            if (last !== group) {
              $(rows).eq(i).before('<tr class="group"><td colspan="8">' + group + "</td></tr>");
              last = group;
            }
          });
        },
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      $(".dt-row-grouping tbody").on("click", "tr.group", function() {
        var currentOrder = groupingTable.order()[0];
        if (currentOrder[0] === groupColumn && currentOrder[1] === "asc") {
          groupingTable.order([groupColumn, "desc"]).draw();
        } else {
          groupingTable.order([groupColumn, "asc"]).draw();
        }
      });
    }
    var lang = "German";
    if (dt_multilingual_table.length) {
      var table_language = dt_multilingual_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "" },
          { data: "full_name" },
          { data: "post" },
          { data: "email" },
          { data: "start_date" },
          { data: "salary" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            targets: 0,
            searchable: false,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            orderable: false,
            searchable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="text-primary ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div><a href="javascript:;" class="btn btn-sm btn-icon item-edit"><i class="text-primary ti ti-pencil"></i></a>';
            }
          }
        ],
        language: {
          url: "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/" + lang + ".json"
        },
        displayLength: 7,
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        lengthMenu: [7, 10, 25, 50, 75, 100],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
    }
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 300);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/tables-datatables-extensions.js
  $(function() {
    var dt_scrollable_table = $(".dt-scrollableTable"), dt_fixedheader_table = $(".dt-fixedheader"), dt_fixedcolumns_table = $(".dt-fixedcolumns"), dt_select_table = $(".dt-select-table");
    if (dt_scrollable_table.length) {
      var dt_scrollableTable = dt_scrollable_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "full_name" },
          { data: "post" },
          { data: "email" },
          { data: "city" },
          { data: "start_date" },
          { data: "salary" },
          { data: "age" },
          { data: "experience" },
          { data: "" },
          { data: "" }
        ],
        columnDefs: [
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="text-primary ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div><a href="javascript:;" class="item-edit text-body"><i class="text-primary ti ti-pencil"></i></a>';
            }
          }
        ],
        scrollY: "300px",
        scrollX: true,
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>'
      });
    }
    if (dt_fixedheader_table.length) {
      var dt_fixedheader = dt_fixedheader_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "" },
          { data: "id" },
          { data: "id" },
          { data: "full_name" },
          { data: "email" },
          { data: "start_date" },
          { data: "salary" },
          { data: "status" },
          { data: "" }
        ],
        columnDefs: [
          {
            className: "control",
            orderable: false,
            targets: 0,
            responsivePriority: 3,
            render: function(data, type, full, meta) {
              return "";
            }
          },
          {
            targets: 1,
            orderable: false,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            },
            responsivePriority: 4
          },
          {
            targets: 2,
            visible: false
          },
          {
            targets: 3,
            render: function(data, type, full, meta) {
              var $user_img = full["avatar"], $name = full["full_name"], $post = full["post"];
              if ($user_img) {
                var $output = '<img src="' + assetsPath + "img/avatars/" + $user_img + '" alt="Avatar" class="rounded-circle">';
              } else {
                var stateNum = Math.floor(Math.random() * 6);
                var states = ["success", "danger", "warning", "info", "primary", "secondary"];
                var $state = states[stateNum], $name = full["full_name"];
                var $initials = $name.match(/\b\w/g) || [];
                $initials = (($initials.shift() || "") + ($initials.pop() || "")).toUpperCase();
                $output = '<span class="avatar-initial rounded-circle bg-label-' + $state + '">' + $initials + "</span>";
              }
              var $row_output = '<div class="d-flex justify-content-start align-items-center"><div class="avatar-wrapper"><div class="avatar me-2">' + $output + '</div></div><div class="d-flex flex-column"><span class="emp_name text-truncate">' + $name + '</span><small class="emp_post text-truncate text-muted">' + $post + "</small></div></div>";
              return $row_output;
            },
            responsivePriority: 5
          },
          {
            responsivePriority: 1,
            targets: 4
          },
          {
            responsivePriority: 2,
            targets: 6
          },
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="text-primary ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record">Delete</a></div></div><a href="javascript:;" class="btn btn-sm btn-icon item-edit"><i class="text-primary ti ti-pencil"></i></a>';
            }
          }
        ],
        order: [[2, "desc"]],
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        displayLength: 7,
        lengthMenu: [7, 10, 25, 50, 75, 100],
        responsive: {
          details: {
            display: $.fn.dataTable.Responsive.display.modal({
              header: function(row) {
                var data = row.data();
                return "Details of " + data["full_name"];
              }
            }),
            type: "column",
            renderer: function(api, rowIdx, columns) {
              var data = $.map(columns, function(col, i) {
                return col.title !== "" ? '<tr data-dt-row="' + col.rowIndex + '" data-dt-column="' + col.columnIndex + '"><td>' + col.title + ":</td> <td>" + col.data + "</td></tr>" : "";
              }).join("");
              return data ? $('<table class="table"/><tbody />').append(data) : false;
            }
          }
        }
      });
      if (window.Helpers.isNavbarFixed()) {
        var navHeight = $("#layout-navbar").outerHeight();
        new $.fn.dataTable.FixedHeader(dt_fixedheader).headerOffset(navHeight);
      } else {
        new $.fn.dataTable.FixedHeader(dt_fixedheader);
      }
    }
    if (dt_fixedcolumns_table.length) {
      var dt_fixedcolumns = dt_fixedcolumns_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "full_name" },
          { data: "post" },
          { data: "email" },
          { data: "city" },
          { data: "start_date" },
          { data: "salary" },
          { data: "age" },
          { data: "experience" },
          { data: "status" },
          { data: "id" }
        ],
        columnDefs: [
          {
            targets: -2,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          },
          {
            targets: -1,
            title: "Actions",
            searchable: false,
            orderable: false,
            render: function(data, type, full, meta) {
              return '<div class="d-inline-block"><a href="javascript:;" class="btn btn-sm btn-icon dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="text-primary ti ti-dots-vertical"></i></a><div class="dropdown-menu dropdown-menu-end m-0"><a href="javascript:;" class="dropdown-item">Details</a><a href="javascript:;" class="dropdown-item">Archive</a><div class="dropdown-divider"></div><a href="javascript:;" class="dropdown-item text-danger delete-record"></i>Delete</a></div></div><a href="javascript:;" class="item-edit text-body"><i class="text-primary ti ti-pencil"></i></a>';
            }
          }
        ],
        dom: '<"d-flex justify-content-between align-items-center row"<"col-sm-12 col-md-2 d-flex"f><"col-sm-12 col-md-10 d-none"i>>t',
        scrollY: 300,
        scrollX: true,
        scrollCollapse: true,
        paging: false,
        info: false,
        fixedColumns: true
      });
    }
    if (dt_select_table.length) {
      var dt_select = dt_select_table.DataTable({
        ajax: assetsPath + "json/table-datatable.json",
        columns: [
          { data: "id" },
          { data: "full_name" },
          { data: "post" },
          { data: "email" },
          { data: "city" },
          { data: "start_date" },
          { data: "salary" },
          { data: "status" }
        ],
        columnDefs: [
          {
            targets: 0,
            searchable: false,
            orderable: false,
            render: function() {
              return '<input type="checkbox" class="dt-checkboxes form-check-input">';
            },
            checkboxes: {
              selectRow: true,
              selectAllRender: '<input type="checkbox" class="form-check-input">'
            }
          },
          {
            targets: -1,
            render: function(data, type, full, meta) {
              var $status_number = full["status"];
              var $status = {
                1: { title: "Current", class: "bg-label-primary" },
                2: { title: "Professional", class: " bg-label-success" },
                3: { title: "Rejected", class: " bg-label-danger" },
                4: { title: "Resigned", class: " bg-label-warning" },
                5: { title: "Applied", class: " bg-label-info" }
              };
              if (typeof $status[$status_number] === "undefined") {
                return data;
              }
              return '<span class="badge ' + $status[$status_number].class + '">' + $status[$status_number].title + "</span>";
            }
          }
        ],
        order: [[1, "desc"]],
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>><"table-responsive"t><"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
        select: {
          style: "multi"
        }
      });
    }
    setTimeout(() => {
      $(".dataTables_filter .form-control").removeClass("form-control-sm");
      $(".dataTables_length .form-select").removeClass("form-select-sm");
    }, 200);
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/ui-app-brand.js
  (function() {
    const layoutMenu1 = document.querySelector("#layout-menu1"), layoutMenu2 = document.querySelector("#layout-menu2"), layoutMenu3 = document.querySelector("#layout-menu3"), layoutMenu4 = document.querySelector("#layout-menu4");
    if (layoutMenu1) {
      new Menu(layoutMenu1);
    }
    if (layoutMenu2) {
      new Menu(layoutMenu2);
    }
    if (layoutMenu3) {
      new Menu(layoutMenu3);
    }
    if (layoutMenu4) {
      new Menu(layoutMenu4);
    }
    const appToggleBtn = document.querySelector(".app-brand-toggle");
    if (appToggleBtn) {
      appToggleBtn.onclick = function() {
        if (layoutMenu1) {
          layoutMenu1.classList.toggle("menu-collapsed");
        }
        if (layoutMenu2) {
          layoutMenu2.classList.toggle("menu-collapsed");
        }
        if (layoutMenu3) {
          layoutMenu3.classList.toggle("menu-collapsed");
        }
        if (layoutMenu4) {
          layoutMenu4.classList.toggle("menu-collapsed");
        }
      };
    }
    const brandNameBtn = document.querySelector(".brand-menu-toggle"), logoNameBtn = document.querySelector(".brand-logo-toggle"), logoNameTextBtn = document.querySelector(".logo-name-toggle"), brandImageBtn = document.querySelector(".brand-image-toggle");
    if (brandNameBtn) {
      brandNameBtn.onclick = function() {
        if (layoutMenu1) {
          layoutMenu1.classList.toggle("menu-collapsed");
        }
      };
    }
    if (logoNameBtn) {
      logoNameBtn.onclick = function() {
        if (layoutMenu2) {
          layoutMenu2.classList.toggle("menu-collapsed");
        }
      };
    }
    if (logoNameTextBtn) {
      logoNameTextBtn.onclick = function() {
        if (layoutMenu3) {
          layoutMenu3.classList.toggle("menu-collapsed");
        }
      };
    }
    if (brandImageBtn) {
      brandImageBtn.onclick = function() {
        if (layoutMenu4) {
          layoutMenu4.classList.toggle("menu-collapsed");
        }
      };
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/ui-carousel.js
  (function() {
    const swiperDefault = document.querySelector("#swiper-default"), swiperWithArrows = document.querySelector("#swiper-with-arrows"), swiperWithPagination = document.querySelector("#swiper-with-pagination"), swiperWithProgress = document.querySelector("#swiper-with-progress"), swiperWithScrollbar = document.querySelector("#swiper-with-scrollbar"), verticalSwiper = document.querySelector("#swiper-vertical"), swiperMultipleSlides = document.querySelector("#swiper-multiple-slides"), swiper3dCoverflowEffect = document.querySelector("#swiper-3d-coverflow-effect"), swiper3dCubeEffect = document.querySelector("#swiper-3d-cube-effect"), swiper3dFlipEffect = document.querySelector("#swiper-3d-flip-effect"), galleryThumbs = document.querySelector(".gallery-thumbs"), galleryTop = document.querySelector(".gallery-top");
    let galleryInstance;
    if (swiperDefault) {
      new Swiper(swiperDefault, {
        slidesPerView: "auto"
      });
    }
    if (swiperWithArrows) {
      new Swiper(swiperWithArrows, {
        slidesPerView: "auto",
        navigation: {
          prevEl: ".swiper-button-prev",
          nextEl: ".swiper-button-next"
        }
      });
    }
    if (swiperWithPagination) {
      new Swiper(swiperWithPagination, {
        slidesPerView: "auto",
        pagination: {
          clickable: true,
          el: ".swiper-pagination"
        }
      });
    }
    if (swiperWithProgress) {
      new Swiper(swiperWithProgress, {
        slidesPerView: "auto",
        pagination: {
          type: "progressbar",
          el: ".swiper-pagination"
        },
        navigation: {
          prevEl: ".swiper-button-prev",
          nextEl: ".swiper-button-next"
        }
      });
    }
    if (swiperWithScrollbar) {
      new Swiper(swiperWithScrollbar, {
        scrollbar: {
          hide: true,
          el: ".swiper-scrollbar"
        }
      });
    }
    if (verticalSwiper) {
      new Swiper(verticalSwiper, {
        direction: "vertical",
        pagination: {
          clickable: true,
          el: ".swiper-pagination"
        }
      });
    }
    if (swiperMultipleSlides) {
      new Swiper(swiperMultipleSlides, {
        slidesPerView: 3,
        spaceBetween: 30,
        pagination: {
          clickable: true,
          el: ".swiper-pagination"
        }
      });
    }
    if (swiper3dCoverflowEffect) {
      new Swiper(swiper3dCoverflowEffect, {
        effect: "coverflow",
        grabCursor: true,
        centeredSlides: true,
        slidesPerView: "auto",
        coverflowEffect: {
          rotate: 50,
          stretch: 0,
          depth: 100,
          modifier: 1,
          slideShadows: true
        },
        pagination: {
          el: ".swiper-pagination"
        }
      });
    }
    if (swiper3dCubeEffect) {
      new Swiper(swiper3dCubeEffect, {
        effect: "cube",
        grabCursor: true,
        cubeEffect: {
          shadow: true,
          slideShadows: true,
          shadowScale: 0.94,
          shadowOffset: 20
        },
        pagination: {
          el: ".swiper-pagination"
        }
      });
    }
    if (swiper3dFlipEffect) {
      new Swiper(swiper3dFlipEffect, {
        effect: "flip",
        grabCursor: true,
        pagination: {
          el: ".swiper-pagination"
        },
        navigation: {
          prevEl: ".swiper-button-prev",
          nextEl: ".swiper-button-next"
        }
      });
    }
    if (galleryThumbs) {
      galleryInstance = new Swiper(galleryThumbs, {
        spaceBetween: 10,
        slidesPerView: 4,
        freeMode: true,
        watchSlidesVisibility: true,
        watchSlidesProgress: true
      });
    }
    if (galleryTop) {
      new Swiper(galleryTop, {
        spaceBetween: 10,
        navigation: {
          nextEl: ".swiper-button-next",
          prevEl: ".swiper-button-prev"
        },
        thumbs: {
          swiper: galleryInstance
        }
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/ui-menu.js
  (function() {
    const menu1 = document.querySelector("#menu-1"), menu1Btn = document.querySelector("#menu-1-toggle-collapsed");
    if (menu1) {
      new Menu(menu1);
    }
    if (menu1Btn) {
      menu1Btn.onclick = function() {
        menu1.classList.toggle("menu-collapsed");
      };
    }
    const menu2 = document.querySelector("#menu-2");
    if (menu2) {
      new Menu(menu2, {
        orientation: "horizontal"
      });
    }
    const menu3 = document.querySelector("#menu-3");
    if (menu3) {
      new Menu(menu3, {
        orientation: "horizontal",
        showDropdownOnHover: true
      });
    }
    const menu5 = document.querySelector("#menu-5"), menu5Btn = document.querySelector("#menu-5-toggle-collapsed");
    if (menu5) {
      new Menu(menu5, {
        animate: false
      });
    }
    if (menu5Btn) {
      menu5Btn.onclick = function() {
        menu5.classList.toggle("menu-collapsed");
      };
    }
    const menu6 = document.querySelector("#menu-6");
    if (menu6) {
      new Menu(menu6, {
        orientation: "horizontal",
        animate: false,
        closeChildren: true
      });
    }
    const menu7 = document.querySelector("#menu-7"), menu7Btn = document.querySelector("#menu-7-toggle-collapsed");
    if (menu7) {
      new Menu(menu7, {
        accordion: false
      });
    }
    if (menu7Btn) {
      menu7Btn.onclick = function() {
        menu7.classList.toggle("menu-collapsed");
      };
    }
    const menu8 = document.querySelector("#menu-8");
    if (menu8) {
      new Menu(menu8, {
        orientation: "horizontal",
        accordion: false
      });
    }
    const menus9List = document.querySelectorAll(".menus-9"), menu9Btn = document.querySelector("#menus-9-toggle-collapsed");
    if (menus9List) {
      menus9List.forEach((e) => {
        new Menu(e);
      });
    }
    if (menu9Btn) {
      menu9Btn.onclick = function() {
        menus9List.forEach((e) => {
          e.classList.toggle("menu-collapsed");
        });
      };
    }
    const menus10List = document.querySelectorAll(".menus-10"), menu10Btn = document.querySelector("#menus-10-toggle-collapsed");
    if (menus10List) {
      menus10List.forEach((e) => {
        new Menu(e);
      });
    }
    if (menu10Btn) {
      menu10Btn.onclick = function() {
        menus10List.forEach((e) => {
          e.classList.toggle("menu-collapsed");
        });
      };
    }
    const menus11List = document.querySelectorAll(".menus-11");
    if (menus11List) {
      menus11List.forEach((e) => {
        new Menu(e, {
          orientation: "horizontal"
        });
      });
    }
    const menus12List = document.querySelectorAll(".menus-12"), menu12Btn = document.querySelector("#menus-12-toggle-collapsed");
    if (menus12List) {
      menus12List.forEach((e) => {
        new Menu(e);
      });
    }
    if (menu12Btn) {
      menu12Btn.onclick = function() {
        menus12List.forEach((e) => {
          e.classList.toggle("menu-collapsed");
        });
      };
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/ui-modals.js
  (function() {
    const animationDropdown = document.querySelector("#animation-dropdown"), animationModal = document.querySelector("#animationModal");
    if (animationDropdown) {
      animationDropdown.onchange = function() {
        animationModal.classList = "";
        animationModal.classList.add("modal", "animate__animated", this.value);
      };
    }
    const youTubeModal = document.querySelector("#youTubeModal"), youTubeModalVideo = youTubeModal.querySelector("iframe");
    youTubeModal.addEventListener("hidden.bs.modal", function() {
      youTubeModalVideo.setAttribute("src", "");
    });
    const autoPlayYouTubeModal = function() {
      const modalTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="modal"]'));
      modalTriggerList.map(function(modalTriggerEl) {
        modalTriggerEl.onclick = function() {
          const theModal = this.getAttribute("data-bs-target"), videoSRC = this.getAttribute("data-theVideo"), videoSRCauto = `${videoSRC}?autoplay=1`, modalVideo = document.querySelector(`${theModal} iframe`);
          if (modalVideo) {
            modalVideo.setAttribute("src", videoSRCauto);
          }
        };
      });
    };
    autoPlayYouTubeModal();
    document.querySelectorAll(".carousel").forEach((carousel) => {
      carousel.addEventListener("slide.bs.carousel", (event) => {
        var nextH = $(event.relatedTarget).height();
        $(carousel).find(".active.carousel-item").parent().animate(
          {
            height: nextH
          },
          500
        );
      });
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/ui-navbar.js
  (function() {
    if (isRtl) {
      Helpers._addClass("dropdown-menu-end", document.querySelectorAll(".dropdown-menu"));
    }
    const megaDropdown = document.querySelectorAll(".nav-link.mega-dropdown");
    if (megaDropdown) {
      megaDropdown.forEach((e) => {
        new MegaDropdown(e);
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/ui-popover.js
  (function() {
    const popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
    const popoverList = popoverTriggerList.map(function(popoverTriggerEl) {
      return new bootstrap.Popover(popoverTriggerEl);
    });
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/ui-toasts.js
  (function() {
    const toastAnimationExample = document.querySelector(".toast-ex"), toastPlacementExample = document.querySelector(".toast-placement-ex"), toastAnimationBtn = document.querySelector("#showToastAnimation"), toastPlacementBtn = document.querySelector("#showToastPlacement");
    let selectedType, selectedAnimation, selectedPlacement, toast, toastAnimation, toastPlacement;
    if (toastAnimationBtn) {
      toastAnimationBtn.onclick = function() {
        if (toastAnimation) {
          toastDispose(toastAnimation);
        }
        selectedType = document.querySelector("#selectType").value;
        selectedAnimation = document.querySelector("#selectAnimation").value;
        toastAnimationExample.classList.add(selectedAnimation);
        toastAnimationExample.querySelector(".ti").classList.add(selectedType);
        toastAnimation = new bootstrap.Toast(toastAnimationExample);
        toastAnimation.show();
      };
    }
    function toastDispose(toast2) {
      if (toast2 && toast2._element !== null) {
        if (toastPlacementExample) {
          toastPlacementExample.classList.remove(selectedType);
          toastPlacementExample.querySelector(".ti").classList.remove(selectedType);
          DOMTokenList.prototype.remove.apply(toastPlacementExample.classList, selectedPlacement);
        }
        if (toastAnimationExample) {
          toastAnimationExample.classList.remove(selectedType, selectedAnimation);
          toastAnimationExample.querySelector(".ti").classList.remove(selectedType);
        }
        toast2.dispose();
      }
    }
    if (toastPlacementBtn) {
      toastPlacementBtn.onclick = function() {
        if (toastPlacement) {
          toastDispose(toastPlacement);
        }
        selectedType = document.querySelector("#selectTypeOpt").value;
        selectedPlacement = document.querySelector("#selectPlacement").value.split(" ");
        toastPlacementExample.querySelector(".ti").classList.add(selectedType);
        DOMTokenList.prototype.add.apply(toastPlacementExample.classList, selectedPlacement);
        toastPlacement = new bootstrap.Toast(toastPlacementExample);
        toastPlacement.show();
      };
    }
  })();
  $(function() {
    var i = -1;
    var toastCount = 0;
    var $toastlast;
    var getMessage = function() {
      var msgs = [
        "Don't be pushed around by the fears in your mind. Be led by the dreams in your heart.",
        '<div class="mb-3"><input class="input-small form-control" value="Textbox"/>&nbsp;<a href="http://johnpapa.net" target="_blank">This is a hyperlink</a></div><div class="d-flex"><button type="button" id="okBtn" class="btn btn-primary btn-sm me-2">Close me</button><button type="button" id="surpriseBtn" class="btn btn-sm btn-secondary">Surprise me</button></div>',
        "Live the Life of Your Dreams",
        "Believe in Your Self!",
        "Be mindful. Be grateful. Be positive.",
        "Accept yourself, love yourself!"
      ];
      i++;
      if (i === msgs.length) {
        i = 0;
      }
      return msgs[i];
    };
    var getMessageWithClearButton = function(msg) {
      msg = msg ? msg : "Clear itself?";
      msg += '<br /><br /><button type="button" class="btn btn-secondary clear">Yes</button>';
      return msg;
    };
    $("#closeButton").on("click", function() {
      if ($(this).is(":checked")) {
        $("#addBehaviorOnToastCloseClick").prop("disabled", false);
      } else {
        $("#addBehaviorOnToastCloseClick").prop("disabled", true);
        $("#addBehaviorOnToastCloseClick").prop("checked", false);
      }
    });
    $("#showtoast").on("click", function() {
      var shortCutFunction = $("#toastTypeGroup input:radio:checked").val(), isRtl4 = $("html").attr("dir") === "rtl", msg = $("#message").val(), title = $("#title").val() || "", $showDuration = $("#showDuration"), $hideDuration = $("#hideDuration"), $timeOut = $("#timeOut"), $extendedTimeOut = $("#extendedTimeOut"), $showEasing = $("#showEasing"), $hideEasing = $("#hideEasing"), $showMethod = $("#showMethod"), $hideMethod = $("#hideMethod"), toastIndex = toastCount++, addClear = $("#addClear").prop("checked"), prePositionClass = "toast-top-right";
      prePositionClass = typeof toastr.options.positionClass === "undefined" ? "toast-top-right" : toastr.options.positionClass;
      toastr.options = {
        maxOpened: 1,
        autoDismiss: true,
        closeButton: $("#closeButton").prop("checked"),
        debug: $("#debugInfo").prop("checked"),
        newestOnTop: $("#newestOnTop").prop("checked"),
        progressBar: $("#progressBar").prop("checked"),
        positionClass: $("#positionGroup input:radio:checked").val() || "toast-top-right",
        preventDuplicates: $("#preventDuplicates").prop("checked"),
        onclick: null,
        rtl: isRtl4
      };
      if (prePositionClass != toastr.options.positionClass) {
        toastr.options.hideDuration = 0;
        toastr.clear();
      }
      if ($("#addBehaviorOnToastClick").prop("checked")) {
        toastr.options.onclick = function() {
          alert("You can perform some custom action after a toast goes away");
        };
      }
      if ($("#addBehaviorOnToastCloseClick").prop("checked")) {
        toastr.options.onCloseClick = function() {
          alert("You can perform some custom action when the close button is clicked");
        };
      }
      if ($showDuration.val().length) {
        toastr.options.showDuration = parseInt($showDuration.val());
      }
      if ($hideDuration.val().length) {
        toastr.options.hideDuration = parseInt($hideDuration.val());
      }
      if ($timeOut.val().length) {
        toastr.options.timeOut = addClear ? 0 : parseInt($timeOut.val());
      }
      if ($extendedTimeOut.val().length) {
        toastr.options.extendedTimeOut = addClear ? 0 : parseInt($extendedTimeOut.val());
      }
      if ($showEasing.val().length) {
        toastr.options.showEasing = $showEasing.val();
      }
      if ($hideEasing.val().length) {
        toastr.options.hideEasing = $hideEasing.val();
      }
      if ($showMethod.val().length) {
        toastr.options.showMethod = $showMethod.val();
      }
      if ($hideMethod.val().length) {
        toastr.options.hideMethod = $hideMethod.val();
      }
      if (addClear) {
        msg = getMessageWithClearButton(msg);
        toastr.options.tapToDismiss = false;
      }
      if (!msg) {
        msg = getMessage();
      }
      var $toast = toastr[shortCutFunction](msg, title);
      $toastlast = $toast;
      if (typeof $toast === "undefined") {
        return;
      }
      if ($toast.find("#okBtn").length) {
        $toast.delegate("#okBtn", "click", function() {
          alert("you clicked me. i was toast #" + toastIndex + ". goodbye!");
          $toast.remove();
        });
      }
      if ($toast.find("#surpriseBtn").length) {
        $toast.delegate("#surpriseBtn", "click", function() {
          alert("Surprise! you clicked me. i was toast #" + toastIndex + ". You could perform an action here.");
        });
      }
      if ($toast.find(".clear").length) {
        $toast.delegate(".clear", "click", function() {
          toastr.clear($toast, {
            force: true
          });
        });
      }
    });
    function getLastToast() {
      return $toastlast;
    }
    $("#clearlasttoast").on("click", function() {
      toastr.clear(getLastToast());
    });
    $("#cleartoasts").on("click", function() {
      toastr.clear();
    });
  });

  // ../easy_ui/easy_ui/public/js/frappe/js/wizard-ex-create-deal.js
  (function() {
    const flatpickrRange = document.querySelector("#dealDuration");
    if (flatpickrRange) {
      flatpickrRange.flatpickr({
        mode: "range"
      });
    }
    window.Helpers.initCustomOptionCheck();
    const wizardCreateDeal = document.querySelector("#wizard-create-deal");
    if (typeof wizardCreateDeal !== void 0 && wizardCreateDeal !== null) {
      const wizardCreateDealForm = wizardCreateDeal.querySelector("#wizard-create-deal-form");
      const wizardCreateDealFormStep1 = wizardCreateDealForm.querySelector("#deal-type");
      const wizardCreateDealFormStep2 = wizardCreateDealForm.querySelector("#deal-details");
      const wizardCreateDealFormStep3 = wizardCreateDealForm.querySelector("#deal-usage");
      const wizardCreateDealFormStep4 = wizardCreateDealForm.querySelector("#review-complete");
      const wizardCreateDealNext = [].slice.call(wizardCreateDealForm.querySelectorAll(".btn-next"));
      const wizardCreateDealPrev = [].slice.call(wizardCreateDealForm.querySelectorAll(".btn-prev"));
      let validationStepper = new Stepper(wizardCreateDeal, {
        linear: true
      });
      const FormValidation1 = FormValidation.formValidation(wizardCreateDealFormStep1, {
        fields: {
          dealAmount: {
            validators: {
              notEmpty: {
                message: "Please enter amount"
              },
              numeric: {
                message: "The amount must be a number"
              }
            }
          },
          dealRegion: {
            validators: {
              notEmpty: {
                message: "Please select region"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const dealRegion = $("#dealRegion");
      if (dealRegion.length) {
        dealRegion.wrap('<div class="position-relative"></div>');
        dealRegion.select2({
          placeholder: "Select an region",
          dropdownParent: dealRegion.parent()
        }).on("change.select2", function() {
          FormValidation1.revalidateField("dealRegion");
        });
      }
      const FormValidation2 = FormValidation.formValidation(wizardCreateDealFormStep2, {
        fields: {
          dealTitle: {
            validators: {
              notEmpty: {
                message: "Please enter deal title"
              }
            }
          },
          dealCode: {
            validators: {
              notEmpty: {
                message: "Please enter deal code"
              },
              stringLength: {
                min: 4,
                max: 10,
                message: "The deal code must be more than 4 and less than 10 characters long"
              },
              regexp: {
                regexp: /^[A-Z0-9]+$/,
                message: "The deal code can only consist of capital alphabetical and number"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const dealOfferedItem = $("#dealOfferedItem");
      if (dealOfferedItem.length) {
        dealOfferedItem.wrap('<div class="position-relative"></div>');
        dealOfferedItem.select2({
          placeholder: "Select an offered item",
          dropdownParent: dealOfferedItem.parent()
        }).on("change.select2", function() {
        });
      }
      const FormValidation3 = FormValidation.formValidation(wizardCreateDealFormStep3, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation4 = FormValidation.formValidation(wizardCreateDealFormStep4, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-md-12"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        alert("Submitted..!!");
      });
      wizardCreateDealNext.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 0:
              FormValidation1.validate();
              break;
            case 1:
              FormValidation2.validate();
              break;
            case 2:
              FormValidation3.validate();
              break;
            case 3:
              FormValidation4.validate();
              break;
            default:
              break;
          }
        });
      });
      wizardCreateDealPrev.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 3:
              validationStepper.previous();
              break;
            case 2:
              validationStepper.previous();
              break;
            case 1:
              validationStepper.previous();
              break;
            case 0:
            default:
              break;
          }
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/wizard-ex-checkout.js
  $(function() {
    var readOnlyRating = $(".read-only-ratings");
    if (readOnlyRating) {
      readOnlyRating.rateYo({
        rtl: isRtl,
        padding: "0px",
        rating: 4,
        starWidth: "20px",
        spacing: "2px",
        starSvg: '<svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-star-filled" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M8.243 7.34l-6.38 .925l-.113 .023a1 1 0 0 0 -.44 1.684l4.622 4.499l-1.09 6.355l-.013 .11a1 1 0 0 0 1.464 .944l5.706 -3l5.693 3l.1 .046a1 1 0 0 0 1.352 -1.1l-1.091 -6.355l4.624 -4.5l.078 -.085a1 1 0 0 0 -.633 -1.62l-6.38 -.926l-2.852 -5.78a1 1 0 0 0 -1.794 0l-2.853 5.78z" stroke-width="0" /></svg>'
      });
    }
  });
  (function() {
    window.Helpers.initCustomOptionCheck();
    const creditCardMask = document.querySelector(".credit-card-mask"), expiryDateMask = document.querySelector(".expiry-date-mask"), cvvMask = document.querySelector(".cvv-code-mask");
    if (creditCardMask) {
      new Cleave(creditCardMask, {
        creditCard: true,
        onCreditCardTypeChanged: function(type) {
          if (type != "" && type != "unknown") {
            document.querySelector(".card-type").innerHTML = '<img src="' + assetsPath + "img/icons/payments/" + type + '-cc.png" height="28"/>';
          } else {
            document.querySelector(".card-type").innerHTML = "";
          }
        }
      });
    }
    if (expiryDateMask) {
      new Cleave(expiryDateMask, {
        date: true,
        delimiter: "/",
        datePattern: ["m", "y"]
      });
    }
    if (cvvMask) {
      new Cleave(cvvMask, {
        numeral: true,
        numeralPositiveOnly: true
      });
    }
    const wizardCheckout = document.querySelector("#wizard-checkout");
    if (typeof wizardCheckout !== void 0 && wizardCheckout !== null) {
      const wizardCheckoutForm = wizardCheckout.querySelector("#wizard-checkout-form");
      const wizardCheckoutFormStep1 = wizardCheckoutForm.querySelector("#checkout-cart");
      const wizardCheckoutFormStep2 = wizardCheckoutForm.querySelector("#checkout-address");
      const wizardCheckoutFormStep3 = wizardCheckoutForm.querySelector("#checkout-payment");
      const wizardCheckoutFormStep4 = wizardCheckoutForm.querySelector("#checkout-confirmation");
      const wizardCheckoutNext = [].slice.call(wizardCheckoutForm.querySelectorAll(".btn-next"));
      const wizardCheckoutPrev = [].slice.call(wizardCheckoutForm.querySelectorAll(".btn-prev"));
      let validationStepper = new Stepper(wizardCheckout, {
        linear: false
      });
      const FormValidation1 = FormValidation.formValidation(wizardCheckoutFormStep1, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: ""
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation2 = FormValidation.formValidation(wizardCheckoutFormStep2, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: ""
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation3 = FormValidation.formValidation(wizardCheckoutFormStep3, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: ""
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation4 = FormValidation.formValidation(wizardCheckoutFormStep4, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-md-12"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        alert("Submitted..!!");
      });
      wizardCheckoutNext.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 0:
              FormValidation1.validate();
              break;
            case 1:
              FormValidation2.validate();
              break;
            case 2:
              FormValidation3.validate();
              break;
            case 3:
              FormValidation4.validate();
              break;
            default:
              break;
          }
        });
      });
      wizardCheckoutPrev.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 3:
              validationStepper.previous();
              break;
            case 2:
              validationStepper.previous();
              break;
            case 1:
              validationStepper.previous();
              break;
            case 0:
            default:
              break;
          }
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/frappe/js/wizard-ex-property-listing.js
  (function() {
    window.Helpers.initCustomOptionCheck();
    const flatpickrRange = document.querySelector(".flatpickr"), phoneMask = document.querySelector(".contact-number-mask"), plCountry = $("#plCountry"), plFurnishingDetailsSuggestionEl = document.querySelector("#plFurnishingDetails");
    if (phoneMask) {
      new Cleave(phoneMask, {
        phone: true,
        phoneRegionCode: "US"
      });
    }
    if (plCountry) {
      plCountry.wrap('<div class="position-relative"></div>');
      plCountry.select2({
        placeholder: "Select country",
        dropdownParent: plCountry.parent()
      });
    }
    if (flatpickrRange) {
      flatpickrRange.flatpickr();
    }
    const furnishingList = [
      "Fridge",
      "TV",
      "AC",
      "WiFi",
      "RO",
      "Washing Machine",
      "Sofa",
      "Bed",
      "Dining Table",
      "Microwave",
      "Cupboard"
    ];
    if (plFurnishingDetailsSuggestionEl) {
      const plFurnishingDetailsSuggestion = new Tagify(plFurnishingDetailsSuggestionEl, {
        whitelist: furnishingList,
        maxTags: 10,
        dropdown: {
          maxItems: 20,
          classname: "tags-inline",
          enabled: 0,
          closeOnSelect: false
        }
      });
    }
    const wizardPropertyListing = document.querySelector("#wizard-property-listing");
    if (typeof wizardPropertyListing !== void 0 && wizardPropertyListing !== null) {
      const wizardPropertyListingForm = wizardPropertyListing.querySelector("#wizard-property-listing-form");
      const wizardPropertyListingFormStep1 = wizardPropertyListingForm.querySelector("#personal-details");
      const wizardPropertyListingFormStep2 = wizardPropertyListingForm.querySelector("#property-details");
      const wizardPropertyListingFormStep3 = wizardPropertyListingForm.querySelector("#property-features");
      const wizardPropertyListingFormStep4 = wizardPropertyListingForm.querySelector("#property-area");
      const wizardPropertyListingFormStep5 = wizardPropertyListingForm.querySelector("#price-details");
      const wizardPropertyListingNext = [].slice.call(wizardPropertyListingForm.querySelectorAll(".btn-next"));
      const wizardPropertyListingPrev = [].slice.call(wizardPropertyListingForm.querySelectorAll(".btn-prev"));
      const validationStepper = new Stepper(wizardPropertyListing, {
        linear: true
      });
      const FormValidation1 = FormValidation.formValidation(wizardPropertyListingFormStep1, {
        fields: {
          plFirstName: {
            validators: {
              notEmpty: {
                message: "Please enter your first name"
              }
            }
          },
          plLastName: {
            validators: {
              notEmpty: {
                message: "Please enter your last name"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        },
        init: (instance) => {
          instance.on("plugins.message.placed", function(e) {
            if (e.element.parentElement.classList.contains("input-group")) {
              e.element.parentElement.insertAdjacentElement("afterend", e.messageElement);
            }
          });
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation2 = FormValidation.formValidation(wizardPropertyListingFormStep2, {
        fields: {
          plPropertyType: {
            validators: {
              notEmpty: {
                message: "Please select property type"
              }
            }
          },
          plZipCode: {
            validators: {
              notEmpty: {
                message: "Please enter zip code"
              },
              stringLength: {
                min: 4,
                max: 10,
                message: "The zip code must be more than 4 and less than 10 characters long"
              }
            }
          }
        },
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: function(field, ele) {
              switch (field) {
                case "plAddress":
                  return ".col-lg-12";
                default:
                  return ".col-sm-6";
              }
            }
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const plPropertyType = $("#plPropertyType");
      if (plPropertyType.length) {
        plPropertyType.wrap('<div class="position-relative"></div>');
        plPropertyType.select2({
          placeholder: "Select property type",
          dropdownParent: plPropertyType.parent()
        }).on("change.select2", function() {
          FormValidation2.revalidateField("plPropertyType");
        });
      }
      const FormValidation3 = FormValidation.formValidation(wizardPropertyListingFormStep3, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-sm-6"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation4 = FormValidation.formValidation(wizardPropertyListingFormStep4, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-md-12"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        validationStepper.next();
      });
      const FormValidation5 = FormValidation.formValidation(wizardPropertyListingFormStep5, {
        fields: {},
        plugins: {
          trigger: new FormValidation.plugins.Trigger(),
          bootstrap5: new FormValidation.plugins.Bootstrap5({
            eleValidClass: "",
            rowSelector: ".col-md-12"
          }),
          autoFocus: new FormValidation.plugins.AutoFocus(),
          submitButton: new FormValidation.plugins.SubmitButton()
        }
      }).on("core.form.valid", function() {
        alert("Submitted..!!");
      });
      wizardPropertyListingNext.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 0:
              FormValidation1.validate();
              break;
            case 1:
              FormValidation2.validate();
              break;
            case 2:
              FormValidation3.validate();
              break;
            case 3:
              FormValidation4.validate();
              break;
            case 4:
              FormValidation5.validate();
              break;
            default:
              break;
          }
        });
      });
      wizardPropertyListingPrev.forEach((item) => {
        item.addEventListener("click", (event) => {
          switch (validationStepper._currentIndex) {
            case 4:
              validationStepper.previous();
              break;
            case 3:
              validationStepper.previous();
              break;
            case 2:
              validationStepper.previous();
              break;
            case 1:
              validationStepper.previous();
              break;
            case 0:
            default:
              break;
          }
        });
      });
    }
  })();

  // ../easy_ui/easy_ui/public/js/easy.bundle.js
  console.log("INJECTED FILE");
})();
/*! For license information please see editor.js.LICENSE.txt */
//! TODO: Update Event label and guest code to JS once select removes jQuery dependency
//!YOUR_MAPBOX_ACCESS_TOKEN_HERE!
//!if there is no Customizer then use default style as light
//# sourceMappingURL=easy.bundle.ZPZO7U4U.js.map
